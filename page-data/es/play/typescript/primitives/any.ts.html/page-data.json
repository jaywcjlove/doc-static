{"componentChunkName":"component---src-templates-play-example-tsx","path":"/es/play/typescript/primitives/any.ts.html","result":{"pageContext":{"name":"Any","title":"Any","lang":"es","html":" Any es la via de escape de TypeScript. Puedes usar any\n para declarar que una sección de tu código es dinámica y\n parecida a JavaScript, o como solución alternativa para\n las limitaciones del sistema de tipado.\n\n Un buen caso de uso de any es el análisis del formato JSON:\n\n<code><pre>\nconst myObject = JSON.parse(\"{}\");\n\n</pre></code>\n// Any le hace saber a TypeScript que confíe en su código\n como seguro porque conoce más sobre este, incluso si\n eso no es estrictamente cierto. Por ejemplo, este código\n no funcionará:\n\n<code><pre>\nmyObject.x.y.z;\n\n</pre></code>\n// Haciendo uso de any le permite tener la habilidad de escribir\n código similar al JavaScript original sacrificando el sistema\n de tipado.\n\n Se puede decir que any es un `tipo comodín`, el cual permite\n ser reemplazado con cualquier otro tipo (exceptuando never)\n con el fin de asignar tipos diferentes entre si.\n\n<code><pre>\ndeclare function debug(value: any): void;\n\ndebug(\"a string\");\ndebug(23);\ndebug({ color: \"blue\" });\n\n</pre></code>\n// Cada llamado de depuración esta permitido ya que puedes\n reemplazar any con el tipo del argumento a coincidir.\n\n TypeScript tendrá en cuenta la posición de los anys en\n diferentes formas, por ejemplo con estas tuplas para el\n argumento de la función.\n\n<code><pre>\ndeclare function swap(x: [number, string]): [string, number];\n\ndeclare const pair: [any, any];\nswap(pair);\n\n</pre></code>\n// El llamado a la función swap es permitido porque el\n argumento puede ser emparejado reemplazando el primer `any`\n en el par con el tipo number, y el segundo `any` con el\n tipo string.\n\n Si las tuplas son algo nuevo para ti, veasé: example:tuples\n\n Unknown es un tipo hermano de `any`, siendo `any` para\n decir \"Sé lo que es mejor\", mientras que `unknown` es una forma\n de decir \"No estoy seguro de lo que es mejor, así que tienes\n que decirle a TS el tipo\" example:unknown-and-never\n","redirectHref":"es/play/?#example/any"}},"staticQueryHashes":[]}