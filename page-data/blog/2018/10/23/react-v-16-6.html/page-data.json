{"componentChunkName":"component---src-templates-blog-js","path":"/blog/2018/10/23/react-v-16-6.html","result":{"data":{"markdownRemark":{"html":"<p>今天我们发布了 React 16.6 版本，其中包含一些便利的新功能。例如为函数组件提供了类似于 PureComponent/shouldComponentUpdate 的方式，还有使用 Suspense 进行拆分代码以及在 class 组件中更简单使用 context 的方式。</p>\n<p>更多详情可以查阅下面的更新<a href=\"#changelog\">日志</a>。</p>\n<h2 id=\"reactmemo\"><a href=\"#reactmemo\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"/docs/react-api.html#reactmemo\"><code class=\"gatsby-code-text\">React.memo</code></a> </h2>\n<p>过去，我们使用 <a href=\"/docs/react-api.html#reactpurecomponent\"><code class=\"gatsby-code-text\">PureComponent</code></a> 或是 <a href=\"/docs/react-component.html#shouldcomponentupdate\"><code class=\"gatsby-code-text\">shouldComponentUpdate</code></a> 来解决 class 组件在 props 不变时会重新渲染的问题。如今，你可以通过用 <a href=\"/docs/react-api.html#reactmemo\"><code class=\"gatsby-code-text\">React.memo</code></a> 包裹函数组件使其获得同样的能力。</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token keyword\">const</span> MyComponent <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">memo</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token function\">MyComponent</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">/* 仅在 props 发生改变时才会 rerenders */</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"reactlazy-code-splitting-with-suspense\"><a href=\"#reactlazy-code-splitting-with-suspense\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"/docs/code-splitting.html#reactlazy\"><code class=\"gatsby-code-text\">React.lazy</code></a>: 依赖 <code class=\"gatsby-code-text\">Suspense</code> 进行代码分割 </h2>\n<p>您可能已经阅读过了 <a href=\"/blog/2018/03/01/sneak-peek-beyond-react-16.html\">Dan 在冰岛的 JSConf 上关于 React Suspense 的演讲</a>。现在，您可以通过 <code class=\"gatsby-code-text\">React.lazy()</code> 包装动态加载的组件的方式使用 Suspense 来进行 <a href=\"/docs/code-splitting.html#reactlazy\">代码分割</a> 了。</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>lazy<span class=\"token punctuation\">,</span> Suspense<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> OtherComponent <span class=\"token operator\">=</span> <span class=\"token function\">lazy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">import</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./OtherComponent'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">MyComponent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Suspense</span></span> <span class=\"token attr-name\">fallback</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Loading...</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">OtherComponent</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Suspense</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>今后，Suspense 组件还会允许库作者们开发具备 Suspense 支持的数据获取功能。</p>\n<blockquote>\n<p>注意：这项功能尚不可用于服务器端渲染，将在稍后的版本中支持。</p>\n</blockquote>\n<h2 id=\"static-contexttype\"><a href=\"#static-contexttype\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"/docs/context.html#classcontexttype\"><code class=\"gatsby-code-text\">static contextType</code></a> </h2>\n<p>在 <a href=\"/blog/2018/03/29/react-v-16-3.html\">React 16.3</a> 中我们引入了官方发布的 Context API 来替代过去的 <a href=\"/docs/legacy-context.html\">Legacy Context</a>。</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token keyword\">const</span> MyContext <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">createContext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>我们收到了一些关于难以在 class 组件中使用 context 的反馈，因此我们添加了便捷的 API 以便于<a href=\"/docs/context.html#classcontexttype\">在 class 组件中使用 context 的值</a>.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">MyClass</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">static</span> contextType <span class=\"token operator\">=</span> MyContext<span class=\"token punctuation\">;</span>\n  <span class=\"token function\">componentDidMount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> value <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">/* 在首次挂载后使用 MyContext 执行副作用*/</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">componentDidUpdate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> value <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">/* ... */</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">componentWillUnmount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> value <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">/* ... */</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> value <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">/* 基于 MyContext 的值 render 某些内容*/</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"static-getderivedstatefromerror\"><a href=\"#static-getderivedstatefromerror\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"/docs/react-component.html#static-getderivedstatefromerror\"><code class=\"gatsby-code-text\">static getDerivedStateFromError()</code></a> </h2>\n<p>React 16 引入了<a href=\"/blog/2017/07/26/error-handling-in-react-16.html\">错误边界</a>来捕获在 React 的 render 中抛出的异常。我们已经拥有了在错误发生后被调用的生命周期方法 <code class=\"gatsby-code-text\">componentDidCatch</code>。您可以通过它将错误记录到服务器，这非常有用。同时您还可以通过调用 <code class=\"gatsby-code-text\">setState</code> 来展示对用户更友好的界面。</p>\n<p>在 <code class=\"gatsby-code-text\">componentDidCatch</code> 被触发之前，我们 render <code class=\"gatsby-code-text\">null</code> 来替代抛出异常树。但这有时会破坏不期望该组件的 ref 为空的父组件。同时这个方法也无法帮助我们恢复服务端发生的异常， 因为 <code class=\"gatsby-code-text\">Did</code> 这个生命周期方法不会在服务端渲染时被触发。</p>\n<p>我们正在添加另一个错误捕获的方法，允许您在 render 完成之前回退 UI。请参阅文档 <a href=\"/docs/react-component.html#static-getderivedstatefromerror\"><code class=\"gatsby-code-text\">getDerivedStateFromError()</code></a>.</p>\n<blockquote>\n<p>注意: <code class=\"gatsby-code-text\">getDerivedStateFromError()</code> 尚不可用于服务端渲染。它被设计为在将来的版本中支持服务端渲染。我们提前发布，只是为了让您可以开始准备如何使用它。</p>\n</blockquote>\n<h2 id=\"deprecations-in-strictmode\"><a href=\"#deprecations-in-strictmode\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>在 StrictMode 中被弃用的 </h2>\n<p>在 <a href=\"/blog/2018/03/29/react-v-16-3.html#strictmode-component\">16.3</a> 中我们介绍了 <a href=\"/docs/strict-mode.html\"><code class=\"gatsby-code-text\">StrictMode</code></a> 组件。它允许您选择对可能在将来导致问题的模式进行提前预警。</p>\n<p>我们在 <code class=\"gatsby-code-text\">StrictMode</code> 的弃用 API 列表中再次添加了两个 API。如果您不使用<code class=\"gatsby-code-text\">StrictMode</code> 则无需担忧；这些警告不会影响到您。</p>\n<ul>\n<li><strong>ReactDOM.findDOMNode()</strong> - 这个 API 经常被误解与滥用。它在 React 16 中可能会出乎意料地慢。请<a href=\"/docs/strict-mode.html#warning-about-deprecated-finddomnode-usage\">查阅文档</a>以获得可能的升级方式。</li>\n<li><strong>Legacy Context</strong> 使用 contextTypes 以及 getChildContext 的 Legacy context 使 React 变得比它所需要更大更慢。 这就是为什么我们强烈期望您升级到 <a href=\"/docs/context.html\">新的 context API</a>。希望添加 <a href=\"/docs/context.html#classcontexttype\"><code class=\"gatsby-code-text\">contextType</code></a> API 能够改善这一切。</li>\n</ul>\n<p>如果您在升级时遇到问题，我们希望听到您的反馈意见。</p>\n<h2 id=\"installation\"><a href=\"#installation\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>安装 </h2>\n<p>npm 的源中提供了 React v16.6.0。</p>\n<p>要使用 Yarn 安装 React 16，请运行：</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"gatsby-code-bash\"><code class=\"gatsby-code-bash\"><span class=\"token function\">yarn</span> <span class=\"token function\">add</span> react@^16.6.0 react-dom@^16.6.0</code></pre></div>\n<p>要使用 npm 安装 React 16，请运行：</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"gatsby-code-bash\"><code class=\"gatsby-code-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> --save react@^16.6.0 react-dom@^16.6.0</code></pre></div>\n<p>我们还通过 CDN 提供了 React 的 UMD 版本：</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"gatsby-code-html\"><code class=\"gatsby-code-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">crossorigin</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://unpkg.com/react@16/umd/react.production.min.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">crossorigin</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://unpkg.com/react-dom@16/umd/react-dom.production.min.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>更详细 <a href=\"/docs/installation.html\">安装说明</a>，请参阅文档。</p>\n<h2 id=\"changelog\"><a href=\"#changelog\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>更新日志 </h2>\n<h3 id=\"react\"><a href=\"#react\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>React </h3>\n<ul>\n<li>添加 <code class=\"gatsby-code-text\">React.memo()</code> 作为 <code class=\"gatsby-code-text\">PureComponent</code> 在函数组件中的替代品。 (<a href=\"https://github.com/acdlite\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">@acdlite</a> 在 <a href=\"https://github.com/facebook/react/pull/13748\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">#13748</a>)</li>\n<li>添加 <code class=\"gatsby-code-text\">React.lazy()</code> 以支持代码拆分组件。 (<a href=\"https://github.com/acdlite\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">@acdlite</a> 在 <a href=\"https://github.com/facebook/react/pull/13885\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">#13885</a>)</li>\n<li><code class=\"gatsby-code-text\">React.StrictMode</code> 现在会警告使用旧的 context API。 (<a href=\"https://github.com/bvaughn\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">@bvaughn</a> 在 <a href=\"https://github.com/facebook/react/pull/13760\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">#13760</a>)</li>\n<li><code class=\"gatsby-code-text\">React.StrictMode</code> 现在会警告使用 <code class=\"gatsby-code-text\">findDOMNode</code>。 (<a href=\"https://github.com/sebmarkbage\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">@sebmarkbage</a> 在 <a href=\"https://github.com/facebook/react/pull/13841\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">#13841</a>)</li>\n<li>重命名 <code class=\"gatsby-code-text\">unstable_AsyncMode</code> 为 <code class=\"gatsby-code-text\">unstable_ConcurrentMode</code>。 (<a href=\"https://github.com/trueadm\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">@trueadm</a> 在 <a href=\"https://github.com/facebook/react/pull/13732\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">#13732</a>)</li>\n<li>重命名 <code class=\"gatsby-code-text\">unstable_Placeholder</code> 为 <code class=\"gatsby-code-text\">Suspense</code>，<code class=\"gatsby-code-text\">delayMs</code> 为 <code class=\"gatsby-code-text\">maxDuration</code>。 (<a href=\"https://github.com/gaearon\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">@gaearon</a> 在 <a href=\"https://github.com/facebook/react/pull/13799\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">#13799</a> 和 <a href=\"https://github.com/sebmarkbage\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">@sebmarkbage</a> 在 <a href=\"https://github.com/facebook/react/pull/13922\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">#13922</a>)</li>\n</ul>\n<h3 id=\"react-dom\"><a href=\"#react-dom\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>React DOM </h3>\n<ul>\n<li>为 <code class=\"gatsby-code-text\">contextType</code> 添加了在 class 组件中更人性化的订阅方式。 (<a href=\"https://github.com/bvaughn\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">@bvaughn</a> 在 <a href=\"https://github.com/facebook/react/pull/13728\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">#13728</a>)</li>\n<li>添加 <code class=\"gatsby-code-text\">getDerivedStateFromError</code> 生命周期方法以在将来的异步服务器端渲染中捕获错误。 (<a href=\"https://github.com/bvaughn\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">@bvaughn</a> 在 <a href=\"https://github.com/facebook/react/pull/13746\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">#13746</a>)</li>\n<li>当使用 <code class=\"gatsby-code-text\">&lt;Context></code> 而不是 <code class=\"gatsby-code-text\">&lt;Context.Consumer></code> 时，给予警告。 (<a href=\"https://github.com/trueadm\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">@trueadm</a> 在 <a href=\"https://github.com/facebook/react/pull/13829\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">#13829</a>)</li>\n<li>修复iOS Safari上的灰色覆盖层。 (<a href=\"https://github.com/philipp-spiess\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">@philipp-spiess</a> 在 <a href=\"https://github.com/facebook/react/pull/13778\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">#13778</a>)</li>\n<li>修复在开发中覆盖了 <code class=\"gatsby-code-text\">window.event</code> 的错误。 (<a href=\"https://github.com/sergei-startsev\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">@sergei-startsev</a> 在 <a href=\"https://github.com/facebook/react/pull/13697\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">#13697</a>)</li>\n</ul>\n<h3 id=\"react-dom-server\"><a href=\"#react-dom-server\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>React DOM Server </h3>\n<ul>\n<li>添加 <code class=\"gatsby-code-text\">React.memo()</code> 支持。 (<a href=\"https://github.com/alexmckenley\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">@alexmckenley</a> 在 <a href=\"https://github.com/facebook/react/pull/13855\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">#13855</a>)</li>\n<li>添加 <code class=\"gatsby-code-text\">contextType</code> 支持。 (<a href=\"https://github.com/alexmckenley\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">@alexmckenley</a> 和 <a href=\"https://github.com/sebmarkbage\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">@sebmarkbage</a> 在 <a href=\"https://github.com/facebook/react/pull/13889\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">#13889</a>)</li>\n</ul>\n<h3 id=\"scheduler-experimental\"><a href=\"#scheduler-experimental\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Scheduler (实验阶段) </h3>\n<ul>\n<li>将包重命名为 <code class=\"gatsby-code-text\">scheduler</code>。 (<a href=\"https://github.com/gaearon\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">@gaearon</a> 在 <a href=\"https://github.com/facebook/react/pull/13683\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">#13683</a>)</li>\n<li>支持优先级，延续和包装回调。 (<a href=\"https://github.com/acdlite\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">@acdlite</a> 在 <a href=\"https://github.com/facebook/react/pull/13720\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">#13720</a> and <a href=\"https://github.com/facebook/react/pull/13842\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">#13842</a>)</li>\n<li>改进非DOM环境中的回退机制。 (<a href=\"https://github.com/acdlite\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">@acdlite</a> 在 <a href=\"https://github.com/facebook/react/pull/13740\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">#13740</a>)</li>\n<li>提前安排 <code class=\"gatsby-code-text\">requestAnimationFrame</code>。 (<a href=\"https://github.com/acdlite\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">@acdlite</a> 在 <a href=\"https://github.com/facebook/react/pull/13785\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">#13785</a>)</li>\n<li>修复DOM检测，使之更为彻底。 (<a href=\"https://github.com/trueadm\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">@trueadm</a> 在 <a href=\"https://github.com/facebook/react/pull/13731\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">#13731</a>)</li>\n<li>通过交互跟踪修复错误。 (<a href=\"https://github.com/bvaughn\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">@bvaughn</a> 在 <a href=\"https://github.com/facebook/react/pull/13590\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">#13590</a>)</li>\n<li>在包中添加 <code class=\"gatsby-code-text\">envify</code> 转换。 (<a href=\"https://github.com/mridgway\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">@mridgway</a> 在 <a href=\"https://github.com/facebook/react/pull/13766\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">#13766</a>)</li>\n</ul>","excerpt":"今天我们发布了 React 16.6 版本，其中包含一些便利的新功能。例如为函数组件提供了类似于 PureComponent/shouldComponentUpdate 的方式，还有使用 Suspense 进行拆分代码以及在 class 组件中更简单使用 context 的方式。 更多详情可以查阅下面的更新日志。   过去，我们使用  或是  来解决 class 组件在 props 不变时会重新渲染的问题。如今，你可以通过用  包裹函数组件使其获得同样的能力。 : 依赖  进行代码分割  您可能已经阅读过了 Dan 在冰岛的 JSConf 上关于 React Suspense 的演讲。现在，您可以通过  包装动态加载的组件的方式使用 Suspense 来进行 代码分割 了。 今后，Suspense 组件还会允许库作者们开发具备 Suspense 支持的数据获取功能。 注意：这项功能尚不可用于服务器端渲染，将在稍后的版本中支持。   在 React 16.3 中我们引入了官方发布的 Context API 来替代过去的 Legacy Context。 我们收到了一些关于难以在 class…","frontmatter":{"title":"React v16.6.0：lazy，memo 以及 contextType","next":null,"prev":null,"author":[{"frontmatter":{"name":"Sebastian Markbåge","url":"https://twitter.com/sebmarkbage"}}]},"fields":{"date":"October 23, 2018","path":"content/blog/2018-10-23-react-v-16-6.md","slug":"/blog/2018/10/23/react-v-16-6.html"}},"allMarkdownRemark":{"edges":[{"node":{"frontmatter":{"title":"React 18 发布计划"},"fields":{"slug":"/blog/2021/06/08/the-plan-for-react-18.html"}}},{"node":{"frontmatter":{"title":"介绍 Zero-Bundle-Size 的 React 服务端组件"},"fields":{"slug":"/blog/2020/12/21/data-fetching-with-react-server-components.html"}}},{"node":{"frontmatter":{"title":"React v17.0"},"fields":{"slug":"/blog/2020/10/20/react-v17.html"}}},{"node":{"frontmatter":{"title":"介绍全新的 JSX 转换"},"fields":{"slug":"/blog/2020/09/22/introducing-the-new-jsx-transform.html"}}},{"node":{"frontmatter":{"title":"React v17.0 RC 版本发布：没有新特性"},"fields":{"slug":"/blog/2020/08/10/react-v17-rc.html"}}},{"node":{"frontmatter":{"title":"React v16.13.0"},"fields":{"slug":"/blog/2020/02/26/react-v16.13.0.html"}}},{"node":{"frontmatter":{"title":"Building Great User Experiences with Concurrent Mode and Suspense"},"fields":{"slug":"/blog/2019/11/06/building-great-user-experiences-with-concurrent-mode-and-suspense.html"}}},{"node":{"frontmatter":{"title":"使用 React 预发布版为新功能打基础"},"fields":{"slug":"/blog/2019/10/22/react-release-channels.html"}}},{"node":{"frontmatter":{"title":"全新的 React DevTools 简介"},"fields":{"slug":"/blog/2019/08/15/new-react-devtools.html"}}},{"node":{"frontmatter":{"title":"React v16.9.0 发布及 Roadmap 最新进展"},"fields":{"slug":"/blog/2019/08/08/react-v16.9.0.html"}}}]}},"pageContext":{"slug":"/blog/2018/10/23/react-v-16-6.html"}},"staticQueryHashes":[]}