{"componentChunkName":"component---src-templates-blog-js","path":"/blog/2018/12/19/react-v-16-7.html","result":{"data":{"markdownRemark":{"html":"<p>我们最新的发布版本包括了一个关于 <code class=\"gatsby-code-text\">React.lazy</code> 的重要性能问题修复。尽管发布里不包括 API 的更改，我们还是以次要版本而不是修订版本的形式发布了。</p>\n<h2 id=\"why-is-this-bugfix-a-minor-instead-of-a-patch\"><a href=\"#why-is-this-bugfix-a-minor-instead-of-a-patch\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>这个问题修复为什么是次要版本而不是修订版本？ </h2>\n<p>React 遵循 <a href=\"/docs/faq-versioning.html\">语义化版本</a>的原则。一般来说这意味着问题修复会发布成修订版，而新功能（不兼容的改动）会发布成次要版本。不过即使没有新功能，我们仍保留发布次要版的权力。这么做的目的是要确保修订版里的更动有着最小的破坏性影响。修订版是发布版本里最重要的一个版本，因为它时常包括了紧急问题的修复。所以修订版对可靠性的要求更高。而修订版带来更多的问题是不能被接受的。因为当大家开始不信任修订版时，我们即时解决紧急问题的能力也被影响了 — 比如说解决安全漏洞。</p>\n<p>我们从不会蓄意提交有问题的发布。React 稳定的声誉来之不易，我们也打算继续维持。在发布前我们都会仔细测试每个新的版本。这包括了单元测试, 生成 (fuzzy) 测试, 集成测试, 以及内部 dogfooding 几万个组件。但是，我们也是会出错的。这就是为什么从现在开始，我们的政策就是如果新的发布包含了非无足轻重的改动，我们将递增次版本号, 即使外在行为不变。当更改有 <code class=\"gatsby-code-text\">unstable_</code> 前缀的 API 过后我们也会递增次版本号。</p>\n<h2 id=\"can-i-use-hooks-yet\"><a href=\"#can-i-use-hooks-yet\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>我可以使用 Hook 了吗? </h2>\n<p>暂时还不行, 不过很快了!</p>\n<p>在 React Conf 上， 我们宣布了 16.7 的发行将包括 Hook。这是个失误。我们不应该把还没有发行的功能连上具体的版本号。我们以后会避免犯同样的错误。</p>\n<p>尽管 16.7 还不包括 Hook, 请不要胡乱揣测 Hook 的发布时间表。发布 Hook 的计划不变:</p>\n<ul>\n<li><a href=\"https://github.com/reactjs/rfcs/pull/68\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Hook 提案</a>被接受了(<a href=\"https://github.com/reactjs/rfcs/pull/68#issuecomment-439314884\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">附加了根据反馈讯息的次要改动</a>).</li>\n<li><a href=\"https://github.com/facebook/react/commit/7bee9fbdd49aa5b9365a94b0ddf6db04bc1bf51c\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">执行</a> 被合并进了 React repo (隐藏在功能切换后)。</li>\n<li>我们现在正在测试阶段，敬请期待几个月后的发布。</li>\n</ul>\n<p>我们听到了很多人想要开始在应用里使用 Hook。我们也迫不及待的想要发表！但是因为 Hook 会改变大家写组件的方式，我们决定多花些时间处理细节。对大家耐心等待这个激动人心的新功能的推广运用,我们深表感激。</p>\n<p>想了解更多 <a href=\"/blog/2018/11/27/react-16-roadmap.html\">我们的规划</a> 参考上篇博文。</p>\n<h2 id=\"installation\"><a href=\"#installation\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>安装 </h2>\n<p>React v16.7.0 已经在 npm 上发布。</p>\n<p>使用 Yarn 来安装 React 16，执行：</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"gatsby-code-bash\"><code class=\"gatsby-code-bash\"><span class=\"token function\">yarn</span> <span class=\"token function\">add</span> react@^16.7.0 react-dom@^16.7.0</code></pre></div>\n<p>使用 npm 来安装 React 16，执行：</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"gatsby-code-bash\"><code class=\"gatsby-code-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> --save react@^16.7.0 react-dom@^16.7.0</code></pre></div>\n<p>我们同时通过 CDN 的链接提供 UMD 打包的 React：</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"gatsby-code-html\"><code class=\"gatsby-code-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">crossorigin</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://unpkg.com/react@16/umd/react.production.min.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">crossorigin</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://unpkg.com/react-dom@16/umd/react-dom.production.min.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>请参考文档的<a href=\"/docs/installation.html\">详细安装指南</a>.</p>\n<h2 id=\"changelog\"><a href=\"#changelog\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>更新日志 </h2>\n<h3 id=\"react-dom\"><a href=\"#react-dom\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>React DOM </h3>\n<ul>\n<li>修复当有大数量 lazily-loaded 组件时， <code class=\"gatsby-code-text\">React.lazy</code> 的性能问题。(<a href=\"http://github.com/acdlite\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">@acdlite</a> 在 <a href=\"https://github.com/facebook/react/pull/14429\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">#14429</a>)</li>\n<li>清除 unmount 时的 fields 来防止内存泄漏。(<a href=\"http://github.com/trueadm\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">@trueadm</a> 在 <a href=\"https://github.com/facebook/react/pull/14276\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">#14276</a>)</li>\n<li>修复当共用 <code class=\"gatsby-code-text\">react-dom/server@16.6</code> 和 <code class=\"gatsby-code-text\">react@&lt;16.6</code> 时 SSR 和 context 的问题。 (<a href=\"http://github.com/gaearon\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">@gaearon</a> 在 <a href=\"https://github.com/facebook/react/pull/14291\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">#14291</a>)</li>\n<li>修复一个 profiling mode 的性能回退。 (<a href=\"http://github.com/bvaughn\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">@bvaughn</a> 在 <a href=\"https://github.com/facebook/react/pull/14383\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">#14383</a>)</li>\n</ul>\n<h3 id=\"scheduler-experimental\"><a href=\"#scheduler-experimental\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>调度器 (试验阶段) </h3>\n<ul>\n<li>提交到 MessageChannel 来代替 window。(<a href=\"http://github.com/acdlite\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">@acdlite</a> 提交在 <a href=\"https://github.com/facebook/react/pull/14234\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">#14234</a>)</li>\n<li>减少序列化的成本。(<a href=\"http://github.com/developit\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">@developit</a> 提交在 <a href=\"https://github.com/facebook/react/pull/14249\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">#14249</a>)</li>\n<li>修复测试环境里 <code class=\"gatsby-code-text\">setTimeout</code> 的降级。(<a href=\"http://github.com/bvaughn\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">@bvaughn</a> 提交在 <a href=\"https://github.com/facebook/react/pull/14358\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">#14358</a>)</li>\n<li>添加调试方法。(<a href=\"http://github.com/mrkev\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">@mrkev</a> 提交在 <a href=\"https://github.com/facebook/react/pull/14053\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">#14053</a>)</li>\n</ul>","excerpt":"我们最新的发布版本包括了一个关于  的重要性能问题修复。尽管发布里不包括 API 的更改，我们还是以次要版本而不是修订版本的形式发布了。 这个问题修复为什么是次要版本而不是修订版本？  React 遵循 语义化版本的原则。一般来说这意味着问题修复会发布成修订版，而新功能（不兼容的改动）会发布成次要版本。不过即使没有新功能，我们仍保留发布次要版的权力。这么做的目的是要确保修订版里的更动有着最小的破坏性影响。修订版是发布版本里最重要的一个版本，因为它时常包括了紧急问题的修复。所以修订版对可靠性的要求更高。而修订版带来更多的问题是不能被接受的。因为当大家开始不信任修订版时，我们即时解决紧急问题的能力也被影响了 — 比如说解决安全漏洞。 我们从不会蓄意提交有问题的发布。React 稳定的声誉来之不易，我们也打算继续维持。在发布前我们都会仔细测试每个新的版本。这包括了单元测试, 生成 (fuzzy) 测试, 集成测试, 以及内部 dogfooding…","frontmatter":{"title":"React v16.7：不包含 Hook 的版本","next":null,"prev":null,"author":[{"frontmatter":{"name":"Andrew Clark","url":"https://twitter.com/acdlite"}}]},"fields":{"date":"December 19, 2018","path":"content/blog/2018-12-19-react-v-16-7.md","slug":"/blog/2018/12/19/react-v-16-7.html"}},"allMarkdownRemark":{"edges":[{"node":{"frontmatter":{"title":"React 18 发布计划"},"fields":{"slug":"/blog/2021/06/08/the-plan-for-react-18.html"}}},{"node":{"frontmatter":{"title":"介绍 Zero-Bundle-Size 的 React 服务端组件"},"fields":{"slug":"/blog/2020/12/21/data-fetching-with-react-server-components.html"}}},{"node":{"frontmatter":{"title":"React v17.0"},"fields":{"slug":"/blog/2020/10/20/react-v17.html"}}},{"node":{"frontmatter":{"title":"介绍全新的 JSX 转换"},"fields":{"slug":"/blog/2020/09/22/introducing-the-new-jsx-transform.html"}}},{"node":{"frontmatter":{"title":"React v17.0 RC 版本发布：没有新特性"},"fields":{"slug":"/blog/2020/08/10/react-v17-rc.html"}}},{"node":{"frontmatter":{"title":"React v16.13.0"},"fields":{"slug":"/blog/2020/02/26/react-v16.13.0.html"}}},{"node":{"frontmatter":{"title":"Building Great User Experiences with Concurrent Mode and Suspense"},"fields":{"slug":"/blog/2019/11/06/building-great-user-experiences-with-concurrent-mode-and-suspense.html"}}},{"node":{"frontmatter":{"title":"使用 React 预发布版为新功能打基础"},"fields":{"slug":"/blog/2019/10/22/react-release-channels.html"}}},{"node":{"frontmatter":{"title":"全新的 React DevTools 简介"},"fields":{"slug":"/blog/2019/08/15/new-react-devtools.html"}}},{"node":{"frontmatter":{"title":"React v16.9.0 发布及 Roadmap 最新进展"},"fields":{"slug":"/blog/2019/08/08/react-v16.9.0.html"}}}]}},"pageContext":{"slug":"/blog/2018/12/19/react-v-16-7.html"}},"staticQueryHashes":[]}