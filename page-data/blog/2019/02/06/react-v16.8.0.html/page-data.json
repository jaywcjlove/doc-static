{"componentChunkName":"component---src-templates-blog-js","path":"/blog/2019/02/06/react-v16.8.0.html","result":{"data":{"markdownRemark":{"html":"<p>从 React 16.8 开始，<a href=\"/docs/hooks-intro.html\">React Hook</a> 稳定版本正式发布啦！</p>\n<h2 id=\"what-are-hooks\"><a href=\"#what-are-hooks\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>什么是 Hook？</h2>\n<p>Hook 允许你在不使用 class 的情况下使用 state 和 React 其他特性。你可以 <strong>编写自定义的 Hook</strong> 来在不同的组件中共享有状态的逻辑。</p>\n<p>如果你之前从没听过 Hook，你可能会对以下资料感兴趣：</p>\n<ul>\n<li><a href=\"/docs/hooks-intro.html\">Hook 介绍</a> 解释了为什么我们为 React 添加 Hook。</li>\n<li><a href=\"/docs/hooks-overview.html\">Hook 一览</a> 是快速地对内置 Hook 的概览。</li>\n<li><a href=\"/docs/hooks-custom.html\">搭建你自己的 Hook</a> 示范了如何使用自定义的 Hook 来重用代码。</li>\n<li><a href=\"https://medium.com/@dan_abramov/making-sense-of-react-hooks-fdbde8803889\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">React Hook 的意义</a> 探索了被 Hook 解锁的新可能性。</li>\n<li><a href=\"https://usehooks.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">useHooks.com</a> 一些社区维护的 Hook 示例和实现。</li>\n</ul>\n<p><strong>你并不是必须现在就学习 Hook</strong>。Hook 并没有突破性的改变，并且我们并没有要删除 React class 的计划。其中 <a href=\"/docs/hooks-faq.html\">Hook FAQ</a> 描述了逐步采纳策略。</p>\n<h2 id=\"no-big-rewrites\"><a href=\"#no-big-rewrites\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>不需要大型重写 </h2>\n<p>我们不建议立马重写你的项目以在其中使用 Hook。相反，试着在一些新的组件中使用 Hook，并且告诉我们你的想法。使用 Hook 的代码可以和已经存在的使用 class 的的代码 <a href=\"/docs/hooks-intro.html#gradual-adoption-strategy\">一起使用</a>。</p>\n<h2 id=\"can-i-use-hooks-today\"><a href=\"#can-i-use-hooks-today\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>我今天可以使用 Hook 吗？</h2>\n<p>可以！从 16.8.0 开始，React 为以下几个功能引入了 React Hook 的稳定实现：</p>\n<ul>\n<li>React DOM</li>\n<li>React DOM Server</li>\n<li>React Test Renderer</li>\n<li>React Shallow Renderer</li>\n</ul>\n<p>请注意 <strong>为了使用 Hook，所有的 React 包的版本需要在 16.8.0 或以上</strong>。如果你忘记对包进行升级，会造成 Hook 无法使用，比如说忘记升级 React DOM。</p>\n<p><strong>React Native 会在 <a href=\"https://github.com/react-native-community/react-native-releases/issues/79#issuecomment-457735214\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">0.59 版本</a> 支持 Hook。</strong></p>\n<h2 id=\"tooling-support\"><a href=\"#tooling-support\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>工具支持 </h2>\n<p>React DevTools 现在已经支持 React Hook。目前最新版的 Flow 和 TypeScript 定义也为 React 提供了支持。我们强烈建议使用新的 <a href=\"https://www.npmjs.com/package/eslint-plugin-react-hooks\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><code class=\"gatsby-code-text\">eslint-plugin-react-hooks</code> 提示规范</a> 来加强对 Hook 的使用。这个功能马上就会被加到 Create React App 的默认配置里。</p>\n<h2 id=\"whats-next\"><a href=\"#whats-next\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>下一步 </h2>\n<p>我们在最近发布的 <a href=\"/blog/2018/11/27/react-16-roadmap.html\">React 路线图</a> 里描述了下几个月的计划。</p>\n<p>请注意现在 React Hook 还并没有覆盖<em>所有</em>的 class 使用情况，但是已经 <a href=\"/docs/hooks-faq.html#do-hooks-cover-all-use-cases-for-classes\">十分接近</a> 了。目前，只有 <code class=\"gatsby-code-text\">getSnapshotBeforeUpdate()</code> 和 <code class=\"gatsby-code-text\">componentDidCatch()</code> 方法没有等价的 Hook API，并且这些生命周期相对来说不常用。如果你想的话，你可以在大多数的情况下使用 Hook 来编写代码。</p>\n<p>尽管在 Hook 处于 alpha 测试阶段的时候，React 社区已经开发了很多有趣的 <a href=\"https://codesandbox.io/react-hooks\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">示例</a> 和 <a href=\"https://usehooks.com\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">方法</a> 来使用 Hook 开发动画、表单、订阅、和其他库结合使用等等。我们对 Hook 把代码复用变得简单、帮助你用一种更简单的方式来编写你的组件、并且有着更好的用户体验这件事上感到非常的激动。我们已经迫不及待地想看到你将要创造出什么了！</p>\n<h2 id=\"testing-hooks\"><a href=\"#testing-hooks\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>测试 Hook </h2>\n<p>我们在这次发布中已经添加了一个新的叫 <code class=\"gatsby-code-text\">ReactTestUtils.act()</code> 的 API。它保证了在测试中的表现会与在浏览器中的行为会非常的接近。我们建议把所有渲染和触发更新的代码用 <code class=\"gatsby-code-text\">act()</code> 方法包起来。测试框架也可以把他们的 API 用它包起来（例如，<a href=\"https://testing-library.com/react\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><code class=\"gatsby-code-text\">react-testing-library</code></a> 的 <code class=\"gatsby-code-text\">render</code> 和 <code class=\"gatsby-code-text\">fireEvent</code> 方法就是这样做的）。</p>\n<p>例如，在 <a href=\"/docs/hooks-effect.html\">这个页面</a> 的计时器的例子可以用这样的方法来测试：</p>\n<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> ReactDOM <span class=\"token keyword\">from</span> <span class=\"token string\">'react-dom'</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> act <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-dom/test-utils'</span><span class=\"token punctuation\">;</span></span><span class=\"token keyword\">import</span> Counter <span class=\"token keyword\">from</span> <span class=\"token string\">'./Counter'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> container<span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">beforeEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  container <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'div'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>container<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">afterEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span><span class=\"token function\">removeChild</span><span class=\"token punctuation\">(</span>container<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  container <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">it</span><span class=\"token punctuation\">(</span><span class=\"token string\">'can render and update a counter'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 测试第一次渲染和影响</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token function\">act</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    ReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Counter</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">,</span> container<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>  <span class=\"token keyword\">const</span> button <span class=\"token operator\">=</span> container<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'button'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> label <span class=\"token operator\">=</span> container<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'p'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>label<span class=\"token punctuation\">.</span>textContent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toBe</span><span class=\"token punctuation\">(</span><span class=\"token string\">'You clicked 0 times'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toBe</span><span class=\"token punctuation\">(</span><span class=\"token string\">'You clicked 0 times'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// 测试第二次渲染和影响</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token function\">act</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    button<span class=\"token punctuation\">.</span><span class=\"token function\">dispatchEvent</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">MouseEvent</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>bubbles<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>  <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>label<span class=\"token punctuation\">.</span>textContent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toBe</span><span class=\"token punctuation\">(</span><span class=\"token string\">'You clicked 1 times'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toBe</span><span class=\"token punctuation\">(</span><span class=\"token string\">'You clicked 1 times'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><code class=\"gatsby-code-text\">act()</code> 所调用的方法也会刷新它们内部所产生的影响。</p>\n<p>如果你需要测试一个自定义的 Hook，你可以在你的测试里写一个组件，并且在里面使用 Hook。然后你就可以测试你写的组件了。</p>\n<p>为了减少样板代码，我们建议使用 <a href=\"https://testing-library.com/react\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><code class=\"gatsby-code-text\">react-testing-library</code></a>，它鼓励你像终端用户一样使用你的组件写测试代码。</p>\n<h2 id=\"thanks\"><a href=\"#thanks\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>谢谢 </h2>\n<p>我们非常感谢所有在 <a href=\"https://github.com/reactjs/rfcs/pull/68\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Hook RFC</a> 上发布并分享反馈的用户。我们已经阅读了你们所有的评论并且依此给我们最终的 API 做了一些调整。</p>\n<h2 id=\"installation\"><a href=\"#installation\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>安装 </h2>\n<h3 id=\"react\"><a href=\"#react\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>React </h3>\n<p>React v16.8.0 已经在 npm 上发布。</p>\n<p>使用 Yarn 来安装 React 16，运行：</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"gatsby-code-bash\"><code class=\"gatsby-code-bash\"><span class=\"token function\">yarn</span> <span class=\"token function\">add</span> react@^16.8.0 react-dom@^16.8.0</code></pre></div>\n<p>使用 npm 来安装 React 16，运行：</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"gatsby-code-bash\"><code class=\"gatsby-code-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> --save react@^16.8.0 react-dom@^16.8.0</code></pre></div>\n<p>我们也在 CDN 上提供了 React 的 UMD 打包：</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"gatsby-code-html\"><code class=\"gatsby-code-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">crossorigin</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://unpkg.com/react@16/umd/react.production.min.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">crossorigin</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://unpkg.com/react-dom@16/umd/react-dom.production.min.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>请参考文档的 <a href=\"/docs/installation.html\">详细安装指南</a>。</p>\n<h3 id=\"eslint-plugin-for-react-hooks\"><a href=\"#eslint-plugin-for-react-hooks\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>React Hook 的 ESLint 插件 </h3>\n<blockquote>\n<p>注意</p>\n<p>就像上面提到的，我们强烈建议使用 <code class=\"gatsby-code-text\">eslint-plugin-react-hooks</code> 提示规范。</p>\n<p>如果你正在使用 Create React App，与其说手动配置 ESLint，你可以等待马上发版并且包括这个提示规范的下个版本的 <code class=\"gatsby-code-text\">react-scripts</code>。</p>\n</blockquote>\n<p>假设你已经安装了 ESLint，运行：</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"gatsby-code-sh\"><code class=\"gatsby-code-sh\"># npm\nnpm install eslint-plugin-react-hooks --save-dev\n\n# yarn\nyarn add eslint-plugin-react-hooks --dev</code></pre></div>\n<p>然后把它加到你的 ESLint 配置里：</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token punctuation\">{</span>\n  <span class=\"token string\">\"plugins\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token comment\">// ...</span>\n    <span class=\"token string\">\"react-hooks\"</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"rules\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n    <span class=\"token string\">\"react-hooks/rules-of-hooks\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"error\"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"changelog\"><a href=\"#changelog\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>更新日志 </h2>\n<h3 id=\"react-1\"><a href=\"#react-1\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>React </h3>\n<ul>\n<li>添加 <a href=\"https://reactjs.org/docs/hooks-intro.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Hook</a> — 一个不用编写 class 就能使用 state 和其他 React 特性的方法。（<a href=\"https://github.com/acdlite\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">@acdlite</a> et al. in <a href=\"https://github.com/facebook/react/pull/13968\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">#13968</a>）</li>\n<li>改善 <code class=\"gatsby-code-text\">useReducer</code> Hook 懒初始化 API。（<a href=\"https://github.com/acdlite\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">@acdlite</a> in <a href=\"https://github.com/facebook/react/pull/14723\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">#14723</a>）</li>\n</ul>\n<h3 id=\"react-dom\"><a href=\"#react-dom\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>React DOM </h3>\n<ul>\n<li>为 <code class=\"gatsby-code-text\">useState</code> 和 <code class=\"gatsby-code-text\">useReducer</code> Hook 在相同的值下进行渲染。（<a href=\"https://github.com/acdlite\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">@acdlite</a> in <a href=\"https://github.com/facebook/react/pull/14569\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">#14569</a>）</li>\n<li>不要比较传给 <code class=\"gatsby-code-text\">useEffect</code>/<code class=\"gatsby-code-text\">useMemo</code>/<code class=\"gatsby-code-text\">useCallback</code> Hook 的第一个参数。（<a href=\"https://github.com/acdlite\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">@acdlite</a> in <a href=\"https://github.com/facebook/react/pull/14594\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">#14594</a>）</li>\n<li>使用 <code class=\"gatsby-code-text\">Object.is</code> 算法来比较 <code class=\"gatsby-code-text\">useState</code> 和 <code class=\"gatsby-code-text\">useReducer</code> 的值。（<a href=\"https://github.com/Jessidhia\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">@Jessidhia</a> in <a href=\"https://github.com/facebook/react/pull/14752\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">#14752</a>）</li>\n<li>支持对传给 <code class=\"gatsby-code-text\">React.lazy()</code> 的 thenable 对象进行同步。（<a href=\"https://github.com/gaearon\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">@gaearon</a> in <a href=\"https://github.com/facebook/react/pull/14626\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">#14626</a>）</li>\n<li>严格模式（只有在开发的时候）渲染使用 Hook 的组件两次使其和 class 的表现一样。（<a href=\"https://github.com/gaearon\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">@gaearon</a> in <a href=\"https://github.com/facebook/react/pull/14654\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">#14654</a>）</li>\n<li>在开发的时候 Hook 顺序匹配错误的警告。（<a href=\"https://github.com/threepointone\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">@threepointone</a> in <a href=\"https://github.com/facebook/react/pull/14585\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">#14585</a> and <a href=\"https://github.com/acdlite\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">@acdlite</a> in <a href=\"https://github.com/facebook/react/pull/14591\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">#14591</a>）</li>\n<li>Effect clean-up 方法必须返回 <code class=\"gatsby-code-text\">undefined</code> 或者一个方法。其他的值，包括 <code class=\"gatsby-code-text\">null</code>，都不被允许。<a href=\"https://github.com/acdlite\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">@acdlite</a> in <a href=\"https://github.com/facebook/react/pull/14119\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">#14119</a></li>\n</ul>\n<h3 id=\"react-test-renderer\"><a href=\"#react-test-renderer\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>React 测试渲染器 </h3>\n<ul>\n<li>在浅层渲染中支持 Hook。（<a href=\"https://github.com/trueadm\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">@trueadm</a> in <a href=\"https://github.com/facebook/react/pull/14567\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">#14567</a>）</li>\n<li>为浅层渲染修复与 <code class=\"gatsby-code-text\">shouldComponentUpdate</code> 和 <code class=\"gatsby-code-text\">getDerivedStateFromProps</code> 共同的 state。（<a href=\"https://github.com/chenesan\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">@chenesan</a> in <a href=\"https://github.com/facebook/react/pull/14613\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">#14613</a>）</li>\n<li>为批量更新添加 <code class=\"gatsby-code-text\">ReactTestRenderer.act()</code> 和 <code class=\"gatsby-code-text\">ReactTestUtils.act()</code> 方法，因此测试可以和真实的行为变得更加相符。（<a href=\"https://github.com/threepointone\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">@threepointone</a> in <a href=\"https://github.com/facebook/react/pull/14744\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">#14744</a>）</li>\n</ul>\n<h3 id=\"eslint-plugin-react-hooks\"><a href=\"#eslint-plugin-react-hooks\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ESLint 插件：React Hook </h3>\n<ul>\n<li>初次 <a href=\"https://www.npmjs.com/package/eslint-plugin-react-hooks\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">发版</a>。（<a href=\"https://github.com/calebmer\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">@calebmer</a> in <a href=\"https://github.com/facebook/react/pull/13968\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">#13968</a>）</li>\n<li>修复在进入循环后的报告。（<a href=\"https://github.com/calebmer\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">@calebmer</a> and <a href=\"https://github.com/Yurickh\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">@Yurickh</a> in <a href=\"https://github.com/facebook/react/pull/14661\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">#14661</a>）</li>\n<li>不要认为抛出异常是违反规范的行为。（<a href=\"https://github.com/sophiebits\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">@sophiebits</a> in <a href=\"https://github.com/facebook/react/pull/14040\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">#14040</a>）</li>\n</ul>\n<h2 id=\"hooks-changelog-since-alpha-versions\"><a href=\"#hooks-changelog-since-alpha-versions\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>在 Alpha 版本后的 Hook 的更新日志 </h2>\n<p>上面的更新日志包括所有自上一个<strong>稳定</strong>版本（16.7.0）后的显著的更改。<a href=\"/docs/faq-versioning.html\">和我们每次的小版本改动一样</a>，所有的更改都没有打破向后兼容。</p>\n<p>如果你正在使用基于 alpha Hook 的 React 版本，请注意这次发版的确包括一些小的 Hook 更改。<strong>我们不建议在生产环境代码中使用 alpha 版本</strong>。我们发布它们是为了在 API 稳定之前在社区反馈的基础上做一些更改。</p>\n<p>这里是在 alpha 版本对 Hook 做的所有显著更改：</p>\n<ul>\n<li>删除 <code class=\"gatsby-code-text\">useMutationEffect</code>。（<a href=\"https://github.com/sophiebits\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">@sophiebits</a> in <a href=\"https://github.com/facebook/react/pull/14336\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">#14336</a>）</li>\n<li>将 <code class=\"gatsby-code-text\">useImperativeMethods</code> 重命名为 <code class=\"gatsby-code-text\">useImperativeHandle</code>。（<a href=\"https://github.com/threepointone\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">@threepointone</a> in <a href=\"https://github.com/facebook/react/pull/14565\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">#14565</a>）</li>\n<li>优化 <code class=\"gatsby-code-text\">useState</code> 和 <code class=\"gatsby-code-text\">useReducer</code> 在同等值下的渲染Hook。（<a href=\"https://github.com/acdlite\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">@acdlite</a> in <a href=\"https://github.com/facebook/react/pull/14569\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">#14569</a>）</li>\n<li>不要比较传给 <code class=\"gatsby-code-text\">useEffect</code>/<code class=\"gatsby-code-text\">useMemo</code>/<code class=\"gatsby-code-text\">useCallback</code> Hook 的第一个参数。（<a href=\"https://github.com/acdlite\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">@acdlite</a> in <a href=\"https://github.com/facebook/react/pull/14594\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">#14594</a>）</li>\n<li>使用 <code class=\"gatsby-code-text\">Object.is</code> 算法来比较 <code class=\"gatsby-code-text\">useState</code> 和 <code class=\"gatsby-code-text\">useReducer</code> 的值。（<a href=\"https://github.com/Jessidhia\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">@Jessidhia</a> in <a href=\"https://github.com/facebook/react/pull/14752\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">#14752</a>）</li>\n<li>严格模式（只有在开发的时候）渲染使用 Hook 的组件两次使其和 class 的表现一样。（<a href=\"https://github.com/gaearon\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">@gaearon</a> in <a href=\"https://github.com/facebook/react/pull/14654\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">#14654</a>）</li>\n<li>改善 <code class=\"gatsby-code-text\">useReducer</code> Hook 懒初始化 API。（<a href=\"https://github.com/acdlite\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">@acdlite</a> in <a href=\"https://github.com/facebook/react/pull/14723\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">#14723</a>）</li>\n</ul>","excerpt":"从 React 16.8 开始，React Hook 稳定版本正式发布啦！ 什么是 Hook？ Hook 允许你在不使用 class 的情况下使用 state 和 React 其他特性。你可以 编写自定义的 Hook 来在不同的组件中共享有状态的逻辑。 如果你之前从没听过 Hook，你可能会对以下资料感兴趣： Hook 介绍 解释了为什么我们为 React 添加 Hook。 Hook 一览 是快速地对内置 Hook 的概览。 搭建你自己的 Hook 示范了如何使用自定义的 Hook 来重用代码。 React Hook 的意义 探索了被 Hook 解锁的新可能性。 useHooks.com 一些社区维护的 Hook 示例和实现。 你并不是必须现在就学习 Hook。Hook 并没有突破性的改变，并且我们并没有要删除 React class 的计划。其中 Hook FAQ 描述了逐步采纳策略。 不需要大型重写  我们不建议立马重写你的项目以在其中使用 Hook。相反，试着在一些新的组件中使用 Hook，并且告诉我们你的想法。使用 Hook 的代码可以和已经存在的使用 class…","frontmatter":{"title":"React v16.8：Hook 发布","next":null,"prev":null,"author":[{"frontmatter":{"name":"Dan Abramov","url":"https://twitter.com/dan_abramov"}}]},"fields":{"date":"February 06, 2019","path":"content/blog/2019-02-06-react-v16.8.0.md","slug":"/blog/2019/02/06/react-v16.8.0.html"}},"allMarkdownRemark":{"edges":[{"node":{"frontmatter":{"title":"React 18 发布计划"},"fields":{"slug":"/blog/2021/06/08/the-plan-for-react-18.html"}}},{"node":{"frontmatter":{"title":"介绍 Zero-Bundle-Size 的 React 服务端组件"},"fields":{"slug":"/blog/2020/12/21/data-fetching-with-react-server-components.html"}}},{"node":{"frontmatter":{"title":"React v17.0"},"fields":{"slug":"/blog/2020/10/20/react-v17.html"}}},{"node":{"frontmatter":{"title":"介绍全新的 JSX 转换"},"fields":{"slug":"/blog/2020/09/22/introducing-the-new-jsx-transform.html"}}},{"node":{"frontmatter":{"title":"React v17.0 RC 版本发布：没有新特性"},"fields":{"slug":"/blog/2020/08/10/react-v17-rc.html"}}},{"node":{"frontmatter":{"title":"React v16.13.0"},"fields":{"slug":"/blog/2020/02/26/react-v16.13.0.html"}}},{"node":{"frontmatter":{"title":"Building Great User Experiences with Concurrent Mode and Suspense"},"fields":{"slug":"/blog/2019/11/06/building-great-user-experiences-with-concurrent-mode-and-suspense.html"}}},{"node":{"frontmatter":{"title":"使用 React 预发布版为新功能打基础"},"fields":{"slug":"/blog/2019/10/22/react-release-channels.html"}}},{"node":{"frontmatter":{"title":"全新的 React DevTools 简介"},"fields":{"slug":"/blog/2019/08/15/new-react-devtools.html"}}},{"node":{"frontmatter":{"title":"React v16.9.0 发布及 Roadmap 最新进展"},"fields":{"slug":"/blog/2019/08/08/react-v16.9.0.html"}}}]}},"pageContext":{"slug":"/blog/2019/02/06/react-v16.8.0.html"}},"staticQueryHashes":[]}