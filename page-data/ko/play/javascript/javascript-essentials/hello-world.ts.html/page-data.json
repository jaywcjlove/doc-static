{"componentChunkName":"component---src-templates-play-example-tsx","path":"/ko/play/javascript/javascript-essentials/hello-world.ts.html","result":{"pageContext":{"name":"Hello World","title":"Hello World","lang":"ko","html":"\n TypeScript 플레이그라운드에 오신 것을 환영합니다.\n 이곳은 TypeScript를 웹 브라우저에서 실행하는 환경과 거의 비슷합니다.\n\n 플레이그라운드에서 간단하게\n 프로젝트를 공유할 수 있기 때문에, TypeScript로 아이디어를\n 쉽고 안전하게 실험할 수 있습니다. 이 페이지의 URL만\n 다른 사람에게 공유하면 됩니다.\n\n<code><pre>\nconst hello = \"Hello\";\n\n</pre></code>\n// 오른쪽에서 TypeScript 컴파일러의 결과를 볼 수\n 있습니다. 결과는 브라우저나 서버 및 어디에서나\n 실제로 실행할 수 있는 vanilla JavaScript입니다.\n\n<code><pre>\nconst world = \"World\";\n\n</pre></code>\n// \"const\"를 \"var\"로 변환하면 코드에서 작은 변화를 \n 확인할 수 있습니다. 이것은 TypeScript를\n 모든 JavaScript 환경에서 실행 가능하도록\n 수행하는 많은 작업 중 하나입니다.\n\n<code><pre>\nconsole.log(hello + \" \" + world);\n\n</pre></code>\n// 이제 플레이그라운드가 어떻게 동작하는지 알게 되었으니,\n TypeScript가 JavaScript 작업을 더 즐겁게 만드는 방법을 알아봅시다.\n 여기서는 어떻게 기존 지식을 재사용할 수 있는지 \n 보여주기 위해, 가능한 한 vanilla JavaScript에 \n 가깝게 유지하겠습니다.\n\n 계속하려면 아래를 클릭하세요:\n\n example:objects-and-arrays\n","redirectHref":"ko/play/?target=1#example/hello-world"}},"staticQueryHashes":[]}