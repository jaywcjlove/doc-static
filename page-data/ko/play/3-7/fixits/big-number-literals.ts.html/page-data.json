{"componentChunkName":"component---src-templates-play-example-tsx","path":"/ko/play/3-7/fixits/big-number-literals.ts.html","result":{"pageContext":{"name":"Big number literals","title":"Big number literals","lang":"ko","html":"\n JavaScript에서 표현할 수 있는 숫자의 크기에 \n 제한이 있다는 걸 알고 계셨나요?\n\n<code><pre>\nconst maxHighValue = 9007199254740991;\nconst maxLowValue = -9007199254740991;\n\n</pre></code>\n// 아래 숫자보다 수가 하나라도 더 크거나 작으면\n 매우 위험해집니다\n\n<code><pre>\nconst oneOverMax = 9007199254740992;\nconst oneBelowMin = -9007199254740992;\n\n</pre></code>\n// 이 크기의 수치를 다루는 방법은\n numbers 대신 BigInts로 \n 변환하는 것입니다:\n\n https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/BigInt\n\n TypeScript는 이제 JavaScript에 타입이\n BigInt 여야 한다는 것을 알리는 접미사 \"n\"을 추가하여\n 2^52(양수/음수) 이상의 숫자 리터럴에 대한\n 기능을 제공합니다.\n\n 숫자 리터럴\n<code><pre>\n9007199254740993;\n-9007199254740993;\n9007199254740994;\n-9007199254740994;\n\n// 16진수\n0x19999999999999;\n-0x19999999999999;\n0x20000000000000;\n-0x20000000000000;\n0x20000000000001;\n-0x20000000000001;\n","redirectHref":"ko/play/?target=99#example/big-number-literals"}},"staticQueryHashes":[]}