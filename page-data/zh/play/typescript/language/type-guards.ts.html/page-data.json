{"componentChunkName":"component---src-templates-play-example-tsx","path":"/zh/play/typescript/language/type-guards.ts.html","result":{"pageContext":{"name":"Type Guards","title":"Type Guards","lang":"zh","html":" 类型守卫是您通过代码影响代码流分析的功能。\n TypeScript 使用现存的 JavaScript 在运行时验证对象的行为来进行代码流分析。\n 本文假定您已阅读 example:code-flow\n\n 为了展示这些例子，我们会创建一些类。\n 这是用来处理互联网或电话订单的系统。\n\n<code><pre>\ninterface Order {\n  address: string;\n}\ninterface TelephoneOrder extends Order {\n  callerNumber: string;\n}\ninterface InternetOrder extends Order {\n  email: string;\n}\n\n// 然后定义一个可能是两种订单子类型之一或 undefined 的类型。\ntype PossibleOrders = TelephoneOrder | InternetOrder | undefined;\n\n// 创建一个函数，返回 PossibleOrders 类型。\ndeclare function getOrder(): PossibleOrders;\nconst possibleOrder = getOrder();\n\n</pre></code>\n// 我们可以使用 'in' 操作符来检查某个特定的键存在在对象上，\n 以缩小并集类型的范围 （'in' 是 JavaScript中用来检查对象上键是否存在的操作符）。\n\n<code><pre>\nif (\"email\" in possibleOrder) {\n  const mustBeInternetOrder = possibleOrder;\n}\n\n// 如果您有符合接口的类，可以使用 JavaScript 中 'instanceof' 操作符来检查。\n\nclass TelephoneOrderClass {\n  address: string;\n  callerNumber: string;\n}\n\nif (possibleOrder instanceof TelephoneOrderClass) {\n  const mustBeTelephoneOrder = possibleOrder;\n}\n\n</pre></code>\n// 你可以使用 JavaScript 中 'typeof' 操作符来缩小您的并集类型。\n 它只对于 JavaScript 中的基本类型起作用（例如字符串，对象，数组等）。\n\n<code><pre>\nif (typeof possibleOrder === \"undefined\") {\n  const definitelyNotAnOder = possibleOrder;\n}\n\n</pre></code>\n// 你可以在这里看到全部 typeof 的可能的值:\n https://developer.mozilla.org/docs/Web/JavaScript/Reference/Operators/typeof\n\n 使用 JavaScript 操作符仅仅可以帮助您实现一部分功能，\n 当您希望检查自己定义的类型时，您可以使用类型谓词函数。\n\n 类型谓词函数是一个当返回 true 时，会给代码流分析提供一些额外信息的函数。\n\n 要使用 PossibleOrders 类型，我们可以用两个类型守卫\n 来声明 possibleOrder 究竟是哪个类型：\n\n<code><pre>\nfunction isAnInternetOrder(order: PossibleOrders): order is InternetOrder {\n  return order && \"email\" in order;\n}\n\nfunction isATelephoneOrder(order: PossibleOrders): order is TelephoneOrder {\n  return order && \"calledNumber\" in order;\n}\n\n// 现在我们可以使用这些函数在 if 语句中缩小 possibleOrder 的可能的类型：\n\nif (isAnInternetOrder(possibleOrder)) {\n  console.log(\"Order received via email:\", possibleOrder.email);\n}\n\nif (isATelephoneOrder(possibleOrder)) {\n  console.log(\"Order received via phone:\", possibleOrder.callerNumber);\n}\n\n</pre></code>\n// 你可以在这里获得更多关于代码流分析的信息：\n\n  - example:code-flow\n  - example:type-guards\n  - example:discriminate-types\n","redirectHref":"zh/play/?#example/type-guards"}},"staticQueryHashes":[]}