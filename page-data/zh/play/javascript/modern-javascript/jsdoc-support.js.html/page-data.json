{"componentChunkName":"component---src-templates-play-example-tsx","path":"/zh/play/javascript/modern-javascript/jsdoc-support.js.html","result":{"pageContext":{"name":"JSDoc Support","title":"JSDoc Support","lang":"zh","html":"\n TypeScript 有着非常丰富的 JSDoc 支持，很多情况下您甚至可以不写 .ts 文件\n 而仅仅使用 JSDoc 注解去创建丰富的开发环境。\n\n JSDoc 注释是由两个星号（*）开头的多行注释。\n<code><pre>\n/* 这是一个普通注释 */\n/** 这是一个 JSDoc 注释 */\n\n// JSDoc 注释会附加到下方最近的 JavaScript 代码中。\n\nconst myVariable = \"Hi\";\n\n</pre></code>\n// 如果您将鼠标悬停到 myVariable，你可以看到它已经\n 被附加了这段在 JSDoc 注释中的文字。\n\n JSDoc 注释是一种为 TypeScript 和 您的编辑器提供类型信息的方式。\n 让我们简单的从将变量的类型设置为内置类型开始。\n\n 对于所有这些示例，您可以将鼠标悬停在名称上，然后再下一行尝试\n 输入【example】以查看自动完成选项。\n\n<code><pre>\n/** @type {number} */\nvar myNumber;\n\n</pre></code>\n// 你可以在手册中查看所有已支持的标签：\n\n https://www.typescriptlang.org/docs/handbook/type-checking-javascript-files.html#supported-jsdoc\n\n 但是，我们将在这里尝试一些更常见的示例，您也可以将手册中的任何示例粘贴到此处。\n\n 从 JavaScript 配置文件中导入类型：\n\n<code><pre>\n/** @type { import(\"webpack\").Config } */\nconst config = {};\n\n// 创建一个复杂的类型以在其他多处地方复用：\n\n/**\n * @typedef {Object} User - 用户账户\n * @property {string} displayName - 用户用来展示的名字\n * @property {number} id - 唯一 ID\n */\n\n// 然后通过引用类型的名字来使用它：\n\n/** @type { User } */\nconst user = {};\n\n// type 和 typedef 有兼容 TypeScript 的内联类型快捷用法：\n\n/** @type {{ owner: User, name: string }} */\nconst resource;\n\n/** @typedef {{owner: User, name: string} Resource */\n\n/** @type {Resource} */\nconst otherResource;\n\n// 声明一个有类型的函数：\n\n/**\n * 将两个数字相加\n * @param {number} a 第一个数字\n * @param {number} b 第二个数字\n * @returns {number}\n */\nfunction addTwoNumbers(a, b) {\n  return a + b;\n}\n\n// 你可以使用大多数 TypeScript 的类型工具，例如并集类型：\n\n/** @type {(string | boolean)} */\nlet stringOrBoolean = \"\";\nstringOrBoolean = false;\n\n</pre></code>\n// 在 JSDoc 中扩展全局变量是一个涉及更多内容的过程，您可以\n 在 VS Code 文档中找到：\n\n https://code.visualstudio.com/docs/nodejs/working-with-javascript#_global-variables-and-type-checking\n\n 在您的函数中添加 JSDoc 注释是一个双赢的情况，您将获得更好的工具，\n 所有 API 的使用者也一样。\n","redirectHref":"zh/play/?#example/jsdoc-support"}},"staticQueryHashes":[]}