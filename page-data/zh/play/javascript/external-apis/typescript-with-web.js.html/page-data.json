{"componentChunkName":"component---src-templates-play-example-tsx","path":"/zh/play/javascript/external-apis/typescript-with-web.js.html","result":{"pageContext":{"name":"TypeScript with Web","title":"TypeScript with Web","lang":"zh","html":"\n DOM (Document Object Model，文档对象模型) 是一种网页底层的标准\n 接口规范，而 TypeScript 对这套接口有着相当不错的支持。\n\n 在点击运行按钮之前，我们先来创建一个弹出窗口。\n\n<code><pre>\nconst popover = document.createElement(\"div\");\npopover.id = \"example-popover\";\n\n</pre></code>\n// 值得注意的是，我们创建了一个 div 元素，该弹出窗口将以一个\n HTMLDivElement 类型的元素存在\n\n 为防止重新运行时出问题，我们必须要有一个方法在每次运行时把弹出窗口移除掉，\n 以确保我们的弹出窗口不会被重复创建\n\n<code><pre>\nconst removePopover = () => {\n  const existingPopover = document.getElementById(popover.id);\n  if (existingPopover && existingPopover.parentElement) {\n    existingPopover.parentElement.removeChild(existingPopover);\n  }\n};\n\n// 先调用该方法\nremovePopover();\n\n// 我们可以通过 .style 属性来为一个 HTMLElement 设置 CSS 样式\n\npopover.style.backgroundColor = \"#0078D4\";\npopover.style.color = \"white\";\npopover.style.border = \"1px solid black\";\npopover.style.position = \"fixed\";\npopover.style.bottom = \"10px\";\npopover.style.right = \"20px\";\npopover.style.width = \"200px\";\npopover.style.height = \"100px\";\npopover.style.padding = \"10px\";\n\n// 包括一些在不同浏览器上可能表现不一致、或者不推荐使用的 CSS 属性\npopover.style.webkitBorderRadius = \"4px\";\n\n// 要在弹出窗口中显示内容，我们需要添加一个 p 标签并给它添加一些文本\nconst message = document.createElement(\"p\");\nmessage.textContent = \"Here is an example popover\";\n\n// 接着我们还需要增加一个关闭按钮\n\nconst closeButton = document.createElement(\"a\");\ncloseButton.textContent = \"X\";\ncloseButton.style.position = \"absolute\";\ncloseButton.style.top = \"3px\";\ncloseButton.style.right = \"8px\";\ncloseButton.style.color = \"white\";\n\ncloseButton.onclick = () => {\n  removePopover();\n};\n\n// 最后我们把上面所定义的所有元素都添加到页面上\npopover.appendChild(message);\npopover.appendChild(closeButton);\ndocument.body.appendChild(popover);\n\n</pre></code>\n// 如果你点击上面的运行按钮，就会看到右下角出现一个弹出窗口\n 同时你可以点击这个弹出窗口右上角的 X 来关闭这个窗口\n\n 通过该例子你可以得知在 JavaScript 下如何使用 DOM API——但是，\n TypeScript 为此也提供了更强大的支持。\n\n 这里同时提供一个使用 TypeScript 的 WebGL 应用的扩展例子：\n example:typescript-with-webgl\n\n","redirectHref":"zh/play/?#example/typescript-with-web"}},"staticQueryHashes":[]}