{"componentChunkName":"component---src-templates-play-example-tsx","path":"/zh/play/javascript/working-with-classes/generic-classes.ts.html","result":{"pageContext":{"name":"Generic Classes","title":"Generic Classes","lang":"zh","html":"\n 此示例主要在 TypeScript 中使用，因为这样会更容易理解这种方式。\n 最后，我们将介绍如何使用 JSDoc 来创建相同的类。\n\n 泛型类是一种表示特定类型依赖另一种类型的方法。例如，这是\n 一个可以容纳任何对象的抽屉（Drawer），但是只可以有一种类型：\n\n<code><pre>\nclass Drawer<ClothingType> {\n  contents: ClothingType[] = [];\n\n  add(object: ClothingType) {\n    this.contents.push(object);\n  }\n\n  remove() {\n    return this.contents.pop();\n  }\n}\n\n// 要使用 Drawer，您需要另一种类型：\n\ninterface Sock {\n  color: string;\n}\n\ninterface TShirt {\n  size: \"s\" | \"m\" | \"l\";\n}\n\n</pre></code>\n// 我们可以在创建 Drawer 时传入 Sock 类型，从而为\n Socks 创建一个 drawer：\n<code><pre>\nconst sockDrawer = new Drawer<Sock>();\n\n// 现在我们可以添加或删除 drawer 中的 sock 了：\nsockDrawer.add({ color: \"white\" });\nconst mySock = sockDrawer.remove();\n\n// 以及为 TShirt 创建 Drawer：\nconst tshirtDrawer = new Drawer<TShirt>();\ntshirtDrawer.add({ size: \"m\" });\n\n</pre></code>\n// 如果您有点古怪，您甚至可以通过并集类型将 Sock 和 TShirt 混\n 合用来创建一个 Drawer：\n\n<code><pre>\nconst mixedDrawer = new Drawer<Sock | TShirt>();\n\n</pre></code>\n// 要不通过额外的 TypeScript 语法创建一个类似 Drawer 的类，则需要\n 使用 JSDoc 中的模板（template）标记。在此示例中，我们定义了模板\n 变量，然后定义类的属性：\n\n 要在游乐场上实验这项功能，您需要将设置更改为 JavaScript 文件，\n 然后删除上面的的 TypeScript 代码。\n\n<code><pre>\n/**\n * @template {{}} ClothingType\n */\nclass Dresser {\n  constructor() {\n    /** @type {ClothingType[]} */\n    this.contents = [];\n  }\n\n  /** @param {ClothingType} object */\n  add(object) {\n    this.contents.push(object);\n  }\n\n  /** @return {ClothingType} */\n  remove() {\n    return this.contents.pop();\n  }\n}\n\n// 然后我们通过 JSDoc 创建一个新的类型：\n\n/**\n * @typedef {Object} Coat 一个 Coat\n * @property {string} color Coat 的颜色\n */\n\n</pre></code>\n// 然后当我们创建该类型的新实例时，我们使用 @type 将变量\n 标记为处理 Coat 的 Dresser。\n\n<code><pre>\n/** @type {Dresser<Coat>} */\nconst coatDresser = new Dresser();\n\ncoatDresser.add({ color: \"green\" });\nconst coat = coatDresser.remove();\n","redirectHref":"zh/play/?#example/generic-classes"}},"staticQueryHashes":[]}