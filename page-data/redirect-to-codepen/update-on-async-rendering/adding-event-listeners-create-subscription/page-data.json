{"componentChunkName":"component---src-templates-codepen-example-js","path":"/redirect-to-codepen/update-on-async-rendering/adding-event-listeners-create-subscription","result":{"pageContext":{"action":"https://codepen.io/pen/define","payload":"{\"editors\":\"0010\",\"html\":\"<div id=\\\"root\\\"></div>\",\"js\":\"import {createSubscription} from 'create-subscription';\\n\\nconst Subscription = createSubscription({\\n  getCurrentValue(sourceProp) {\\n    // 返回订阅的当前值（sourceProp）。\\n    return sourceProp.value;\\n  },\\n\\n  subscribe(sourceProp, callback) {\\n    function handleSubscriptionChange() {\\n      callback(sourceProp.value);\\n    }\\n\\n    // 订阅（例如：向订阅（sourceProp）添加事件监听器。\\n    // 每当订阅发生变化时，调用回调函数（新值）。\\n    sourceProp.subscribe(handleSubscriptionChange);\\n\\n    // 返回取消订阅方法。\\n    return function unsubscribe() {\\n      sourceProp.unsubscribe(handleSubscriptionChange);\\n    };\\n  },\\n});\\n\\n// 我们可以直接传递订阅的值，\\n// 而不是将可订阅的源传递给我们的 ExampleComponent：\\n<Subscription source={dataSource}>\\n  {value => <ExampleComponent subscribedValue={value} />}\\n</Subscription>;\\n\",\"js_external\":\"//unpkg.com/react/umd/react.development.js;//unpkg.com/react-dom/umd/react-dom.development.js\",\"js_pre_processor\":\"babel\",\"layout\":\"left\"}"}},"staticQueryHashes":[]}