{"componentChunkName":"component---src-templates-codepen-example-js","path":"/redirect-to-codepen/update-on-async-rendering/adding-event-listeners-after","result":{"pageContext":{"action":"https://codepen.io/pen/define","payload":"{\"editors\":\"0010\",\"html\":\"<div id=\\\"root\\\"></div>\",\"js\":\"// After\\nclass ExampleComponent extends React.Component {\\n  // highlight-range{1-3}\\n  state = {\\n    subscribedValue: this.props.dataSource.value,\\n  };\\n  // highlight-line\\n  // highlight-range{1-18}\\n  componentDidMount() {\\n    // 事件监听器只有在挂载后添加才是安全的，\\n    // 因此，如果挂载中断或错误，它们不会泄漏。\\n    this.props.dataSource.subscribe(\\n      this.handleSubscriptionChange\\n    );\\n\\n    // 外部值可能在渲染和挂载期间改变，\\n    // 在某些情况下，处理这种情况很重要。\\n    if (\\n      this.state.subscribedValue !==\\n      this.props.dataSource.value\\n    ) {\\n      this.setState({\\n        subscribedValue: this.props.dataSource.value,\\n      });\\n    }\\n  }\\n\\n  componentWillUnmount() {\\n    this.props.dataSource.unsubscribe(\\n      this.handleSubscriptionChange\\n    );\\n  }\\n\\n  handleSubscriptionChange = dataSource => {\\n    this.setState({\\n      subscribedValue: dataSource.value,\\n    });\\n  };\\n}\\n\",\"js_external\":\"//unpkg.com/react/umd/react.development.js;//unpkg.com/react-dom/umd/react-dom.development.js\",\"js_pre_processor\":\"babel\",\"layout\":\"left\"}"}},"staticQueryHashes":[]}