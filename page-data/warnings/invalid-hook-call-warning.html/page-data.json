{"componentChunkName":"component---src-templates-docs-js","path":"/warnings/invalid-hook-call-warning.html","result":{"data":{"markdownRemark":{"html":"<p>你能到这个页面很可能是因为你看到了以下错误信息：</p>\n<blockquote>\n<p>Hooks can only be called inside the body of a function component.</p>\n</blockquote>\n<p>触发这个警告有三种常见的原因：</p>\n<ol>\n<li>你的 React 和 React DOM 可能<strong>版本不匹配</strong>。</li>\n<li>你可能<strong>打破了 <a href=\"/docs/hooks-rules.html\">Hook 的规则</a></strong>。</li>\n<li>你可能在同一个应用中拥有<strong>多个 React 副本</strong>。</li>\n</ol>\n<p>让我们依次来看这些情况。</p>\n<h2 id=\"mismatching-versions-of-react-and-react-dom\"><a href=\"#mismatching-versions-of-react-and-react-dom\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>React 和 React DOM 版本不匹配 </h2>\n<p>你可能使用的是尚未支持 Hook 的 <code class=\"gatsby-code-text\">react-dom</code>（&#x3C; 16.8.0）或 <code class=\"gatsby-code-text\">react-native</code>（&#x3C; 0.59）版本。你可以在应用文件夹中执行 <code class=\"gatsby-code-text\">npm ls react-dom</code> 或 <code class=\"gatsby-code-text\">npm ls react-native</code> 来检当前使用的版本。如果你发现不止一个相关的依赖，可能也会产生问题（在后面的小节会进行说明）。</p>\n<h2 id=\"breaking-the-rules-of-hooks\"><a href=\"#breaking-the-rules-of-hooks\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>打破了 Hook 的规则 </h2>\n<p>你只能在<strong>当 React 渲染函数组件时</strong>调用 Hook：</p>\n<ul>\n<li>✅ 在函数组件的顶层调用它们。</li>\n<li>✅ 在<a href=\"/docs/hooks-custom.html\">自定义 Hook</a> 的顶层调用它们。</li>\n</ul>\n<p><strong>查看 <a href=\"/docs/hooks-rules.html\">Hook 的规则</a>以了解更多内容。</strong></p>\n<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">Counter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token comment\">// ✅ Good：函数组件的顶层</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>count<span class=\"token punctuation\">,</span> setCount<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">useWindowWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token comment\">// ✅ Good：自定义 Hook 的顶层</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>width<span class=\"token punctuation\">,</span> setWidth<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">.</span>innerWidth<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>为避免困惑，在以下情况中调用 Hook 是<strong>不</strong>被支持的：</p>\n<ul>\n<li>🔴 不要在 class 组件中调用 Hook。</li>\n<li>🔴 不要在 event handlers 中调用。</li>\n<li>🔴 不要在 <code class=\"gatsby-code-text\">useMemo</code>、<code class=\"gatsby-code-text\">useReducer</code> 或 <code class=\"gatsby-code-text\">useEffect</code> 的参数函数中调用。</li>\n</ul>\n<p>如果你打破了这些规则，那么你可能就会看到本错误。</p>\n<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">Bad1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">handleClick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token comment\">// 🔴 Bad：在 event handler 内部 (移到外部来修复它)</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">const</span> theme <span class=\"token operator\">=</span> <span class=\"token function\">useContext</span><span class=\"token punctuation\">(</span>ThemeContext<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>  <span class=\"token punctuation\">}</span>\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">Bad2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> style <span class=\"token operator\">=</span> <span class=\"token function\">useMemo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token comment\">// 🔴 Bad：在 useMemo 内部 (移到外部来修复它)</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">const</span> theme <span class=\"token operator\">=</span> <span class=\"token function\">useContext</span><span class=\"token punctuation\">(</span>ThemeContext<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>    <span class=\"token keyword\">return</span> <span class=\"token function\">createStyle</span><span class=\"token punctuation\">(</span>theme<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Bad3</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token comment\">// 🔴 Bad：在 class 组件内部</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></span>    <span class=\"token comment\">// ...</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>你可以使用 <a href=\"https://www.npmjs.com/package/eslint-plugin-react-hooks\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><code class=\"gatsby-code-text\">eslint-plugin-react-hooks</code> 插件</a>来捕获这些错误。</p>\n<blockquote>\n<p>注意</p>\n<p><a href=\"/docs/hooks-custom.html\">自定义 Hook</a> <em>可能会</em>调用其他 Hook（这恰好是他们的用途）。这是可行的，因为自定义 Hook 也应该只在函数组件渲染时被调用。</p>\n</blockquote>\n<h2 id=\"duplicate-react\"><a href=\"#duplicate-react\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>重复的 React </h2>\n<p>为了使 Hook 正常工作，你应用代码中的 <code class=\"gatsby-code-text\">react</code> 依赖以及 <code class=\"gatsby-code-text\">react-dom</code> 的 package 内部使用的 <code class=\"gatsby-code-text\">react</code> 依赖，必须解析为同一个模块。</p>\n<p>如果这些 <code class=\"gatsby-code-text\">react</code> 依赖解析为两个不同的导出对象，你就会看到本警告。这可能发生在你<strong>意外地引入了两个 <code class=\"gatsby-code-text\">react</code> 的 package 副本</strong>。</p>\n<p>如果你用的是 Node 作为 package 管理工具，你可以执行以下代码来检查你的项目文件夹：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"gatsby-code-text\"><code class=\"gatsby-code-text\">npm ls react</code></pre></div>\n<p>如果你看到多个 React，则需要弄清楚为什么会发生这种情况，并修复 dependency 树。例如，你使用的库可能错误地指定 <code class=\"gatsby-code-text\">react</code> 作为 dependency（而不是 peer dependency）。在该库修复之前，<a href=\"https://yarnpkg.com/lang/en/docs/selective-version-resolutions/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Yarn resolutions</a> 是一种可行的解决方案。</p>\n<p>你也可以通过添加一些 log 并重启开发服务器来尝试 debug：</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token comment\">// 在 node_modules/react-dom/index.js 中加入这一行</span>\nwindow<span class=\"token punctuation\">.</span>React1 <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'react'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 在你的组件文件中加入这些代码</span>\n<span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'react-dom'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nwindow<span class=\"token punctuation\">.</span>React2 <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'react'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">.</span>React1 <span class=\"token operator\">===</span> window<span class=\"token punctuation\">.</span>React2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>如果打印出 <code class=\"gatsby-code-text\">false</code>，那么你可能调用了两个 React，你需要弄清楚为什么会发生这种情况。<a href=\"https://github.com/facebook/react/issues/13991\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">这个 issue</a> 包含了一些社区中常见的原因。</p>\n<p>这个问题也可能发生在你使用 <code class=\"gatsby-code-text\">npm link</code> 或等效方案时。在这种情况下，你的打包器可能会“检测”到两个 React —— 一个在应用项目文件夹中，另一个在你的工具库文件夹中。假设 <code class=\"gatsby-code-text\">myapp</code> 和 <code class=\"gatsby-code-text\">mylib</code> 是同级文件夹，一个可能的修复方法是在 <code class=\"gatsby-code-text\">mylib</code> 执行 <code class=\"gatsby-code-text\">npm link ../myapp/node_modules/react</code>。这将会使得工具库使用应用项目中的 React 副本。</p>\n<blockquote>\n<p>注意</p>\n<p>通常，React 支持在单个页面上使用多个独立副本（例如，应用和第三方小部件都使用它）。错误只会发生在，当组件和渲染它的 <code class=\"gatsby-code-text\">react-dom</code> 副本两者中的 <code class=\"gatsby-code-text\">require（'react'）</code> 解析不相同时。</p>\n</blockquote>\n<h2 id=\"other-causes\"><a href=\"#other-causes\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>其他原因 </h2>\n<p>如果这些方法都不起效，请在<a href=\"https://github.com/facebook/react/issues/13991\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">这个 issue</a> 中发表评论，我们将尽力提供帮助。尝试创建一个小型的重现示例 —— 重现你会发现问题的做法。</p>","frontmatter":{"title":"警告：非法 Hook 调用","next":null,"prev":null},"fields":{"path":"content/warnings/invalid-hook-call-warning.md","slug":"warnings/invalid-hook-call-warning.html"}}},"pageContext":{"slug":"warnings/invalid-hook-call-warning.html"}},"staticQueryHashes":[]}