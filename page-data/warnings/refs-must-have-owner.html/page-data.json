{"componentChunkName":"component---src-templates-docs-js","path":"/warnings/refs-must-have-owner.html","result":{"data":{"markdownRemark":{"html":"<p>你能到这个页面很可能是因为你看到了以下错误信息：</p>\n<p><em>React 16.0.0+</em></p>\n<blockquote>\n<p>Warning:</p>\n<p>Element ref was specified as a string (myRefName) but no owner was set. You may have multiple copies of React loaded. (details: <a href=\"https://fb.me/react-refs-must-have-owner\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://fb.me/react-refs-must-have-owner</a>).</p>\n</blockquote>\n<p><em>早期版本的 React</em></p>\n<blockquote>\n<p>Warning:</p>\n<p>addComponentAsRefTo(…): Only a ReactOwner can have refs. You might be adding a ref to a component that was not created inside a component’s <code class=\"gatsby-code-text\">render</code> method, or you have multiple copies of React loaded.</p>\n</blockquote>\n<p>这通常意味着以下三种原因之一：</p>\n<ul>\n<li>你试图给一个函数组件添加 <code class=\"gatsby-code-text\">ref</code>；</li>\n<li>你试图把 <code class=\"gatsby-code-text\">ref</code> 添加到一个在 render() 函数之外生成的元素上；</li>\n<li>你加载了多个不同的（冲突的） React 副本（比方说是由配置错误的 npm 依赖所引起）。</li>\n</ul>\n<h2 id=\"refs-on-function-components\"><a href=\"#refs-on-function-components\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>函数组件上的 Refs </h2>\n<p>如果 <code class=\"gatsby-code-text\">&lt;Foo></code> 是一个函数组件，那么你不能给它添加 ref：</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token comment\">// 如果 Foo 是一个函数，那么这样将不起作用！</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Foo</span></span> <span class=\"token attr-name\">ref</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>foo<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span></code></pre></div>\n<p>如果你需要为一个组件添加 ref，首先将组件转换为 class，或者考虑不要使用 refs，因为它们 <a href=\"/docs/refs-and-the-dom.html#when-to-use-refs\">是非必要的</a>。</p>\n<h2 id=\"strings-refs-outside-the-render-method\"><a href=\"#strings-refs-outside-the-render-method\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>在 Render 方法外的字符串型 Refs </h2>\n<p>这通常意味着你试图将 ref 添加到没有所有者的组件上（即，不是在某个组件的 <code class=\"gatsby-code-text\">render</code> 方法中创建的）。举个例子，下述代码是不起作用的：</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token comment\">// 不起作用！</span>\nReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">App</span></span> <span class=\"token attr-name\">ref</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>app<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">,</span> el<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>试试在顶层组件内渲染该组件，由该组件保存 ref。或者，你可以用回调函数作为 ref：</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token keyword\">let</span> app<span class=\"token punctuation\">;</span>\nReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">App</span></span> <span class=\"token attr-name\">ref</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token parameter\">inst</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    app <span class=\"token operator\">=</span> inst<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">,</span>\n  el\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>在使用这种实现方式之前，请考虑你是否 <a href=\"/docs/refs-and-the-dom.html#when-to-use-refs\">真的需要 ref</a>。</p>\n<h2 id=\"multiple-copies-of-react\"><a href=\"#multiple-copies-of-react\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>多个 React 副本 </h2>\n<p>Bower 在消除重复依赖方面做得不错，但 npm 不行。如果你没有用 refs 做任何（花哨的）事情，那么很可能不是你编写的 refs 的原因，而是由于你的项目加载了多个 React 副本所引起。有时候，当你通过 npm 拉取一个第三方模块时，你会得到重复的依赖库副本，这可能会产生问题。</p>\n<p>如果你用的是 npm，<code class=\"gatsby-code-text\">npm ls</code> 或 <code class=\"gatsby-code-text\">npm ls react</code> 命令将有助于发现问题。</p>","frontmatter":{"title":"警告：Refs 属性必须有所有者","next":null,"prev":null},"fields":{"path":"content/warnings/refs-must-have-owner.md","slug":"warnings/refs-must-have-owner.html"}}},"pageContext":{"slug":"warnings/refs-must-have-owner.html"}},"staticQueryHashes":[]}