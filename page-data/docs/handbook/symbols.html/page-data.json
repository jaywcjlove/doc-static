{"componentChunkName":"component---src-templates-documentation-tsx","path":"/docs/handbook/symbols.html","result":{"data":{"markdownRemark":{"id":"847d4188-7b31-53a6-806f-f0db11335e67","excerpt":"Starting with ECMAScript 2015, symbol is a primitive data type, just like number and string. symbol values are created by calling the Symbol constructor…","html":"<p>Starting with ECMAScript 2015, <code>symbol</code> is a primitive data type, just like <code>number</code> and <code>string</code>.</p>\n<p><code>symbol</code> values are created by calling the <code>Symbol</code> constructor.</p>\n<pre class=\"shiki\"><div class=\"language-id\">ts</div><div class='code-container'><code><span style=\"color: #0000FF\">let</span><span style=\"color: #000000\"> </span><span style=\"color: #1A1A1A\">sym1 </span><span style=\"color: #000000\">= Symbol();</span>\n\n<span style=\"color: #0000FF\">let</span><span style=\"color: #000000\"> </span><span style=\"color: #1A1A1A\">sym2 </span><span style=\"color: #000000\">= Symbol(</span><span style=\"color: #A31515\">\"key\"</span><span style=\"color: #000000\">); </span><span style=\"color: #008000\">// optional string key</span></code></div></pre>\n<p>Symbols are immutable, and unique.</p>\n<pre class=\"shiki\"><div class=\"language-id\">ts</div><div class='code-container'><code><span style=\"color: #0000FF\">let</span><span style=\"color: #000000\"> </span><span style=\"color: #1A1A1A\">sym2 </span><span style=\"color: #000000\">= Symbol(</span><span style=\"color: #A31515\">\"key\"</span><span style=\"color: #000000\">);</span>\n<span style=\"color: #0000FF\">let</span><span style=\"color: #000000\"> </span><span style=\"color: #1A1A1A\">sym3 </span><span style=\"color: #000000\">= Symbol(</span><span style=\"color: #A31515\">\"key\"</span><span style=\"color: #000000\">);</span>\n\n<span style=\"color: #1A1A1A\">sym2</span><span style=\"color: #000000\"> === </span><span style=\"color: #1A1A1A\">sym3</span><span style=\"color: #000000\">; </span><span style=\"color: #008000\">// false, symbols are unique</span></code></div></pre>\n<p>Just like strings, symbols can be used as keys for object properties.</p>\n<pre class=\"shiki\"><div class=\"language-id\">ts</div><div class='code-container'><code><span style=\"color: #0000FF\">const</span><span style=\"color: #000000\"> </span><span style=\"color: #1A1A1A\">sym </span><span style=\"color: #000000\">= Symbol();</span>\n\n<span style=\"color: #0000FF\">let</span><span style=\"color: #000000\"> </span><span style=\"color: #1A1A1A\">obj </span><span style=\"color: #000000\">= {</span>\n<span style=\"color: #000000\">  [</span><span style=\"color: #1A1A1A\">sym</span><span style=\"color: #000000\">]: </span><span style=\"color: #A31515\">\"value\"</span><span style=\"color: #000000\">,</span>\n<span style=\"color: #000000\">};</span>\n\n<span style=\"color: #000000\">console.log(</span><span style=\"color: #1A1A1A\">obj</span><span style=\"color: #000000\">[</span><span style=\"color: #1A1A1A\">sym</span><span style=\"color: #000000\">]); </span><span style=\"color: #008000\">// \"value\"</span></code></div></pre>\n<p>Symbols can also be combined with computed property declarations to declare object properties and class members.</p>\n<pre class=\"shiki\"><div class=\"language-id\">ts</div><div class='code-container'><code><span style=\"color: #0000FF\">const</span><span style=\"color: #000000\"> </span><span style=\"color: #1A1A1A\">getClassNameSymbol </span><span style=\"color: #000000\">= Symbol();</span>\n\n<span style=\"color: #0000FF\">class</span><span style=\"color: #000000\"> C {</span>\n<span style=\"color: #000000\">  [</span><span style=\"color: #1A1A1A\">getClassNameSymbol</span><span style=\"color: #000000\">]() {</span>\n<span style=\"color: #000000\">    </span><span style=\"color: #0000FF\">return</span><span style=\"color: #000000\"> </span><span style=\"color: #A31515\">\"C\"</span><span style=\"color: #000000\">;</span>\n<span style=\"color: #000000\">  }</span>\n<span style=\"color: #000000\">}</span>\n\n<span style=\"color: #0000FF\">let</span><span style=\"color: #000000\"> </span><span style=\"color: #1A1A1A\">c </span><span style=\"color: #000000\">= </span><span style=\"color: #0000FF\">new</span><span style=\"color: #000000\"> C();</span>\n<span style=\"color: #0000FF\">let</span><span style=\"color: #000000\"> </span><span style=\"color: #1A1A1A\">className </span><span style=\"color: #000000\">= </span><span style=\"color: #1A1A1A\">c</span><span style=\"color: #000000\">[</span><span style=\"color: #1A1A1A\">getClassNameSymbol</span><span style=\"color: #000000\">](); </span><span style=\"color: #008000\">// \"C\"</span></code></div></pre>\n<h2 id=\"well-known-symbols\" style=\"position:relative;\"><a href=\"#well-known-symbols\" aria-label=\"well known symbols permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Well-known Symbols</h2>\n<p>In addition to user-defined symbols, there are well-known built-in symbols.\nBuilt-in symbols are used to represent internal language behaviors.</p>\n<p>Here is a list of well-known symbols:</p>\n<h2 id=\"symbolhasinstance\" style=\"position:relative;\"><a href=\"#symbolhasinstance\" aria-label=\"symbolhasinstance permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code>Symbol.hasInstance</code></h2>\n<p>A method that determines if a constructor object recognizes an object as one of the constructor’s instances. Called by the semantics of the instanceof operator.</p>\n<h2 id=\"symbolisconcatspreadable\" style=\"position:relative;\"><a href=\"#symbolisconcatspreadable\" aria-label=\"symbolisconcatspreadable permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code>Symbol.isConcatSpreadable</code></h2>\n<p>A Boolean value indicating that an object should be flattened to its array elements by Array.prototype.concat.</p>\n<h2 id=\"symboliterator\" style=\"position:relative;\"><a href=\"#symboliterator\" aria-label=\"symboliterator permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code>Symbol.iterator</code></h2>\n<p>A method that returns the default iterator for an object. Called by the semantics of the for-of statement.</p>\n<h2 id=\"symbolmatch\" style=\"position:relative;\"><a href=\"#symbolmatch\" aria-label=\"symbolmatch permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code>Symbol.match</code></h2>\n<p>A regular expression method that matches the regular expression against a string. Called by the <code>String.prototype.match</code> method.</p>\n<h2 id=\"symbolreplace\" style=\"position:relative;\"><a href=\"#symbolreplace\" aria-label=\"symbolreplace permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code>Symbol.replace</code></h2>\n<p>A regular expression method that replaces matched substrings of a string. Called by the <code>String.prototype.replace</code> method.</p>\n<h2 id=\"symbolsearch\" style=\"position:relative;\"><a href=\"#symbolsearch\" aria-label=\"symbolsearch permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code>Symbol.search</code></h2>\n<p>A regular expression method that returns the index within a string that matches the regular expression. Called by the <code>String.prototype.search</code> method.</p>\n<h2 id=\"symbolspecies\" style=\"position:relative;\"><a href=\"#symbolspecies\" aria-label=\"symbolspecies permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code>Symbol.species</code></h2>\n<p>A function valued property that is the constructor function that is used to create derived objects.</p>\n<h2 id=\"symbolsplit\" style=\"position:relative;\"><a href=\"#symbolsplit\" aria-label=\"symbolsplit permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code>Symbol.split</code></h2>\n<p>A regular expression method that splits a string at the indices that match the regular expression.\nCalled by the <code>String.prototype.split</code> method.</p>\n<h2 id=\"symboltoprimitive\" style=\"position:relative;\"><a href=\"#symboltoprimitive\" aria-label=\"symboltoprimitive permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code>Symbol.toPrimitive</code></h2>\n<p>A method that converts an object to a corresponding primitive value.\nCalled by the <code>ToPrimitive</code> abstract operation.</p>\n<h2 id=\"symboltostringtag\" style=\"position:relative;\"><a href=\"#symboltostringtag\" aria-label=\"symboltostringtag permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code>Symbol.toStringTag</code></h2>\n<p>A String value that is used in the creation of the default string description of an object.\nCalled by the built-in method <code>Object.prototype.toString</code>.</p>\n<h2 id=\"symbolunscopables\" style=\"position:relative;\"><a href=\"#symbolunscopables\" aria-label=\"symbolunscopables permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code>Symbol.unscopables</code></h2>\n<p>An Object whose own property names are property names that are excluded from the ‘with’ environment bindings of the associated objects.</p>","headings":[{"value":"Well-known Symbols","depth":2},{"value":"Symbol.hasInstance","depth":2},{"value":"Symbol.isConcatSpreadable","depth":2},{"value":"Symbol.iterator","depth":2},{"value":"Symbol.match","depth":2},{"value":"Symbol.replace","depth":2},{"value":"Symbol.search","depth":2},{"value":"Symbol.species","depth":2},{"value":"Symbol.split","depth":2},{"value":"Symbol.toPrimitive","depth":2},{"value":"Symbol.toStringTag","depth":2},{"value":"Symbol.unscopables","depth":2}],"frontmatter":{"permalink":"/docs/handbook/symbols.html","title":"Symbols","disable_toc":null,"handbook":null,"oneline":"Using the JavaScript Symbol primitive in TypeScript","beta":null}},"prev":null,"next":null},"pageContext":{"id":"2symbols","slug":"/docs/handbook/symbols.html","repoPath":"/packages/documentation/copy/en/reference/Symbols.md","lang":"en","modifiedTime":"2020-11-23T10:39:15.619Z"}},"staticQueryHashes":[]}