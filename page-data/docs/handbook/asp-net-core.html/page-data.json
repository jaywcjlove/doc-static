{"componentChunkName":"component---src-templates-documentation-tsx","path":"/docs/handbook/asp-net-core.html","result":{"data":{"markdownRemark":{"id":"003123e9-cf34-564d-b24a-7b5e18eaf593","excerpt":"Install ASP.NET Core and TypeScript First, install ASP.NET Core if you need it. This quick-start guide requires Visual Studio 2015 or 2017. Next, if yourâ€¦","html":"<h2 id=\"install-aspnet-core-and-typescript\" style=\"position:relative;\"><a href=\"#install-aspnet-core-and-typescript\" aria-label=\"install aspnet core and typescript permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Install ASP.NET Core and TypeScript</h2>\n<p>First, install <a href=\"https://dotnet.microsoft.com/apps/aspnet\">ASP.NET Core</a> if you need it. This quick-start guide requires Visual Studio 2015 or 2017.</p>\n<p>Next, if your version of Visual Studio does not already have the latest TypeScript, you can <a href=\"https://www.typescriptlang.org/index.html#download-links\">install it</a>.</p>\n<h2 id=\"create-a-new-project\" style=\"position:relative;\"><a href=\"#create-a-new-project\" aria-label=\"create a new project permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Create a new project</h2>\n<ol>\n<li>Choose <strong>File</strong></li>\n<li>Choose <strong>New Project</strong> (Ctrl + Shift + N)</li>\n<li>Search for <strong>.NET Core</strong> in the project search bar</li>\n<li>Select <strong>ASP.NET Core Web Application</strong> and press the <em>Next</em> button</li>\n</ol>\n<p><img src=\"/images/tutorials/aspnet/createwebapp.png\" alt=\"Visual Studio Project Window Screenshot\"></p>\n<ol start=\"5\">\n<li>Name your project and solution. After select the <em>Create</em> button</li>\n</ol>\n<p><img src=\"/images/tutorials/aspnet/namewebapp.png\" alt=\"Visual Studio New Project Window Screenshot\"></p>\n<ol start=\"6\">\n<li>In the last window, select the <strong>Empty</strong> template and press the <em>Create</em> button</li>\n</ol>\n<p><img src=\"/images/tutorials/aspnet/emptytemplate.png\" alt=\"Visual Studio Web Application Screenshot\"></p>\n<p>Run the application and make sure that it works.</p>\n<p><img src=\"/images/tutorials/aspnet/workingsite.png\" alt=\"A screenshot of Edge showing &#x22;Hello World&#x22; as success\"></p>\n<h3 id=\"set-up-the-server\" style=\"position:relative;\"><a href=\"#set-up-the-server\" aria-label=\"set up the server permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Set up the server</h3>\n<p>Open <strong>Dependencies > Manage NuGet Packages > Browse.</strong> Search and install <code>Microsoft.AspNetCore.StaticFiles</code> and <code>Microsoft.TypeScript.MSBuild</code>:</p>\n<p><img src=\"/images/tutorials/aspnet/downloaddependency.png\" alt=\"The Visual Studio search for Nuget\"></p>\n<p>Open up your <code>Startup.cs</code> file and edit your <code>Configure</code> function to look like this:</p>\n<pre class=\"shiki\"><div class='code-container'><code>public void Configure(IApplicationBuilder app, IHostingEnvironment env)\n{\n    if (env.IsDevelopment())\n    {\n        app.UseDeveloperExceptionPage();\n    }\n\n    app.UseDefaultFiles();\n    app.UseStaticFiles();\n}</code></div></pre>\n<p>You may need to restart VS for the red squiggly lines below <code>UseDefaultFiles</code> and <code>UseStaticFiles</code> to disappear.</p>\n<h2 id=\"add-typescript\" style=\"position:relative;\"><a href=\"#add-typescript\" aria-label=\"add typescript permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Add TypeScript</h2>\n<p>Next we will add a new folder and call it <code>scripts</code>.</p>\n<p><img src=\"/images/tutorials/aspnet/newfolder.png\" alt=\"The Path of &#x22;Add&#x22; then &#x22;New Folder&#x22; in Visual Studio from a Web Project\"></p>\n<p><img src=\"/images/tutorials/aspnet/scripts.png\"></p>\n<h2 id=\"add-typescript-code\" style=\"position:relative;\"><a href=\"#add-typescript-code\" aria-label=\"add typescript code permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Add TypeScript code</h2>\n<p>Right click on <code>scripts</code> and click <strong>New Item</strong>. Then choose <strong>TypeScript File</strong> and name the file <code>app.ts</code></p>\n<p><img src=\"/images/tutorials/aspnet/tsfile.png\" alt=\"A highlight of the new folder\"></p>\n<h3 id=\"add-example-code\" style=\"position:relative;\"><a href=\"#add-example-code\" aria-label=\"add example code permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Add example code</h3>\n<p>Add the following code to the <code>app.ts</code> file.</p>\n<pre class=\"shiki\"><div class=\"language-id\">ts</div><div class='code-container'><code><span style=\"color: #0000FF\">function</span><span style=\"color: #000000\"> sayHello() {</span>\n<span style=\"color: #000000\">  </span><span style=\"color: #0000FF\">const</span><span style=\"color: #000000\"> </span><span style=\"color: #1A1A1A\">compiler </span><span style=\"color: #000000\">= (document.getElementById(</span><span style=\"color: #A31515\">\"compiler\"</span><span style=\"color: #000000\">) </span><span style=\"color: #0000FF\">as</span><span style=\"color: #000000\"> HTMLInputElement)</span>\n<span style=\"color: #000000\">    .value;</span>\n<span style=\"color: #000000\">  </span><span style=\"color: #0000FF\">const</span><span style=\"color: #000000\"> </span><span style=\"color: #1A1A1A\">framework </span><span style=\"color: #000000\">= (document.getElementById(</span><span style=\"color: #A31515\">\"framework\"</span><span style=\"color: #000000\">) </span><span style=\"color: #0000FF\">as</span><span style=\"color: #000000\"> HTMLInputElement)</span>\n<span style=\"color: #000000\">    .value;</span>\n<span style=\"color: #000000\">  </span><span style=\"color: #0000FF\">return</span><span style=\"color: #000000\"> </span><span style=\"color: #A31515\">`Hello from </span><span style=\"color: #0000FF\">${</span><span style=\"color: #1A1A1A\">compiler</span><span style=\"color: #0000FF\">}</span><span style=\"color: #A31515\"> and </span><span style=\"color: #0000FF\">${</span><span style=\"color: #1A1A1A\">framework</span><span style=\"color: #0000FF\">}</span><span style=\"color: #A31515\">!`</span><span style=\"color: #000000\">;</span>\n<span style=\"color: #000000\">}</span></code></div></pre>\n<h2 id=\"set-up-the-build\" style=\"position:relative;\"><a href=\"#set-up-the-build\" aria-label=\"set up the build permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Set up the build</h2>\n<p><em>Configure the TypeScript compiler</em></p>\n<p>First we need to tell TypeScript how to build. Right click on <code>scripts</code> and click <strong>New Item</strong>. Then choose <strong>TypeScript Configuration File</strong> and use the default name of <code>tsconfig.json</code></p>\n<p><img src=\"/images/tutorials/aspnet/tsconfig.png\" alt=\"A screenshot showing the new file diaglogue with TypeScript JSON Config selected\"></p>\n<p>Replace the contents of the <code>tsconfig.json</code> file with:</p>\n<pre class=\"shiki tsconfig lsp\"><div class='code-container'><code><span style=\"color: #000000\">{</span>\n<span style=\"color: #000000\">  </span><span style=\"color: #0451A5\">\"<a aria-hidden=true href='https://www.typescriptlang.org/tsconfig#compilerOptions'><data-lsp lsp=\"The set of compiler options for your project\">compilerOptions</data-lsp></a>\"</span><span style=\"color: #000000\">: {</span>\n<span style=\"color: #000000\">    </span><span style=\"color: #0451A5\">\"<a aria-hidden=true href='https://www.typescriptlang.org/tsconfig#noEmitOnError'><data-lsp lsp=\"Disable emitting files if any type checking errors are reported.\">noEmitOnError</data-lsp></a>\"</span><span style=\"color: #000000\">: </span><span style=\"color: #0000FF\">true</span><span style=\"color: #000000\">,</span>\n<span style=\"color: #000000\">    </span><span style=\"color: #0451A5\">\"<a aria-hidden=true href='https://www.typescriptlang.org/tsconfig#noImplicitAny'><data-lsp lsp=\"Enable error reporting for expressions and declarations with an implied `any` type..\">noImplicitAny</data-lsp></a>\"</span><span style=\"color: #000000\">: </span><span style=\"color: #0000FF\">true</span><span style=\"color: #000000\">,</span>\n<span style=\"color: #000000\">    </span><span style=\"color: #0451A5\">\"<a aria-hidden=true href='https://www.typescriptlang.org/tsconfig#sourceMap'><data-lsp lsp=\"Create source map files for emitted JavaScript files.\">sourceMap</data-lsp></a>\"</span><span style=\"color: #000000\">: </span><span style=\"color: #0000FF\">true</span><span style=\"color: #000000\">,</span>\n<span style=\"color: #000000\">    </span><span style=\"color: #0451A5\">\"<a aria-hidden=true href='https://www.typescriptlang.org/tsconfig#target'><data-lsp lsp=\"Set the JavaScript language version for emitted JavaScript and include compatible library declarations.\">target</data-lsp></a>\"</span><span style=\"color: #000000\">: </span><span style=\"color: #A31515\">\"es6\"</span>\n<span style=\"color: #000000\">  },</span>\n<span style=\"color: #000000\">  </span><span style=\"color: #0451A5\">\"<a aria-hidden=true href='https://www.typescriptlang.org/tsconfig#files'><data-lsp lsp=\"Include a list of files. This does not support glob patterns, as opposed to `include`.\">files</data-lsp></a>\"</span><span style=\"color: #000000\">: [</span><span style=\"color: #A31515\">\"./app.ts\"</span><span style=\"color: #000000\">],</span>\n<span style=\"color: #000000\">  </span><span style=\"color: #0451A5\">\"compileOnSave\"</span><span style=\"color: #000000\">: </span><span style=\"color: #0000FF\">true</span>\n<span style=\"color: #000000\">}</span></code></div></pre>\n<ul>\n<li><code>onEmitOnError</code> : Do not emit outputs if any errors were reported.</li>\n<li><code>noImplicitAny</code> : Raise error on expressions and declarations with an implied <code>any</code> type.</li>\n<li><code>sourceMap</code> : Generates corresponding <code>.map</code> file.</li>\n<li><code>target</code> : Specify ECMAScript target version.</li>\n</ul>\n<p>Note: <code>\"ESNext\"</code> targets latest supported</p>\n<p><code>\"noImplicitAny\"</code> is good idea whenever youâ€™re writing new code â€” you can make sure that you donâ€™t write any untyped code by mistake. <code>\"compileOnSave\"</code> makes it easy to update your code in a running web app.</p>\n<h4 id=\"set-up-npm\" style=\"position:relative;\"><a href=\"#set-up-npm\" aria-label=\"set up npm permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><em>Set up NPM</em></h4>\n<p>We need to setup NPM so that JavaScript packages can be downloaded. Right click on the project and select <strong>New Item</strong>. Then choose <strong>NPM Configuration File</strong> and use the default name of <code>package.json</code>.</p>\n<p><img src=\"/images/tutorials/aspnet/packagejson.png\" alt=\"Screenshot of VS showing new file dialog with &#x27;npm configuration file&#x27; selected\"></p>\n<p>Inside the <code>\"devDependencies\"</code> section of the <code>package.json</code> file, add <em>gulp</em> and <em>del</em></p>\n<pre class=\"shiki tsconfig lsp\"><div class='code-container'><code><span style=\"color: #A31515\">\"devDependencies\"</span><span style=\"color: #000000\">: {</span>\n<span style=\"color: #000000\">    </span><span style=\"color: #0451A5\">\"gulp\"</span><span style=\"color: #000000\">: </span><span style=\"color: #A31515\">\"4.0.2\"</span><span style=\"color: #000000\">,</span>\n<span style=\"color: #000000\">    </span><span style=\"color: #0451A5\">\"del\"</span><span style=\"color: #000000\">: </span><span style=\"color: #A31515\">\"5.1.0\"</span>\n<span style=\"color: #000000\">}</span></code></div></pre>\n<p>Visual Studio should start installing gulp and del as soon as you save the file. If not, right-click package.json and then Restore Packages.</p>\n<p>After you should see an <code>npm</code> folder in your solution explorer</p>\n<p><img src=\"/images/tutorials/aspnet/npm.png\" alt=\"Screenshot of VS showing npm folder\"></p>\n<h4 id=\"set-up-gulp\" style=\"position:relative;\"><a href=\"#set-up-gulp\" aria-label=\"set up gulp permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><em>Set up gulp</em></h4>\n<p>Right click on the project and click <strong>New Item</strong>. Then choose <strong>JavaScript File</strong> and use the name of <code>gulpfile.js</code></p>\n<pre class=\"shiki\"><div class=\"language-id\">js</div><div class='code-container'><code><span style=\"color: #008000\">/// &lt;binding AfterBuild='default' Clean='clean' /&gt;</span>\n<span style=\"color: #008000\">/*</span>\n<span style=\"color: #008000\">This file is the main entry point for defining Gulp tasks and using Gulp plugins.</span>\n<span style=\"color: #008000\">Click here to learn more. http://go.microsoft.com/fwlink/?LinkId=518007</span>\n<span style=\"color: #008000\">*/</span>\n\n<span style=\"color: #0000FF\">var</span><span style=\"color: #000000\"> </span><span style=\"color: #1A1A1A\">gulp</span><span style=\"color: #000000\"> = require(</span><span style=\"color: #A31515\">\"gulp\"</span><span style=\"color: #000000\">);</span>\n<span style=\"color: #0000FF\">var</span><span style=\"color: #000000\"> </span><span style=\"color: #1A1A1A\">del</span><span style=\"color: #000000\"> = require(</span><span style=\"color: #A31515\">\"del\"</span><span style=\"color: #000000\">);</span>\n\n<span style=\"color: #0000FF\">var</span><span style=\"color: #000000\"> </span><span style=\"color: #1A1A1A\">paths</span><span style=\"color: #000000\"> = {</span>\n<span style=\"color: #000000\">  scripts: [</span><span style=\"color: #A31515\">\"scripts/**/*.js\"</span><span style=\"color: #000000\">, </span><span style=\"color: #A31515\">\"scripts/**/*.ts\"</span><span style=\"color: #000000\">, </span><span style=\"color: #A31515\">\"scripts/**/*.map\"</span><span style=\"color: #000000\">],</span>\n<span style=\"color: #000000\">};</span>\n\n<span style=\"color: #1A1A1A\">gulp</span><span style=\"color: #000000\">.task(</span><span style=\"color: #A31515\">\"clean\"</span><span style=\"color: #000000\">, </span><span style=\"color: #0000FF\">function</span><span style=\"color: #000000\"> () {</span>\n<span style=\"color: #000000\">  </span><span style=\"color: #0000FF\">return</span><span style=\"color: #000000\"> del([</span><span style=\"color: #A31515\">\"wwwroot/scripts/**/*\"</span><span style=\"color: #000000\">]);</span>\n<span style=\"color: #000000\">});</span>\n\n<span style=\"color: #1A1A1A\">gulp</span><span style=\"color: #000000\">.task(</span><span style=\"color: #A31515\">\"default\"</span><span style=\"color: #000000\">, </span><span style=\"color: #0000FF\">function</span><span style=\"color: #000000\"> () {</span>\n<span style=\"color: #000000\">  </span><span style=\"color: #1A1A1A\">gulp</span><span style=\"color: #000000\">.src(</span><span style=\"color: #1A1A1A\">paths</span><span style=\"color: #000000\">.scripts).pipe(</span><span style=\"color: #1A1A1A\">gulp</span><span style=\"color: #000000\">.dest(</span><span style=\"color: #A31515\">\"wwwroot/scripts\"</span><span style=\"color: #000000\">));</span>\n<span style=\"color: #000000\">});</span></code></div></pre>\n<p>The first line tells Visual Studio to run the task â€˜defaultâ€™ after the build finishes. It will also run the â€˜cleanâ€™ task when you ask Visual Studio to clean the build.</p>\n<p>Now right-click on <code>gulpfile.js</code> and click Task Runner Explorer.</p>\n<p><img src=\"/images/tutorials/aspnet/taskrunner.png\" alt=\"Screenshot of right clicking on the &#x22;Gulpfile.js&#x22; with &#x27;Task Runner Exploere&#x27; selected\"></p>\n<p>If â€˜defaultâ€™ and â€˜cleanâ€™ tasks donâ€™t show up, refresh the explorer:</p>\n<p><img src=\"/images/tutorials/aspnet/taskrunnerrefresh.png\" alt=\"Screenshot of task explorer with &#x22;Gulpfile.js&#x22; in it\"></p>\n<h2 id=\"write-a-html-page\" style=\"position:relative;\"><a href=\"#write-a-html-page\" aria-label=\"write a html page permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Write a HTML page</h2>\n<p>Right click on the <code>wwwroot</code> folder (if you donâ€™t see the folder try building the project) and add a New Item named <code>index.html</code> inside. Use the following code for <code>index.html</code></p>\n<pre class=\"shiki\"><div class='code-container'><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n    &lt;meta charset=\"utf-8\" /&gt;\n    &lt;script src=\"scripts/app.js\"&gt;&lt;/script&gt;\n    &lt;title&gt;&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;div id=\"message\"&gt;&lt;/div&gt;\n    &lt;div&gt;\n        Compiler: &lt;input id=\"compiler\" value=\"TypeScript\" onkeyup=\"document.getElementById('message').innerText = sayHello()\" /&gt;&lt;br /&gt;\n        Framework: &lt;input id=\"framework\" value=\"ASP.NET\" onkeyup=\"document.getElementById('message').innerText = sayHello()\" /&gt;\n    &lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;</code></div></pre>\n<h2 id=\"test\" style=\"position:relative;\"><a href=\"#test\" aria-label=\"test permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Test</h2>\n<ol>\n<li>Run the project</li>\n<li>As you type on the boxes you should see the message appear/change!</li>\n</ol>\n<p><img src=\"https://media.giphy.com/media/U3mTibRAx34DG3zhAN/giphy.gif\" alt=\"A GIF of Edge showing the code you have just wrote\"></p>\n<h2 id=\"debug\" style=\"position:relative;\"><a href=\"#debug\" aria-label=\"debug permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Debug</h2>\n<ol>\n<li>In Edge, press F12 and click the Debugger tab.</li>\n<li>Look in the first localhost folder, then scripts/app.ts</li>\n<li>Put a breakpoint on the line with return.</li>\n<li>Type in the boxes and confirm that the breakpoint hits in TypeScript code and that inspection works correctly.</li>\n</ol>\n<p><img src=\"/images/tutorials/aspnet/debugger.png\" alt=\"An image showing the debugger running the code you have just wrote\"></p>\n<p>Congrats youâ€™ve built your own .NET Core project with a TypeScript frontend.</p>","headings":[{"value":"Install ASP.NET Core and TypeScript","depth":2},{"value":"Create a new project","depth":2},{"value":"Set up the server","depth":3},{"value":"Add TypeScript","depth":2},{"value":"Add TypeScript code","depth":2},{"value":"Add example code","depth":3},{"value":"Set up the build","depth":2},{"value":"Set up NPM","depth":4},{"value":"Set up gulp","depth":4},{"value":"Write a HTML page","depth":2},{"value":"Test","depth":2},{"value":"Debug","depth":2}],"frontmatter":{"permalink":"/docs/handbook/asp-net-core.html","title":"ASP.NET Core","disable_toc":null,"handbook":null,"oneline":"Using TypeScript in ASP.NET Core","beta":null}},"prev":null,"next":null},"pageContext":{"id":"3asp.net-core","slug":"/docs/handbook/asp-net-core.html","repoPath":"/packages/documentation/copy/en/tutorials/ASP.NET Core.md","lang":"en","modifiedTime":"2020-11-23T10:39:15.623Z"}},"staticQueryHashes":[]}