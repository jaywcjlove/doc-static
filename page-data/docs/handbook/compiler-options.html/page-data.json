{"componentChunkName":"component---src-templates-documentation-tsx","path":"/docs/handbook/compiler-options.html","result":{"data":{"markdownRemark":{"id":"fe6f3ec7-8c78-56c0-8aca-3ef35fe91021","excerpt":"Using the CLI Running tsc locally will compile the closest project defined by a tsconfig.json, you can compile a set of TypeScript\nfiles by passing in a glob of…","html":"<h2 id=\"using-the-cli\" style=\"position:relative;\"><a href=\"#using-the-cli\" aria-label=\"using the cli permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Using the CLI</h2>\n<p>Running <code>tsc</code> locally will compile the closest project defined by a <code>tsconfig.json</code>, you can compile a set of TypeScript\nfiles by passing in a glob of files you want.</p>\n<pre class=\"shiki light-plus\" style=\"background-color: #FFFFFF; color: #000000\"><div class=\"language-id\">sh</div><div class='code-container'><code><div class='line'><span style=\"color: #008000\"># Run a compile based on a backwards look through the fs for a tsconfig.json</span></div><div class='line'><span style=\"color: #000000\">tsc</span></div><div class='line'></div><div class='line'><span style=\"color: #008000\"># Emit JS for just the index.ts with the compiler defaults</span></div><div class='line'><span style=\"color: #000000\">tsc index.ts</span></div><div class='line'></div><div class='line'><span style=\"color: #008000\"># Emit JS for any .ts files in the folder src, with the default settings</span></div><div class='line'><span style=\"color: #000000\">tsc src/*.ts</span></div><div class='line'></div><div class='line'><span style=\"color: #008000\"># Emit files referenced in with the compiler settings from tsconfig.production.json</span></div><div class='line'><span style=\"color: #000000\">tsc --project tsconfig.production.json</span></div><div class='line'></div><div class='line'><span style=\"color: #008000\"># Emit d.ts files for a js file with showing compiler options which are booleans</span></div><div class='line'><span style=\"color: #000000\">tsc index.js --declaration --emitDeclarationOnly</span></div><div class='line'></div><div class='line'><span style=\"color: #008000\"># Emit a single .js file from two files via compiler options which take string arguments</span></div><div class='line'><span style=\"color: #000000\">tsc app.ts util.ts --target esnext --outfile index.js</span></div></code></div></pre>\n<h2 id=\"compiler-options\" style=\"position:relative;\"><a href=\"#compiler-options\" aria-label=\"compiler options permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Compiler Options</h2>\n<p><strong>If you’re looking for more information about the compiler options in a tsconfig, check out the <a href=\"/tsconfig\">TSConfig Reference</a></strong></p>\n<!-- Start of replacement  --><h3>CLI Commands</h3>\n<table class=\"cli-option\" width=\"100%\">\n  <thead>\n    <tr>\n      <th>Flag</th>\n      <th>Type</th>\n    </tr>\n  </thead>\n  <tbody>\n<tr class='odd' name='all'>\n  <td><code>--all</code></td>\n  <td><p><code>boolean</code></p>\n</td>\n</tr>\n<tr class=\"option-description odd\"><td colspan=\"3\">\n<p>Show all compiler options.</p>\n</td></tr>\n<tr class='even' name='generateTrace'>\n  <td><code>--generateTrace</code></td>\n  <td><p><code>string</code></p>\n</td>\n</tr>\n<tr class=\"option-description even\"><td colspan=\"3\">\n<p>Generates an event trace and a list of types.</p>\n</td></tr>\n<tr class='odd' name='help'>\n  <td><code>--help</code></td>\n  <td><p><code>boolean</code></p>\n</td>\n</tr>\n<tr class=\"option-description odd\"><td colspan=\"3\">\n<p>Gives local information for help on the CLI.</p>\n</td></tr>\n<tr class='even' name='init'>\n  <td><code>--init</code></td>\n  <td><p><code>boolean</code></p>\n</td>\n</tr>\n<tr class=\"option-description even\"><td colspan=\"3\">\n<p>Initializes a TypeScript project and creates a tsconfig.json file.</p>\n</td></tr>\n<tr class='odd' name='listFilesOnly'>\n  <td><code>--listFilesOnly</code></td>\n  <td><p><code>boolean</code></p>\n</td>\n</tr>\n<tr class=\"option-description odd\"><td colspan=\"3\">\n<p>Print names of files that are part of the compilation and then stop processing.</p>\n</td></tr>\n<tr class='even' name='locale'>\n  <td><code>--locale</code></td>\n  <td><p><code>string</code></p>\n</td>\n</tr>\n<tr class=\"option-description even\"><td colspan=\"3\">\n<p>Set the language of the messaging from TypeScript. This does not affect emit.</p>\n</td></tr>\n<tr class='odd' name='project'>\n  <td><code>--project</code></td>\n  <td><p><code>string</code></p>\n</td>\n</tr>\n<tr class=\"option-description odd\"><td colspan=\"3\">\n<p>Compile the project given the path to its configuration file, or to a folder with a 'tsconfig.json'.</p>\n</td></tr>\n<tr class='even' name='showConfig'>\n  <td><code>--showConfig</code></td>\n  <td><p><code>boolean</code></p>\n</td>\n</tr>\n<tr class=\"option-description even\"><td colspan=\"3\">\n<p>Print the final configuration instead of building.</p>\n</td></tr>\n<tr class='odd' name='version'>\n  <td><code>--version</code></td>\n  <td><p><code>boolean</code></p>\n</td>\n</tr>\n<tr class=\"option-description odd\"><td colspan=\"3\">\n<p>Print the compiler's version.</p>\n</td></tr>\n</tbody></table>\n<h3>Build Options</h3>\n<table class=\"cli-option\" width=\"100%\">\n  <thead>\n    <tr>\n      <th>Flag</th>\n      <th>Type</th>\n    </tr>\n  </thead>\n  <tbody>\n<tr class='odd' name='build'>\n  <td><code>--build</code></td>\n  <td><p><code>boolean</code></p>\n</td>\n</tr>\n<tr class=\"option-description odd\"><td colspan=\"3\">\n<p>Build one or more projects and their dependencies, if out of date</p>\n</td></tr>\n<tr class='even' name='clean'>\n  <td><code>--clean</code></td>\n  <td><p><code>boolean</code></p>\n</td>\n</tr>\n<tr class=\"option-description even\"><td colspan=\"3\">\n<p>Delete the outputs of all projects.</p>\n</td></tr>\n<tr class='odd' name='dry'>\n  <td><code>--dry</code></td>\n  <td><p><code>boolean</code></p>\n</td>\n</tr>\n<tr class=\"option-description odd\"><td colspan=\"3\">\n<p>Show what would be built (or deleted, if specified with '--clean')</p>\n</td></tr>\n<tr class='even' name='force'>\n  <td><code><a href='/tsconfig/#force'>--force</a></code></td>\n  <td><p><code>boolean</code></p>\n</td>\n</tr>\n<tr class=\"option-description even\"><td colspan=\"3\">\n<p>Build all projects, including those that appear to be up to date.</p>\n</td></tr>\n<tr class='odd' name='verbose'>\n  <td><code><a href='/tsconfig/#verbose'>--verbose</a></code></td>\n  <td><p><code>boolean</code></p>\n</td>\n</tr>\n<tr class=\"option-description odd\"><td colspan=\"3\">\n<p>Enable verbose logging.</p>\n</td></tr>\n</tbody></table>\n<h3>Watch Options</h3>\n<table class=\"cli-option\" width=\"100%\">\n  <thead>\n    <tr>\n      <th>Flag</th>\n      <th>Type</th>\n    </tr>\n  </thead>\n  <tbody>\n<tr class='odd' name='excludeDirectories'>\n  <td><code><a href='/tsconfig/#excludeDirectories'>--excludeDirectories</a></code></td>\n  <td><p><code>list</code></p>\n</td>\n</tr>\n<tr class=\"option-description odd\"><td colspan=\"3\">\n<p>Remove a list of directories from the watch process.</p>\n</td></tr>\n<tr class='even' name='excludeFiles'>\n  <td><code><a href='/tsconfig/#excludeFiles'>--excludeFiles</a></code></td>\n  <td><p><code>list</code></p>\n</td>\n</tr>\n<tr class=\"option-description even\"><td colspan=\"3\">\n<p>Remove a list of files from the watch mode's processing.</p>\n</td></tr>\n<tr class='odd' name='fallbackPolling'>\n  <td><code><a href='/tsconfig/#fallbackPolling'>--fallbackPolling</a></code></td>\n  <td><p><code>fixedinterval</code>, <code>priorityinterval</code>, <code>dynamicpriority</code>, or <code>fixedchunksize</code></p>\n</td>\n</tr>\n<tr class=\"option-description odd\"><td colspan=\"3\">\n<p>Specify what approach the watcher should use if the system runs out of native file watchers.</p>\n</td></tr>\n<tr class='even' name='synchronousWatchDirectory'>\n  <td><code><a href='/tsconfig/#synchronousWatchDirectory'>--synchronousWatchDirectory</a></code></td>\n  <td><p><code>boolean</code></p>\n</td>\n</tr>\n<tr class=\"option-description even\"><td colspan=\"3\">\n<p>Synchronously call callbacks and update the state of directory watchers on platforms that don`t support recursive watching natively.</p>\n</td></tr>\n<tr class='odd' name='watch'>\n  <td><code>--watch</code></td>\n  <td><p><code>boolean</code></p>\n</td>\n</tr>\n<tr class=\"option-description odd\"><td colspan=\"3\">\n<p>Watch input files.</p>\n</td></tr>\n<tr class='even' name='watchDirectory'>\n  <td><code><a href='/tsconfig/#watchDirectory'>--watchDirectory</a></code></td>\n  <td><p><code>usefsevents</code>, <code>fixedpollinginterval</code>, <code>dynamicprioritypolling</code>, or <code>fixedchunksizepolling</code></p>\n</td>\n</tr>\n<tr class=\"option-description even\"><td colspan=\"3\">\n<p>Specify how directories are watched on systems that lack recursive file-watching functionality.</p>\n</td></tr>\n<tr class='odd' name='watchFile'>\n  <td><code><a href='/tsconfig/#watchFile'>--watchFile</a></code></td>\n  <td><p><code>fixedpollinginterval</code>, <code>prioritypollinginterval</code>, <code>dynamicprioritypolling</code>, <code>fixedchunksizepolling</code>, <code>usefsevents</code>, or <code>usefseventsonparentdirectory</code></p>\n</td>\n</tr>\n<tr class=\"option-description odd\"><td colspan=\"3\">\n<p>Specify how the TypeScript watch mode works.</p>\n</td></tr>\n</tbody></table>\n<h3>Compiler Flags</h3>\n<table class=\"cli-option\" width=\"100%\">\n  <thead>\n    <tr>\n      <th>Flag</th>\n      <th>Type</th>\n      <th>Default</th>\n    </tr>\n  </thead>\n  <tbody>\n<tr class='odd' name='allowJs'>\n  <td><code><a href='/tsconfig/#allowJs'>--allowJs</a></code></td>\n  <td><p><code>boolean</code></p>\n</td>\n  <td><p><code>false</code></p>\n</td>\n</tr>\n<tr class=\"option-description odd\"><td colspan=\"3\">\n<p>Allow JavaScript files to be a part of your program. Use the <code>checkJS</code> option to get errors from these files.</p>\n</td></tr>\n<tr class='even' name='allowSyntheticDefaultImports'>\n  <td><code><a href='/tsconfig/#allowSyntheticDefaultImports'>--allowSyntheticDefaultImports</a></code></td>\n  <td><p><code>boolean</code></p>\n</td>\n  <td><ul><li><p><code>true</code> if <a href=\"#module\"><code>module</code></a> is <code>system</code>, or <a href=\"#esModuleInterop\"><code>esModuleInterop</code></a> and <a href=\"#module\"><code>module</code></a> is not <code>es6</code>/<code>es2015</code> or <code>esnext</code>,</p>\n</li><li><p><code>false</code> otherwise.</p>\n</li></ul></td>\n</tr>\n<tr class=\"option-description even\"><td colspan=\"3\">\n<p>Allow 'import x from y' when a module doesn't have a default export.</p>\n</td></tr>\n<tr class='odd' name='allowUmdGlobalAccess'>\n  <td><code><a href='/tsconfig/#allowUmdGlobalAccess'>--allowUmdGlobalAccess</a></code></td>\n  <td><p><code>boolean</code></p>\n</td>\n  <td><p><code>false</code></p>\n</td>\n</tr>\n<tr class=\"option-description odd\"><td colspan=\"3\">\n<p>Allow accessing UMD globals from modules.</p>\n</td></tr>\n<tr class='even' name='allowUnreachableCode'>\n  <td><code><a href='/tsconfig/#allowUnreachableCode'>--allowUnreachableCode</a></code></td>\n  <td><p><code>boolean</code></p>\n</td>\n  <td>\n</td>\n</tr>\n<tr class=\"option-description even\"><td colspan=\"3\">\n<p>Disable error reporting for unreachable code.</p>\n</td></tr>\n<tr class='odd' name='allowUnusedLabels'>\n  <td><code><a href='/tsconfig/#allowUnusedLabels'>--allowUnusedLabels</a></code></td>\n  <td><p><code>boolean</code></p>\n</td>\n  <td>\n</td>\n</tr>\n<tr class=\"option-description odd\"><td colspan=\"3\">\n<p>Disable error reporting for unused labels.</p>\n</td></tr>\n<tr class='even' name='alwaysStrict'>\n  <td><code><a href='/tsconfig/#alwaysStrict'>--alwaysStrict</a></code></td>\n  <td><p><code>boolean</code></p>\n</td>\n  <td><ul><li><p><code>true</code> if <a href=\"#strict\"><code>strict</code></a>,</p>\n</li><li><p><code>false</code> otherwise.</p>\n</li></ul></td>\n</tr>\n<tr class=\"option-description even\"><td colspan=\"3\">\n<p>Ensure 'use strict' is always emitted.</p>\n</td></tr>\n<tr class='odd' name='assumeChangesOnlyAffectDirectDependencies'>\n  <td><code><a href='/tsconfig/#assumeChangesOnlyAffectDirectDependencies'>--assumeChangesOnlyAffectDirectDependencies</a></code></td>\n  <td><p><code>boolean</code></p>\n</td>\n  <td><p><code>false</code></p>\n</td>\n</tr>\n<tr class=\"option-description odd\"><td colspan=\"3\">\n<p>Have recompiles in projects that use <a href=\"#incremental\"><code>incremental</code></a> and <code>watch</code> mode assume that changes within a file will only affect files directly depending on it.</p>\n</td></tr>\n<tr class='even' name='baseUrl'>\n  <td><code><a href='/tsconfig/#baseUrl'>--baseUrl</a></code></td>\n  <td><p><code>string</code></p>\n</td>\n  <td>\n</td>\n</tr>\n<tr class=\"option-description even\"><td colspan=\"3\">\n<p>Specify the base directory to resolve non-relative module names.</p>\n</td></tr>\n<tr class='odd' name='charset'>\n  <td><code><a href='/tsconfig/#charset'>--charset</a></code></td>\n  <td><p><code>string</code></p>\n</td>\n  <td><p><code>utf8</code></p>\n</td>\n</tr>\n<tr class=\"option-description odd\"><td colspan=\"3\">\n<p>No longer supported. In early versions, manually set the text encoding for reading files.</p>\n</td></tr>\n<tr class='even' name='checkJs'>\n  <td><code><a href='/tsconfig/#checkJs'>--checkJs</a></code></td>\n  <td><p><code>boolean</code></p>\n</td>\n  <td><p><code>false</code></p>\n</td>\n</tr>\n<tr class=\"option-description even\"><td colspan=\"3\">\n<p>Enable error reporting in type-checked JavaScript files.</p>\n</td></tr>\n<tr class='odd' name='composite'>\n  <td><code><a href='/tsconfig/#composite'>--composite</a></code></td>\n  <td><p><code>boolean</code></p>\n</td>\n  <td><p><code>false</code></p>\n</td>\n</tr>\n<tr class=\"option-description odd\"><td colspan=\"3\">\n<p>Enable constraints that allow a TypeScript project to be used with project references.</p>\n</td></tr>\n<tr class='even' name='declaration'>\n  <td><code><a href='/tsconfig/#declaration'>--declaration</a></code></td>\n  <td><p><code>boolean</code></p>\n</td>\n  <td><ul><li><p><code>true</code> if <a href=\"#composite\"><code>composite</code></a>,</p>\n</li><li><p><code>false</code> otherwise.</p>\n</li></ul></td>\n</tr>\n<tr class=\"option-description even\"><td colspan=\"3\">\n<p>Generate .d.ts files from TypeScript and JavaScript files in your project.</p>\n</td></tr>\n<tr class='odd' name='declarationDir'>\n  <td><code><a href='/tsconfig/#declarationDir'>--declarationDir</a></code></td>\n  <td><p><code>string</code></p>\n</td>\n  <td>\n</td>\n</tr>\n<tr class=\"option-description odd\"><td colspan=\"3\">\n<p>Specify the output directory for generated declaration files.</p>\n</td></tr>\n<tr class='even' name='declarationMap'>\n  <td><code><a href='/tsconfig/#declarationMap'>--declarationMap</a></code></td>\n  <td><p><code>boolean</code></p>\n</td>\n  <td><p><code>false</code></p>\n</td>\n</tr>\n<tr class=\"option-description even\"><td colspan=\"3\">\n<p>Create sourcemaps for d.ts files.</p>\n</td></tr>\n<tr class='odd' name='diagnostics'>\n  <td><code><a href='/tsconfig/#diagnostics'>--diagnostics</a></code></td>\n  <td><p><code>boolean</code></p>\n</td>\n  <td><p><code>false</code></p>\n</td>\n</tr>\n<tr class=\"option-description odd\"><td colspan=\"3\">\n<p>Output compiler performance information after building.</p>\n</td></tr>\n<tr class='even' name='disableReferencedProjectLoad'>\n  <td><code><a href='/tsconfig/#disableReferencedProjectLoad'>--disableReferencedProjectLoad</a></code></td>\n  <td><p><code>boolean</code></p>\n</td>\n  <td><p><code>false</code></p>\n</td>\n</tr>\n<tr class=\"option-description even\"><td colspan=\"3\">\n<p>Reduce the number of projects loaded automatically by TypeScript.</p>\n</td></tr>\n<tr class='odd' name='disableSizeLimit'>\n  <td><code><a href='/tsconfig/#disableSizeLimit'>--disableSizeLimit</a></code></td>\n  <td><p><code>boolean</code></p>\n</td>\n  <td><p><code>false</code></p>\n</td>\n</tr>\n<tr class=\"option-description odd\"><td colspan=\"3\">\n<p>Remove the 20mb cap on total source code size for JavaScript files in the TypeScript language server.</p>\n</td></tr>\n<tr class='even' name='disableSolutionSearching'>\n  <td><code><a href='/tsconfig/#disableSolutionSearching'>--disableSolutionSearching</a></code></td>\n  <td><p><code>boolean</code></p>\n</td>\n  <td><p><code>false</code></p>\n</td>\n</tr>\n<tr class=\"option-description even\"><td colspan=\"3\">\n<p>Opt a project out of multi-project reference checking when editing.</p>\n</td></tr>\n<tr class='odd' name='disableSourceOfProjectReferenceRedirect'>\n  <td><code><a href='/tsconfig/#disableSourceOfProjectReferenceRedirect'>--disableSourceOfProjectReferenceRedirect</a></code></td>\n  <td><p><code>boolean</code></p>\n</td>\n  <td><p><code>false</code></p>\n</td>\n</tr>\n<tr class=\"option-description odd\"><td colspan=\"3\">\n<p>Disable preferring source files instead of declaration files when referencing composite projects.</p>\n</td></tr>\n<tr class='even' name='downlevelIteration'>\n  <td><code><a href='/tsconfig/#downlevelIteration'>--downlevelIteration</a></code></td>\n  <td><p><code>boolean</code></p>\n</td>\n  <td><p><code>false</code></p>\n</td>\n</tr>\n<tr class=\"option-description even\"><td colspan=\"3\">\n<p>Emit more compliant, but verbose and less performant JavaScript for iteration.</p>\n</td></tr>\n<tr class='odd' name='emitBOM'>\n  <td><code><a href='/tsconfig/#emitBOM'>--emitBOM</a></code></td>\n  <td><p><code>boolean</code></p>\n</td>\n  <td><p><code>false</code></p>\n</td>\n</tr>\n<tr class=\"option-description odd\"><td colspan=\"3\">\n<p>Emit a UTF-8 Byte Order Mark (BOM) in the beginning of output files.</p>\n</td></tr>\n<tr class='even' name='emitDeclarationOnly'>\n  <td><code><a href='/tsconfig/#emitDeclarationOnly'>--emitDeclarationOnly</a></code></td>\n  <td><p><code>boolean</code></p>\n</td>\n  <td><p><code>false</code></p>\n</td>\n</tr>\n<tr class=\"option-description even\"><td colspan=\"3\">\n<p>Only output d.ts files and not JavaScript files.</p>\n</td></tr>\n<tr class='odd' name='emitDecoratorMetadata'>\n  <td><code><a href='/tsconfig/#emitDecoratorMetadata'>--emitDecoratorMetadata</a></code></td>\n  <td><p><code>boolean</code></p>\n</td>\n  <td><p><code>false</code></p>\n</td>\n</tr>\n<tr class=\"option-description odd\"><td colspan=\"3\">\n<p>Emit design-type metadata for decorated declarations in source files.</p>\n</td></tr>\n<tr class='even' name='esModuleInterop'>\n  <td><code><a href='/tsconfig/#esModuleInterop'>--esModuleInterop</a></code></td>\n  <td><p><code>boolean</code></p>\n</td>\n  <td><p><code>false</code></p>\n</td>\n</tr>\n<tr class=\"option-description even\"><td colspan=\"3\">\n<p>Emit additional JavaScript to ease support for importing CommonJS modules. This enables <a href=\"#allowSyntheticDefaultImports\"><code>allowSyntheticDefaultImports</code></a> for type compatibility.</p>\n</td></tr>\n<tr class='odd' name='exactOptionalPropertyTypes'>\n  <td><code><a href='/tsconfig/#exactOptionalPropertyTypes'>--exactOptionalPropertyTypes</a></code></td>\n  <td><p><code>boolean</code></p>\n</td>\n  <td><p><code>false</code></p>\n</td>\n</tr>\n<tr class=\"option-description odd\"><td colspan=\"3\">\n<p>Interpret optional property types as written, rather than adding <code>undefined</code>.</p>\n</td></tr>\n<tr class='even' name='experimentalDecorators'>\n  <td><code><a href='/tsconfig/#experimentalDecorators'>--experimentalDecorators</a></code></td>\n  <td><p><code>boolean</code></p>\n</td>\n  <td><p><code>false</code></p>\n</td>\n</tr>\n<tr class=\"option-description even\"><td colspan=\"3\">\n<p>Enable experimental support for TC39 stage 2 draft decorators.</p>\n</td></tr>\n<tr class='odd' name='explainFiles'>\n  <td><code><a href='/tsconfig/#explainFiles'>--explainFiles</a></code></td>\n  <td><p><code>boolean</code></p>\n</td>\n  <td><p><code>false</code></p>\n</td>\n</tr>\n<tr class=\"option-description odd\"><td colspan=\"3\">\n<p>Print files read during the compilation including why it was included.</p>\n</td></tr>\n<tr class='even' name='extendedDiagnostics'>\n  <td><code><a href='/tsconfig/#extendedDiagnostics'>--extendedDiagnostics</a></code></td>\n  <td><p><code>boolean</code></p>\n</td>\n  <td><p><code>false</code></p>\n</td>\n</tr>\n<tr class=\"option-description even\"><td colspan=\"3\">\n<p>Output more detailed compiler performance information after building.</p>\n</td></tr>\n<tr class='odd' name='forceConsistentCasingInFileNames'>\n  <td><code><a href='/tsconfig/#forceConsistentCasingInFileNames'>--forceConsistentCasingInFileNames</a></code></td>\n  <td><p><code>boolean</code></p>\n</td>\n  <td><p><code>false</code></p>\n</td>\n</tr>\n<tr class=\"option-description odd\"><td colspan=\"3\">\n<p>Ensure that casing is correct in imports.</p>\n</td></tr>\n<tr class='even' name='generateCpuProfile'>\n  <td><code><a href='/tsconfig/#generateCpuProfile'>--generateCpuProfile</a></code></td>\n  <td><p><code>string</code></p>\n</td>\n  <td><p><code>profile.cpuprofile</code></p>\n</td>\n</tr>\n<tr class=\"option-description even\"><td colspan=\"3\">\n<p>Emit a v8 CPU profile of the compiler run for debugging.</p>\n</td></tr>\n<tr class='odd' name='importHelpers'>\n  <td><code><a href='/tsconfig/#importHelpers'>--importHelpers</a></code></td>\n  <td><p><code>boolean</code></p>\n</td>\n  <td><p><code>false</code></p>\n</td>\n</tr>\n<tr class=\"option-description odd\"><td colspan=\"3\">\n<p>Allow importing helper functions from tslib once per project, instead of including them per-file.</p>\n</td></tr>\n<tr class='even' name='importsNotUsedAsValues'>\n  <td><code><a href='/tsconfig/#importsNotUsedAsValues'>--importsNotUsedAsValues</a></code></td>\n  <td><p><code>remove</code>, <code>preserve</code>, or <code>error</code></p>\n</td>\n  <td><p><code>remove</code></p>\n</td>\n</tr>\n<tr class=\"option-description even\"><td colspan=\"3\">\n<p>Specify emit/checking behavior for imports that are only used for types.</p>\n</td></tr>\n<tr class='odd' name='incremental'>\n  <td><code><a href='/tsconfig/#incremental'>--incremental</a></code></td>\n  <td><p><code>boolean</code></p>\n</td>\n  <td><ul><li><p><code>true</code> if <a href=\"#composite\"><code>composite</code></a>,</p>\n</li><li><p><code>false</code> otherwise.</p>\n</li></ul></td>\n</tr>\n<tr class=\"option-description odd\"><td colspan=\"3\">\n<p>Save .tsbuildinfo files to allow for incremental compilation of projects.</p>\n</td></tr>\n<tr class='even' name='inlineSourceMap'>\n  <td><code><a href='/tsconfig/#inlineSourceMap'>--inlineSourceMap</a></code></td>\n  <td><p><code>boolean</code></p>\n</td>\n  <td><p><code>false</code></p>\n</td>\n</tr>\n<tr class=\"option-description even\"><td colspan=\"3\">\n<p>Include sourcemap files inside the emitted JavaScript.</p>\n</td></tr>\n<tr class='odd' name='inlineSources'>\n  <td><code><a href='/tsconfig/#inlineSources'>--inlineSources</a></code></td>\n  <td><p><code>boolean</code></p>\n</td>\n  <td><p><code>false</code></p>\n</td>\n</tr>\n<tr class=\"option-description odd\"><td colspan=\"3\">\n<p>Include source code in the sourcemaps inside the emitted JavaScript.</p>\n</td></tr>\n<tr class='even' name='isolatedModules'>\n  <td><code><a href='/tsconfig/#isolatedModules'>--isolatedModules</a></code></td>\n  <td><p><code>boolean</code></p>\n</td>\n  <td><p><code>false</code></p>\n</td>\n</tr>\n<tr class=\"option-description even\"><td colspan=\"3\">\n<p>Ensure that each file can be safely transpiled without relying on other imports.</p>\n</td></tr>\n<tr class='odd' name='jsx'>\n  <td><code><a href='/tsconfig/#jsx'>--jsx</a></code></td>\n  <td><p><code>preserve</code>, <code>react</code>, <code>react-native</code>, <code>react-jsx</code>, or <code>react-jsxdev</code></p>\n</td>\n  <td>\n</td>\n</tr>\n<tr class=\"option-description odd\"><td colspan=\"3\">\n<p>Specify what JSX code is generated.</p>\n</td></tr>\n<tr class='even' name='jsxFactory'>\n  <td><code><a href='/tsconfig/#jsxFactory'>--jsxFactory</a></code></td>\n  <td><p><code>string</code></p>\n</td>\n  <td><p><code>React.createElement</code></p>\n</td>\n</tr>\n<tr class=\"option-description even\"><td colspan=\"3\">\n<p>Specify the JSX factory function used when targeting React JSX emit, e.g. 'React.createElement' or 'h'.</p>\n</td></tr>\n<tr class='odd' name='jsxFragmentFactory'>\n  <td><code><a href='/tsconfig/#jsxFragmentFactory'>--jsxFragmentFactory</a></code></td>\n  <td><p><code>string</code></p>\n</td>\n  <td><p><code>React.Fragment</code></p>\n</td>\n</tr>\n<tr class=\"option-description odd\"><td colspan=\"3\">\n<p>Specify the JSX Fragment reference used for fragments when targeting React JSX emit e.g. 'React.Fragment' or 'Fragment'.</p>\n</td></tr>\n<tr class='even' name='jsxImportSource'>\n  <td><code><a href='/tsconfig/#jsxImportSource'>--jsxImportSource</a></code></td>\n  <td><p><code>string</code></p>\n</td>\n  <td><p><code>react</code></p>\n</td>\n</tr>\n<tr class=\"option-description even\"><td colspan=\"3\">\n<p>Specify module specifier used to import the JSX factory functions when using <code>jsx: react-jsx*</code>.</p>\n</td></tr>\n<tr class='odd' name='keyofStringsOnly'>\n  <td><code><a href='/tsconfig/#keyofStringsOnly'>--keyofStringsOnly</a></code></td>\n  <td><p><code>boolean</code></p>\n</td>\n  <td><p><code>false</code></p>\n</td>\n</tr>\n<tr class=\"option-description odd\"><td colspan=\"3\">\n<p>Make keyof only return strings instead of string, numbers or symbols. Legacy option.</p>\n</td></tr>\n<tr class='even' name='lib'>\n  <td><code><a href='/tsconfig/#lib'>--lib</a></code></td>\n  <td><p><code>list</code></p>\n</td>\n  <td>\n</td>\n</tr>\n<tr class=\"option-description even\"><td colspan=\"3\">\n<p>Specify a set of bundled library declaration files that describe the target runtime environment.</p>\n</td></tr>\n<tr class='odd' name='listEmittedFiles'>\n  <td><code><a href='/tsconfig/#listEmittedFiles'>--listEmittedFiles</a></code></td>\n  <td><p><code>boolean</code></p>\n</td>\n  <td><p><code>false</code></p>\n</td>\n</tr>\n<tr class=\"option-description odd\"><td colspan=\"3\">\n<p>Print the names of emitted files after a compilation.</p>\n</td></tr>\n<tr class='even' name='listFiles'>\n  <td><code><a href='/tsconfig/#listFiles'>--listFiles</a></code></td>\n  <td><p><code>boolean</code></p>\n</td>\n  <td><p><code>false</code></p>\n</td>\n</tr>\n<tr class=\"option-description even\"><td colspan=\"3\">\n<p>Print all of the files read during the compilation.</p>\n</td></tr>\n<tr class='odd' name='mapRoot'>\n  <td><code><a href='/tsconfig/#mapRoot'>--mapRoot</a></code></td>\n  <td><p><code>string</code></p>\n</td>\n  <td>\n</td>\n</tr>\n<tr class=\"option-description odd\"><td colspan=\"3\">\n<p>Specify the location where debugger should locate map files instead of generated locations.</p>\n</td></tr>\n<tr class='even' name='maxNodeModuleJsDepth'>\n  <td><code><a href='/tsconfig/#maxNodeModuleJsDepth'>--maxNodeModuleJsDepth</a></code></td>\n  <td><p><code>number</code></p>\n</td>\n  <td><p><code>0</code></p>\n</td>\n</tr>\n<tr class=\"option-description even\"><td colspan=\"3\">\n<p>Specify the maximum folder depth used for checking JavaScript files from <code>node_modules</code>. Only applicable with <a href=\"#allowJs\"><code>allowJs</code></a>.</p>\n</td></tr>\n<tr class='odd' name='module'>\n  <td><code><a href='/tsconfig/#module'>--module</a></code></td>\n  <td><p><code>none</code>, <code>commonjs</code>, <code>amd</code>, <code>umd</code>, <code>system</code>, <code>es6</code>/<code>es2015</code>, <code>es2020</code>, <code>es2022</code>, <code>esnext</code>, <code>node16</code>, or <code>nodenext</code></p>\n</td>\n  <td><ul><li><p><code>CommonJS</code> if <a href=\"#target\"><code>target</code></a> is <code>ES3</code> or <code>ES5</code>,</p>\n</li><li><p><code>ES6</code>/<code>ES2015</code> otherwise.</p>\n</li></ul></td>\n</tr>\n<tr class=\"option-description odd\"><td colspan=\"3\">\n<p>Specify what module code is generated.</p>\n</td></tr>\n<tr class='even' name='moduleDetection'>\n  <td><code><a href='/tsconfig/#moduleDetection'>--moduleDetection</a></code></td>\n  <td><p><code>legacy</code>, <code>auto</code>, or <code>force</code></p>\n</td>\n  <td><p>\"auto\": Treat files with imports, exports, import.meta, jsx (with jsx: react-jsx), or esm format (with module: node16+) as modules.</p>\n</td>\n</tr>\n<tr class=\"option-description even\"><td colspan=\"3\">\n<p>Control what method is used to detect the whether a JS file is a module.</p>\n</td></tr>\n<tr class='odd' name='moduleResolution'>\n  <td><code><a href='/tsconfig/#moduleResolution'>--moduleResolution</a></code></td>\n  <td><p><code>classic</code>, <code>node</code>, <code>node16</code>, or <code>nodenext</code></p>\n</td>\n  <td><ul><li><p><code>Classic</code> if <a href=\"#module\"><code>module</code></a> is <code>AMD</code>, <code>UMD</code>, <code>System</code> or <code>ES6</code>/<code>ES2015</code>,</p>\n</li><li><p>Matches if <a href=\"#module\"><code>module</code></a> is <code>node12</code> or <code>nodenext</code>,</p>\n</li><li><p><code>Node</code> otherwise.</p>\n</li></ul></td>\n</tr>\n<tr class=\"option-description odd\"><td colspan=\"3\">\n<p>Specify how TypeScript looks up a file from a given module specifier.</p>\n</td></tr>\n<tr class='even' name='moduleSuffixes'>\n  <td><code><a href='/tsconfig/#moduleSuffixes'>--moduleSuffixes</a></code></td>\n  <td><p><code>list</code></p>\n</td>\n  <td>\n</td>\n</tr>\n<tr class=\"option-description even\"><td colspan=\"3\">\n<p>List of file name suffixes to search when resolving a module.</p>\n</td></tr>\n<tr class='odd' name='newLine'>\n  <td><code><a href='/tsconfig/#newLine'>--newLine</a></code></td>\n  <td><p><code>crlf</code> or <code>lf</code></p>\n</td>\n  <td><p>Platform specific.</p>\n</td>\n</tr>\n<tr class=\"option-description odd\"><td colspan=\"3\">\n<p>Set the newline character for emitting files.</p>\n</td></tr>\n<tr class='even' name='noEmit'>\n  <td><code><a href='/tsconfig/#noEmit'>--noEmit</a></code></td>\n  <td><p><code>boolean</code></p>\n</td>\n  <td><p><code>false</code></p>\n</td>\n</tr>\n<tr class=\"option-description even\"><td colspan=\"3\">\n<p>Disable emitting files from a compilation.</p>\n</td></tr>\n<tr class='odd' name='noEmitHelpers'>\n  <td><code><a href='/tsconfig/#noEmitHelpers'>--noEmitHelpers</a></code></td>\n  <td><p><code>boolean</code></p>\n</td>\n  <td><p><code>false</code></p>\n</td>\n</tr>\n<tr class=\"option-description odd\"><td colspan=\"3\">\n<p>Disable generating custom helper functions like <code>__extends</code> in compiled output.</p>\n</td></tr>\n<tr class='even' name='noEmitOnError'>\n  <td><code><a href='/tsconfig/#noEmitOnError'>--noEmitOnError</a></code></td>\n  <td><p><code>boolean</code></p>\n</td>\n  <td><p><code>false</code></p>\n</td>\n</tr>\n<tr class=\"option-description even\"><td colspan=\"3\">\n<p>Disable emitting files if any type checking errors are reported.</p>\n</td></tr>\n<tr class='odd' name='noErrorTruncation'>\n  <td><code><a href='/tsconfig/#noErrorTruncation'>--noErrorTruncation</a></code></td>\n  <td><p><code>boolean</code></p>\n</td>\n  <td><p><code>false</code></p>\n</td>\n</tr>\n<tr class=\"option-description odd\"><td colspan=\"3\">\n<p>Disable truncating types in error messages.</p>\n</td></tr>\n<tr class='even' name='noFallthroughCasesInSwitch'>\n  <td><code><a href='/tsconfig/#noFallthroughCasesInSwitch'>--noFallthroughCasesInSwitch</a></code></td>\n  <td><p><code>boolean</code></p>\n</td>\n  <td><p><code>false</code></p>\n</td>\n</tr>\n<tr class=\"option-description even\"><td colspan=\"3\">\n<p>Enable error reporting for fallthrough cases in switch statements.</p>\n</td></tr>\n<tr class='odd' name='noImplicitAny'>\n  <td><code><a href='/tsconfig/#noImplicitAny'>--noImplicitAny</a></code></td>\n  <td><p><code>boolean</code></p>\n</td>\n  <td><ul><li><p><code>true</code> if <a href=\"#strict\"><code>strict</code></a>,</p>\n</li><li><p><code>false</code> otherwise.</p>\n</li></ul></td>\n</tr>\n<tr class=\"option-description odd\"><td colspan=\"3\">\n<p>Enable error reporting for expressions and declarations with an implied <code>any</code> type.</p>\n</td></tr>\n<tr class='even' name='noImplicitOverride'>\n  <td><code><a href='/tsconfig/#noImplicitOverride'>--noImplicitOverride</a></code></td>\n  <td><p><code>boolean</code></p>\n</td>\n  <td><p><code>false</code></p>\n</td>\n</tr>\n<tr class=\"option-description even\"><td colspan=\"3\">\n<p>Ensure overriding members in derived classes are marked with an override modifier.</p>\n</td></tr>\n<tr class='odd' name='noImplicitReturns'>\n  <td><code><a href='/tsconfig/#noImplicitReturns'>--noImplicitReturns</a></code></td>\n  <td><p><code>boolean</code></p>\n</td>\n  <td><p><code>false</code></p>\n</td>\n</tr>\n<tr class=\"option-description odd\"><td colspan=\"3\">\n<p>Enable error reporting for codepaths that do not explicitly return in a function.</p>\n</td></tr>\n<tr class='even' name='noImplicitThis'>\n  <td><code><a href='/tsconfig/#noImplicitThis'>--noImplicitThis</a></code></td>\n  <td><p><code>boolean</code></p>\n</td>\n  <td><ul><li><p><code>true</code> if <a href=\"#strict\"><code>strict</code></a>,</p>\n</li><li><p><code>false</code> otherwise.</p>\n</li></ul></td>\n</tr>\n<tr class=\"option-description even\"><td colspan=\"3\">\n<p>Enable error reporting when <code>this</code> is given the type <code>any</code>.</p>\n</td></tr>\n<tr class='odd' name='noImplicitUseStrict'>\n  <td><code><a href='/tsconfig/#noImplicitUseStrict'>--noImplicitUseStrict</a></code></td>\n  <td><p><code>boolean</code></p>\n</td>\n  <td><p><code>false</code></p>\n</td>\n</tr>\n<tr class=\"option-description odd\"><td colspan=\"3\">\n<p>Disable adding 'use strict' directives in emitted JavaScript files.</p>\n</td></tr>\n<tr class='even' name='noLib'>\n  <td><code><a href='/tsconfig/#noLib'>--noLib</a></code></td>\n  <td><p><code>boolean</code></p>\n</td>\n  <td><p><code>false</code></p>\n</td>\n</tr>\n<tr class=\"option-description even\"><td colspan=\"3\">\n<p>Disable including any library files, including the default lib.d.ts.</p>\n</td></tr>\n<tr class='odd' name='noPropertyAccessFromIndexSignature'>\n  <td><code><a href='/tsconfig/#noPropertyAccessFromIndexSignature'>--noPropertyAccessFromIndexSignature</a></code></td>\n  <td><p><code>boolean</code></p>\n</td>\n  <td><p><code>false</code></p>\n</td>\n</tr>\n<tr class=\"option-description odd\"><td colspan=\"3\">\n<p>Enforces using indexed accessors for keys declared using an indexed type.</p>\n</td></tr>\n<tr class='even' name='noResolve'>\n  <td><code><a href='/tsconfig/#noResolve'>--noResolve</a></code></td>\n  <td><p><code>boolean</code></p>\n</td>\n  <td><p><code>false</code></p>\n</td>\n</tr>\n<tr class=\"option-description even\"><td colspan=\"3\">\n<p>Disallow <code>import</code>s, <code>require</code>s or <code>&#x3C;reference></code>s from expanding the number of files TypeScript should add to a project.</p>\n</td></tr>\n<tr class='odd' name='noStrictGenericChecks'>\n  <td><code><a href='/tsconfig/#noStrictGenericChecks'>--noStrictGenericChecks</a></code></td>\n  <td><p><code>boolean</code></p>\n</td>\n  <td><p><code>false</code></p>\n</td>\n</tr>\n<tr class=\"option-description odd\"><td colspan=\"3\">\n<p>Disable strict checking of generic signatures in function types.</p>\n</td></tr>\n<tr class='even' name='noUncheckedIndexedAccess'>\n  <td><code><a href='/tsconfig/#noUncheckedIndexedAccess'>--noUncheckedIndexedAccess</a></code></td>\n  <td><p><code>boolean</code></p>\n</td>\n  <td><p><code>false</code></p>\n</td>\n</tr>\n<tr class=\"option-description even\"><td colspan=\"3\">\n<p>Add <code>undefined</code> to a type when accessed using an index.</p>\n</td></tr>\n<tr class='odd' name='noUnusedLocals'>\n  <td><code><a href='/tsconfig/#noUnusedLocals'>--noUnusedLocals</a></code></td>\n  <td><p><code>boolean</code></p>\n</td>\n  <td><p><code>false</code></p>\n</td>\n</tr>\n<tr class=\"option-description odd\"><td colspan=\"3\">\n<p>Enable error reporting when local variables aren't read.</p>\n</td></tr>\n<tr class='even' name='noUnusedParameters'>\n  <td><code><a href='/tsconfig/#noUnusedParameters'>--noUnusedParameters</a></code></td>\n  <td><p><code>boolean</code></p>\n</td>\n  <td><p><code>false</code></p>\n</td>\n</tr>\n<tr class=\"option-description even\"><td colspan=\"3\">\n<p>Raise an error when a function parameter isn't read.</p>\n</td></tr>\n<tr class='odd' name='out'>\n  <td><code><a href='/tsconfig/#out'>--out</a></code></td>\n  <td><p><code>string</code></p>\n</td>\n  <td>\n</td>\n</tr>\n<tr class=\"option-description odd\"><td colspan=\"3\">\n<p>Deprecated setting. Use <a href=\"#outFile\"><code>outFile</code></a> instead.</p>\n</td></tr>\n<tr class='even' name='outDir'>\n  <td><code><a href='/tsconfig/#outDir'>--outDir</a></code></td>\n  <td><p><code>string</code></p>\n</td>\n  <td>\n</td>\n</tr>\n<tr class=\"option-description even\"><td colspan=\"3\">\n<p>Specify an output folder for all emitted files.</p>\n</td></tr>\n<tr class='odd' name='outFile'>\n  <td><code><a href='/tsconfig/#outFile'>--outFile</a></code></td>\n  <td><p><code>string</code></p>\n</td>\n  <td>\n</td>\n</tr>\n<tr class=\"option-description odd\"><td colspan=\"3\">\n<p>Specify a file that bundles all outputs into one JavaScript file. If <a href=\"#declaration\"><code>declaration</code></a> is true, also designates a file that bundles all .d.ts output.</p>\n</td></tr>\n<tr class='even' name='paths'>\n  <td><code><a href='/tsconfig/#paths'>--paths</a></code></td>\n  <td><p><code>object</code></p>\n</td>\n  <td>\n</td>\n</tr>\n<tr class=\"option-description even\"><td colspan=\"3\">\n<p>Specify a set of entries that re-map imports to additional lookup locations.</p>\n</td></tr>\n<tr class='odd' name='plugins'>\n  <td><code><a href='/tsconfig/#plugins'>--plugins</a></code></td>\n  <td><p><code>list</code></p>\n</td>\n  <td>\n</td>\n</tr>\n<tr class=\"option-description odd\"><td colspan=\"3\">\n<p>Specify a list of language service plugins to include.</p>\n</td></tr>\n<tr class='even' name='preserveConstEnums'>\n  <td><code><a href='/tsconfig/#preserveConstEnums'>--preserveConstEnums</a></code></td>\n  <td><p><code>boolean</code></p>\n</td>\n  <td><ul><li><p><code>true</code> if <a href=\"#isolatedModules\"><code>isolatedModules</code></a>,</p>\n</li><li><p><code>false</code> otherwise.</p>\n</li></ul></td>\n</tr>\n<tr class=\"option-description even\"><td colspan=\"3\">\n<p>Disable erasing <code>const enum</code> declarations in generated code.</p>\n</td></tr>\n<tr class='odd' name='preserveSymlinks'>\n  <td><code><a href='/tsconfig/#preserveSymlinks'>--preserveSymlinks</a></code></td>\n  <td><p><code>boolean</code></p>\n</td>\n  <td><p><code>false</code></p>\n</td>\n</tr>\n<tr class=\"option-description odd\"><td colspan=\"3\">\n<p>Disable resolving symlinks to their realpath. This correlates to the same flag in node.</p>\n</td></tr>\n<tr class='even' name='preserveValueImports'>\n  <td><code><a href='/tsconfig/#preserveValueImports'>--preserveValueImports</a></code></td>\n  <td><p><code>boolean</code></p>\n</td>\n  <td><p><code>false</code></p>\n</td>\n</tr>\n<tr class=\"option-description even\"><td colspan=\"3\">\n<p>Preserve unused imported values in the JavaScript output that would otherwise be removed.</p>\n</td></tr>\n<tr class='odd' name='preserveWatchOutput'>\n  <td><code><a href='/tsconfig/#preserveWatchOutput'>--preserveWatchOutput</a></code></td>\n  <td><p><code>boolean</code></p>\n</td>\n  <td><p><code>false</code></p>\n</td>\n</tr>\n<tr class=\"option-description odd\"><td colspan=\"3\">\n<p>Disable wiping the console in watch mode.</p>\n</td></tr>\n<tr class='even' name='pretty'>\n  <td><code><a href='/tsconfig/#pretty'>--pretty</a></code></td>\n  <td><p><code>boolean</code></p>\n</td>\n  <td><p><code>true</code></p>\n</td>\n</tr>\n<tr class=\"option-description even\"><td colspan=\"3\">\n<p>Enable color and formatting in TypeScript's output to make compiler errors easier to read.</p>\n</td></tr>\n<tr class='odd' name='reactNamespace'>\n  <td><code><a href='/tsconfig/#reactNamespace'>--reactNamespace</a></code></td>\n  <td><p><code>string</code></p>\n</td>\n  <td><p><code>React</code></p>\n</td>\n</tr>\n<tr class=\"option-description odd\"><td colspan=\"3\">\n<p>Specify the object invoked for <code>createElement</code>. This only applies when targeting <code>react</code> JSX emit.</p>\n</td></tr>\n<tr class='even' name='removeComments'>\n  <td><code><a href='/tsconfig/#removeComments'>--removeComments</a></code></td>\n  <td><p><code>boolean</code></p>\n</td>\n  <td><p><code>false</code></p>\n</td>\n</tr>\n<tr class=\"option-description even\"><td colspan=\"3\">\n<p>Disable emitting comments.</p>\n</td></tr>\n<tr class='odd' name='resolveJsonModule'>\n  <td><code><a href='/tsconfig/#resolveJsonModule'>--resolveJsonModule</a></code></td>\n  <td><p><code>boolean</code></p>\n</td>\n  <td><p><code>false</code></p>\n</td>\n</tr>\n<tr class=\"option-description odd\"><td colspan=\"3\">\n<p>Enable importing .json files.</p>\n</td></tr>\n<tr class='even' name='rootDir'>\n  <td><code><a href='/tsconfig/#rootDir'>--rootDir</a></code></td>\n  <td><p><code>string</code></p>\n</td>\n  <td><p>Computed from the list of input files.</p>\n</td>\n</tr>\n<tr class=\"option-description even\"><td colspan=\"3\">\n<p>Specify the root folder within your source files.</p>\n</td></tr>\n<tr class='odd' name='rootDirs'>\n  <td><code><a href='/tsconfig/#rootDirs'>--rootDirs</a></code></td>\n  <td><p><code>list</code></p>\n</td>\n  <td><p>Computed from the list of input files.</p>\n</td>\n</tr>\n<tr class=\"option-description odd\"><td colspan=\"3\">\n<p>Allow multiple folders to be treated as one when resolving modules.</p>\n</td></tr>\n<tr class='even' name='skipDefaultLibCheck'>\n  <td><code><a href='/tsconfig/#skipDefaultLibCheck'>--skipDefaultLibCheck</a></code></td>\n  <td><p><code>boolean</code></p>\n</td>\n  <td><p><code>false</code></p>\n</td>\n</tr>\n<tr class=\"option-description even\"><td colspan=\"3\">\n<p>Skip type checking .d.ts files that are included with TypeScript.</p>\n</td></tr>\n<tr class='odd' name='skipLibCheck'>\n  <td><code><a href='/tsconfig/#skipLibCheck'>--skipLibCheck</a></code></td>\n  <td><p><code>boolean</code></p>\n</td>\n  <td><p><code>false</code></p>\n</td>\n</tr>\n<tr class=\"option-description odd\"><td colspan=\"3\">\n<p>Skip type checking all .d.ts files.</p>\n</td></tr>\n<tr class='even' name='sourceMap'>\n  <td><code><a href='/tsconfig/#sourceMap'>--sourceMap</a></code></td>\n  <td><p><code>boolean</code></p>\n</td>\n  <td><p><code>false</code></p>\n</td>\n</tr>\n<tr class=\"option-description even\"><td colspan=\"3\">\n<p>Create source map files for emitted JavaScript files.</p>\n</td></tr>\n<tr class='odd' name='sourceRoot'>\n  <td><code><a href='/tsconfig/#sourceRoot'>--sourceRoot</a></code></td>\n  <td><p><code>string</code></p>\n</td>\n  <td>\n</td>\n</tr>\n<tr class=\"option-description odd\"><td colspan=\"3\">\n<p>Specify the root path for debuggers to find the reference source code.</p>\n</td></tr>\n<tr class='even' name='strict'>\n  <td><code><a href='/tsconfig/#strict'>--strict</a></code></td>\n  <td><p><code>boolean</code></p>\n</td>\n  <td><p><code>false</code></p>\n</td>\n</tr>\n<tr class=\"option-description even\"><td colspan=\"3\">\n<p>Enable all strict type-checking options.</p>\n</td></tr>\n<tr class='odd' name='strictBindCallApply'>\n  <td><code><a href='/tsconfig/#strictBindCallApply'>--strictBindCallApply</a></code></td>\n  <td><p><code>boolean</code></p>\n</td>\n  <td><ul><li><p><code>true</code> if <a href=\"#strict\"><code>strict</code></a>,</p>\n</li><li><p><code>false</code> otherwise.</p>\n</li></ul></td>\n</tr>\n<tr class=\"option-description odd\"><td colspan=\"3\">\n<p>Check that the arguments for <code>bind</code>, <code>call</code>, and <code>apply</code> methods match the original function.</p>\n</td></tr>\n<tr class='even' name='strictFunctionTypes'>\n  <td><code><a href='/tsconfig/#strictFunctionTypes'>--strictFunctionTypes</a></code></td>\n  <td><p><code>boolean</code></p>\n</td>\n  <td><ul><li><p><code>true</code> if <a href=\"#strict\"><code>strict</code></a>,</p>\n</li><li><p><code>false</code> otherwise.</p>\n</li></ul></td>\n</tr>\n<tr class=\"option-description even\"><td colspan=\"3\">\n<p>When assigning functions, check to ensure parameters and the return values are subtype-compatible.</p>\n</td></tr>\n<tr class='odd' name='strictNullChecks'>\n  <td><code><a href='/tsconfig/#strictNullChecks'>--strictNullChecks</a></code></td>\n  <td><p><code>boolean</code></p>\n</td>\n  <td><ul><li><p><code>true</code> if <a href=\"#strict\"><code>strict</code></a>,</p>\n</li><li><p><code>false</code> otherwise.</p>\n</li></ul></td>\n</tr>\n<tr class=\"option-description odd\"><td colspan=\"3\">\n<p>When type checking, take into account <code>null</code> and <code>undefined</code>.</p>\n</td></tr>\n<tr class='even' name='strictPropertyInitialization'>\n  <td><code><a href='/tsconfig/#strictPropertyInitialization'>--strictPropertyInitialization</a></code></td>\n  <td><p><code>boolean</code></p>\n</td>\n  <td><ul><li><p><code>true</code> if <a href=\"#strict\"><code>strict</code></a>,</p>\n</li><li><p><code>false</code> otherwise.</p>\n</li></ul></td>\n</tr>\n<tr class=\"option-description even\"><td colspan=\"3\">\n<p>Check for class properties that are declared but not set in the constructor.</p>\n</td></tr>\n<tr class='odd' name='stripInternal'>\n  <td><code><a href='/tsconfig/#stripInternal'>--stripInternal</a></code></td>\n  <td><p><code>boolean</code></p>\n</td>\n  <td><p><code>false</code></p>\n</td>\n</tr>\n<tr class=\"option-description odd\"><td colspan=\"3\">\n<p>Disable emitting declarations that have <code>@internal</code> in their JSDoc comments.</p>\n</td></tr>\n<tr class='even' name='suppressExcessPropertyErrors'>\n  <td><code><a href='/tsconfig/#suppressExcessPropertyErrors'>--suppressExcessPropertyErrors</a></code></td>\n  <td><p><code>boolean</code></p>\n</td>\n  <td><p><code>false</code></p>\n</td>\n</tr>\n<tr class=\"option-description even\"><td colspan=\"3\">\n<p>Disable reporting of excess property errors during the creation of object literals.</p>\n</td></tr>\n<tr class='odd' name='suppressImplicitAnyIndexErrors'>\n  <td><code><a href='/tsconfig/#suppressImplicitAnyIndexErrors'>--suppressImplicitAnyIndexErrors</a></code></td>\n  <td><p><code>boolean</code></p>\n</td>\n  <td><p><code>false</code></p>\n</td>\n</tr>\n<tr class=\"option-description odd\"><td colspan=\"3\">\n<p>Suppress <a href=\"#noImplicitAny\"><code>noImplicitAny</code></a> errors when indexing objects that lack index signatures.</p>\n</td></tr>\n<tr class='even' name='target'>\n  <td><code><a href='/tsconfig/#target'>--target</a></code></td>\n  <td><p><code>es3</code>, <code>es5</code>, <code>es6</code>/<code>es2015</code>, <code>es2016</code>, <code>es2017</code>, <code>es2018</code>, <code>es2019</code>, <code>es2020</code>, <code>es2021</code>, <code>es2022</code>, or <code>esnext</code></p>\n</td>\n  <td><p><code>ES3</code></p>\n</td>\n</tr>\n<tr class=\"option-description even\"><td colspan=\"3\">\n<p>Set the JavaScript language version for emitted JavaScript and include compatible library declarations.</p>\n</td></tr>\n<tr class='odd' name='traceResolution'>\n  <td><code><a href='/tsconfig/#traceResolution'>--traceResolution</a></code></td>\n  <td><p><code>boolean</code></p>\n</td>\n  <td><p><code>false</code></p>\n</td>\n</tr>\n<tr class=\"option-description odd\"><td colspan=\"3\">\n<p>Log paths used during the <a href=\"#moduleResolution\"><code>moduleResolution</code></a> process.</p>\n</td></tr>\n<tr class='even' name='tsBuildInfoFile'>\n  <td><code><a href='/tsconfig/#tsBuildInfoFile'>--tsBuildInfoFile</a></code></td>\n  <td><p><code>string</code></p>\n</td>\n  <td><p><code>.tsbuildinfo</code></p>\n</td>\n</tr>\n<tr class=\"option-description even\"><td colspan=\"3\">\n<p>Specify the folder for .tsbuildinfo incremental compilation files.</p>\n</td></tr>\n<tr class='odd' name='typeRoots'>\n  <td><code><a href='/tsconfig/#typeRoots'>--typeRoots</a></code></td>\n  <td><p><code>list</code></p>\n</td>\n  <td>\n</td>\n</tr>\n<tr class=\"option-description odd\"><td colspan=\"3\">\n<p>Specify multiple folders that act like <code>./node_modules/@types</code>.</p>\n</td></tr>\n<tr class='even' name='types'>\n  <td><code><a href='/tsconfig/#types'>--types</a></code></td>\n  <td><p><code>list</code></p>\n</td>\n  <td>\n</td>\n</tr>\n<tr class=\"option-description even\"><td colspan=\"3\">\n<p>Specify type package names to be included without being referenced in a source file.</p>\n</td></tr>\n<tr class='odd' name='useDefineForClassFields'>\n  <td><code><a href='/tsconfig/#useDefineForClassFields'>--useDefineForClassFields</a></code></td>\n  <td><p><code>boolean</code></p>\n</td>\n  <td><ul><li><p><code>true</code> if <a href=\"#target\"><code>target</code></a> is <code>ES2022</code> or higher, including <code>ESNext</code>,</p>\n</li><li><p><code>false</code> otherwise.</p>\n</li></ul></td>\n</tr>\n<tr class=\"option-description odd\"><td colspan=\"3\">\n<p>Emit ECMAScript-standard-compliant class fields.</p>\n</td></tr>\n<tr class='even' name='useUnknownInCatchVariables'>\n  <td><code><a href='/tsconfig/#useUnknownInCatchVariables'>--useUnknownInCatchVariables</a></code></td>\n  <td><p><code>boolean</code></p>\n</td>\n  <td><ul><li><p><code>true</code> if <a href=\"#strict\"><code>strict</code></a>,</p>\n</li><li><p><code>false</code> otherwise.</p>\n</li></ul></td>\n</tr>\n<tr class=\"option-description even\"><td colspan=\"3\">\n<p>Default catch clause variables as <code>unknown</code> instead of <code>any</code>.</p>\n</td></tr>\n</tbody></table>\n<!-- End of replacement  -->\n<h2 id=\"related\" style=\"position:relative;\"><a href=\"#related\" aria-label=\"related permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Related</h2>\n<ul>\n<li>Every option is fully explained in the <a href=\"/tsconfig\">TSConfig Reference</a>.</li>\n<li>Learn how to use a <a href=\"/docs/handbook/tsconfig-json.html\"><code>tsconfig.json</code></a> files.</li>\n<li>Learn how to work in an <a href=\"/docs/handbook/compiler-options-in-msbuild.html\">MSBuild project</a>.</li>\n</ul>","headings":[{"value":"Using the CLI","depth":2},{"value":"Compiler Options","depth":2},{"value":"Related","depth":2}],"frontmatter":{"permalink":"/docs/handbook/compiler-options.html","title":"tsc CLI Options","disable_toc":true,"handbook":null,"oneline":"A very high-level overview of the CLI compiler options for tsc","preamble":null,"deprecated_by":null,"deprecation_redirects":null,"experimental":null}},"prev":null,"next":null},"pageContext":{"id":"7-tsc-cli-options","slug":"/docs/handbook/compiler-options.html","repoPath":"/packages/documentation/copy/en/project-config/Compiler Options.md","lang":"en","modifiedTime":"2023-02-21T11:39:14.438Z"}},"staticQueryHashes":[]}