{"componentChunkName":"component---src-templates-documentation-tsx","path":"/docs/handbook/declaration-files/templates/module-class-d-ts.html","result":{"data":{"markdownRemark":{"id":"eae6398b-df34-5b3d-b91a-e9d9235ed745","excerpt":"For example, when you want to work with JavaScript code which looks like: To handle both importing via UMD and modules:","html":"<!--\nTODO:\n\n1. Not clear why UMD is thrown in here.\n2. Give both commonjs and ES module examples.\n-->\n<p>For example, when you want to work with JavaScript code which looks like:</p>\n<pre class=\"shiki light-plus\" style=\"background-color: #FFFFFF; color: #000000\"><div class=\"language-id\">ts</div><div class='code-container'><code><div class='line'><span style=\"color: #0000FF\">const</span><span style=\"color: #000000\"> </span><span style=\"color: #0070C1\">Greeter</span><span style=\"color: #000000\"> = </span><span style=\"color: #795E26\">require</span><span style=\"color: #000000\">(</span><span style=\"color: #A31515\">\"super-greeter\"</span><span style=\"color: #000000\">);</span></div><div class='line'></div><div class='line'><span style=\"color: #0000FF\">const</span><span style=\"color: #000000\"> </span><span style=\"color: #0070C1\">greeter</span><span style=\"color: #000000\"> = </span><span style=\"color: #0000FF\">new</span><span style=\"color: #000000\"> </span><span style=\"color: #795E26\">Greeter</span><span style=\"color: #000000\">();</span></div><div class='line'><span style=\"color: #001080\">greeter</span><span style=\"color: #000000\">.</span><span style=\"color: #795E26\">greet</span><span style=\"color: #000000\">();</span></div></code></div></pre>\n<p>To handle both importing via UMD and modules:</p>\n<pre class=\"shiki light-plus\" style=\"background-color: #FFFFFF; color: #000000\"><div class=\"language-id\">ts</div><div class='code-container'><code><div class='line'><span style=\"color: #008000\">// Type definitions for [~THE LIBRARY NAME~] [~OPTIONAL VERSION NUMBER~]</span></div><div class='line'><span style=\"color: #008000\">// Project: [~THE PROJECT NAME~]</span></div><div class='line'><span style=\"color: #008000\">// Definitions by: [~YOUR NAME~] &lt;[~A URL FOR YOU~]&gt;</span></div><div class='line'></div><div class='line'><span style=\"color: #008000\">/*~ This is the module template file for class modules.</span></div><div class='line'><span style=\"color: #008000\"> *~ You should rename it to index.d.ts and place it in a folder with the same name as the module.</span></div><div class='line'><span style=\"color: #008000\"> *~ For example, if you were writing a file for \"super-greeter\", this</span></div><div class='line'><span style=\"color: #008000\"> *~ file should be 'super-greeter/index.d.ts'</span></div><div class='line'><span style=\"color: #008000\"> */</span></div><div class='line'></div><div class='line'><span style=\"color: #008000\">// Note that ES6 modules cannot directly export class objects.</span></div><div class='line'><span style=\"color: #008000\">// This file should be imported using the CommonJS-style:</span></div><div class='line'><span style=\"color: #008000\">//   import x = require('[~THE MODULE~]');</span></div><div class='line'><span style=\"color: #008000\">//</span></div><div class='line'><span style=\"color: #008000\">// Alternatively, if --allowSyntheticDefaultImports or</span></div><div class='line'><span style=\"color: #008000\">// --esModuleInterop is turned on, this file can also be</span></div><div class='line'><span style=\"color: #008000\">// imported as a default import:</span></div><div class='line'><span style=\"color: #008000\">//   import x from '[~THE MODULE~]';</span></div><div class='line'><span style=\"color: #008000\">//</span></div><div class='line'><span style=\"color: #008000\">// Refer to the TypeScript documentation at</span></div><div class='line'><span style=\"color: #008000\">// https://www.typescriptlang.org/docs/handbook/modules.html#export--and-import--require</span></div><div class='line'><span style=\"color: #008000\">// to understand common workarounds for this limitation of ES6 modules.</span></div><div class='line'></div><div class='line'><span style=\"color: #008000\">/*~ If this module is a UMD module that exposes a global variable 'myClassLib' when</span></div><div class='line'><span style=\"color: #008000\"> *~ loaded outside a module loader environment, declare that global here.</span></div><div class='line'><span style=\"color: #008000\"> *~ Otherwise, delete this declaration.</span></div><div class='line'><span style=\"color: #008000\"> */</span></div><div class='line'><span style=\"color: #AF00DB\">export</span><span style=\"color: #000000\"> </span><span style=\"color: #001080\">as</span><span style=\"color: #000000\"> </span><span style=\"color: #001080\">namespace</span><span style=\"color: #000000\"> </span><span style=\"color: #A31515\">\"super-greeter\"</span><span style=\"color: #000000\">;</span></div><div class='line'></div><div class='line'><span style=\"color: #008000\">/*~ This declaration specifies that the class constructor function</span></div><div class='line'><span style=\"color: #008000\"> *~ is the exported object from the file</span></div><div class='line'><span style=\"color: #008000\"> */</span></div><div class='line'><span style=\"color: #AF00DB\">export</span><span style=\"color: #000000\"> = </span><span style=\"color: #001080\">Greeter</span><span style=\"color: #000000\">;</span></div><div class='line'></div><div class='line'><span style=\"color: #008000\">/*~ Write your module's methods and properties in this class */</span></div><div class='line'><span style=\"color: #0000FF\">declare</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">class</span><span style=\"color: #000000\"> </span><span style=\"color: #1C6277\">Greeter</span><span style=\"color: #000000\"> {</span></div><div class='line'><span style=\"color: #000000\">  </span><span style=\"color: #0000FF\">constructor</span><span style=\"color: #000000\">(</span><span style=\"color: #001080\">customGreeting</span><span style=\"color: #000000\">?: </span><span style=\"color: #1C6277\">string</span><span style=\"color: #000000\">);</span></div><div class='line'></div><div class='line'><span style=\"color: #000000\">  </span><span style=\"color: #001080\">greet</span><span style=\"color: #000000\">: </span><span style=\"color: #1C6277\">void</span><span style=\"color: #000000\">;</span></div><div class='line'></div><div class='line'><span style=\"color: #000000\">  </span><span style=\"color: #795E26\">myMethod</span><span style=\"color: #000000\">(</span><span style=\"color: #001080\">opts</span><span style=\"color: #000000\">: </span><span style=\"color: #1C6277\">MyClass</span><span style=\"color: #000000\">.</span><span style=\"color: #1C6277\">MyClassMethodOptions</span><span style=\"color: #000000\">): </span><span style=\"color: #1C6277\">number</span><span style=\"color: #000000\">;</span></div><div class='line'><span style=\"color: #000000\">}</span></div><div class='line'></div><div class='line'><span style=\"color: #008000\">/*~ If you want to expose types from your module as well, you can</span></div><div class='line'><span style=\"color: #008000\"> *~ place them in this block.</span></div><div class='line'><span style=\"color: #008000\"> *~</span></div><div class='line'><span style=\"color: #008000\"> *~ Note that if you decide to include this namespace, the module can be</span></div><div class='line'><span style=\"color: #008000\"> *~ incorrectly imported as a namespace object, unless</span></div><div class='line'><span style=\"color: #008000\"> *~ --esModuleInterop is turned on:</span></div><div class='line'><span style=\"color: #008000\"> *~   import * as x from '[~THE MODULE~]'; // WRONG! DO NOT DO THIS!</span></div><div class='line'><span style=\"color: #008000\"> */</span></div><div class='line'><span style=\"color: #0000FF\">declare</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">namespace</span><span style=\"color: #000000\"> </span><span style=\"color: #1C6277\">MyClass</span><span style=\"color: #000000\"> {</span></div><div class='line'><span style=\"color: #000000\">  </span><span style=\"color: #AF00DB\">export</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">interface</span><span style=\"color: #000000\"> </span><span style=\"color: #1C6277\">MyClassMethodOptions</span><span style=\"color: #000000\"> {</span></div><div class='line'><span style=\"color: #000000\">    </span><span style=\"color: #001080\">width</span><span style=\"color: #000000\">?: </span><span style=\"color: #1C6277\">number</span><span style=\"color: #000000\">;</span></div><div class='line'><span style=\"color: #000000\">    </span><span style=\"color: #001080\">height</span><span style=\"color: #000000\">?: </span><span style=\"color: #1C6277\">number</span><span style=\"color: #000000\">;</span></div><div class='line'><span style=\"color: #000000\">  }</span></div><div class='line'><span style=\"color: #000000\">}</span></div></code></div></pre>","headings":[],"frontmatter":{"permalink":"/docs/handbook/declaration-files/templates/module-class-d-ts.html","title":"Module: Class","disable_toc":null,"handbook":null,"oneline":null,"preamble":null,"deprecated_by":null,"deprecation_redirects":null,"experimental":null}},"prev":null,"next":null},"pageContext":{"id":"5-module:-class","slug":"/docs/handbook/declaration-files/templates/module-class-d-ts.html","repoPath":"/packages/documentation/copy/en/declaration-files/templates/module-class.d.ts.md","lang":"en","modifiedTime":"2023-02-21T11:32:56.850Z"}},"staticQueryHashes":[]}