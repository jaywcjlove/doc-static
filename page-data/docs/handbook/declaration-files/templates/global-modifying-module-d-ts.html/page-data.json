{"componentChunkName":"component---src-templates-documentation-tsx","path":"/docs/handbook/declaration-files/templates/global-modifying-module-d-ts.html","result":{"data":{"markdownRemark":{"id":"c97ebede-87b2-58fb-9967-21e2e9ce7efc","excerpt":"Global-modifying Modules A global-modifying module alters existing values in the global scope when they are imported.\nFor example, there might exist a library…","html":"<h2 id=\"global-modifying-modules\" style=\"position:relative;\"><a href=\"#global-modifying-modules\" aria-label=\"global modifying modules permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><em>Global-modifying Modules</em></h2>\n<p>A <em>global-modifying module</em> alters existing values in the global scope when they are imported.\nFor example, there might exist a library which adds new members to <code>String.prototype</code> when imported.\nThis pattern is somewhat dangerous due to the possibility of runtime conflicts,\nbut we can still write a declaration file for it.</p>\n<h2 id=\"identifying-global-modifying-modules\" style=\"position:relative;\"><a href=\"#identifying-global-modifying-modules\" aria-label=\"identifying global modifying modules permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Identifying global-modifying modules</h2>\n<p>Global-modifying modules are generally easy to identify from their documentation.\nIn general, they’re similar to global plugins, but need a <code>require</code> call to activate their effects.</p>\n<p>You might see documentation like this:</p>\n<pre class=\"shiki light-plus\" style=\"background-color: #FFFFFF; color: #000000\"><div class=\"language-id\">js</div><div class='code-container'><code><div class='line'><span style=\"color: #008000\">// 'require' call that doesn't use its return value</span></div><div class='line'><span style=\"color: #0000FF\">var</span><span style=\"color: #000000\"> </span><span style=\"color: #001080\">unused</span><span style=\"color: #000000\"> = </span><span style=\"color: #795E26\">require</span><span style=\"color: #000000\">(</span><span style=\"color: #A31515\">\"magic-string-time\"</span><span style=\"color: #000000\">);</span></div><div class='line'><span style=\"color: #008000\">/* or */</span></div><div class='line'><span style=\"color: #795E26\">require</span><span style=\"color: #000000\">(</span><span style=\"color: #A31515\">\"magic-string-time\"</span><span style=\"color: #000000\">);</span></div><div class='line'></div><div class='line'><span style=\"color: #0000FF\">var</span><span style=\"color: #000000\"> </span><span style=\"color: #001080\">x</span><span style=\"color: #000000\"> = </span><span style=\"color: #A31515\">\"hello, world\"</span><span style=\"color: #000000\">;</span></div><div class='line'><span style=\"color: #008000\">// Creates new methods on built-in types</span></div><div class='line'><span style=\"color: #001080\">console</span><span style=\"color: #000000\">.</span><span style=\"color: #795E26\">log</span><span style=\"color: #000000\">(</span><span style=\"color: #001080\">x</span><span style=\"color: #000000\">.</span><span style=\"color: #795E26\">startsWithHello</span><span style=\"color: #000000\">());</span></div><div class='line'></div><div class='line'><span style=\"color: #0000FF\">var</span><span style=\"color: #000000\"> </span><span style=\"color: #001080\">y</span><span style=\"color: #000000\"> = [</span><span style=\"color: #098658\">1</span><span style=\"color: #000000\">, </span><span style=\"color: #098658\">2</span><span style=\"color: #000000\">, </span><span style=\"color: #098658\">3</span><span style=\"color: #000000\">];</span></div><div class='line'><span style=\"color: #008000\">// Creates new methods on built-in types</span></div><div class='line'><span style=\"color: #001080\">console</span><span style=\"color: #000000\">.</span><span style=\"color: #795E26\">log</span><span style=\"color: #000000\">(</span><span style=\"color: #001080\">y</span><span style=\"color: #000000\">.</span><span style=\"color: #795E26\">reverseAndSort</span><span style=\"color: #000000\">());</span></div></code></div></pre>\n<p>Here is an example</p>\n<pre class=\"shiki light-plus\" style=\"background-color: #FFFFFF; color: #000000\"><div class=\"language-id\">ts</div><div class='code-container'><code><div class='line'><span style=\"color: #008000\">// Type definitions for [~THE LIBRARY NAME~] [~OPTIONAL VERSION NUMBER~]</span></div><div class='line'><span style=\"color: #008000\">// Project: [~THE PROJECT NAME~]</span></div><div class='line'><span style=\"color: #008000\">// Definitions by: [~YOUR NAME~] &lt;[~A URL FOR YOU~]&gt;</span></div><div class='line'></div><div class='line'><span style=\"color: #008000\">/*~ This is the global-modifying module template file. You should rename it to index.d.ts</span></div><div class='line'><span style=\"color: #008000\"> *~ and place it in a folder with the same name as the module.</span></div><div class='line'><span style=\"color: #008000\"> *~ For example, if you were writing a file for \"super-greeter\", this</span></div><div class='line'><span style=\"color: #008000\"> *~ file should be 'super-greeter/index.d.ts'</span></div><div class='line'><span style=\"color: #008000\"> */</span></div><div class='line'></div><div class='line'><span style=\"color: #008000\">/*~ Note: If your global-modifying module is callable or constructable, you'll</span></div><div class='line'><span style=\"color: #008000\"> *~ need to combine the patterns here with those in the module-class or module-function</span></div><div class='line'><span style=\"color: #008000\"> *~ template files</span></div><div class='line'><span style=\"color: #008000\"> */</span></div><div class='line'><span style=\"color: #0000FF\">declare</span><span style=\"color: #000000\"> </span><span style=\"color: #001080\">global</span><span style=\"color: #000000\"> {</span></div><div class='line'><span style=\"color: #000000\">  </span><span style=\"color: #008000\">/*~ Here, declare things that go in the global namespace, or augment</span></div><div class='line'><span style=\"color: #008000\">   *~ existing declarations in the global namespace</span></div><div class='line'><span style=\"color: #008000\">   */</span></div><div class='line'><span style=\"color: #000000\">  </span><span style=\"color: #0000FF\">interface</span><span style=\"color: #000000\"> </span><span style=\"color: #1C6277\">String</span><span style=\"color: #000000\"> {</span></div><div class='line'><span style=\"color: #000000\">    </span><span style=\"color: #795E26\">fancyFormat</span><span style=\"color: #000000\">(</span><span style=\"color: #001080\">opts</span><span style=\"color: #000000\">: </span><span style=\"color: #1C6277\">StringFormatOptions</span><span style=\"color: #000000\">): </span><span style=\"color: #1C6277\">string</span><span style=\"color: #000000\">;</span></div><div class='line'><span style=\"color: #000000\">  }</span></div><div class='line'><span style=\"color: #000000\">}</span></div><div class='line'></div><div class='line'><span style=\"color: #008000\">/*~ If your module exports types or values, write them as usual */</span></div><div class='line'><span style=\"color: #AF00DB\">export</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">interface</span><span style=\"color: #000000\"> </span><span style=\"color: #1C6277\">StringFormatOptions</span><span style=\"color: #000000\"> {</span></div><div class='line'><span style=\"color: #000000\">  </span><span style=\"color: #001080\">fancinessLevel</span><span style=\"color: #000000\">: </span><span style=\"color: #1C6277\">number</span><span style=\"color: #000000\">;</span></div><div class='line'><span style=\"color: #000000\">}</span></div><div class='line'></div><div class='line'><span style=\"color: #008000\">/*~ For example, declaring a method on the module (in addition to its global side effects) */</span></div><div class='line'><span style=\"color: #AF00DB\">export</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">function</span><span style=\"color: #000000\"> </span><span style=\"color: #795E26\">doSomething</span><span style=\"color: #000000\">(): </span><span style=\"color: #1C6277\">void</span><span style=\"color: #000000\">;</span></div><div class='line'></div><div class='line'><span style=\"color: #008000\">/*~ If your module exports nothing, you'll need this line. Otherwise, delete it */</span></div><div class='line'><span style=\"color: #AF00DB\">export</span><span style=\"color: #000000\"> {};</span></div></code></div></pre>","headings":[{"value":"Global-modifying Modules","depth":2},{"value":"Identifying global-modifying modules","depth":2}],"frontmatter":{"permalink":"/docs/handbook/declaration-files/templates/global-modifying-module-d-ts.html","title":"Global: Modifying Module","disable_toc":null,"handbook":null,"oneline":null,"preamble":null,"deprecated_by":null,"deprecation_redirects":null,"experimental":null}},"prev":null,"next":null},"pageContext":{"id":"5-global:-modifying-module","slug":"/docs/handbook/declaration-files/templates/global-modifying-module-d-ts.html","repoPath":"/packages/documentation/copy/en/declaration-files/templates/global-modifying-module.d.ts.md","lang":"en","modifiedTime":"2023-02-21T11:32:56.850Z"}},"staticQueryHashes":[]}