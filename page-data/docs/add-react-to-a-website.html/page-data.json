{"componentChunkName":"component---src-templates-docs-js","path":"/docs/add-react-to-a-website.html","result":{"data":{"markdownRemark":{"html":"<p>根据需要选择性地使用 React。</p>\n<p>React 在设计之初就可以被渐进式适配，并且<strong>你可以根据需要选择性地使用 React</strong>。可能你只想在现有页面中“局部地添加交互性”。使用 React 组件是一种不错的方式。</p>\n<p>大多数网站不是、也不需要是单页应用程序。通过<strong>仅仅几行代码并且无需使用构建工具</strong>，试试在你的网站的一小部分中使用 React。然后，你可以逐步扩展它的存在，或只将其涵盖在少数动态部件中。</p>\n<hr>\n<ul>\n<li><a href=\"#add-react-in-one-minute\">一分钟用上 React</a></li>\n<li><a href=\"#optional-try-react-with-jsx\">可选：使用 React 和 JSX</a> (不需要打包工具！)</li>\n</ul>\n<h2 id=\"add-react-in-one-minute\"><a href=\"#add-react-in-one-minute\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>一分钟用上 React </h2>\n<p>在本小节中，我们会展示如何将 React 组件添加到现有的 HTML 页面中。你可以基于自己现有的网站，或创建一个空的 HTML 文件来练习。</p>\n<p>不会涉及复杂的工具或安装需求 —— <strong>完成这一节的内容，你只需要连接到网络，以及一分钟的时间。</strong></p>\n<p>可选：<a href=\"https://gist.github.com/gaearon/6668a1f6986742109c00a581ce704605/archive/f6c882b6ae18bde42dcf6fdb751aae93495a2275.zip\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">下载完整示例（2KB 压缩包）</a></p>\n<h3 id=\"step-1-add-a-dom-container-to-the-html\"><a href=\"#step-1-add-a-dom-container-to-the-html\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>步骤 1： 添加一个 DOM 容器到 HTML </h3>\n<p>首先，打开你想要编辑的 HTML 页面。添加一个空的 <code class=\"gatsby-code-text\">&lt;div></code> 标签作为标记你想要用 React 显示内容的位置。例如：</p>\n<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"html\"><pre class=\"gatsby-code-html\"><code class=\"gatsby-code-html\"><span class=\"token comment\">&lt;!-- ... 其它 HTML ... --></span>\n\n<span class=\"gatsby-highlight-code-line\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>like_button_container<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></span>\n<span class=\"token comment\">&lt;!-- ... 其它 HTML ... --></span></code></pre></div>\n<p>我们给这个 <code class=\"gatsby-code-text\">&lt;div></code> 加上唯一的 <code class=\"gatsby-code-text\">id</code> HTML 属性。这将允许我们稍后用 JavaScript 代码找到它，并在其中显示一个 React 组件。</p>\n<blockquote>\n<p>提示</p>\n<p>你可以像这样在 <code class=\"gatsby-code-text\">&lt;body></code> 标签内的<strong>任意位置</strong>放置一个“容器” <code class=\"gatsby-code-text\">&lt;div></code>。根据需要，你可以在一个页面上放置多个独立的 DOM 容器。它们通常是空标签 —— React 会替换 DOM 容器内的任何已有内容。</p>\n</blockquote>\n<h3 id=\"step-2-add-the-script-tags\"><a href=\"#step-2-add-the-script-tags\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>步骤 2：添加 Script 标签 </h3>\n<p>接下来，在 <code class=\"gatsby-code-text\">&lt;/body></code> 结束标签之前，向 HTML 页面中添加三个 <code class=\"gatsby-code-text\">&lt;script></code> 标签：</p>\n<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"html\"><pre class=\"gatsby-code-html\"><code class=\"gatsby-code-html\">  <span class=\"token comment\">&lt;!-- ... 其它 HTML ... --></span>\n\n  <span class=\"token comment\">&lt;!-- 加载 React。--></span>\n  <span class=\"token comment\">&lt;!-- 注意: 部署时，将 \"development.js\" 替换为 \"production.min.js\"。--></span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://unpkg.com/react@17/umd/react.development.js<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">crossorigin</span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://unpkg.com/react-dom@17/umd/react-dom.development.js<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">crossorigin</span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></span>\n  <span class=\"token comment\">&lt;!-- 加载我们的 React 组件。--></span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>like_button.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>前两个标签加载 React。第三个将加载你的组件代码。</p>\n<h3 id=\"step-3-create-a-react-component\"><a href=\"#step-3-create-a-react-component\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>步骤 3：创建一个 React 组件 </h3>\n<p>在 HTML 页面文件的同级目录下创建一个名为 <code class=\"gatsby-code-text\">like_button.js</code> 的文件。</p>\n<p>查看<strong><a href=\"https://gist.github.com/gaearon/0b180827c190fe4fd98b4c7f570ea4a8/raw/b9157ce933c79a4559d2aa9ff3372668cce48de7/LikeButton.js\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">这段模板代码</a></strong>并把它粘贴到你创建的文件中。</p>\n<blockquote>\n<p>提示</p>\n<p>这段代码定义了一个名为 <code class=\"gatsby-code-text\">LikeButton</code> 的 React 组件。如果你还不明白这段代码的意思，不用担心 —— 我们将在后续的<a href=\"/tutorial/tutorial.html\">入门教程</a>和<a href=\"/docs/hello-world.html\">核心概念</a>中介绍 React 的构建块。目前，我们先只做到显示！</p>\n</blockquote>\n<p>在 <code class=\"gatsby-code-text\">like_button.js</code> 的底部，在<strong><a href=\"https://gist.github.com/gaearon/0b180827c190fe4fd98b4c7f570ea4a8/raw/b9157ce933c79a4559d2aa9ff3372668cce48de7/LikeButton.js\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">模板代码</a></strong>之后，加入以下两行代码。</p>\n<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token comment\">// ... 此前粘贴的代码 ...</span>\n\n<span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">const</span> domContainer <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#like_button_container'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">ReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token function\">e</span><span class=\"token punctuation\">(</span>LikeButton<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> domContainer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span></code></pre></div>\n<p>这两行代码会找到我们在步骤 1 中添加到 HTML 里的 <code class=\"gatsby-code-text\">&lt;div></code>，然后在它内部显示我们的 React 组件 “Like” 按钮。</p>\n<h3 id=\"thats-it\"><a href=\"#thats-it\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>就是这么简单！ </h3>\n<p>没有第四步了。<strong>你刚刚已经将第一个 React 组件添加到你的网站中。</strong></p>\n<p>查看后续小节，以便查看关于集成 React 的更多提示。</p>\n<p><strong><a href=\"https://gist.github.com/gaearon/6668a1f6986742109c00a581ce704605\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">查看完整的示例源码</a></strong></p>\n<p><strong><a href=\"https://gist.github.com/gaearon/6668a1f6986742109c00a581ce704605/archive/f6c882b6ae18bde42dcf6fdb751aae93495a2275.zip\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">下载完整示例（2KB 压缩包）</a></strong></p>\n<h3 id=\"tip-reuse-a-component\"><a href=\"#tip-reuse-a-component\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>提示：重用一个组件 </h3>\n<p>通常，你可能希望在 HTML 页面的多个位置展示 React 组件。下面是一个示例，它显示了三次 “Like” 按钮，并向各自传入了一些数据：</p>\n<p><a href=\"https://gist.github.com/gaearon/faa67b76a6c47adbab04f739cba7ceda\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">查看完整的示例源码</a></p>\n<p><a href=\"https://gist.github.com/gaearon/faa67b76a6c47adbab04f739cba7ceda/archive/9d0dd0ee941fea05fd1357502e5aa348abb84c12.zip\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">下载完整示例（2KB 压缩包）</a></p>\n<blockquote>\n<p>注意</p>\n<p>当页面中以 React 驱动的不同部分是相互独立的时候，这种策略通常非常有用。在 React 代码中，使用<a href=\"/docs/components-and-props.html#composing-components\">组件组合（component composition）</a> 来实现会更容易。</p>\n</blockquote>\n<h3 id=\"tip-minify-javascript-for-production\"><a href=\"#tip-minify-javascript-for-production\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>提示：为生产环境压缩 JavaScript 代码 </h3>\n<p>在将你的网站部署到生产环境之前，要注意未经压缩的 JavaScript 可能会显著降低用户的访问速度。</p>\n<p>如果你已经压缩了应用代码，如果你确保已部署的 HTML 加载了以 <code class=\"gatsby-code-text\">production.min.js</code> 结尾的 React 版本，那么<strong>你的网站是生产就绪（production-ready）的</strong>：</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://unpkg.com/react@17/umd/react.production.min.js<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">crossorigin</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://unpkg.com/react-dom@17/umd/react-dom.production.min.js<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">crossorigin</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>如果你没有一个代码压缩的步骤，<a href=\"https://gist.github.com/gaearon/42a2ffa41b8319948f9be4076286e1f3\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">这有一个配置它的方式</a>。</p>\n<h2 id=\"optional-try-react-with-jsx\"><a href=\"#optional-try-react-with-jsx\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>可选：使用 React 和 JSX </h2>\n<p>在上面的示例中，我们只依赖了浏览器原生支持的特性。这就是为什么我们使用了 JavaScript 函数调用来告诉 React 要显示什么：</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token keyword\">const</span> e <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span>createElement<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 显示一个 \"Like\" &lt;button></span>\n<span class=\"token keyword\">return</span> <span class=\"token function\">e</span><span class=\"token punctuation\">(</span>\n  <span class=\"token string\">'button'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span> <span class=\"token function-variable function\">onClick</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> liked<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'Like'</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>然而，React 还提供了一种使用 <a href=\"/docs/introducing-jsx.html\">JSX</a> 编写界面的方式：</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token comment\">// 显示一个 \"Like\" &lt;button></span>\n<span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> liked<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    Like\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>这两段代码是等价的。虽然 <strong>JSX <a href=\"/docs/react-without-jsx.html\">完全是可选的</a></strong>，但是多数人觉得这样编写 UI 代码更方便 —— 无论是使用 React 还是其它库。</p>\n<p>你可以使用<a href=\"https://babeljs.io/en/repl#?babili=false&#x26;browsers=&#x26;build=&#x26;builtIns=false&#x26;spec=false&#x26;loose=false&#x26;code_lz=DwIwrgLhD2B2AEcDCAbAlgYwNYF4DeAFAJTw4B88EAFmgM4B0tAphAMoQCGETBe86WJgBMAXJQBOYJvAC-RGWQBQ8FfAAyaQYuAB6cFDhkgA&#x26;debug=false&#x26;forceAllTransforms=false&#x26;shippedProposals=false&#x26;circleciRepo=&#x26;evaluate=false&#x26;fileSize=false&#x26;timeTravel=false&#x26;sourceType=module&#x26;lineWrap=true&#x26;presets=es2015%2Creact%2Cstage-2&#x26;prettier=false&#x26;targets=&#x26;version=7.4.3\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">在线编译器</a>尝试 JSX。</p>\n<h3 id=\"quickly-try-jsx\"><a href=\"#quickly-try-jsx\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>快速尝试 JSX </h3>\n<p>在项目中尝试 JSX 最快的方法是在页面中添加这个 <code class=\"gatsby-code-text\">&lt;script></code> 标签：</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"gatsby-code-html\"><code class=\"gatsby-code-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://unpkg.com/babel-standalone@6/babel.min.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>现在，你可以在任何 <code class=\"gatsby-code-text\">&lt;script></code> 标签内使用 JSX，方法是在为其添加 <code class=\"gatsby-code-text\">type=\"text/babel\"</code> 属性。这是<a href=\"https://raw.githubusercontent.com/reactjs/reactjs.org/main/static/html/single-file-example.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">一个使用了 JSX 的 HTML 文件的例子</a>，你可以下载并尝试使用。</p>\n<p>这种方式适合于学习和创建简单的示例。然而，它会使你的网站变慢，并且<strong>不适用于生产环境</strong>。当你准备好更进一步时，删除你添加的这个新的 <code class=\"gatsby-code-text\">&lt;script></code> 标签以及<code class=\"gatsby-code-text\">type=\"text/babel\"</code> 属性。取而代之的，在下一小节中，你将设置一个 JSX 预处理器来自动转换所有 <code class=\"gatsby-code-text\">&lt;script></code> 标签的内容。</p>\n<h3 id=\"add-jsx-to-a-project\"><a href=\"#add-jsx-to-a-project\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>将 JSX 添加到项目 </h3>\n<p>将 JSX 添加到项目中并不需要诸如打包工具或开发服务器那样复杂的工具。本质上，添加 JSX <strong>就像添加 CSS 预处理器一样</strong>。唯一的要求是你在计算机上安装了 <a href=\"https://nodejs.org/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Node.js</a>。</p>\n<p>在终端上跳转到你的项目文件夹，然后粘贴这两个命令：</p>\n<ol>\n<li><strong>步骤 1：</strong> 执行 <code class=\"gatsby-code-text\">npm init -y</code> （如果失败，<a href=\"https://gist.github.com/gaearon/246f6380610e262f8a648e3e51cad40d\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">这是修复办法</a>）</li>\n<li><strong>步骤 2：</strong> 执行 <code class=\"gatsby-code-text\">npm install babel-cli@6 babel-preset-react-app@3</code></li>\n</ol>\n<blockquote>\n<p>提示</p>\n<p>我们<strong>在这里使用 npm 只是用来安装 JSX 预处理器</strong>，之后你不再需要它。React 和应用程序代码都可以继续使用 <code class=\"gatsby-code-text\">&lt;script></code> 标签而不做任何更改。</p>\n</blockquote>\n<p>恭喜！你刚刚为你的项目加入了一个<strong>生产就绪（production-ready）的 JSX 配置环境</strong>。</p>\n<h3 id=\"run-jsx-preprocessor\"><a href=\"#run-jsx-preprocessor\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>运行 JSX 预处理器 </h3>\n<p>创建一个名为 <code class=\"gatsby-code-text\">src</code> 的文件夹并执行这个终端命令：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"gatsby-code-text\"><code class=\"gatsby-code-text\">npx babel --watch src --out-dir . --presets react-app/prod</code></pre></div>\n<blockquote>\n<p>注意：</p>\n<p><code class=\"gatsby-code-text\">npx</code> 不是拼写错误 —— 它是 <a href=\"https://medium.com/@maybekatz/introducing-npx-an-npm-package-runner-55f7d4bd282b\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">npm 5.2+ 附带的 package 运行工具</a>。</p>\n<p>如果你看到一个错误消息显示为：“You have mistakenly installed the <code class=\"gatsby-code-text\">babel</code> package”，你可能错过了<a href=\"#add-jsx-to-a-project\">上一步</a>。在同一个文件夹中执行它，然后重试。</p>\n</blockquote>\n<p>不要等待它运行结束 —— 这个命令启动了一个对 JSX 的自动监听器。</p>\n<p>如果此时你用这段 <strong><a href=\"https://gist.github.com/gaearon/c8e112dc74ac44aac4f673f2c39d19d1/raw/09b951c86c1bf1116af741fa4664511f2f179f0a/like_button.js\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">JSX 入门代码</a></strong>创建一个 <code class=\"gatsby-code-text\">src/like_button.js</code> 文件，监听器会创建一个预处理过的 <code class=\"gatsby-code-text\">like_button.js</code> 文件，它包含了适用于浏览器的普通 JavaScript 代码。当你编辑带有 JSX 的源文件时，转换过程将自动重新执行。</p>\n<p>这样，在旧浏览器上也能够使用现代 JavaScript 的语法特性，比如 class。我们刚才使用的工具叫 Babel，你可以从<a href=\"https://babeljs.io/docs/en/babel-cli/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">它的文档</a>中了解更多。</p>\n<p>如果你认为你已经习惯了构建工具，并希望它们能为你做更多事，<a href=\"/docs/create-a-new-react-app.html\">下一章节</a>描述了一些最流行和易上手的工具链。如果不使用构建工具 —— 直接以 scripts 标签的方式也可以很好地完成工作！</p>","frontmatter":{"title":"在网站中添加 React","next":"create-a-new-react-app.html","prev":"getting-started.html"},"fields":{"path":"content/docs/add-react-to-a-website.md","slug":"docs/add-react-to-a-website.html"}}},"pageContext":{"slug":"docs/add-react-to-a-website.html"}},"staticQueryHashes":[]}