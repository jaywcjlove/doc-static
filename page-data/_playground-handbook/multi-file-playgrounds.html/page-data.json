{"componentChunkName":"component---src-templates-playground-handbook-tsx","path":"/_playground-handbook/multi-file-playgrounds.html","result":{"pageContext":{"title":"Multi-File Playgrounds","lang":"en","html":"<h3 id=\"multi-file-playground\" style=\"position:relative;\"><a href=\"#multi-file-playground\" aria-label=\"multi file playground permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Multi-File Playground</h3>\n<p>The playground supports splitting the editorâ€™s text into multiple files via the same syntax as <a href=\"https://shikijs.github.io/twoslash/playground\">Twoslash</a> which is: <code>// @filename: newFile.ts</code>:</p>\n<pre class=\"shiki light-plus\" style=\"background-color: #FFFFFF; color: #000000\"><div class=\"language-id\">ts</div><div class='code-container'><code><div class='line'><span style=\"color: #008000\">// implicit first file (input.ts/tsx/js/jsx)</span></div><div class='line'><span style=\"color: #0000FF\">const</span><span style=\"color: #000000\"> </span><span style=\"color: #0070C1\">a</span><span style=\"color: #000000\"> = </span><span style=\"color: #098658\">1</span></div><div class='line'><span style=\"color: #008000\">// @filename: file2.ts</span></div><div class='line'><span style=\"color: #008000\">// Comment in a second file</span></div><div class='line'><span style=\"color: #0000FF\">const</span><span style=\"color: #000000\"> </span><span style=\"color: #0070C1\">a</span><span style=\"color: #000000\"> = </span><span style=\"color: #098658\">12</span></div><div class='line'><span style=\"color: #008000\">// @filename: file3.ts</span></div><div class='line'><span style=\"color: #008000\">// Comment in a third file</span></div><div class='line'><span style=\"color: #0000FF\">const</span><span style=\"color: #000000\"> </span><span style=\"color: #0070C1\">a</span><span style=\"color: #000000\"> = </span><span style=\"color: #098658\">123</span></div></code></div></pre>\n<p>Comprises of three separate files in the same folder. In each file <code>a</code> is assigned to a different value. You can import between these files using <code>import</code>/<code>export</code> by default, or changing the compiler flags to the appropriate module type for however you want to import:</p>\n<pre class=\"shiki light-plus\" style=\"background-color: #FFFFFF; color: #000000\"><div class=\"language-id\">ts</div><div class='code-container'><code><div class='line'><span style=\"color: #AF00DB\">export</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">type</span><span style=\"color: #000000\"> </span><span style=\"color: #1C6277\">Task</span><span style=\"color: #000000\"> = </span><span style=\"color: #A31515\">\"Do something\"</span></div><div class='line'></div><div class='line'><span style=\"color: #008000\">// @filename: file2.ts</span></div><div class='line'><span style=\"color: #AF00DB\">import</span><span style=\"color: #000000\"> { </span><span style=\"color: #001080\">Task</span><span style=\"color: #000000\"> } </span><span style=\"color: #AF00DB\">from</span><span style=\"color: #000000\"> </span><span style=\"color: #A31515\">\"./input.js\"</span></div></code></div></pre>"}},"staticQueryHashes":[]}