{"componentChunkName":"component---src-templates-play-example-tsx","path":"/id/play/3-7/fixits/big-number-literals.ts.html","result":{"pageContext":{"name":"Big number literals","title":"Big number literals","lang":"id","html":"\n Apakah anda tahu bahwa ada batas untuk seberapa besar bilangan\n yang dapat direpresentasikan dalam JavaScript ketika menulis kode program?\n\n<code><pre>\nconst nilaiTertinggiMaksimum = 9007199254740991;\nconst nilaiTerendahMaksimum = -9007199254740991;\n\n</pre></code>\n// Apabila bilangan anda lebih besar atau lebih kecil dari angka tersebut\n Anda mulai memasuki zona yang berbahaya\n\n<code><pre>\nconst lebihSatuDariMaksimal = 9007199254740992;\nconst kurangSatuDariMinimal = -9007199254740992;\n\n</pre></code>\n// Solusi untuk menangani masalah angka sebesar ini\n adalah dengan mengonversikan bilangan-bilangan tersebut ke BigInts\n dibandingkan dengan sebuah bilangan biasa\n\n https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/BigInt\n\n TypeScript kini menawarkan sebuah _fixit_ untuk angka\n literal yang memiliki nilai diatas 2^52 (positif / negatif).\n Fixit tersebut menambahkan sufiks \"n\" yang menginformasikan pada JavaScript\n bahwa tipe untuk bilangan tersebut adalah BigInts.\n\n Bilangan literal\n<code><pre>\n9007199254740993;\n-9007199254740993;\n9007199254740994;\n-9007199254740994;\n\n// Bilangan heksadesimal\n0x19999999999999;\n-0x19999999999999;\n0x20000000000000;\n-0x20000000000000;\n0x20000000000001;\n-0x20000000000001;\n","redirectHref":"id/play/?target=99#example/big-number-literals"}},"staticQueryHashes":[]}