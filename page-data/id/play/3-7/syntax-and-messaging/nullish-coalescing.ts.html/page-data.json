{"componentChunkName":"component---src-templates-play-example-tsx","path":"/id/play/3-7/syntax-and-messaging/nullish-coalescing.ts.html","result":{"pageContext":{"name":"Nullish Coalescing","title":"Nullish Coalescing","lang":"id","html":"\n Operator _nullish coalescing_ adalah sebuah alternatif\n untuk operator || yang akan mengembalikan ekspresi sebelah kanan\n apabila ekspresi sebelah kiri bernilai null atau undefined.\n\n Sebaliknya, operator || menggunakan pemeriksaan _falsy_, yang berarti\n sebuah string kosong atau bilangan yang bernilai akan dianggap false.\n\n Sebuah contoh yang baik untuk fitur ini adalah ketika berurusan dengan\n objek parsial yang memiliki nilai anggapan ketika sebuah pengidentifikasi\n tidak dinyatakan.\n\n<code><pre>\ninterface KonfigurasiAplikasi {\n    // Nilai anggapan: \"(tidak bernama)\"; string kosong merupakan nilai yang VALID\n    nama: string;\n\n    // Nilai anggapan: -1; 0 merupakan nilai yang valid\n    barang: number;\n\n    // Nilai anggapan: true\n    aktif: boolean;\n}\n\nfunction perbaruiAplikasi(konfigurasi: Partial<KonfigurasiAplikasi>) {\n    // Dengan operator _null-coalescing_\n    konfigurasi.nama = konfigurasi.nama ?? \"(tidak bernama)\";\n    konfigurasi.barang = konfigurasi.barang ?? -1;\n    konfigurasi.aktif = konfigurasi.aktif ?? true;\n\n    // Solusi saat ini\n    konfigurasi.nama = typeof konfigurasi.nama === \"string\" ? konfigurasi.nama : \"(tidak bernama)\";\n    konfigurasi.barang = typeof konfigurasi.barang === \"number\" ? konfigurasi.barang : -1;\n    konfigurasi.aktif = typeof konfigurasi.aktif === \"boolean\" ? konfigurasi.aktif : true;\n\n    // Menggunakan operator || yang dapat menghasilkan data yang buruk\n    konfigurasi.nama = konfigurasi.nama || \"(tidak bernama)\"; // tidak mengizinkan masukan bernilai \"\"\n    konfigurasi.barang = konfigurasi.barang || -1; // tidak mengizinkan masukan bernilai 0\n    konfigurasi.aktif = konfigurasi.aktif || true; // sangat buruk, karena selalu mengembalikan nilai true\n}\n\n  // Anda dapat membaca lebih lanjut tentang _nullish coalescing_ pada\n  // tulisan blog versi 3.7:\n  //\n  // https://devblogs.microsoft.com/typescript/announcing-typescript-3-7/\n","redirectHref":"id/play/?#example/nullish-coalescing"}},"staticQueryHashes":[]}