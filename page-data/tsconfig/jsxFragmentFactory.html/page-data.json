{"componentChunkName":"component---src-templates-tsconfig-option-one-page-tsx","path":"/tsconfig/jsxFragmentFactory.html","result":{"pageContext":{"title":"jsxFragmentFactory","lang":"en","html":"<p>Specify the JSX fragment factory function to use when targeting react JSX emit with <a href=\"#jsxFactory\"><code>jsxFactory</code></a> compiler option is specified, e.g. <code>Fragment</code>.</p>\n<p>For example with this TSConfig:</p>\n<pre class=\"shiki light-plus tsconfig lsp\" style=\"background-color: #FFFFFF; color: #000000\" tsconfig=\"true\"><div class='code-container'><code><div class='line'><span style=\"color: #000000\">{</span></div><div class='line'><span style=\"color: #000000\">  </span><span style=\"color: #0451A5\">\"<a aria-hidden=true tabindex=\"-1\" href='https://www.typescriptlang.org/tsconfig#compilerOptions'><data-lsp lsp=\"The set of compiler options for your project\">compilerOptions</data-lsp></a>\"</span><span style=\"color: #000000\">: {</span></div><div class='line'><span style=\"color: #000000\">    </span><span style=\"color: #0451A5\">\"<a aria-hidden=true tabindex=\"-1\" href='https://www.typescriptlang.org/tsconfig#target'><data-lsp lsp=\"Set the JavaScript language version for emitted JavaScript and include compatible library declarations.\">target</data-lsp></a>\"</span><span style=\"color: #000000\">: </span><span style=\"color: #A31515\">\"esnext\"</span><span style=\"color: #000000\">,</span></div><div class='line'><span style=\"color: #000000\">    </span><span style=\"color: #0451A5\">\"<a aria-hidden=true tabindex=\"-1\" href='https://www.typescriptlang.org/tsconfig#module'><data-lsp lsp=\"Specify what module code is generated.\">module</data-lsp></a>\"</span><span style=\"color: #000000\">: </span><span style=\"color: #A31515\">\"commonjs\"</span><span style=\"color: #000000\">,</span></div><div class='line'><span style=\"color: #000000\">    </span><span style=\"color: #0451A5\">\"<a aria-hidden=true tabindex=\"-1\" href='https://www.typescriptlang.org/tsconfig#jsx'><data-lsp lsp=\"Specify what JSX code is generated.\">jsx</data-lsp></a>\"</span><span style=\"color: #000000\">: </span><span style=\"color: #A31515\">\"react\"</span><span style=\"color: #000000\">,</span></div><div class='line'><span style=\"color: #000000\">    </span><span style=\"color: #0451A5\">\"<a aria-hidden=true tabindex=\"-1\" href='https://www.typescriptlang.org/tsconfig#jsxFactory'><data-lsp lsp=\"Specify the JSX factory function used when targeting React JSX emit, e.g. 'React.createElement' or 'h'\">jsxFactory</data-lsp></a>\"</span><span style=\"color: #000000\">: </span><span style=\"color: #A31515\">\"h\"</span><span style=\"color: #000000\">,</span></div><div class='line'><span style=\"color: #000000\">    </span><span style=\"color: #0451A5\">\"<a aria-hidden=true tabindex=\"-1\" href='https://www.typescriptlang.org/tsconfig#jsxFragmentFactory'><data-lsp lsp=\"Specify the JSX Fragment reference used for fragments when targeting React JSX emit e.g. 'React.Fragment' or 'Fragment'.\">jsxFragmentFactory</data-lsp></a>\"</span><span style=\"color: #000000\">: </span><span style=\"color: #A31515\">\"Fragment\"</span></div><div class='line'><span style=\"color: #000000\">  }</span></div><div class='line'><span style=\"color: #000000\">}</span></div></code></div></pre>\n<p>This TSX file:</p>\n<pre class=\"shiki light-plus\" style=\"background-color: #FFFFFF; color: #000000\"><div class=\"language-id\">tsx</div><div class='code-container'><code><div class='line'><span style=\"color: #AF00DB\">import</span><span style=\"color: #000000\"> { </span><span style=\"color: #001080\">h</span><span style=\"color: #000000\">, </span><span style=\"color: #001080\">Fragment</span><span style=\"color: #000000\"> } </span><span style=\"color: #AF00DB\">from</span><span style=\"color: #000000\"> </span><span style=\"color: #A31515\">\"preact\"</span><span style=\"color: #000000\">;</span></div><div class='line'></div><div class='line'><span style=\"color: #0000FF\">const</span><span style=\"color: #000000\"> </span><span style=\"color: #795E26\">HelloWorld</span><span style=\"color: #000000\"> = () </span><span style=\"color: #0000FF\">=&gt;</span><span style=\"color: #000000\"> (</span></div><div class='line'><span style=\"color: #000000\">  </span><span style=\"color: #800000\">&lt;&gt;</span></div><div class='line'><span style=\"color: #000000\">    </span><span style=\"color: #800000\">&lt;div&gt;</span><span style=\"color: #000000\">Hello</span><span style=\"color: #800000\">&lt;/div&gt;</span></div><div class='line'><span style=\"color: #000000\">  </span><span style=\"color: #800000\">&lt;/&gt;</span></div><div class='line'><span style=\"color: #000000\">);</span></div></code></div></pre>\n<p>Would look like:</p>\n<pre class=\"shiki light-plus twoslash lsp\" style=\"background-color: #FFFFFF; color: #000000\"><div class=\"language-id\">tsx</div><div class='code-container'><code><div class='line'><span style=\"color: #0000FF\">const</span><span style=\"color: #000000\"> </span><span style=\"color: #0070C1\">preact_1</span><span style=\"color: #000000\"> = </span><span style=\"color: #795E26\">require</span><span style=\"color: #000000\">(</span><span style=\"color: #A31515\">\"preact\"</span><span style=\"color: #000000\">);</span></div><div class='line'><span style=\"color: #0000FF\">const</span><span style=\"color: #000000\"> </span><span style=\"color: #795E26\">HelloWorld</span><span style=\"color: #000000\"> = () </span><span style=\"color: #0000FF\">=&gt;</span><span style=\"color: #000000\"> ((</span><span style=\"color: #098658\">0</span><span style=\"color: #000000\">, </span><span style=\"color: #001080\">preact_1</span><span style=\"color: #000000\">.</span><span style=\"color: #001080\">h</span><span style=\"color: #000000\">)(</span><span style=\"color: #001080\">preact_1</span><span style=\"color: #000000\">.</span><span style=\"color: #001080\">Fragment</span><span style=\"color: #000000\">, </span><span style=\"color: #0000FF\">null</span><span style=\"color: #000000\">,</span></div><div class='line'><span style=\"color: #000000\">    (</span><span style=\"color: #098658\">0</span><span style=\"color: #000000\">, </span><span style=\"color: #001080\">preact_1</span><span style=\"color: #000000\">.</span><span style=\"color: #001080\">h</span><span style=\"color: #000000\">)(</span><span style=\"color: #A31515\">\"div\"</span><span style=\"color: #000000\">, </span><span style=\"color: #0000FF\">null</span><span style=\"color: #000000\">, </span><span style=\"color: #A31515\">\"Hello\"</span><span style=\"color: #000000\">)));</span></div><div class='line'>&nbsp;</div></code><a class='playground-link' href='https://www.typescriptlang.org/play/#code/JYWwDg9gTgLgBAJQKYEMDG8BmUIjgcilQ3wCgB6cuAWlrQFcZbqKqABAZwAsIB3AURDAYrOJx4ChMGEgAmAMWAAbJAC44wAHaykADwB0AKw6i2x3fPQxoAT3VdT5+VBQBzEEk0xLGW+uduHl6mmhD8UDhQJpRiMChQrkgw6kgcmnoiMWwgELL0KupouDmaxqSkoJCwcADecFwANHAB7p7wAL5w2LhwAERgRFa9ANzlRZoc8AASSEpKEADq0EqycAC8cAAUAJTrAHxbpHBwADx7R8enssAAbnszcxAn5Nd3F8-n28NAA'>Try</a></div></pre>\n<p>This option can be used on a per-file basis too similar to <a href=\"https://babeljs.io/docs/en/babel-plugin-transform-react-jsx#fragments\">Babelâ€™s <code>/* @jsxFrag h */</code> directive</a>.</p>\n<p>For example:</p>\n<pre class=\"shiki light-plus twoslash lsp\" style=\"background-color: #FFFFFF; color: #000000\"><div class=\"language-id\">tsx</div><div class='code-container'><code><div class='line'><span style=\"color: #008000\">/** </span><span style=\"color: #0000FF\">@jsx</span><span style=\"color: #008000\"> h */</span></div><div class='line'><span style=\"color: #008000\">/** </span><span style=\"color: #0000FF\">@jsxFrag</span><span style=\"color: #008000\"> Fragment */</span></div><div class='line'>&nbsp;</div><div class='line'><span style=\"color: #AF00DB\">import</span><span style=\"color: #000000\"> { </span><span style=\"color: #001080\"><data-lsp lsp='(alias) function h(type: string, props: (JSXInternal.HTMLAttributes &amp; JSXInternal.SVGAttributes &amp; Record&lt;string, any>) | null, ...children: ComponentChildren[]): VNode&lt;any> (+1 overload)&#10;(alias) namespace h&#10;import h' >h</data-lsp></span><span style=\"color: #000000\">, </span><span style=\"color: #001080\"><data-lsp lsp='(alias) const Fragment: ComponentClass&lt;{}, {}>&#10;import Fragment' >Fragment</data-lsp></span><span style=\"color: #000000\"> } </span><span style=\"color: #AF00DB\">from</span><span style=\"color: #000000\"> </span><span style=\"color: #A31515\">\"preact\"</span><span style=\"color: #000000\">;</span></div><div class='line'>&nbsp;</div><div class='line'><span style=\"color: #0000FF\">const</span><span style=\"color: #000000\"> </span><span style=\"color: #795E26\"><data-lsp lsp='const HelloWorld: () => JSX.Element' >HelloWorld</data-lsp></span><span style=\"color: #000000\"> = () </span><span style=\"color: #0000FF\">=&gt;</span><span style=\"color: #000000\"> (</span></div><div class='line'><span style=\"color: #000000\">  </span><span style=\"color: #800000\">&lt;&gt;</span></div><div class='line'><span style=\"color: #000000\">    </span><span style=\"color: #800000\">&lt;<data-lsp lsp='(property) JSX.IntrinsicElements.div: React.DetailedHTMLProps&lt;React.HTMLAttributes&lt;HTMLDivElement>, HTMLDivElement>' >div</data-lsp>></span><span style=\"color: #000000\">Hello</span><span style=\"color: #800000\">&lt;/<data-lsp lsp='(property) JSX.IntrinsicElements.div: React.DetailedHTMLProps&lt;React.HTMLAttributes&lt;HTMLDivElement>, HTMLDivElement>' >div</data-lsp>></span></div><div class='line'><span style=\"color: #000000\">  </span><span style=\"color: #800000\">&lt;/&gt;</span></div><div class='line'><span style=\"color: #000000\">);</span></div></code><a class='playground-link' href='https://www.typescriptlang.org/play/#code/JYWwDg9gTgLgBAJQKYEMDG8BmUIjgcilQ3wCgB6cuAWlrQFcZbqKAqVuAAQCsBnADzgALOK3JsOPAQDEoKAOZxZCkEgB28MaVKhIsOAG9hAGiVz5qjXAC+cbLjgAiMEXQxHAbm1oIa3vAAJJAAbYIgAdWhggBM4AF44AAoASniAPiTSODgAHjSs7Nzo4AA3NKDQiBzyYrKC6vzkjyA'>Try</a></div></pre>","redirectHref":"/tsconfig#jsxFragmentFactory"}},"staticQueryHashes":[]}