{"componentChunkName":"component---src-templates-tsconfig-option-one-page-tsx","path":"/tsconfig/preserveValueImports.html","result":{"pageContext":{"title":"preserveValueImports","lang":"en","html":"<p>There are some cases where TypeScript can’t detect that you’re using an import. For example, take the following code:</p>\n<pre class=\"shiki light-plus\" style=\"background-color: #FFFFFF; color: #000000\"><div class=\"language-id\">ts</div><div class='code-container'><code><div class='line'><span style=\"color: #AF00DB\">import</span><span style=\"color: #000000\"> { </span><span style=\"color: #001080\">Animal</span><span style=\"color: #000000\"> } </span><span style=\"color: #AF00DB\">from</span><span style=\"color: #000000\"> </span><span style=\"color: #A31515\">\"./animal.js\"</span><span style=\"color: #000000\">;</span></div><div class='line'></div><div class='line'><span style=\"color: #795E26\">eval</span><span style=\"color: #000000\">(</span><span style=\"color: #A31515\">\"console.log(new Animal().isDangerous())\"</span><span style=\"color: #000000\">);</span></div></code></div></pre>\n<p>or code using ‘Compiles to HTML’ languages like Svelte or Vue.</p>\n<p>When combined with <a href=\"#isolatedModules\"><code>isolatedModules</code></a>: imported types <em>must</em> be marked as type-only because compilers that process single files at a time have no way of knowing whether imports are values that appear unused, or a type that must be removed in order to avoid a runtime crash.</p>\n<p>For example, in the following code <code>TitleComponent</code> is a function and <code>TitleComponentProps</code> is a type with <code>isolatedModules</code> and <code>preserveValueImports</code> are enabled:</p>\n<pre class=\"shiki light-plus twoslash lsp\" style=\"background-color: #FFFFFF; color: #000000\"><div class=\"language-id\">ts</div><div class='code-container'><code><div class='line'><span style=\"color: #AF00DB\">import</span><span style=\"color: #000000\"> { </span><span style=\"color: #001080\"><data-lsp lsp='(alias) function TitleComponent(): void&#10;import TitleComponent' >TitleComponent</data-lsp></span><span style=\"color: #000000\">, </span><span style=\"color: #001080\"><data-lsp lsp='(alias) interface TitleComponentProps&#10;import TitleComponentProps' >TitleComponentProps</data-lsp></span><span style=\"color: #000000\"> } </span><span style=\"color: #AF00DB\">from</span><span style=\"color: #000000\"> </span><span style=\"color: #A31515\">\"./TitleComponent.js\"</span><span style=\"color: #000000\">;</span></div></code><a class='playground-link' href='https://www.typescriptlang.org/play/#code/PTAEAEFMCdoe2gZwFygIwBYsCgQQA7SSIwBukAagIYA2ArpAJIC2+CALiqO9A7mOACWiODSrtIAEwCycSXRrFUPPnnDM5CyKmIAmAAxoArNn4QAZoMUA7Ks22gAKoPaKAwnFZxrka+wB0nNiQAB5s0Oyg5nTWAMbsgt5OLu6ebD5+ABQAlKAA3gC+wWEcoIJ+MOZUsZDJrpAeXhnsAArw+Ij5RWqWNnYO5ZKhgYhmALQTsXTsE2PYgl4R+XWpTb7sADQrDWne621wHaAFUfDMoABE-sDO9Y3p6-4AVogXANxAA'>Try</a></div></pre>\n<p>Which can be fixed by prefixing <code>TitleComponentProps</code> with <code>type</code> to mark it as a type-only import:</p>\n<pre class=\"shiki light-plus twoslash lsp\" style=\"background-color: #FFFFFF; color: #000000\"><div class=\"language-id\">ts</div><div class='code-container'><code><div class='line'><span style=\"color: #AF00DB\">import</span><span style=\"color: #000000\"> { </span><span style=\"color: #001080\"><data-lsp lsp='(alias) function TitleComponent(): void&#10;import TitleComponent' >TitleComponent</data-lsp></span><span style=\"color: #000000\">, </span><span style=\"color: #001080\">type</span><span style=\"color: #000000\"> </span><span style=\"color: #001080\"><data-lsp lsp='(alias) interface TitleComponentProps&#10;import TitleComponentProps' >TitleComponentProps</data-lsp></span><span style=\"color: #000000\"> } </span><span style=\"color: #AF00DB\">from</span><span style=\"color: #000000\"> </span><span style=\"color: #A31515\">\"./TitleComponent.js\"</span><span style=\"color: #000000\">;</span></div></code><a class='playground-link' href='https://www.typescriptlang.org/play/#code/PTAEAEAcCcFMGdbQG6wGoEMA2BXWBJAW0gHtoAXeALlHOjwCgQIBLeErDc2AEwFkSPHFgQ06jZuEKDhsGggBMABgCMAVgZMw4AGYsRAOwyE5oACotyIgMIliJA7APkAdJQawAHqQqgdOAwBjchYHc0sbO1JHZwAKAEpQAG8AXw9vMnJQFmckHQxA2HCrWFt7GPIABWgSSHhktMk9Q2NTHJ4vN3gtUABafsCccn7ehhZ7XyTiyPKncgAaWgBPSCKLErLouera+pS-GsJQACIXYHWZrecXACt4Y4BuIA'>Try</a></div></pre>","redirectHref":"/tsconfig#preserveValueImports"}},"staticQueryHashes":[]}