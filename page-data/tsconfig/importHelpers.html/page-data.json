{"componentChunkName":"component---src-templates-tsconfig-option-one-page-tsx","path":"/tsconfig/importHelpers.html","result":{"pageContext":{"title":"importHelpers","lang":"en","html":"<p>For certain downleveling operations, TypeScript uses some helper code for operations like extending class, spreading arrays or objects, and async operations.\nBy default, these helpers are inserted into files which use them.\nThis can result in code duplication if the same helper is used in many different modules.</p>\n<p>If the <code>importHelpers</code> flag is on, these helper functions are instead imported from the <a href=\"https://www.npmjs.com/package/tslib\">tslib</a> module.\nYou will need to ensure that the <code>tslib</code> module is able to be imported at runtime.\nThis only affects modules; global script files will not attempt to import modules.</p>\n<p>For example, with this TypeScript:</p>\n<pre class=\"shiki light-plus\" style=\"background-color: #FFFFFF; color: #000000\"><div class=\"language-id\">ts</div><div class='code-container'><code><div class='line'><span style=\"color: #AF00DB\">export</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">function</span><span style=\"color: #000000\"> </span><span style=\"color: #795E26\">fn</span><span style=\"color: #000000\">(</span><span style=\"color: #001080\">arr</span><span style=\"color: #000000\">: </span><span style=\"color: #1C6277\">number</span><span style=\"color: #000000\">[]) {</span></div><div class='line'><span style=\"color: #000000\">  </span><span style=\"color: #0000FF\">const</span><span style=\"color: #000000\"> </span><span style=\"color: #0070C1\">arr2</span><span style=\"color: #000000\"> = [</span><span style=\"color: #098658\">1</span><span style=\"color: #000000\">, ...</span><span style=\"color: #001080\">arr</span><span style=\"color: #000000\">];</span></div><div class='line'><span style=\"color: #000000\">}</span></div></code></div></pre>\n<p>Turning on <a href=\"#downlevelIteration\"><code>downlevelIteration</code></a> and <code>importHelpers</code> is still false:</p>\n<pre class=\"shiki light-plus twoslash lsp\" style=\"background-color: #FFFFFF; color: #000000\"><div class=\"language-id\">ts</div><div class='code-container'><code><div class='line'><span style=\"color: #0000FF\">var</span><span style=\"color: #000000\"> </span><span style=\"color: #001080\">__read</span><span style=\"color: #000000\"> = (</span><span style=\"color: #0000FF\">this</span><span style=\"color: #000000\"> && </span><span style=\"color: #0000FF\">this</span><span style=\"color: #000000\">.</span><span style=\"color: #001080\">__read</span><span style=\"color: #000000\">) || </span><span style=\"color: #0000FF\">function</span><span style=\"color: #000000\"> (</span><span style=\"color: #001080\">o</span><span style=\"color: #000000\">, </span><span style=\"color: #001080\">n</span><span style=\"color: #000000\">) {</span></div><div class='line'><span style=\"color: #000000\">    </span><span style=\"color: #0000FF\">var</span><span style=\"color: #000000\"> </span><span style=\"color: #001080\">m</span><span style=\"color: #000000\"> = </span><span style=\"color: #0000FF\">typeof</span><span style=\"color: #000000\"> </span><span style=\"color: #1C6277\">Symbol</span><span style=\"color: #000000\"> === </span><span style=\"color: #A31515\">\"function\"</span><span style=\"color: #000000\"> && </span><span style=\"color: #001080\">o</span><span style=\"color: #000000\">[</span><span style=\"color: #1C6277\">Symbol</span><span style=\"color: #000000\">.</span><span style=\"color: #001080\">iterator</span><span style=\"color: #000000\">];</span></div><div class='line'><span style=\"color: #000000\">    </span><span style=\"color: #AF00DB\">if</span><span style=\"color: #000000\"> (!</span><span style=\"color: #001080\">m</span><span style=\"color: #000000\">) </span><span style=\"color: #AF00DB\">return</span><span style=\"color: #000000\"> </span><span style=\"color: #001080\">o</span><span style=\"color: #000000\">;</span></div><div class='line'><span style=\"color: #000000\">    </span><span style=\"color: #0000FF\">var</span><span style=\"color: #000000\"> </span><span style=\"color: #001080\">i</span><span style=\"color: #000000\"> = </span><span style=\"color: #001080\">m</span><span style=\"color: #000000\">.</span><span style=\"color: #795E26\">call</span><span style=\"color: #000000\">(</span><span style=\"color: #001080\">o</span><span style=\"color: #000000\">), </span><span style=\"color: #001080\">r</span><span style=\"color: #000000\">, </span><span style=\"color: #001080\">ar</span><span style=\"color: #000000\"> = [], </span><span style=\"color: #001080\">e</span><span style=\"color: #000000\">;</span></div><div class='line'><span style=\"color: #000000\">    </span><span style=\"color: #AF00DB\">try</span><span style=\"color: #000000\"> {</span></div><div class='line'><span style=\"color: #000000\">        </span><span style=\"color: #AF00DB\">while</span><span style=\"color: #000000\"> ((</span><span style=\"color: #001080\">n</span><span style=\"color: #000000\"> === </span><span style=\"color: #0000FF\">void</span><span style=\"color: #000000\"> </span><span style=\"color: #098658\">0</span><span style=\"color: #000000\"> || </span><span style=\"color: #001080\">n</span><span style=\"color: #000000\">-- &gt; </span><span style=\"color: #098658\">0</span><span style=\"color: #000000\">) && !(</span><span style=\"color: #001080\">r</span><span style=\"color: #000000\"> = </span><span style=\"color: #001080\">i</span><span style=\"color: #000000\">.</span><span style=\"color: #795E26\">next</span><span style=\"color: #000000\">()).</span><span style=\"color: #001080\">done</span><span style=\"color: #000000\">) </span><span style=\"color: #001080\">ar</span><span style=\"color: #000000\">.</span><span style=\"color: #795E26\">push</span><span style=\"color: #000000\">(</span><span style=\"color: #001080\">r</span><span style=\"color: #000000\">.</span><span style=\"color: #001080\">value</span><span style=\"color: #000000\">);</span></div><div class='line'><span style=\"color: #000000\">    }</span></div><div class='line'><span style=\"color: #000000\">    </span><span style=\"color: #AF00DB\">catch</span><span style=\"color: #000000\"> (</span><span style=\"color: #001080\">error</span><span style=\"color: #000000\">) { </span><span style=\"color: #001080\">e</span><span style=\"color: #000000\"> = { </span><span style=\"color: #001080\">error:</span><span style=\"color: #000000\"> </span><span style=\"color: #001080\">error</span><span style=\"color: #000000\"> }; }</span></div><div class='line'><span style=\"color: #000000\">    </span><span style=\"color: #AF00DB\">finally</span><span style=\"color: #000000\"> {</span></div><div class='line'><span style=\"color: #000000\">        </span><span style=\"color: #AF00DB\">try</span><span style=\"color: #000000\"> {</span></div><div class='line'><span style=\"color: #000000\">            </span><span style=\"color: #AF00DB\">if</span><span style=\"color: #000000\"> (</span><span style=\"color: #001080\">r</span><span style=\"color: #000000\"> && !</span><span style=\"color: #001080\">r</span><span style=\"color: #000000\">.</span><span style=\"color: #001080\">done</span><span style=\"color: #000000\"> && (</span><span style=\"color: #001080\">m</span><span style=\"color: #000000\"> = </span><span style=\"color: #001080\">i</span><span style=\"color: #000000\">[</span><span style=\"color: #A31515\">\"return\"</span><span style=\"color: #000000\">])) </span><span style=\"color: #001080\">m</span><span style=\"color: #000000\">.</span><span style=\"color: #795E26\">call</span><span style=\"color: #000000\">(</span><span style=\"color: #001080\">i</span><span style=\"color: #000000\">);</span></div><div class='line'><span style=\"color: #000000\">        }</span></div><div class='line'><span style=\"color: #000000\">        </span><span style=\"color: #AF00DB\">finally</span><span style=\"color: #000000\"> { </span><span style=\"color: #AF00DB\">if</span><span style=\"color: #000000\"> (</span><span style=\"color: #001080\">e</span><span style=\"color: #000000\">) </span><span style=\"color: #AF00DB\">throw</span><span style=\"color: #000000\"> </span><span style=\"color: #001080\">e</span><span style=\"color: #000000\">.</span><span style=\"color: #001080\">error</span><span style=\"color: #000000\">; }</span></div><div class='line'><span style=\"color: #000000\">    }</span></div><div class='line'><span style=\"color: #000000\">    </span><span style=\"color: #AF00DB\">return</span><span style=\"color: #000000\"> </span><span style=\"color: #001080\">ar</span><span style=\"color: #000000\">;</span></div><div class='line'><span style=\"color: #000000\">};</span></div><div class='line'><span style=\"color: #0000FF\">var</span><span style=\"color: #000000\"> </span><span style=\"color: #001080\">__spreadArray</span><span style=\"color: #000000\"> = (</span><span style=\"color: #0000FF\">this</span><span style=\"color: #000000\"> && </span><span style=\"color: #0000FF\">this</span><span style=\"color: #000000\">.</span><span style=\"color: #001080\">__spreadArray</span><span style=\"color: #000000\">) || </span><span style=\"color: #0000FF\">function</span><span style=\"color: #000000\"> (</span><span style=\"color: #001080\">to</span><span style=\"color: #000000\">, </span><span style=\"color: #001080\">from</span><span style=\"color: #000000\">, </span><span style=\"color: #001080\">pack</span><span style=\"color: #000000\">) {</span></div><div class='line'><span style=\"color: #000000\">    </span><span style=\"color: #AF00DB\">if</span><span style=\"color: #000000\"> (</span><span style=\"color: #001080\">pack</span><span style=\"color: #000000\"> || </span><span style=\"color: #0000FF\">arguments</span><span style=\"color: #000000\">.</span><span style=\"color: #001080\">length</span><span style=\"color: #000000\"> === </span><span style=\"color: #098658\">2</span><span style=\"color: #000000\">) </span><span style=\"color: #AF00DB\">for</span><span style=\"color: #000000\"> (</span><span style=\"color: #0000FF\">var</span><span style=\"color: #000000\"> </span><span style=\"color: #001080\">i</span><span style=\"color: #000000\"> = </span><span style=\"color: #098658\">0</span><span style=\"color: #000000\">, </span><span style=\"color: #001080\">l</span><span style=\"color: #000000\"> = </span><span style=\"color: #001080\">from</span><span style=\"color: #000000\">.</span><span style=\"color: #001080\">length</span><span style=\"color: #000000\">, </span><span style=\"color: #001080\">ar</span><span style=\"color: #000000\">; </span><span style=\"color: #001080\">i</span><span style=\"color: #000000\"> &lt; </span><span style=\"color: #001080\">l</span><span style=\"color: #000000\">; </span><span style=\"color: #001080\">i</span><span style=\"color: #000000\">++) {</span></div><div class='line'><span style=\"color: #000000\">        </span><span style=\"color: #AF00DB\">if</span><span style=\"color: #000000\"> (</span><span style=\"color: #001080\">ar</span><span style=\"color: #000000\"> || !(</span><span style=\"color: #001080\">i</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">in</span><span style=\"color: #000000\"> </span><span style=\"color: #001080\">from</span><span style=\"color: #000000\">)) {</span></div><div class='line'><span style=\"color: #000000\">            </span><span style=\"color: #AF00DB\">if</span><span style=\"color: #000000\"> (!</span><span style=\"color: #001080\">ar</span><span style=\"color: #000000\">) </span><span style=\"color: #001080\">ar</span><span style=\"color: #000000\"> = </span><span style=\"color: #1C6277\">Array</span><span style=\"color: #000000\">.</span><span style=\"color: #001080\">prototype</span><span style=\"color: #000000\">.</span><span style=\"color: #001080\">slice</span><span style=\"color: #000000\">.</span><span style=\"color: #795E26\">call</span><span style=\"color: #000000\">(</span><span style=\"color: #001080\">from</span><span style=\"color: #000000\">, </span><span style=\"color: #098658\">0</span><span style=\"color: #000000\">, </span><span style=\"color: #001080\">i</span><span style=\"color: #000000\">);</span></div><div class='line'><span style=\"color: #000000\">            </span><span style=\"color: #001080\">ar</span><span style=\"color: #000000\">[</span><span style=\"color: #001080\">i</span><span style=\"color: #000000\">] = </span><span style=\"color: #001080\">from</span><span style=\"color: #000000\">[</span><span style=\"color: #001080\">i</span><span style=\"color: #000000\">];</span></div><div class='line'><span style=\"color: #000000\">        }</span></div><div class='line'><span style=\"color: #000000\">    }</span></div><div class='line'><span style=\"color: #000000\">    </span><span style=\"color: #AF00DB\">return</span><span style=\"color: #000000\"> </span><span style=\"color: #001080\">to</span><span style=\"color: #000000\">.</span><span style=\"color: #795E26\">concat</span><span style=\"color: #000000\">(</span><span style=\"color: #001080\">ar</span><span style=\"color: #000000\"> || </span><span style=\"color: #1C6277\">Array</span><span style=\"color: #000000\">.</span><span style=\"color: #001080\">prototype</span><span style=\"color: #000000\">.</span><span style=\"color: #001080\">slice</span><span style=\"color: #000000\">.</span><span style=\"color: #795E26\">call</span><span style=\"color: #000000\">(</span><span style=\"color: #001080\">from</span><span style=\"color: #000000\">));</span></div><div class='line'><span style=\"color: #000000\">};</span></div><div class='line'><span style=\"color: #AF00DB\">export</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">function</span><span style=\"color: #000000\"> </span><span style=\"color: #795E26\">fn</span><span style=\"color: #000000\">(</span><span style=\"color: #001080\">arr</span><span style=\"color: #000000\">) {</span></div><div class='line'><span style=\"color: #000000\">    </span><span style=\"color: #0000FF\">var</span><span style=\"color: #000000\"> </span><span style=\"color: #001080\">arr2</span><span style=\"color: #000000\"> = </span><span style=\"color: #795E26\">__spreadArray</span><span style=\"color: #000000\">([</span><span style=\"color: #098658\">1</span><span style=\"color: #000000\">], </span><span style=\"color: #795E26\">__read</span><span style=\"color: #000000\">(</span><span style=\"color: #001080\">arr</span><span style=\"color: #000000\">), </span><span style=\"color: #0000FF\">false</span><span style=\"color: #000000\">);</span></div><div class='line'><span style=\"color: #000000\">}</span></div><div class='line'>&nbsp;</div></code><a class='playground-link' href='https://www.typescriptlang.org/play/#code/PTAEAEGcAsHsHcCiBbAlgFwFAgughgE4DmApugFyiIDKArNmOACYIB2ANiQG4nsYkE86VLFaYSADwAOsAulAAzAK6sAxsNGLWACkIFKrJcgBGAgNoBdAJSgA3plChVoyPL0AmUAF5QZgIwANKAAdKF6FgDcmAC+QA'>Try</a></div></pre>\n<p>Then turning on both <a href=\"#downlevelIteration\"><code>downlevelIteration</code></a> and <code>importHelpers</code>:</p>\n<pre class=\"shiki light-plus twoslash lsp\" style=\"background-color: #FFFFFF; color: #000000\"><div class=\"language-id\">ts</div><div class='code-container'><code><div class='line'><span style=\"color: #AF00DB\">import</span><span style=\"color: #000000\"> { </span><span style=\"color: #001080\">__read</span><span style=\"color: #000000\">, </span><span style=\"color: #001080\">__spreadArray</span><span style=\"color: #000000\"> } </span><span style=\"color: #AF00DB\">from</span><span style=\"color: #000000\"> </span><span style=\"color: #A31515\">\"tslib\"</span><span style=\"color: #000000\">;</span></div><div class='line'><span style=\"color: #AF00DB\">export</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">function</span><span style=\"color: #000000\"> </span><span style=\"color: #795E26\">fn</span><span style=\"color: #000000\">(</span><span style=\"color: #001080\">arr</span><span style=\"color: #000000\">) {</span></div><div class='line'><span style=\"color: #000000\">    </span><span style=\"color: #0000FF\">var</span><span style=\"color: #000000\"> </span><span style=\"color: #001080\">arr2</span><span style=\"color: #000000\"> = </span><span style=\"color: #795E26\">__spreadArray</span><span style=\"color: #000000\">([</span><span style=\"color: #098658\">1</span><span style=\"color: #000000\">], </span><span style=\"color: #795E26\">__read</span><span style=\"color: #000000\">(</span><span style=\"color: #001080\">arr</span><span style=\"color: #000000\">), </span><span style=\"color: #0000FF\">false</span><span style=\"color: #000000\">);</span></div><div class='line'><span style=\"color: #000000\">}</span></div><div class='line'>&nbsp;</div></code><a class='playground-link' href='https://www.typescriptlang.org/play/#code/PTAEAEGcAsHsHcCiBbAlgFwFAgughgE4DmApugFyiIDKArNmOACYIB2ANiQG4nsYkE86VLFYMIqZAAdYBdNF5SBkceFaxEBArJUkAHjLmgAZgFdWAY2GiTrABSEClVqeQAjAQG0AugEpQAN6YoKAWopDooI4ATKAAvKCeAIwANKAAdJmO3gDcmAC+QA'>Try</a></div></pre>\n<p>You can use <a href=\"#noEmitHelpers\"><code>noEmitHelpers</code></a> when you provide your own implementations of these functions.</p>","redirectHref":"/tsconfig#importHelpers"}},"staticQueryHashes":[]}