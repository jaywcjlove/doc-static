{"componentChunkName":"component---src-templates-tsconfig-option-one-page-tsx","path":"/tsconfig/suppressExcessPropertyErrors.html","result":{"pageContext":{"title":"suppressExcessPropertyErrors","lang":"en","html":"<p>This disables reporting of excess property errors, such as the one shown in the following example:</p>\n<pre class=\"shiki light-plus twoslash lsp\" style=\"background-color: #FFFFFF; color: #000000\"><div class=\"language-id\">ts</div><div class='code-container'><code><div class='line'><span style=\"color: #0000FF\">type</span><span style=\"color: #000000\"> </span><span style=\"color: #1C6277\"><data-lsp lsp='type Point = {&#10;    x: number;&#10;    y: number;&#10;}' >Point</data-lsp></span><span style=\"color: #000000\"> = { </span><span style=\"color: #001080\"><data-lsp lsp='(property) x: number' >x</data-lsp></span><span style=\"color: #000000\">: </span><span style=\"color: #1C6277\">number</span><span style=\"color: #000000\">; </span><span style=\"color: #001080\"><data-lsp lsp='(property) y: number' >y</data-lsp></span><span style=\"color: #000000\">: </span><span style=\"color: #1C6277\">number</span><span style=\"color: #000000\"> };</span></div><div class='line'><span style=\"color: #0000FF\">const</span><span style=\"color: #000000\"> </span><span style=\"color: #0070C1\"><data-lsp lsp='const p: Point' >p</data-lsp></span><span style=\"color: #000000\">: </span><span style=\"color: #1C6277\"><data-lsp lsp='type Point = {&#10;    x: number;&#10;    y: number;&#10;}' >Point</data-lsp></span><span style=\"color: #000000\"> = { </span><span style=\"color: #001080\"><data-lsp lsp='(property) x: number' >x</data-lsp>:</span><span style=\"color: #000000\"> </span><span style=\"color: #098658\">1</span><span style=\"color: #000000\">, </span><span style=\"color: #001080\"><data-lsp lsp='(property) y: number' >y</data-lsp>:</span><span style=\"color: #000000\"> </span><span style=\"color: #098658\">3</span><span style=\"color: #000000\">, </span><span style=\"color: #001080\"><data-lsp lsp='(property) m: number' >m</data-lsp>:</span><span style=\"color: #000000\"> </span><span style=\"color: #098658\">10</span><span style=\"color: #000000\"> };</span></div><span class=\"error\"><span>Type '{ x: number; y: number; m: number; }' is not assignable to type 'Point'.\n  Object literal may only specify known properties, and 'm' does not exist in type 'Point'.</span><span class=\"code\">2322</span></span><span class=\"error-behind\">Type '{ x: number; y: number; m: number; }' is not assignable to type 'Point'.\n  Object literal may only specify known properties, and 'm' does not exist in type 'Point'.</span></code><a class='playground-link' href='https://www.typescriptlang.org/play/#code/PTAEAEFMCdoe2gZwFygEwGY1oFABcBPAB0lAAU4BLAOz1AF5QBvUAD1WoFcBbAIxgDcoAhx79ooAL4CcAYzjVEdIqgo06jFu1ABGADTDUGA91Q6ADFIFA'>Try</a></div></pre>\n<p>This flag was added to help people migrate to the stricter checking of new object literals in <a href=\"/docs/handbook/release-notes/typescript-1-6.html#stricter-object-literal-assignment-checks\">TypeScript 1.6</a>.</p>\n<p>We donâ€™t recommend using this flag in a modern codebase, you can suppress one-off cases where you need it using <code>// @ts-ignore</code>.</p>","redirectHref":"/tsconfig#suppressExcessPropertyErrors"}},"staticQueryHashes":[]}