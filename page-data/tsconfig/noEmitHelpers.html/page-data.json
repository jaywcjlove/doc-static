{"componentChunkName":"component---src-templates-tsconfig-option-one-page-tsx","path":"/tsconfig/noEmitHelpers.html","result":{"pageContext":{"title":"noEmitHelpers","lang":"en","html":"<p>Instead of importing helpers with <a href=\"#importHelpers\"><code>importHelpers</code></a>, you can provide implementations in the global scope for the helpers you use and completely turn off emitting of helper functions.</p>\n<p>For example, using this <code>async</code> function in ES5 requires a <code>await</code>-like function and <code>generator</code>-like function to run:</p>\n<pre class=\"shiki light-plus twoslash lsp\" style=\"background-color: #FFFFFF; color: #000000\"><div class=\"language-id\">ts</div><div class='code-container'><code><div class='line'><span style=\"color: #0000FF\">const</span><span style=\"color: #000000\"> </span><span style=\"color: #795E26\"><data-lsp lsp='const getAPI: (url: string) => Promise&lt;{}>' >getAPI</data-lsp></span><span style=\"color: #000000\"> = </span><span style=\"color: #0000FF\">async</span><span style=\"color: #000000\"> (</span><span style=\"color: #001080\"><data-lsp lsp='(parameter) url: string' >url</data-lsp></span><span style=\"color: #000000\">: </span><span style=\"color: #1C6277\">string</span><span style=\"color: #000000\">) </span><span style=\"color: #0000FF\">=&gt;</span><span style=\"color: #000000\"> {</span></div><div class='line'><span style=\"color: #000000\">  </span><span style=\"color: #008000\">// Get API</span></div><div class='line'><span style=\"color: #000000\">  </span><span style=\"color: #AF00DB\">return</span><span style=\"color: #000000\"> {};</span></div><div class='line'><span style=\"color: #000000\">};</span></div></code><a class='playground-link' href='https://www.typescriptlang.org/play/#code/MYewdgzgLgBA5gUygQQAoEkYF4YEMICeYwMAFAK4BOANgFwzSUCWYcAlNgHwwDeAUDBgB6ITADiSGGnQCYlJFTC8AvgG4+aoA'>Try</a></div></pre>\n<p>Which creates quite a lot of JavaScript:</p>\n<pre class=\"shiki light-plus twoslash lsp\" style=\"background-color: #FFFFFF; color: #000000\"><div class=\"language-id\">ts</div><div class='code-container'><code><div class='line'><span style=\"color: #A31515\">\"use strict\"</span><span style=\"color: #000000\">;</span></div><div class='line'><span style=\"color: #0000FF\">var</span><span style=\"color: #000000\"> </span><span style=\"color: #001080\">__awaiter</span><span style=\"color: #000000\"> = (</span><span style=\"color: #0000FF\">this</span><span style=\"color: #000000\"> && </span><span style=\"color: #0000FF\">this</span><span style=\"color: #000000\">.</span><span style=\"color: #001080\">__awaiter</span><span style=\"color: #000000\">) || </span><span style=\"color: #0000FF\">function</span><span style=\"color: #000000\"> (</span><span style=\"color: #001080\">thisArg</span><span style=\"color: #000000\">, </span><span style=\"color: #001080\">_arguments</span><span style=\"color: #000000\">, </span><span style=\"color: #001080\">P</span><span style=\"color: #000000\">, </span><span style=\"color: #001080\">generator</span><span style=\"color: #000000\">) {</span></div><div class='line'><span style=\"color: #000000\">    </span><span style=\"color: #0000FF\">function</span><span style=\"color: #000000\"> </span><span style=\"color: #795E26\">adopt</span><span style=\"color: #000000\">(</span><span style=\"color: #001080\">value</span><span style=\"color: #000000\">) { </span><span style=\"color: #AF00DB\">return</span><span style=\"color: #000000\"> </span><span style=\"color: #001080\">value</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">instanceof</span><span style=\"color: #000000\"> </span><span style=\"color: #1C6277\">P</span><span style=\"color: #000000\"> ? </span><span style=\"color: #001080\">value</span><span style=\"color: #000000\"> : </span><span style=\"color: #0000FF\">new</span><span style=\"color: #000000\"> </span><span style=\"color: #795E26\">P</span><span style=\"color: #000000\">(</span><span style=\"color: #0000FF\">function</span><span style=\"color: #000000\"> (</span><span style=\"color: #001080\">resolve</span><span style=\"color: #000000\">) { </span><span style=\"color: #795E26\">resolve</span><span style=\"color: #000000\">(</span><span style=\"color: #001080\">value</span><span style=\"color: #000000\">); }); }</span></div><div class='line'><span style=\"color: #000000\">    </span><span style=\"color: #AF00DB\">return</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">new</span><span style=\"color: #000000\"> (</span><span style=\"color: #0070C1\">P</span><span style=\"color: #000000\"> || (</span><span style=\"color: #0070C1\">P</span><span style=\"color: #000000\"> = </span><span style=\"color: #1C6277\">Promise</span><span style=\"color: #000000\">))(</span><span style=\"color: #0000FF\">function</span><span style=\"color: #000000\"> (</span><span style=\"color: #001080\">resolve</span><span style=\"color: #000000\">, </span><span style=\"color: #001080\">reject</span><span style=\"color: #000000\">) {</span></div><div class='line'><span style=\"color: #000000\">        </span><span style=\"color: #0000FF\">function</span><span style=\"color: #000000\"> </span><span style=\"color: #795E26\">fulfilled</span><span style=\"color: #000000\">(</span><span style=\"color: #001080\">value</span><span style=\"color: #000000\">) { </span><span style=\"color: #AF00DB\">try</span><span style=\"color: #000000\"> { </span><span style=\"color: #795E26\">step</span><span style=\"color: #000000\">(</span><span style=\"color: #001080\">generator</span><span style=\"color: #000000\">.</span><span style=\"color: #795E26\">next</span><span style=\"color: #000000\">(</span><span style=\"color: #001080\">value</span><span style=\"color: #000000\">)); } </span><span style=\"color: #AF00DB\">catch</span><span style=\"color: #000000\"> (</span><span style=\"color: #001080\">e</span><span style=\"color: #000000\">) { </span><span style=\"color: #795E26\">reject</span><span style=\"color: #000000\">(</span><span style=\"color: #001080\">e</span><span style=\"color: #000000\">); } }</span></div><div class='line'><span style=\"color: #000000\">        </span><span style=\"color: #0000FF\">function</span><span style=\"color: #000000\"> </span><span style=\"color: #795E26\">rejected</span><span style=\"color: #000000\">(</span><span style=\"color: #001080\">value</span><span style=\"color: #000000\">) { </span><span style=\"color: #AF00DB\">try</span><span style=\"color: #000000\"> { </span><span style=\"color: #795E26\">step</span><span style=\"color: #000000\">(</span><span style=\"color: #001080\">generator</span><span style=\"color: #000000\">[</span><span style=\"color: #A31515\">\"throw\"</span><span style=\"color: #000000\">](</span><span style=\"color: #001080\">value</span><span style=\"color: #000000\">)); } </span><span style=\"color: #AF00DB\">catch</span><span style=\"color: #000000\"> (</span><span style=\"color: #001080\">e</span><span style=\"color: #000000\">) { </span><span style=\"color: #795E26\">reject</span><span style=\"color: #000000\">(</span><span style=\"color: #001080\">e</span><span style=\"color: #000000\">); } }</span></div><div class='line'><span style=\"color: #000000\">        </span><span style=\"color: #0000FF\">function</span><span style=\"color: #000000\"> </span><span style=\"color: #795E26\">step</span><span style=\"color: #000000\">(</span><span style=\"color: #001080\">result</span><span style=\"color: #000000\">) { </span><span style=\"color: #001080\">result</span><span style=\"color: #000000\">.</span><span style=\"color: #001080\">done</span><span style=\"color: #000000\"> ? </span><span style=\"color: #795E26\">resolve</span><span style=\"color: #000000\">(</span><span style=\"color: #001080\">result</span><span style=\"color: #000000\">.</span><span style=\"color: #001080\">value</span><span style=\"color: #000000\">) : </span><span style=\"color: #795E26\">adopt</span><span style=\"color: #000000\">(</span><span style=\"color: #001080\">result</span><span style=\"color: #000000\">.</span><span style=\"color: #001080\">value</span><span style=\"color: #000000\">).</span><span style=\"color: #795E26\">then</span><span style=\"color: #000000\">(</span><span style=\"color: #001080\">fulfilled</span><span style=\"color: #000000\">, </span><span style=\"color: #001080\">rejected</span><span style=\"color: #000000\">); }</span></div><div class='line'><span style=\"color: #000000\">        </span><span style=\"color: #795E26\">step</span><span style=\"color: #000000\">((</span><span style=\"color: #001080\">generator</span><span style=\"color: #000000\"> = </span><span style=\"color: #001080\">generator</span><span style=\"color: #000000\">.</span><span style=\"color: #795E26\">apply</span><span style=\"color: #000000\">(</span><span style=\"color: #001080\">thisArg</span><span style=\"color: #000000\">, </span><span style=\"color: #001080\">_arguments</span><span style=\"color: #000000\"> || [])).</span><span style=\"color: #795E26\">next</span><span style=\"color: #000000\">());</span></div><div class='line'><span style=\"color: #000000\">    });</span></div><div class='line'><span style=\"color: #000000\">};</span></div><div class='line'><span style=\"color: #0000FF\">var</span><span style=\"color: #000000\"> </span><span style=\"color: #001080\">__generator</span><span style=\"color: #000000\"> = (</span><span style=\"color: #0000FF\">this</span><span style=\"color: #000000\"> && </span><span style=\"color: #0000FF\">this</span><span style=\"color: #000000\">.</span><span style=\"color: #001080\">__generator</span><span style=\"color: #000000\">) || </span><span style=\"color: #0000FF\">function</span><span style=\"color: #000000\"> (</span><span style=\"color: #001080\">thisArg</span><span style=\"color: #000000\">, </span><span style=\"color: #001080\">body</span><span style=\"color: #000000\">) {</span></div><div class='line'><span style=\"color: #000000\">    </span><span style=\"color: #0000FF\">var</span><span style=\"color: #000000\"> </span><span style=\"color: #001080\">_</span><span style=\"color: #000000\"> = { </span><span style=\"color: #001080\">label:</span><span style=\"color: #000000\"> </span><span style=\"color: #098658\">0</span><span style=\"color: #000000\">, </span><span style=\"color: #795E26\">sent</span><span style=\"color: #001080\">:</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">function</span><span style=\"color: #000000\">() { </span><span style=\"color: #AF00DB\">if</span><span style=\"color: #000000\"> (</span><span style=\"color: #001080\">t</span><span style=\"color: #000000\">[</span><span style=\"color: #098658\">0</span><span style=\"color: #000000\">] & </span><span style=\"color: #098658\">1</span><span style=\"color: #000000\">) </span><span style=\"color: #AF00DB\">throw</span><span style=\"color: #000000\"> </span><span style=\"color: #001080\">t</span><span style=\"color: #000000\">[</span><span style=\"color: #098658\">1</span><span style=\"color: #000000\">]; </span><span style=\"color: #AF00DB\">return</span><span style=\"color: #000000\"> </span><span style=\"color: #001080\">t</span><span style=\"color: #000000\">[</span><span style=\"color: #098658\">1</span><span style=\"color: #000000\">]; }, </span><span style=\"color: #001080\">trys:</span><span style=\"color: #000000\"> [], </span><span style=\"color: #001080\">ops:</span><span style=\"color: #000000\"> [] }, </span><span style=\"color: #001080\">f</span><span style=\"color: #000000\">, </span><span style=\"color: #001080\">y</span><span style=\"color: #000000\">, </span><span style=\"color: #001080\">t</span><span style=\"color: #000000\">, </span><span style=\"color: #001080\">g</span><span style=\"color: #000000\">;</span></div><div class='line'><span style=\"color: #000000\">    </span><span style=\"color: #AF00DB\">return</span><span style=\"color: #000000\"> </span><span style=\"color: #001080\">g</span><span style=\"color: #000000\"> = { </span><span style=\"color: #001080\">next:</span><span style=\"color: #000000\"> </span><span style=\"color: #795E26\">verb</span><span style=\"color: #000000\">(</span><span style=\"color: #098658\">0</span><span style=\"color: #000000\">), </span><span style=\"color: #A31515\">\"throw\"</span><span style=\"color: #001080\">:</span><span style=\"color: #000000\"> </span><span style=\"color: #795E26\">verb</span><span style=\"color: #000000\">(</span><span style=\"color: #098658\">1</span><span style=\"color: #000000\">), </span><span style=\"color: #A31515\">\"return\"</span><span style=\"color: #001080\">:</span><span style=\"color: #000000\"> </span><span style=\"color: #795E26\">verb</span><span style=\"color: #000000\">(</span><span style=\"color: #098658\">2</span><span style=\"color: #000000\">) }, </span><span style=\"color: #0000FF\">typeof</span><span style=\"color: #000000\"> </span><span style=\"color: #1C6277\">Symbol</span><span style=\"color: #000000\"> === </span><span style=\"color: #A31515\">\"function\"</span><span style=\"color: #000000\"> && (</span><span style=\"color: #001080\">g</span><span style=\"color: #000000\">[</span><span style=\"color: #1C6277\">Symbol</span><span style=\"color: #000000\">.</span><span style=\"color: #001080\">iterator</span><span style=\"color: #000000\">] = </span><span style=\"color: #0000FF\">function</span><span style=\"color: #000000\">() { </span><span style=\"color: #AF00DB\">return</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">this</span><span style=\"color: #000000\">; }), </span><span style=\"color: #001080\">g</span><span style=\"color: #000000\">;</span></div><div class='line'><span style=\"color: #000000\">    </span><span style=\"color: #0000FF\">function</span><span style=\"color: #000000\"> </span><span style=\"color: #795E26\">verb</span><span style=\"color: #000000\">(</span><span style=\"color: #001080\">n</span><span style=\"color: #000000\">) { </span><span style=\"color: #AF00DB\">return</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">function</span><span style=\"color: #000000\"> (</span><span style=\"color: #001080\">v</span><span style=\"color: #000000\">) { </span><span style=\"color: #AF00DB\">return</span><span style=\"color: #000000\"> </span><span style=\"color: #795E26\">step</span><span style=\"color: #000000\">([</span><span style=\"color: #001080\">n</span><span style=\"color: #000000\">, </span><span style=\"color: #001080\">v</span><span style=\"color: #000000\">]); }; }</span></div><div class='line'><span style=\"color: #000000\">    </span><span style=\"color: #0000FF\">function</span><span style=\"color: #000000\"> </span><span style=\"color: #795E26\">step</span><span style=\"color: #000000\">(</span><span style=\"color: #001080\">op</span><span style=\"color: #000000\">) {</span></div><div class='line'><span style=\"color: #000000\">        </span><span style=\"color: #AF00DB\">if</span><span style=\"color: #000000\"> (</span><span style=\"color: #001080\">f</span><span style=\"color: #000000\">) </span><span style=\"color: #AF00DB\">throw</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">new</span><span style=\"color: #000000\"> </span><span style=\"color: #1C6277\">TypeError</span><span style=\"color: #000000\">(</span><span style=\"color: #A31515\">\"Generator is already executing.\"</span><span style=\"color: #000000\">);</span></div><div class='line'><span style=\"color: #000000\">        </span><span style=\"color: #AF00DB\">while</span><span style=\"color: #000000\"> (</span><span style=\"color: #001080\">_</span><span style=\"color: #000000\">) </span><span style=\"color: #AF00DB\">try</span><span style=\"color: #000000\"> {</span></div><div class='line'><span style=\"color: #000000\">            </span><span style=\"color: #AF00DB\">if</span><span style=\"color: #000000\"> (</span><span style=\"color: #001080\">f</span><span style=\"color: #000000\"> = </span><span style=\"color: #098658\">1</span><span style=\"color: #000000\">, </span><span style=\"color: #001080\">y</span><span style=\"color: #000000\"> && (</span><span style=\"color: #001080\">t</span><span style=\"color: #000000\"> = </span><span style=\"color: #001080\">op</span><span style=\"color: #000000\">[</span><span style=\"color: #098658\">0</span><span style=\"color: #000000\">] & </span><span style=\"color: #098658\">2</span><span style=\"color: #000000\"> ? </span><span style=\"color: #001080\">y</span><span style=\"color: #000000\">[</span><span style=\"color: #A31515\">\"return\"</span><span style=\"color: #000000\">] : </span><span style=\"color: #001080\">op</span><span style=\"color: #000000\">[</span><span style=\"color: #098658\">0</span><span style=\"color: #000000\">] ? </span><span style=\"color: #001080\">y</span><span style=\"color: #000000\">[</span><span style=\"color: #A31515\">\"throw\"</span><span style=\"color: #000000\">] || ((</span><span style=\"color: #001080\">t</span><span style=\"color: #000000\"> = </span><span style=\"color: #001080\">y</span><span style=\"color: #000000\">[</span><span style=\"color: #A31515\">\"return\"</span><span style=\"color: #000000\">]) && </span><span style=\"color: #001080\">t</span><span style=\"color: #000000\">.</span><span style=\"color: #795E26\">call</span><span style=\"color: #000000\">(</span><span style=\"color: #001080\">y</span><span style=\"color: #000000\">), </span><span style=\"color: #098658\">0</span><span style=\"color: #000000\">) : </span><span style=\"color: #001080\">y</span><span style=\"color: #000000\">.</span><span style=\"color: #001080\">next</span><span style=\"color: #000000\">) && !(</span><span style=\"color: #001080\">t</span><span style=\"color: #000000\"> = </span><span style=\"color: #001080\">t</span><span style=\"color: #000000\">.</span><span style=\"color: #795E26\">call</span><span style=\"color: #000000\">(</span><span style=\"color: #001080\">y</span><span style=\"color: #000000\">, </span><span style=\"color: #001080\">op</span><span style=\"color: #000000\">[</span><span style=\"color: #098658\">1</span><span style=\"color: #000000\">])).</span><span style=\"color: #001080\">done</span><span style=\"color: #000000\">) </span><span style=\"color: #AF00DB\">return</span><span style=\"color: #000000\"> </span><span style=\"color: #001080\">t</span><span style=\"color: #000000\">;</span></div><div class='line'><span style=\"color: #000000\">            </span><span style=\"color: #AF00DB\">if</span><span style=\"color: #000000\"> (</span><span style=\"color: #001080\">y</span><span style=\"color: #000000\"> = </span><span style=\"color: #098658\">0</span><span style=\"color: #000000\">, </span><span style=\"color: #001080\">t</span><span style=\"color: #000000\">) </span><span style=\"color: #001080\">op</span><span style=\"color: #000000\"> = [</span><span style=\"color: #001080\">op</span><span style=\"color: #000000\">[</span><span style=\"color: #098658\">0</span><span style=\"color: #000000\">] & </span><span style=\"color: #098658\">2</span><span style=\"color: #000000\">, </span><span style=\"color: #001080\">t</span><span style=\"color: #000000\">.</span><span style=\"color: #001080\">value</span><span style=\"color: #000000\">];</span></div><div class='line'><span style=\"color: #000000\">            </span><span style=\"color: #AF00DB\">switch</span><span style=\"color: #000000\"> (</span><span style=\"color: #001080\">op</span><span style=\"color: #000000\">[</span><span style=\"color: #098658\">0</span><span style=\"color: #000000\">]) {</span></div><div class='line'><span style=\"color: #000000\">                </span><span style=\"color: #AF00DB\">case</span><span style=\"color: #000000\"> </span><span style=\"color: #098658\">0</span><span style=\"color: #000000\">: </span><span style=\"color: #AF00DB\">case</span><span style=\"color: #000000\"> </span><span style=\"color: #098658\">1</span><span style=\"color: #000000\">: </span><span style=\"color: #001080\">t</span><span style=\"color: #000000\"> = </span><span style=\"color: #001080\">op</span><span style=\"color: #000000\">; </span><span style=\"color: #AF00DB\">break</span><span style=\"color: #000000\">;</span></div><div class='line'><span style=\"color: #000000\">                </span><span style=\"color: #AF00DB\">case</span><span style=\"color: #000000\"> </span><span style=\"color: #098658\">4</span><span style=\"color: #000000\">: </span><span style=\"color: #001080\">_</span><span style=\"color: #000000\">.</span><span style=\"color: #001080\">label</span><span style=\"color: #000000\">++; </span><span style=\"color: #AF00DB\">return</span><span style=\"color: #000000\"> { </span><span style=\"color: #001080\">value:</span><span style=\"color: #000000\"> </span><span style=\"color: #001080\">op</span><span style=\"color: #000000\">[</span><span style=\"color: #098658\">1</span><span style=\"color: #000000\">], </span><span style=\"color: #001080\">done:</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">false</span><span style=\"color: #000000\"> };</span></div><div class='line'><span style=\"color: #000000\">                </span><span style=\"color: #AF00DB\">case</span><span style=\"color: #000000\"> </span><span style=\"color: #098658\">5</span><span style=\"color: #000000\">: </span><span style=\"color: #001080\">_</span><span style=\"color: #000000\">.</span><span style=\"color: #001080\">label</span><span style=\"color: #000000\">++; </span><span style=\"color: #001080\">y</span><span style=\"color: #000000\"> = </span><span style=\"color: #001080\">op</span><span style=\"color: #000000\">[</span><span style=\"color: #098658\">1</span><span style=\"color: #000000\">]; </span><span style=\"color: #001080\">op</span><span style=\"color: #000000\"> = [</span><span style=\"color: #098658\">0</span><span style=\"color: #000000\">]; </span><span style=\"color: #AF00DB\">continue</span><span style=\"color: #000000\">;</span></div><div class='line'><span style=\"color: #000000\">                </span><span style=\"color: #AF00DB\">case</span><span style=\"color: #000000\"> </span><span style=\"color: #098658\">7</span><span style=\"color: #000000\">: </span><span style=\"color: #001080\">op</span><span style=\"color: #000000\"> = </span><span style=\"color: #001080\">_</span><span style=\"color: #000000\">.</span><span style=\"color: #001080\">ops</span><span style=\"color: #000000\">.</span><span style=\"color: #795E26\">pop</span><span style=\"color: #000000\">(); </span><span style=\"color: #001080\">_</span><span style=\"color: #000000\">.</span><span style=\"color: #001080\">trys</span><span style=\"color: #000000\">.</span><span style=\"color: #795E26\">pop</span><span style=\"color: #000000\">(); </span><span style=\"color: #AF00DB\">continue</span><span style=\"color: #000000\">;</span></div><div class='line'><span style=\"color: #000000\">                </span><span style=\"color: #AF00DB\">default</span><span style=\"color: #000000\">:</span></div><div class='line'><span style=\"color: #000000\">                    </span><span style=\"color: #AF00DB\">if</span><span style=\"color: #000000\"> (!(</span><span style=\"color: #001080\">t</span><span style=\"color: #000000\"> = </span><span style=\"color: #001080\">_</span><span style=\"color: #000000\">.</span><span style=\"color: #001080\">trys</span><span style=\"color: #000000\">, </span><span style=\"color: #001080\">t</span><span style=\"color: #000000\"> = </span><span style=\"color: #001080\">t</span><span style=\"color: #000000\">.</span><span style=\"color: #001080\">length</span><span style=\"color: #000000\"> &gt; </span><span style=\"color: #098658\">0</span><span style=\"color: #000000\"> && </span><span style=\"color: #001080\">t</span><span style=\"color: #000000\">[</span><span style=\"color: #001080\">t</span><span style=\"color: #000000\">.</span><span style=\"color: #001080\">length</span><span style=\"color: #000000\"> - </span><span style=\"color: #098658\">1</span><span style=\"color: #000000\">]) && (</span><span style=\"color: #001080\">op</span><span style=\"color: #000000\">[</span><span style=\"color: #098658\">0</span><span style=\"color: #000000\">] === </span><span style=\"color: #098658\">6</span><span style=\"color: #000000\"> || </span><span style=\"color: #001080\">op</span><span style=\"color: #000000\">[</span><span style=\"color: #098658\">0</span><span style=\"color: #000000\">] === </span><span style=\"color: #098658\">2</span><span style=\"color: #000000\">)) { </span><span style=\"color: #001080\">_</span><span style=\"color: #000000\"> = </span><span style=\"color: #098658\">0</span><span style=\"color: #000000\">; </span><span style=\"color: #AF00DB\">continue</span><span style=\"color: #000000\">; }</span></div><div class='line'><span style=\"color: #000000\">                    </span><span style=\"color: #AF00DB\">if</span><span style=\"color: #000000\"> (</span><span style=\"color: #001080\">op</span><span style=\"color: #000000\">[</span><span style=\"color: #098658\">0</span><span style=\"color: #000000\">] === </span><span style=\"color: #098658\">3</span><span style=\"color: #000000\"> && (!</span><span style=\"color: #001080\">t</span><span style=\"color: #000000\"> || (</span><span style=\"color: #001080\">op</span><span style=\"color: #000000\">[</span><span style=\"color: #098658\">1</span><span style=\"color: #000000\">] &gt; </span><span style=\"color: #001080\">t</span><span style=\"color: #000000\">[</span><span style=\"color: #098658\">0</span><span style=\"color: #000000\">] && </span><span style=\"color: #001080\">op</span><span style=\"color: #000000\">[</span><span style=\"color: #098658\">1</span><span style=\"color: #000000\">] &lt; </span><span style=\"color: #001080\">t</span><span style=\"color: #000000\">[</span><span style=\"color: #098658\">3</span><span style=\"color: #000000\">]))) { </span><span style=\"color: #001080\">_</span><span style=\"color: #000000\">.</span><span style=\"color: #001080\">label</span><span style=\"color: #000000\"> = </span><span style=\"color: #001080\">op</span><span style=\"color: #000000\">[</span><span style=\"color: #098658\">1</span><span style=\"color: #000000\">]; </span><span style=\"color: #AF00DB\">break</span><span style=\"color: #000000\">; }</span></div><div class='line'><span style=\"color: #000000\">                    </span><span style=\"color: #AF00DB\">if</span><span style=\"color: #000000\"> (</span><span style=\"color: #001080\">op</span><span style=\"color: #000000\">[</span><span style=\"color: #098658\">0</span><span style=\"color: #000000\">] === </span><span style=\"color: #098658\">6</span><span style=\"color: #000000\"> && </span><span style=\"color: #001080\">_</span><span style=\"color: #000000\">.</span><span style=\"color: #001080\">label</span><span style=\"color: #000000\"> &lt; </span><span style=\"color: #001080\">t</span><span style=\"color: #000000\">[</span><span style=\"color: #098658\">1</span><span style=\"color: #000000\">]) { </span><span style=\"color: #001080\">_</span><span style=\"color: #000000\">.</span><span style=\"color: #001080\">label</span><span style=\"color: #000000\"> = </span><span style=\"color: #001080\">t</span><span style=\"color: #000000\">[</span><span style=\"color: #098658\">1</span><span style=\"color: #000000\">]; </span><span style=\"color: #001080\">t</span><span style=\"color: #000000\"> = </span><span style=\"color: #001080\">op</span><span style=\"color: #000000\">; </span><span style=\"color: #AF00DB\">break</span><span style=\"color: #000000\">; }</span></div><div class='line'><span style=\"color: #000000\">                    </span><span style=\"color: #AF00DB\">if</span><span style=\"color: #000000\"> (</span><span style=\"color: #001080\">t</span><span style=\"color: #000000\"> && </span><span style=\"color: #001080\">_</span><span style=\"color: #000000\">.</span><span style=\"color: #001080\">label</span><span style=\"color: #000000\"> &lt; </span><span style=\"color: #001080\">t</span><span style=\"color: #000000\">[</span><span style=\"color: #098658\">2</span><span style=\"color: #000000\">]) { </span><span style=\"color: #001080\">_</span><span style=\"color: #000000\">.</span><span style=\"color: #001080\">label</span><span style=\"color: #000000\"> = </span><span style=\"color: #001080\">t</span><span style=\"color: #000000\">[</span><span style=\"color: #098658\">2</span><span style=\"color: #000000\">]; </span><span style=\"color: #001080\">_</span><span style=\"color: #000000\">.</span><span style=\"color: #001080\">ops</span><span style=\"color: #000000\">.</span><span style=\"color: #795E26\">push</span><span style=\"color: #000000\">(</span><span style=\"color: #001080\">op</span><span style=\"color: #000000\">); </span><span style=\"color: #AF00DB\">break</span><span style=\"color: #000000\">; }</span></div><div class='line'><span style=\"color: #000000\">                    </span><span style=\"color: #AF00DB\">if</span><span style=\"color: #000000\"> (</span><span style=\"color: #001080\">t</span><span style=\"color: #000000\">[</span><span style=\"color: #098658\">2</span><span style=\"color: #000000\">]) </span><span style=\"color: #001080\">_</span><span style=\"color: #000000\">.</span><span style=\"color: #001080\">ops</span><span style=\"color: #000000\">.</span><span style=\"color: #795E26\">pop</span><span style=\"color: #000000\">();</span></div><div class='line'><span style=\"color: #000000\">                    </span><span style=\"color: #001080\">_</span><span style=\"color: #000000\">.</span><span style=\"color: #001080\">trys</span><span style=\"color: #000000\">.</span><span style=\"color: #795E26\">pop</span><span style=\"color: #000000\">(); </span><span style=\"color: #AF00DB\">continue</span><span style=\"color: #000000\">;</span></div><div class='line'><span style=\"color: #000000\">            }</span></div><div class='line'><span style=\"color: #000000\">            </span><span style=\"color: #001080\">op</span><span style=\"color: #000000\"> = </span><span style=\"color: #001080\">body</span><span style=\"color: #000000\">.</span><span style=\"color: #795E26\">call</span><span style=\"color: #000000\">(</span><span style=\"color: #001080\">thisArg</span><span style=\"color: #000000\">, </span><span style=\"color: #001080\">_</span><span style=\"color: #000000\">);</span></div><div class='line'><span style=\"color: #000000\">        } </span><span style=\"color: #AF00DB\">catch</span><span style=\"color: #000000\"> (</span><span style=\"color: #001080\">e</span><span style=\"color: #000000\">) { </span><span style=\"color: #001080\">op</span><span style=\"color: #000000\"> = [</span><span style=\"color: #098658\">6</span><span style=\"color: #000000\">, </span><span style=\"color: #001080\">e</span><span style=\"color: #000000\">]; </span><span style=\"color: #001080\">y</span><span style=\"color: #000000\"> = </span><span style=\"color: #098658\">0</span><span style=\"color: #000000\">; } </span><span style=\"color: #AF00DB\">finally</span><span style=\"color: #000000\"> { </span><span style=\"color: #001080\">f</span><span style=\"color: #000000\"> = </span><span style=\"color: #001080\">t</span><span style=\"color: #000000\"> = </span><span style=\"color: #098658\">0</span><span style=\"color: #000000\">; }</span></div><div class='line'><span style=\"color: #000000\">        </span><span style=\"color: #AF00DB\">if</span><span style=\"color: #000000\"> (</span><span style=\"color: #001080\">op</span><span style=\"color: #000000\">[</span><span style=\"color: #098658\">0</span><span style=\"color: #000000\">] & </span><span style=\"color: #098658\">5</span><span style=\"color: #000000\">) </span><span style=\"color: #AF00DB\">throw</span><span style=\"color: #000000\"> </span><span style=\"color: #001080\">op</span><span style=\"color: #000000\">[</span><span style=\"color: #098658\">1</span><span style=\"color: #000000\">]; </span><span style=\"color: #AF00DB\">return</span><span style=\"color: #000000\"> { </span><span style=\"color: #001080\">value:</span><span style=\"color: #000000\"> </span><span style=\"color: #001080\">op</span><span style=\"color: #000000\">[</span><span style=\"color: #098658\">0</span><span style=\"color: #000000\">] ? </span><span style=\"color: #001080\">op</span><span style=\"color: #000000\">[</span><span style=\"color: #098658\">1</span><span style=\"color: #000000\">] : </span><span style=\"color: #0000FF\">void</span><span style=\"color: #000000\"> </span><span style=\"color: #098658\">0</span><span style=\"color: #000000\">, </span><span style=\"color: #001080\">done:</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">true</span><span style=\"color: #000000\"> };</span></div><div class='line'><span style=\"color: #000000\">    }</span></div><div class='line'><span style=\"color: #000000\">};</span></div><div class='line'><span style=\"color: #0000FF\">var</span><span style=\"color: #000000\"> </span><span style=\"color: #795E26\">getAPI</span><span style=\"color: #000000\"> = </span><span style=\"color: #0000FF\">function</span><span style=\"color: #000000\"> (</span><span style=\"color: #001080\">url</span><span style=\"color: #000000\">) { </span><span style=\"color: #AF00DB\">return</span><span style=\"color: #000000\"> </span><span style=\"color: #795E26\">__awaiter</span><span style=\"color: #000000\">(</span><span style=\"color: #0000FF\">void</span><span style=\"color: #000000\"> </span><span style=\"color: #098658\">0</span><span style=\"color: #000000\">, </span><span style=\"color: #0000FF\">void</span><span style=\"color: #000000\"> </span><span style=\"color: #098658\">0</span><span style=\"color: #000000\">, </span><span style=\"color: #0000FF\">void</span><span style=\"color: #000000\"> </span><span style=\"color: #098658\">0</span><span style=\"color: #000000\">, </span><span style=\"color: #0000FF\">function</span><span style=\"color: #000000\"> () {</span></div><div class='line'><span style=\"color: #000000\">    </span><span style=\"color: #AF00DB\">return</span><span style=\"color: #000000\"> </span><span style=\"color: #795E26\">__generator</span><span style=\"color: #000000\">(</span><span style=\"color: #0000FF\">this</span><span style=\"color: #000000\">, </span><span style=\"color: #0000FF\">function</span><span style=\"color: #000000\"> (</span><span style=\"color: #001080\">_a</span><span style=\"color: #000000\">) {</span></div><div class='line'><span style=\"color: #000000\">        </span><span style=\"color: #008000\">// Get API</span></div><div class='line'><span style=\"color: #000000\">        </span><span style=\"color: #AF00DB\">return</span><span style=\"color: #000000\"> [</span><span style=\"color: #098658\">2</span><span style=\"color: #000000\"> </span><span style=\"color: #008000\">/*return*/</span><span style=\"color: #000000\">, {}];</span></div><div class='line'><span style=\"color: #000000\">    });</span></div><div class='line'><span style=\"color: #000000\">}); };</span></div><div class='line'>&nbsp;</div></code><a class='playground-link' href='https://www.typescriptlang.org/play/#code/PTAEAEGcAsHsHcCiBbAlgFwFAgughgE4DmApugFyiIDKArJgMawB2k6op6AggAoCSoALyg8kAJ7MGoABQBXAgBtKbAqmZEAlEIB8oAN6ZQoHAHEyoXn0OgCZec30BfANyYXQA'>Try</a></div></pre>\n<p>Which can be switched out with your own globals via this flag:</p>\n<pre class=\"shiki light-plus twoslash lsp\" style=\"background-color: #FFFFFF; color: #000000\"><div class=\"language-id\">ts</div><div class='code-container'><code><div class='line'><span style=\"color: #A31515\">\"use strict\"</span><span style=\"color: #000000\">;</span></div><div class='line'><span style=\"color: #0000FF\">var</span><span style=\"color: #000000\"> </span><span style=\"color: #795E26\">getAPI</span><span style=\"color: #000000\"> = </span><span style=\"color: #0000FF\">function</span><span style=\"color: #000000\"> (</span><span style=\"color: #001080\">url</span><span style=\"color: #000000\">) { </span><span style=\"color: #AF00DB\">return</span><span style=\"color: #000000\"> </span><span style=\"color: #795E26\">__awaiter</span><span style=\"color: #000000\">(</span><span style=\"color: #0000FF\">void</span><span style=\"color: #000000\"> </span><span style=\"color: #098658\">0</span><span style=\"color: #000000\">, </span><span style=\"color: #0000FF\">void</span><span style=\"color: #000000\"> </span><span style=\"color: #098658\">0</span><span style=\"color: #000000\">, </span><span style=\"color: #0000FF\">void</span><span style=\"color: #000000\"> </span><span style=\"color: #098658\">0</span><span style=\"color: #000000\">, </span><span style=\"color: #0000FF\">function</span><span style=\"color: #000000\"> () {</span></div><div class='line'><span style=\"color: #000000\">    </span><span style=\"color: #AF00DB\">return</span><span style=\"color: #000000\"> </span><span style=\"color: #795E26\">__generator</span><span style=\"color: #000000\">(</span><span style=\"color: #0000FF\">this</span><span style=\"color: #000000\">, </span><span style=\"color: #0000FF\">function</span><span style=\"color: #000000\"> (</span><span style=\"color: #001080\">_a</span><span style=\"color: #000000\">) {</span></div><div class='line'><span style=\"color: #000000\">        </span><span style=\"color: #008000\">// Get API</span></div><div class='line'><span style=\"color: #000000\">        </span><span style=\"color: #AF00DB\">return</span><span style=\"color: #000000\"> [</span><span style=\"color: #098658\">2</span><span style=\"color: #000000\"> </span><span style=\"color: #008000\">/*return*/</span><span style=\"color: #000000\">, {}];</span></div><div class='line'><span style=\"color: #000000\">    });</span></div><div class='line'><span style=\"color: #000000\">}); };</span></div><div class='line'>&nbsp;</div></code><a class='playground-link' href='https://www.typescriptlang.org/play/#code/PTAEAEGcAsHsHcCiBbAlgFwFAgughgE4DmApugFyiIDKArNmOAHawoYASJANgA4kGRMAY1hNI6UKXQBBAAoBJUAF5QeSAE8mQ0AAoArgS6VxBVEyIBKZQD5QAb0yhQOAOJlQc+Y9AEyBpvYAvgDcmCFAA'>Try</a></div></pre>","redirectHref":"/tsconfig#noEmitHelpers"}},"staticQueryHashes":[]}