{"componentChunkName":"component---src-templates-play-example-tsx","path":"/pt/play/playground/config/new-compiler-defaults.ts.html","result":{"pageContext":{"name":"New Compiler Defaults","title":"New Compiler Defaults","lang":"pt","html":"\n Sim, nós sabemos, os padrões para o tsconfig do TypeScript não\n tem strict ativado. Entretanto, em toda chance que temos o\n time recomenda que os usuários tentem migrar para ter o modo\n strict ativado nas suas configurações.\n\n Porém, para o playground, felizmente podemos estabelecer os\n padrões como strict. O playground também vai manter um \n acompanhamento das flags do compilador que mudaram dos padrões\n do playground e fazer elas serem compartilháveis na URL.\n\n Você pode ler mais sobre as URLs em:\n exemplo:urls-compartilháveis\n\n Se perguntando quais são os novos padrões?\n\n<code><pre>\ndeclare const trueInTS: boolean;\ndeclare const trueInJS: boolean;\ndeclare const monaco: any;\n\nconst defaultCompilerOptions = {\n  noImplicitAny: true,\n  strictNullChecks: trueInTS,\n  strictFunctionTypes: true,\n  strictPropertyInitialization: true,\n  strictBindCallApply: true,\n  noImplicitThis: true,\n  noImplicitReturns: true,\n\n  alwaysStrict: true,\n  allowUnreachableCode: false,\n  allowUnusedLabels: false,\n\n  downlevelIteration: false,\n  noEmitHelpers: false,\n  noLib: false,\n  noStrictGenericChecks: false,\n  noUnusedLocals: false,\n  noUnusedParameters: false,\n\n  esModuleInterop: true,\n  preserveConstEnums: false,\n  removeComments: false,\n  skipLibCheck: false,\n\n  checkJs: trueInJS,\n  allowJs: trueInJS,\n\n  experimentalDecorators: false,\n  emitDecoratorMetadata: false,\n\n  target: monaco.languages.typescript.ScriptTarget.ES2017,\n  jsx: monaco.languages.typescript.JsxEmit.None,\n};\n","redirectHref":"pt/play/?#example/new-compiler-defaults"}},"staticQueryHashes":[]}