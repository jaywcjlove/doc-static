{"componentChunkName":"component---src-templates-play-example-tsx","path":"/pt/play/playground/config/javascript-playgrounds.js.html","result":{"pageContext":{"name":"JavaScript Playgrounds","title":"JavaScript Playgrounds","lang":"pt","html":"/ { order: 3, isJavaScript: true }\n\n O playground agora pode manipular arquivos JavaScript\n\n É bem razoável imaginar porque nós adicionaríamos suporte\n para JavaScript no playground, mas é provável que a maioria\n dos usuários de TypeScript estejam usando JavaScript\n\n TypeScript pode usar inferência de tipos, aquisição de tipo e\n suporte JSDoc em um arquivo JavaScript para fornecer um\n vasto ambiente de ferramentas:\n\n  exemplo:objetos-e-vetores\n  exemplo:aquisição-de-tipo-automático\n  exemplo:suporte-jsdoc\n\n O playground suportar JavaScript significa que você pode \n aprender e guiar pessoas através de exemplos complexos\n de JSDoc, ou depurar problemas quando existem expectativas\n incompatíveis.\n\n Por exemplo, por quê este comentário JSDoc não está tipado \n corretamente?\n\n<code><pre>\n/**\n * Soma 2 números\n * @param {number} O primeiro número\n * @param {number} O segundo número\n * @returns {number}\n */\nfunction somaDoisNumeros(a, b) {\n  return a + b;\n}\n\n</pre></code>\n// É muito mais fácil descobrir isso em um ambiente onde\n você pode ver imediatamente o que está acontecendo\n passando o cursor por cima\n","redirectHref":"pt/play/?#example/javascript-playgrounds"}},"staticQueryHashes":[]}