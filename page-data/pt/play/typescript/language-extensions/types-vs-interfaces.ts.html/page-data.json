{"componentChunkName":"component---src-templates-play-example-tsx","path":"/pt/play/typescript/language-extensions/types-vs-interfaces.ts.html","result":{"pageContext":{"name":"Types vs Interfaces","title":"Types vs Interfaces","lang":"pt","html":" Existem dois tipos principais para declarar a forma de um\n objeto: interfaces e tipos.\n\n Eles são bem parecidos e para a maioria dos casos\n funcionam da mesma forma.\n\n<code><pre>\ntype TipoPassaro = {\n  asas: 2;\n};\n\ninterface InterfacePassaro {\n  asas: 2;\n}\n\nconst passaro1: TipoPassaro = { asas: 2 };\nconst passaro2: InterfacePassaro = { asas: 2 };\n\n</pre></code>\n// Porque o Typescript é um sistema de tipagem estrutural\n é possível misturar o seu uso também.\n\n<code><pre>\nconst passaro3: InterfacePassaro = passaro1;\n\n</pre></code>\n// Ambos suportam a extensão de outras interfaces e tipos.\n Os tipos fazem isso através da interseção de tipos,\n enquanto interfaces possuem uma palavra-chave.\n\n<code><pre>\ntype Coruja = { noturno: true } & TipoPassaro;\ntype Robin = { noturno: false } & InterfacePassaro;\n\ninterface Pavao extends TipoPassaro {\n  colorido: true;\n  voa: false;\n}\ninterface Galinha extends InterfacePassaro {\n  colorido: false;\n  voa: false;\n}\n\nlet coruja: Coruja = { asas: 2, noturno: true };\nlet galinha: Galinha = { asas: 2, colorido: false, voa: false };\n\n</pre></code>\n// Tendo dito isso nós recomendamos você a usar interfaces ao invés de tipos.\n Especialmente porque você recebe melhores mensagens de erro.\n Se passar o mouse sobre o erro, você pode ver os erros que o Typescript\n mais focados para interfaces como a Galinha.\n\n<code><pre>\ncoruja = galinha;\ngalinha = coruja;\n\n</pre></code>\n// Uma das maiores diferenças entre tipos e interfaces é que\n interfaces são abertas e tipos são fechados.\n Isso signifca que você pode extender interfaces declarando\n uma segunda vez.\n\n<code><pre>\ninterface Gato {\n  ronrona: boolean;\n}\n\ninterface Gato {\n  cor: string;\n}\n\n</pre></code>\n// Por outro lado tipos não podem ser alterados fora\n da prórpia declaração.\n\n<code><pre>\ntype Filhote = {\n  cor: string;\n};\n\ntype Filhote = {\n  brinquedos: number;\n};\n\n</pre></code>\n// Dependendo dos seus objetivos essa diferença pode ser\n positiva ou negativa. No entando, para expor os tipos publicamente\n é melhor transformá-los em interfaces.\n\n Como um dos melhores recursos para ver todos os casos de uso\n de tipos vs interfaces, recomendamos essa thread do Stackoverflow\n como um bom ponto de partida:\n\n https://stackoverflow.com/questions/37233735/typescript-interfaces-vs-types/52682220#52682220\n","redirectHref":"pt/play/?#example/types-vs-interfaces"}},"staticQueryHashes":[]}