{"componentChunkName":"component---src-templates-play-example-tsx","path":"/pt/play/4-0/new-js-features/logical-operators-and-assignment.ts.html","result":{"pageContext":{"name":"Logical Operators and Assignment","title":"Logical Operators and Assignment","lang":"pt","html":"\n Logical Operators e Assignment são novas funcionalidades do\n JavaScript para 2020. Esses são um conjunto de operadores novos\n que editam um objeto JavaScript.\n\n Seu objetivo é reutilizar o conceito de operadores \n matemáticos (Ex: += -= *=) porém usando lógica.\n\n<code><pre>\ninterface User {\n  id?: number\n  name: string\n  location: {\n    postalCode?: string\n  }\n}\n\nfunction updateUser(user: User) {\n  // Pode-se trocar esse código:\n  if (!user.id) user.id = 1\n\n  // Ou esse código:\n  user.id = user.id || 1\n\n  // Por esse código:\n  user.id ||= 1\n}\n\n</pre></code>\n// Esses conjuntos de operadores podem lidar com encadeamento profundo\n podendo poupar uma boa quantidade de código repetido.\n\n<code><pre>\ndeclare const user: User\nuser.location.postalCode ||= \"90210\"\n\n</pre></code>\n// São três novos operadores: \n\n   ||= mostrado acima\n   &&= que usa a lógica do 'and' ao invés da 'or'\n   ??= que se baseia no example:nullish-coalescing para oferecer\n       uma versão mais rigorosa do || que usa === no lugar.\n\n Para mais informações da proposta, veja:\n https://github.com/tc39/proposal-logical-assignment\n","redirectHref":"pt/play/?ts=4.0.2#example/logical-operators-and-assignment"}},"staticQueryHashes":[]}