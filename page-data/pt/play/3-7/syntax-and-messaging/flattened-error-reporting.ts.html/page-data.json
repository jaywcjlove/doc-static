{"componentChunkName":"component---src-templates-play-example-tsx","path":"/pt/play/3-7/syntax-and-messaging/flattened-error-reporting.ts.html","result":{"pageContext":{"name":"Flattened Error Reporting","title":"Flattened Error Reporting","lang":"pt","html":"\n Às vezes, as mensagens de erros no TypeScript pode ser um pouco verbosas...\n Com a versão 3.7, nós tratamos alguns casos que poderiam ser\n particularmente notórios.\n\n Propriedades aninhadas\n\n<code><pre>\nlet a = { b: { c: { d: { e: \"string\" } } } };\nlet b = { b: { c: { d: { e: 12 } } } };\n\na = b;\n\n</pre></code>\n// Antes, isso levaria a duas linhas de código por propriedade aninhada.\n Isso rapidamente significou que as pessoas aprenderam a ler\n mensagens de erro lendo a primeira e última linha de mensagem\n de erro.\n\n Agora eles estão alinhados. :tada:\n\n Anteriormente no 3.6:\n\n Type '{ b: { c: { d: { e: number; }; }; }; }' is not assignable to type '{ b: { c: { d: { e: string; }; }; }; }'.\n   Types of property 'b' are incompatible.\n     Type '{ c: { d: { e: number; }; }; }' is not assignable to type '{ c: { d: { e: string; }; }; }'.\n       Types of property 'c' are incompatible.\n         Type '{ d: { e: number; }; }' is not assignable to type '{ d: { e: string; }; }'.\n           Types of property 'd' are incompatible.\n             Type '{ e: number; }' is not assignable to type '{ e: string; }'.\n               Types of property 'e' are incompatible.\n                 Type 'number' is not assignable to type 'string'\n\n Isso pode lidar com diferentes tipos de objetos,\n para fornecer uma mensagem de erro útil e coesa.\n\n<code><pre>\nclass ExampleClass {\n  state = \"ok\";\n}\n\nclass OtherClass {\n  state = 12;\n}\n\nlet x = { a: { b: { c: { d: { e: { f: ExampleClass } } } } } };\nlet y = { a: { b: { c: { d: { e: { f: OtherClass } } } } } };\nx = y;\n\n</pre></code>\n// Anteriormente no 3.6:\n\n Type '{ a: { b: { c: { d: { e: { f: typeof OtherClass; }; }; }; }; }; }' is not assignable to type '{ a: { b: { c: { d: { e: { f: typeof ExampleClass; }; }; }; }; }; }'.\n   Types of property 'a' are incompatible.\n     Type '{ b: { c: { d: { e: { f: typeof OtherClass; }; }; }; }; }' is not assignable to type '{ b: { c: { d: { e: { f: typeof ExampleClass; }; }; }; }; }'.\n       Types of property 'b' are incompatible.\n         Type '{ c: { d: { e: { f: typeof OtherClass; }; }; }; }' is not assignable to type '{ c: { d: { e: { f: typeof ExampleClass; }; }; }; }'.\n           Types of property 'c' are incompatible.\n             Type '{ d: { e: { f: typeof OtherClass; }; }; }' is not assignable to type '{ d: { e: { f: typeof ExampleClass; }; }; }'.\n               Types of property 'd' are incompatible.\n                 Type '{ e: { f: typeof OtherClass; }; }' is not assignable to type '{ e: { f: typeof ExampleClass; }; }'.\n                   Types of property 'e' are incompatible.\n                     Type '{ f: typeof OtherClass; }' is not assignable to type '{ f: typeof ExampleClass; }'.\n                       Types of property 'f' are incompatible.\n                         Type 'typeof OtherClass' is not assignable to type 'typeof ExampleClass'.\n                           Type 'OtherClass' is not assignable to type 'ExampleClass'.\n                             Types of property 'state' are incompatible.\n                               Type 'number' is not assignable to type 'string'\n","redirectHref":"pt/play/?#example/flattened-error-reporting"}},"staticQueryHashes":[]}