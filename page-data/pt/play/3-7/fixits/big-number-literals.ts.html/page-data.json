{"componentChunkName":"component---src-templates-play-example-tsx","path":"/pt/play/3-7/fixits/big-number-literals.ts.html","result":{"pageContext":{"name":"Big number literals","title":"Big number literals","lang":"pt","html":"\n Você sabia que existe um limite para o maior\n número que você pode representar enquanto\n você está escrevendo em Javascript?\n\n<code><pre>\nconst valorMaximo = 9007199254740991;\nconst valorMinimo = -9007199254740991;\n\n</pre></code>\n// Se você ultrapassar um ou mais desses números\n então você entrará em um território perigoso\n\n<code><pre>\nconst umAcimaDoMaximo = 9007199254740992;\nconst umAbaixoDoMinimo = -9007199254740992;\n\n</pre></code>\n// A solução para lidar com números desse tamanho\n é converter esses números em BigInts ao invés\n de um número:\n\n https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/BigInt\n\n TypeScript fornecerá agora uma solução para os números\n literais que estão acima de 2 ^ 52 (positivo / negativo)\n adicionando o sufixo \"n\" que informa ao javascript\n que esse número deverá ser BigInt.\n\n Números literiais\n<code><pre>\n9007199254740993;\n-9007199254740993;\n9007199254740994;\n-9007199254740994;\n\n// Números Hexadecimais\n0x19999999999999;\n-0x19999999999999;\n0x20000000000000;\n-0x20000000000000;\n0x20000000000001;\n-0x20000000000001;\n","redirectHref":"pt/play/?target=99#example/big-number-literals"}},"staticQueryHashes":[]}