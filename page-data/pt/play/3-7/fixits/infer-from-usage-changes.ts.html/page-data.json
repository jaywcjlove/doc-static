{"componentChunkName":"component---src-templates-play-example-tsx","path":"/pt/play/3-7/fixits/infer-from-usage-changes.ts.html","result":{"pageContext":{"name":"Infer From Usage Changes","title":"Infer From Usage Changes","lang":"pt","html":"\n Na versão 3.7 do TypeScript a correção 'dedução por uso'\n ficou mais inteligente. Ela agora poderá usar uma lista conhecida\n de tipos importantes (string, number, array, Promise)\n e deduzir se o uso do tipo combina com a API destes objetos.\n\n Para o próximos pequenos exemplos, selecione o parâmetro das\n funções, clique na lâmpada e selecione _Infer parameter types from usage_ (Deduzir os tipos de parâmetros pelo uso)\n\n Deduzir um array de números\n\n<code><pre>\nfunction pushNumber(arr) {\n  arr.push(12);\n}\n\n// Deduzir uma Promise\n\nfunction awaitPromise(promise) {\n  promise.then(valor => console.log(valor));\n}\n\n// Deduzir uma função, e o que ela retornará:\n\nfunction inferAny(app) {\n  const result = app.use(\"oi\");\n  return result;\n}\n\n</pre></code>\n// Deduzir um array de strings porquê uma\n string foi adicionada:\n\n<code><pre>\nfunction insertString(nomes) {\n  nomes[1] = \"olá\";\n}\n","redirectHref":"pt/play/?noImplicitAny=false#example/infer-from-usage-changes"}},"staticQueryHashes":[]}