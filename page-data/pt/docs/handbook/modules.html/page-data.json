{"componentChunkName":"component---src-templates-documentation-tsx","path":"/pt/docs/handbook/modules.html","result":{"data":{"markdownRemark":{"id":"df94ecf3-5fce-55db-aac3-ef18f8162ec3","excerpt":"Inciando com ECMAScript 2015, JavaScript possui um conceito de módulos. O TypeScript compartilha deste conceito. Os Módulos são executados dentro de seu próprio…","html":"<p>Inciando com ECMAScript 2015, JavaScript possui um conceito de módulos. O TypeScript compartilha deste conceito.</p>\n<p>Os Módulos são executados dentro de seu próprio escopo, não no escopo global; isso significa que variáveis, funções, classes, etc. declaradas em um módulo não são visíveis fora do módulo, a menos que sejam explicitamente exportadas utilizando uma das <a href=\"#export\">formas de <code>export</code></a>.\nDe forma recíproca, para consumir uma variável, função, classe, interface, etc. exportada de um módulo diferente, ela deve ser importada usando uma das <a href=\"#import\">formas de <code>import</code></a>.</p>\n<p>Módulos são declarativos; os relacionamentos entre módulos são especificados pelos imports e exports em nível de arquivo.</p>\n<p>Módulos importam uns aos outros usando um module loader.\nEm tempo de execução, o module loader é responsável por localizar e executar todas as dependências de um módulo antes de executá-lo.\nModule loaders conhecidos usados ​​em JavaScript são os loaders de Node.js para <a href=\"https://wikipedia.org/wiki/CommonJS\">CommonJS</a> módulos e o <a href=\"http://requirejs.org/\">RequireJS</a> loader para <a href=\"https://github.com/amdjs/amdjs-api/blob/master/AMD.md\">AMD</a> módulos em aplicações web.</p>\n<p>Em TypeScript, assim como no ECMAScript 2015, qualquer arquivo contendo um nível superior de <code>import</code> ou <code>export</code> é considerado um módulo.\nDa mesma forma, um arquivo sem qualquer declarações de <code>import</code> ou <code>export</code> é tratado como um script cujos conteúdos são acessíveis no escopo global (e, portanto, para módulos também).</p>\n<h2 id=\"export\" style=\"position:relative;\"><a href=\"#export\" aria-label=\"export permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Export</h2>\n<h2 id=\"exportando-a-declaração\" style=\"position:relative;\"><a href=\"#exportando-a-declara%C3%A7%C3%A3o\" aria-label=\"exportando a declaração permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Exportando a declaração</h2>\n<p>Qualquer declaração (como uma variável, função, classe, alias de tipo ou interface) pode ser exportada adicionando a palavra-chave <code>export</code>.</p>\n<h5 id=\"stringvalidatorts\" style=\"position:relative;\"><a href=\"#stringvalidatorts\" aria-label=\"stringvalidatorts permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>StringValidator.ts</h5>\n<pre class=\"shiki\"><div class=\"language-id\">ts</div><div class='code-container'><code><span style=\"color: #0000FF\">export</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">interface</span><span style=\"color: #000000\"> StringValidator {</span>\n<span style=\"color: #000000\">  isAcceptable(</span><span style=\"color: #1A1A1A\">s</span><span style=\"color: #000000\">: string): boolean;</span>\n<span style=\"color: #000000\">}</span></code></div></pre>\n<h5 id=\"zipcodevalidatorts\" style=\"position:relative;\"><a href=\"#zipcodevalidatorts\" aria-label=\"zipcodevalidatorts permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ZipCodeValidator.ts</h5>\n<pre class=\"shiki\"><div class=\"language-id\">ts</div><div class='code-container'><code><span style=\"color: #0000FF\">import</span><span style=\"color: #000000\"> { </span><span style=\"color: #1A1A1A\">StringValidator</span><span style=\"color: #000000\"> } </span><span style=\"color: #0000FF\">from</span><span style=\"color: #000000\"> </span><span style=\"color: #A31515\">\"./StringValidator\"</span><span style=\"color: #000000\">;</span>\n\n<span style=\"color: #0000FF\">export</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">const</span><span style=\"color: #000000\"> </span><span style=\"color: #1A1A1A\">numberRegexp </span><span style=\"color: #000000\">=</span><span style=\"color: #A31515\"> /</span><span style=\"color: #0000FF\">^</span><span style=\"color: #A31515\">[0-9]</span><span style=\"color: #000000\">+</span><span style=\"color: #0000FF\">$</span><span style=\"color: #A31515\">/</span><span style=\"color: #000000\">;</span>\n\n<span style=\"color: #0000FF\">export</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">class</span><span style=\"color: #000000\"> ZipCodeValidator </span><span style=\"color: #0000FF\">implements</span><span style=\"color: #000000\"> StringValidator {</span>\n<span style=\"color: #000000\">  isAcceptable(</span><span style=\"color: #1A1A1A\">s</span><span style=\"color: #000000\">: string) {</span>\n<span style=\"color: #000000\">    </span><span style=\"color: #0000FF\">return</span><span style=\"color: #000000\"> </span><span style=\"color: #1A1A1A\">s</span><span style=\"color: #000000\">.length === </span><span style=\"color: #09835A\">5</span><span style=\"color: #000000\"> && </span><span style=\"color: #1A1A1A\">numberRegexp</span><span style=\"color: #000000\">.test(</span><span style=\"color: #1A1A1A\">s</span><span style=\"color: #000000\">);</span>\n<span style=\"color: #000000\">  }</span>\n<span style=\"color: #000000\">}</span></code></div></pre>\n<h2 id=\"declarações-de-export\" style=\"position:relative;\"><a href=\"#declara%C3%A7%C3%B5es-de-export\" aria-label=\"declarações de export permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Declarações de Export</h2>\n<p>As instruções de exportação são úteis quando as exportações precisam ser renomeadas para os consumidores, portanto, o exemplo acima pode ser escrito como:</p>\n<pre class=\"shiki\"><div class=\"language-id\">ts</div><div class='code-container'><code><span style=\"color: #0000FF\">class</span><span style=\"color: #000000\"> ZipCodeValidator </span><span style=\"color: #0000FF\">implements</span><span style=\"color: #000000\"> StringValidator {</span>\n<span style=\"color: #000000\">  isAcceptable(</span><span style=\"color: #1A1A1A\">s</span><span style=\"color: #000000\">: string) {</span>\n<span style=\"color: #000000\">    </span><span style=\"color: #0000FF\">return</span><span style=\"color: #000000\"> </span><span style=\"color: #1A1A1A\">s</span><span style=\"color: #000000\">.length === </span><span style=\"color: #09835A\">5</span><span style=\"color: #000000\"> && </span><span style=\"color: #1A1A1A\">numberRegexp</span><span style=\"color: #000000\">.test(</span><span style=\"color: #1A1A1A\">s</span><span style=\"color: #000000\">);</span>\n<span style=\"color: #000000\">  }</span>\n<span style=\"color: #000000\">}</span>\n<span style=\"color: #0000FF\">export</span><span style=\"color: #000000\"> { </span><span style=\"color: #1A1A1A\">ZipCodeValidator</span><span style=\"color: #000000\"> };</span>\n<span style=\"color: #0000FF\">export</span><span style=\"color: #000000\"> { </span><span style=\"color: #1A1A1A\">ZipCodeValidator</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">as</span><span style=\"color: #000000\"> </span><span style=\"color: #1A1A1A\">mainValidator</span><span style=\"color: #000000\"> };</span></code></div></pre>\n<h2 id=\"re-exports\" style=\"position:relative;\"><a href=\"#re-exports\" aria-label=\"re exports permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Re-exports</h2>\n<p>Freqüentemente, os módulos estendem outros módulos e expõem parcialmente alguns de seus recursos.\nUma reexportação não importa localmente nem introduz uma variável local.</p>\n<h5 id=\"parseintbasedzipcodevalidatorts\" style=\"position:relative;\"><a href=\"#parseintbasedzipcodevalidatorts\" aria-label=\"parseintbasedzipcodevalidatorts permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ParseIntBasedZipCodeValidator.ts</h5>\n<pre class=\"shiki\"><div class=\"language-id\">ts</div><div class='code-container'><code><span style=\"color: #0000FF\">export</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">class</span><span style=\"color: #000000\"> ParseIntBasedZipCodeValidator {</span>\n<span style=\"color: #000000\">  isAcceptable(</span><span style=\"color: #1A1A1A\">s</span><span style=\"color: #000000\">: string) {</span>\n<span style=\"color: #000000\">    </span><span style=\"color: #0000FF\">return</span><span style=\"color: #000000\"> </span><span style=\"color: #1A1A1A\">s</span><span style=\"color: #000000\">.length === </span><span style=\"color: #09835A\">5</span><span style=\"color: #000000\"> && parseInt(</span><span style=\"color: #1A1A1A\">s</span><span style=\"color: #000000\">).toString() === </span><span style=\"color: #1A1A1A\">s</span><span style=\"color: #000000\">;</span>\n<span style=\"color: #000000\">  }</span>\n<span style=\"color: #000000\">}</span>\n\n<span style=\"color: #008000\">// Exporta o validador original, mas o renomeia</span>\n<span style=\"color: #0000FF\">export</span><span style=\"color: #000000\"> { </span><span style=\"color: #1A1A1A\">ZipCodeValidator</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">as</span><span style=\"color: #000000\"> </span><span style=\"color: #1A1A1A\">RegExpBasedZipCodeValidator</span><span style=\"color: #000000\"> } </span><span style=\"color: #0000FF\">from</span><span style=\"color: #000000\"> </span><span style=\"color: #A31515\">\"./ZipCodeValidator\"</span><span style=\"color: #000000\">;</span></code></div></pre>\n<p>Opcionalmente, um módulo pode envolver um ou mais módulos e combinar todas as suas exportações usando a sintaxe <code>export * from \"module\"</code>.</p>\n<h5 id=\"allvalidatorsts\" style=\"position:relative;\"><a href=\"#allvalidatorsts\" aria-label=\"allvalidatorsts permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>AllValidators.ts</h5>\n<pre class=\"shiki\"><div class=\"language-id\">ts</div><div class='code-container'><code><span style=\"color: #0000FF\">export</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">*</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">from</span><span style=\"color: #000000\"> </span><span style=\"color: #A31515\">\"./StringValidator\"</span><span style=\"color: #000000\">; </span><span style=\"color: #008000\">// exporta a interface 'StringValidator'</span>\n<span style=\"color: #0000FF\">export</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">*</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">from</span><span style=\"color: #000000\"> </span><span style=\"color: #A31515\">\"./ZipCodeValidator\"</span><span style=\"color: #000000\">; </span><span style=\"color: #008000\">// exporta 'ZipCodeValidator' e a const 'numberRegexp'</span>\n<span style=\"color: #0000FF\">export</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">*</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">from</span><span style=\"color: #000000\"> </span><span style=\"color: #A31515\">\"./ParseIntBasedZipCodeValidator\"</span><span style=\"color: #000000\">; </span><span style=\"color: #008000\">//  exporta a classe 'ParseIntBasedZipCodeValidator'</span>\n<span style=\"color: #008000\">// e reexporta 'RegExpBasedZipCodeValidator' como um alias</span>\n<span style=\"color: #008000\">// da classe 'ZipCodeValidator' do 'ZipCodeValidator.ts'</span>\n<span style=\"color: #008000\">// módulo.</span></code></div></pre>\n<h2 id=\"import\" style=\"position:relative;\"><a href=\"#import\" aria-label=\"import permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Import</h2>\n<p>Importar é tão fácil quanto exportar de um módulo.\nA importação de uma declaração exportada é feita usando um dos <code>import</code> abaixo:</p>\n<h2 id=\"importar-um-único-export-de-um-módulo\" style=\"position:relative;\"><a href=\"#importar-um-%C3%BAnico-export-de-um-m%C3%B3dulo\" aria-label=\"importar um único export de um módulo permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Importar um único export de um módulo</h2>\n<pre class=\"shiki\"><div class=\"language-id\">ts</div><div class='code-container'><code><span style=\"color: #0000FF\">import</span><span style=\"color: #000000\"> { </span><span style=\"color: #1A1A1A\">ZipCodeValidator</span><span style=\"color: #000000\"> } </span><span style=\"color: #0000FF\">from</span><span style=\"color: #000000\"> </span><span style=\"color: #A31515\">\"./ZipCodeValidator\"</span><span style=\"color: #000000\">;</span>\n\n<span style=\"color: #0000FF\">let</span><span style=\"color: #000000\"> </span><span style=\"color: #1A1A1A\">myValidator </span><span style=\"color: #000000\">= </span><span style=\"color: #0000FF\">new</span><span style=\"color: #000000\"> ZipCodeValidator();</span></code></div></pre>\n<p>Imports também podem ser renomeados</p>\n<pre class=\"shiki\"><div class=\"language-id\">ts</div><div class='code-container'><code><span style=\"color: #0000FF\">import</span><span style=\"color: #000000\"> { </span><span style=\"color: #1A1A1A\">ZipCodeValidator</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">as</span><span style=\"color: #000000\"> </span><span style=\"color: #1A1A1A\">ZCV</span><span style=\"color: #000000\"> } </span><span style=\"color: #0000FF\">from</span><span style=\"color: #000000\"> </span><span style=\"color: #A31515\">\"./ZipCodeValidator\"</span><span style=\"color: #000000\">;</span>\n<span style=\"color: #0000FF\">let</span><span style=\"color: #000000\"> </span><span style=\"color: #1A1A1A\">myValidator </span><span style=\"color: #000000\">= </span><span style=\"color: #0000FF\">new</span><span style=\"color: #000000\"> ZCV();</span></code></div></pre>\n<h2 id=\"importa-o-módulo-inteiro-em-uma-única-variável-e-a-usa-para-acessar-os-exports-do-módulo\" style=\"position:relative;\"><a href=\"#importa-o-m%C3%B3dulo-inteiro-em-uma-%C3%BAnica-vari%C3%A1vel-e-a-usa-para-acessar-os-exports-do-m%C3%B3dulo\" aria-label=\"importa o módulo inteiro em uma única variável e a usa para acessar os exports do módulo permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Importa o módulo inteiro em uma única variável, e a usa para acessar os exports do módulo</h2>\n<pre class=\"shiki\"><div class=\"language-id\">ts</div><div class='code-container'><code><span style=\"color: #0000FF\">import</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">*</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">as</span><span style=\"color: #000000\"> </span><span style=\"color: #1A1A1A\">validator</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">from</span><span style=\"color: #000000\"> </span><span style=\"color: #A31515\">\"./ZipCodeValidator\"</span><span style=\"color: #000000\">;</span>\n<span style=\"color: #0000FF\">let</span><span style=\"color: #000000\"> </span><span style=\"color: #1A1A1A\">myValidator </span><span style=\"color: #000000\">= </span><span style=\"color: #0000FF\">new</span><span style=\"color: #000000\"> validator.ZipCodeValidator();</span></code></div></pre>\n<h2 id=\"importa-um-módulo-apenas-para-efeitos-colaterais\" style=\"position:relative;\"><a href=\"#importa-um-m%C3%B3dulo-apenas-para-efeitos-colaterais\" aria-label=\"importa um módulo apenas para efeitos colaterais permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Importa um módulo apenas para efeitos colaterais</h2>\n<p>Embora não seja uma prática recomendada, alguns módulos configuram estados globais que podem ser usados por outros módulos.\nEsses módulos podem não ter exportações, ou o consumidor não está interessado em nenhuma de suas exportações.\nPara importar esses módulos, use:</p>\n<pre class=\"shiki\"><div class=\"language-id\">ts</div><div class='code-container'><code><span style=\"color: #0000FF\">import</span><span style=\"color: #000000\"> </span><span style=\"color: #A31515\">\"./my-module.js\"</span><span style=\"color: #000000\">;</span></code></div></pre>\n<h2 id=\"tipos-de-import\" style=\"position:relative;\"><a href=\"#tipos-de-import\" aria-label=\"tipos de import permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tipos de import</h2>\n<p>Antes do TypeScript 3.8, você pode importar um tipo usando <code>import</code>.\nCom o TypeScript 3.8, você pode importar um tipo usando o using a declaração <code>import</code>, ou usando <code>import type</code>.</p>\n<pre class=\"shiki\"><div class=\"language-id\">ts</div><div class='code-container'><code><span style=\"color: #008000\">// Reutilizando o mesmo import</span>\n<span style=\"color: #0000FF\">import</span><span style=\"color: #000000\"> { </span><span style=\"color: #1A1A1A\">APIResponseType</span><span style=\"color: #000000\"> } </span><span style=\"color: #0000FF\">from</span><span style=\"color: #000000\"> </span><span style=\"color: #A31515\">\"./api\"</span><span style=\"color: #000000\">;</span>\n\n<span style=\"color: #008000\">// Usando explicitamente o import type</span>\n<span style=\"color: #0000FF\">import</span><span style=\"color: #000000\"> </span><span style=\"color: #1A1A1A\">type</span><span style=\"color: #000000\"> { </span><span style=\"color: #1A1A1A\">APIResponseType</span><span style=\"color: #000000\"> } </span><span style=\"color: #0000FF\">from</span><span style=\"color: #000000\"> </span><span style=\"color: #A31515\">\"./api\"</span><span style=\"color: #000000\">;</span></code></div></pre>\n<p><code>import type</code> sempre tem a garantia de ser removido de seu JavaScript, e ferramentas como Babel podem realizar melhores suposições sobre seu código a partir das flags <code>isolatedModules</code>.\nVocê pode ler mais em <a href=\"https://devblogs.microsoft.com/typescript/announcing-typescript-3-8-beta/#type-only-imports-exports\">3.8 release notes</a>.</p>\n<h2 id=\"exports-padrões\" style=\"position:relative;\"><a href=\"#exports-padr%C3%B5es\" aria-label=\"exports padrões permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Exports padrões</h2>\n<p>Cada módulo pode exportar opcionalmente um <code>default</code> export.\nExports padrões são marcados com a palavra-chave <code>default</code>; e pode existir apenas uma exportação <code>default</code> por módulo.\nExportações <code>default</code> são importadas usando um diferente modelo de import.</p>\n<p>Exportações <code>default</code> são realmente úteis.\nPor exemplo, uma biblioteca como jQuery pode ter uma exportação padrão do <code>jQuery</code> ou <code>$</code>, que provavelmente também importaríamos com o nome <code>$</code> ou <code>jQuery</code>.</p>\n<h5 id=\"jquerydts\" style=\"position:relative;\"><a href=\"#jquerydts\" aria-label=\"jquerydts permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/DefinitelyTyped/DefinitelyTyped/blob/master/types/jquery/JQuery.d.ts\">JQuery.d.ts</a></h5>\n<pre class=\"shiki\"><div class=\"language-id\">ts</div><div class='code-container'><code><span style=\"color: #0000FF\">declare</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">let</span><span style=\"color: #000000\"> </span><span style=\"color: #1A1A1A\">$</span><span style=\"color: #000000\">:</span><span style=\"color: #1A1A1A\"> JQuery</span><span style=\"color: #000000\">;</span>\n<span style=\"color: #0000FF\">export</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">default</span><span style=\"color: #000000\"> </span><span style=\"color: #1A1A1A\">$</span><span style=\"color: #000000\">;</span></code></div></pre>\n<h5 id=\"appts\" style=\"position:relative;\"><a href=\"#appts\" aria-label=\"appts permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>App.ts</h5>\n<pre class=\"shiki\"><div class=\"language-id\">ts</div><div class='code-container'><code><span style=\"color: #0000FF\">import</span><span style=\"color: #000000\"> </span><span style=\"color: #1A1A1A\">$</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">from</span><span style=\"color: #000000\"> </span><span style=\"color: #A31515\">\"jquery\"</span><span style=\"color: #000000\">;</span>\n\n<span style=\"color: #000000\">$(</span><span style=\"color: #A31515\">\"button.continue\"</span><span style=\"color: #000000\">).html(</span><span style=\"color: #A31515\">\"Próximo passo...\"</span><span style=\"color: #000000\">);</span></code></div></pre>\n<p>Classes e declarações de funções podem ser criadas diretamente como exportações padrão.\nOs nomes de declaração de função e classe de exportação padrão são opcionais.</p>\n<h5 id=\"zipcodevalidatorts-1\" style=\"position:relative;\"><a href=\"#zipcodevalidatorts-1\" aria-label=\"zipcodevalidatorts 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ZipCodeValidator.ts</h5>\n<pre class=\"shiki\"><div class=\"language-id\">ts</div><div class='code-container'><code><span style=\"color: #0000FF\">export</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">default</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">class</span><span style=\"color: #000000\"> ZipCodeValidator {</span>\n<span style=\"color: #000000\">  </span><span style=\"color: #0000FF\">static</span><span style=\"color: #000000\"> </span><span style=\"color: #1A1A1A\">numberRegexp</span><span style=\"color: #000000\"> =</span><span style=\"color: #A31515\"> /</span><span style=\"color: #0000FF\">^</span><span style=\"color: #A31515\">[0-9]</span><span style=\"color: #000000\">+</span><span style=\"color: #0000FF\">$</span><span style=\"color: #A31515\">/</span><span style=\"color: #000000\">;</span>\n<span style=\"color: #000000\">  isAcceptable(</span><span style=\"color: #1A1A1A\">s</span><span style=\"color: #000000\">: string) {</span>\n<span style=\"color: #000000\">    </span><span style=\"color: #0000FF\">return</span><span style=\"color: #000000\"> </span><span style=\"color: #1A1A1A\">s</span><span style=\"color: #000000\">.length === </span><span style=\"color: #09835A\">5</span><span style=\"color: #000000\"> && </span><span style=\"color: #1A1A1A\">ZipCodeValidator</span><span style=\"color: #000000\">.</span><span style=\"color: #1A1A1A\">numberRegexp</span><span style=\"color: #000000\">.test(</span><span style=\"color: #1A1A1A\">s</span><span style=\"color: #000000\">);</span>\n<span style=\"color: #000000\">  }</span>\n<span style=\"color: #000000\">}</span></code></div></pre>\n<h5 id=\"testts\" style=\"position:relative;\"><a href=\"#testts\" aria-label=\"testts permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Test.ts</h5>\n<pre class=\"shiki\"><div class=\"language-id\">ts</div><div class='code-container'><code><span style=\"color: #0000FF\">import</span><span style=\"color: #000000\"> </span><span style=\"color: #1A1A1A\">validator</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">from</span><span style=\"color: #000000\"> </span><span style=\"color: #A31515\">\"./ZipCodeValidator\"</span><span style=\"color: #000000\">;</span>\n\n<span style=\"color: #0000FF\">let</span><span style=\"color: #000000\"> </span><span style=\"color: #1A1A1A\">myValidator </span><span style=\"color: #000000\">= </span><span style=\"color: #0000FF\">new</span><span style=\"color: #000000\"> validator();</span></code></div></pre>\n<p>ou</p>\n<h5 id=\"staticzipcodevalidatorts\" style=\"position:relative;\"><a href=\"#staticzipcodevalidatorts\" aria-label=\"staticzipcodevalidatorts permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>StaticZipCodeValidator.ts</h5>\n<pre class=\"shiki\"><div class=\"language-id\">ts</div><div class='code-container'><code><span style=\"color: #0000FF\">const</span><span style=\"color: #000000\"> </span><span style=\"color: #1A1A1A\">numberRegexp </span><span style=\"color: #000000\">=</span><span style=\"color: #A31515\"> /</span><span style=\"color: #0000FF\">^</span><span style=\"color: #A31515\">[0-9]</span><span style=\"color: #000000\">+</span><span style=\"color: #0000FF\">$</span><span style=\"color: #A31515\">/</span><span style=\"color: #000000\">;</span>\n\n<span style=\"color: #0000FF\">export</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">default</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">function</span><span style=\"color: #000000\"> (</span><span style=\"color: #1A1A1A\">s</span><span style=\"color: #000000\">: string) {</span>\n<span style=\"color: #000000\">  </span><span style=\"color: #0000FF\">return</span><span style=\"color: #000000\"> </span><span style=\"color: #1A1A1A\">s</span><span style=\"color: #000000\">.length === </span><span style=\"color: #09835A\">5</span><span style=\"color: #000000\"> && </span><span style=\"color: #1A1A1A\">numberRegexp</span><span style=\"color: #000000\">.test(</span><span style=\"color: #1A1A1A\">s</span><span style=\"color: #000000\">);</span>\n<span style=\"color: #000000\">}</span></code></div></pre>\n<h5 id=\"testts-1\" style=\"position:relative;\"><a href=\"#testts-1\" aria-label=\"testts 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Test.ts</h5>\n<pre class=\"shiki\"><div class=\"language-id\">ts</div><div class='code-container'><code><span style=\"color: #0000FF\">import</span><span style=\"color: #000000\"> </span><span style=\"color: #1A1A1A\">validate</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">from</span><span style=\"color: #000000\"> </span><span style=\"color: #A31515\">\"./StaticZipCodeValidator\"</span><span style=\"color: #000000\">;</span>\n\n<span style=\"color: #0000FF\">let</span><span style=\"color: #000000\"> </span><span style=\"color: #1A1A1A\">strings </span><span style=\"color: #000000\">= [</span><span style=\"color: #A31515\">\"Olá\"</span><span style=\"color: #000000\">, </span><span style=\"color: #A31515\">\"98052\"</span><span style=\"color: #000000\">, </span><span style=\"color: #A31515\">\"101\"</span><span style=\"color: #000000\">];</span>\n\n<span style=\"color: #008000\">// Use a função validar</span>\n<span style=\"color: #1A1A1A\">strings</span><span style=\"color: #000000\">.forEach((</span><span style=\"color: #1A1A1A\">s</span><span style=\"color: #000000\">) </span><span style=\"color: #0000FF\">=&gt;</span><span style=\"color: #000000\"> {</span>\n<span style=\"color: #000000\">  console.log(</span><span style=\"color: #A31515\">`\"</span><span style=\"color: #0000FF\">${</span><span style=\"color: #1A1A1A\">s</span><span style=\"color: #0000FF\">}</span><span style=\"color: #A31515\">\" </span><span style=\"color: #0000FF\">${</span><span style=\"color: #A31515\">validate(</span><span style=\"color: #1A1A1A\">s</span><span style=\"color: #A31515\">) </span><span style=\"color: #000000\">?</span><span style=\"color: #A31515\"> \"combina\" </span><span style=\"color: #000000\">:</span><span style=\"color: #A31515\"> \"não combina\"</span><span style=\"color: #0000FF\">}</span><span style=\"color: #A31515\">`</span><span style=\"color: #000000\">);</span>\n<span style=\"color: #000000\">});</span></code></div></pre>\n<p>Exportações <code>default</code> também podem ser somente valores:</p>\n<h5 id=\"onetwothreets\" style=\"position:relative;\"><a href=\"#onetwothreets\" aria-label=\"onetwothreets permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>OneTwoThree.ts</h5>\n<pre class=\"shiki\"><div class=\"language-id\">ts</div><div class='code-container'><code><span style=\"color: #0000FF\">export</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">default</span><span style=\"color: #000000\"> </span><span style=\"color: #A31515\">\"123\"</span><span style=\"color: #000000\">;</span></code></div></pre>\n<h5 id=\"logts\" style=\"position:relative;\"><a href=\"#logts\" aria-label=\"logts permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Log.ts</h5>\n<pre class=\"shiki\"><div class=\"language-id\">ts</div><div class='code-container'><code><span style=\"color: #0000FF\">import</span><span style=\"color: #000000\"> </span><span style=\"color: #1A1A1A\">num</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">from</span><span style=\"color: #000000\"> </span><span style=\"color: #A31515\">\"./OneTwoThree\"</span><span style=\"color: #000000\">;</span>\n\n<span style=\"color: #000000\">console.log(</span><span style=\"color: #1A1A1A\">num</span><span style=\"color: #000000\">); </span><span style=\"color: #008000\">// \"123\"</span></code></div></pre>\n<h2 id=\"exporta-tudo-como-x\" style=\"position:relative;\"><a href=\"#exporta-tudo-como-x\" aria-label=\"exporta tudo como x permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Exporta tudo como x</h2>\n<p>Com TypeScript 3.8, você pode usar <code>export * as ns</code> como uma abreviação para reexportar outro módulo com um nome:</p>\n<pre class=\"shiki\"><div class=\"language-id\">ts</div><div class='code-container'><code><span style=\"color: #0000FF\">export</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">*</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">as</span><span style=\"color: #000000\"> </span><span style=\"color: #1A1A1A\">utilities</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">from</span><span style=\"color: #000000\"> </span><span style=\"color: #A31515\">\"./utilities\"</span><span style=\"color: #000000\">;</span></code></div></pre>\n<p>Isso pega todas as dependências de um módulo e o torna um campo exportado. Você pode importá-lo assim:</p>\n<pre class=\"shiki\"><div class=\"language-id\">ts</div><div class='code-container'><code><span style=\"color: #0000FF\">import</span><span style=\"color: #000000\"> { </span><span style=\"color: #1A1A1A\">utilities</span><span style=\"color: #000000\"> } </span><span style=\"color: #0000FF\">from</span><span style=\"color: #000000\"> </span><span style=\"color: #A31515\">\"./index\"</span><span style=\"color: #000000\">;</span></code></div></pre>\n<h2 id=\"export--e-import--require\" style=\"position:relative;\"><a href=\"#export--e-import--require\" aria-label=\"export  e import  require permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code>export =</code> e <code>import = require()</code></h2>\n<p>Ambos CommonJS e AMD geralmente têm o conceito de um objeto <code>exports</code> que contém todas as exportações de um módulo.</p>\n<p>Eles também suportam substituir o objeto <code>exports</code>com um único objeto customizado.\nAs exportações padrão devem agir como um substituto para esse comportamento; no entanto, os dois são incompatíveis.\nTypeScript suporta <code>export =</code> para modelar o tradicional fluxo de trabalho entre CommonJS e AMD.</p>\n<p>A sintaxe <code>export =</code> especifica um único objeto que é exportado do módulo.\nIsso pode ser uma classe, interface, namespace, função ou enum.</p>\n<p>Quando estiver exportando um módulo usando <code>export =</code>, específico do TypeScript <code>import module = require(\"module\")</code> precisa ser usado para importar o módulo.</p>\n<h5 id=\"zipcodevalidatorts-2\" style=\"position:relative;\"><a href=\"#zipcodevalidatorts-2\" aria-label=\"zipcodevalidatorts 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ZipCodeValidator.ts</h5>\n<pre class=\"shiki\"><div class=\"language-id\">ts</div><div class='code-container'><code><span style=\"color: #0000FF\">let</span><span style=\"color: #000000\"> </span><span style=\"color: #1A1A1A\">numberRegexp </span><span style=\"color: #000000\">=</span><span style=\"color: #A31515\"> /</span><span style=\"color: #0000FF\">^</span><span style=\"color: #A31515\">[0-9]</span><span style=\"color: #000000\">+</span><span style=\"color: #0000FF\">$</span><span style=\"color: #A31515\">/</span><span style=\"color: #000000\">;</span>\n<span style=\"color: #0000FF\">class</span><span style=\"color: #000000\"> ZipCodeValidator {</span>\n<span style=\"color: #000000\">  isAcceptable(</span><span style=\"color: #1A1A1A\">s</span><span style=\"color: #000000\">: string) {</span>\n<span style=\"color: #000000\">    </span><span style=\"color: #0000FF\">return</span><span style=\"color: #000000\"> </span><span style=\"color: #1A1A1A\">s</span><span style=\"color: #000000\">.length === </span><span style=\"color: #09835A\">5</span><span style=\"color: #000000\"> && </span><span style=\"color: #1A1A1A\">numberRegexp</span><span style=\"color: #000000\">.test(</span><span style=\"color: #1A1A1A\">s</span><span style=\"color: #000000\">);</span>\n<span style=\"color: #000000\">  }</span>\n<span style=\"color: #000000\">}</span>\n<span style=\"color: #0000FF\">export</span><span style=\"color: #000000\"> = </span><span style=\"color: #1A1A1A\">ZipCodeValidator</span><span style=\"color: #000000\">;</span></code></div></pre>\n<h5 id=\"testts-2\" style=\"position:relative;\"><a href=\"#testts-2\" aria-label=\"testts 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Test.ts</h5>\n<pre class=\"shiki\"><div class=\"language-id\">ts</div><div class='code-container'><code><span style=\"color: #0000FF\">import</span><span style=\"color: #000000\"> </span><span style=\"color: #1A1A1A\">zip</span><span style=\"color: #000000\"> = </span><span style=\"color: #0000FF\">require</span><span style=\"color: #000000\">(</span><span style=\"color: #A31515\">\"./ZipCodeValidator\"</span><span style=\"color: #000000\">);</span>\n\n<span style=\"color: #008000\">// Alguns exemplos para testar</span>\n<span style=\"color: #0000FF\">let</span><span style=\"color: #000000\"> </span><span style=\"color: #1A1A1A\">strings </span><span style=\"color: #000000\">= [</span><span style=\"color: #A31515\">\"Olá\"</span><span style=\"color: #000000\">, </span><span style=\"color: #A31515\">\"98052\"</span><span style=\"color: #000000\">, </span><span style=\"color: #A31515\">\"101\"</span><span style=\"color: #000000\">];</span>\n\n<span style=\"color: #008000\">// Validators para usar</span>\n<span style=\"color: #0000FF\">let</span><span style=\"color: #000000\"> </span><span style=\"color: #1A1A1A\">validator </span><span style=\"color: #000000\">= </span><span style=\"color: #0000FF\">new</span><span style=\"color: #000000\"> zip();</span>\n\n<span style=\"color: #008000\">// Mostra cada string que passou em cada validador</span>\n<span style=\"color: #1A1A1A\">strings</span><span style=\"color: #000000\">.forEach((</span><span style=\"color: #1A1A1A\">s</span><span style=\"color: #000000\">) </span><span style=\"color: #0000FF\">=&gt;</span><span style=\"color: #000000\"> {</span>\n<span style=\"color: #000000\">  console.log(</span>\n<span style=\"color: #000000\">    </span><span style=\"color: #A31515\">`\"</span><span style=\"color: #0000FF\">${</span><span style=\"color: #1A1A1A\">s</span><span style=\"color: #0000FF\">}</span><span style=\"color: #A31515\">\" - </span><span style=\"color: #0000FF\">${</span><span style=\"color: #1A1A1A\">validator</span><span style=\"color: #A31515\">.isAcceptable(</span><span style=\"color: #1A1A1A\">s</span><span style=\"color: #A31515\">) </span><span style=\"color: #000000\">?</span><span style=\"color: #A31515\"> \"combina\" </span><span style=\"color: #000000\">:</span><span style=\"color: #A31515\"> \"não combina\"</span><span style=\"color: #0000FF\">}</span><span style=\"color: #A31515\">`</span>\n<span style=\"color: #000000\">  );</span>\n<span style=\"color: #000000\">});</span></code></div></pre>\n<h2 id=\"geração-de-código-para-módulos\" style=\"position:relative;\"><a href=\"#gera%C3%A7%C3%A3o-de-c%C3%B3digo-para-m%C3%B3dulos\" aria-label=\"geração de código para módulos permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Geração de código para Módulos</h2>\n<p>Dependendo do destino do módulo especificado durante a compilação, o compilador irá gerar o código apropriado para Node.js (<a href=\"http://wiki.commonjs.org/wiki/CommonJS\">CommonJS</a>), require.js (<a href=\"https://github.com/amdjs/amdjs-api/wiki/AMD\">AMD</a>), <a href=\"https://github.com/umdjs/umd\">UMD</a>, <a href=\"https://github.com/systemjs/systemjs\">SystemJS</a>, ou <a href=\"http://www.ecma-international.org/ecma-262/6.0/#sec-modules\">ECMAScript 2015 native modules</a> (ES6) sistemas de carregamento de módulos.\nPara mais informações de que o <code>define</code>, <code>require</code> e <code>register</code> chama no código gerado, consulte a documentação de cada carregador de módulo.</p>\n<p>Esse exemplo simples mostra como os nomes usados ​​durante a importação e exportação são traduzidos no código de carregamento do módulo.</p>\n<h5 id=\"simplemodulets\" style=\"position:relative;\"><a href=\"#simplemodulets\" aria-label=\"simplemodulets permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>SimpleModule.ts</h5>\n<pre class=\"shiki\"><div class=\"language-id\">ts</div><div class='code-container'><code><span style=\"color: #0000FF\">import</span><span style=\"color: #000000\"> </span><span style=\"color: #1A1A1A\">m</span><span style=\"color: #000000\"> = </span><span style=\"color: #0000FF\">require</span><span style=\"color: #000000\">(</span><span style=\"color: #A31515\">\"mod\"</span><span style=\"color: #000000\">);</span>\n<span style=\"color: #0000FF\">export</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">let</span><span style=\"color: #000000\"> </span><span style=\"color: #1A1A1A\">t </span><span style=\"color: #000000\">= </span><span style=\"color: #1A1A1A\">m</span><span style=\"color: #000000\">.</span><span style=\"color: #1A1A1A\">something</span><span style=\"color: #000000\"> + </span><span style=\"color: #09835A\">1</span><span style=\"color: #000000\">;</span></code></div></pre>\n<h5 id=\"amd--requirejs-simplemodulejs\" style=\"position:relative;\"><a href=\"#amd--requirejs-simplemodulejs\" aria-label=\"amd  requirejs simplemodulejs permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>AMD / RequireJS SimpleModule.js</h5>\n<pre class=\"shiki\"><div class=\"language-id\">js</div><div class='code-container'><code><span style=\"color: #000000\">define([</span><span style=\"color: #A31515\">\"require\"</span><span style=\"color: #000000\">, </span><span style=\"color: #A31515\">\"exports\"</span><span style=\"color: #000000\">, </span><span style=\"color: #A31515\">\"./mod\"</span><span style=\"color: #000000\">], </span><span style=\"color: #0000FF\">function</span><span style=\"color: #000000\"> (</span><span style=\"color: #1A1A1A\">require</span><span style=\"color: #000000\">, </span><span style=\"color: #1A1A1A\">exports</span><span style=\"color: #000000\">, </span><span style=\"color: #1A1A1A\">mod_1</span><span style=\"color: #000000\">) {</span>\n<span style=\"color: #000000\">  exports.</span><span style=\"color: #1A1A1A\">t</span><span style=\"color: #000000\"> = </span><span style=\"color: #1A1A1A\">mod_1</span><span style=\"color: #000000\">.</span><span style=\"color: #1A1A1A\">something</span><span style=\"color: #000000\"> + </span><span style=\"color: #09835A\">1</span><span style=\"color: #000000\">;</span>\n<span style=\"color: #000000\">});</span></code></div></pre>\n<h5 id=\"commonjs--node-simplemodulejs\" style=\"position:relative;\"><a href=\"#commonjs--node-simplemodulejs\" aria-label=\"commonjs  node simplemodulejs permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CommonJS / Node SimpleModule.js</h5>\n<pre class=\"shiki\"><div class=\"language-id\">js</div><div class='code-container'><code><span style=\"color: #0000FF\">var</span><span style=\"color: #000000\"> </span><span style=\"color: #1A1A1A\">mod_1</span><span style=\"color: #000000\"> = require(</span><span style=\"color: #A31515\">\"./mod\"</span><span style=\"color: #000000\">);</span>\n<span style=\"color: #000000\">exports.</span><span style=\"color: #1A1A1A\">t</span><span style=\"color: #000000\"> = </span><span style=\"color: #1A1A1A\">mod_1</span><span style=\"color: #000000\">.</span><span style=\"color: #1A1A1A\">something</span><span style=\"color: #000000\"> + </span><span style=\"color: #09835A\">1</span><span style=\"color: #000000\">;</span></code></div></pre>\n<h5 id=\"umd-simplemodulejs\" style=\"position:relative;\"><a href=\"#umd-simplemodulejs\" aria-label=\"umd simplemodulejs permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>UMD SimpleModule.js</h5>\n<pre class=\"shiki\"><div class=\"language-id\">js</div><div class='code-container'><code><span style=\"color: #000000\">(</span><span style=\"color: #0000FF\">function</span><span style=\"color: #000000\"> (</span><span style=\"color: #1A1A1A\">factory</span><span style=\"color: #000000\">) {</span>\n<span style=\"color: #000000\">  </span><span style=\"color: #0000FF\">if</span><span style=\"color: #000000\"> (</span><span style=\"color: #0000FF\">typeof</span><span style=\"color: #000000\"> module === </span><span style=\"color: #A31515\">\"object\"</span><span style=\"color: #000000\"> && </span><span style=\"color: #0000FF\">typeof</span><span style=\"color: #000000\"> module.exports === </span><span style=\"color: #A31515\">\"object\"</span><span style=\"color: #000000\">) {</span>\n<span style=\"color: #000000\">    </span><span style=\"color: #0000FF\">var</span><span style=\"color: #000000\"> </span><span style=\"color: #1A1A1A\">v</span><span style=\"color: #000000\"> = factory(</span><span style=\"color: #1A1A1A\">require</span><span style=\"color: #000000\">, exports);</span>\n<span style=\"color: #000000\">    </span><span style=\"color: #0000FF\">if</span><span style=\"color: #000000\"> (</span><span style=\"color: #1A1A1A\">v</span><span style=\"color: #000000\"> !== </span><span style=\"color: #0000FF\">undefined</span><span style=\"color: #000000\">) module.exports = </span><span style=\"color: #1A1A1A\">v</span><span style=\"color: #000000\">;</span>\n<span style=\"color: #000000\">  } </span><span style=\"color: #0000FF\">else</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">if</span><span style=\"color: #000000\"> (</span><span style=\"color: #0000FF\">typeof</span><span style=\"color: #000000\"> </span><span style=\"color: #1A1A1A\">define</span><span style=\"color: #000000\"> === </span><span style=\"color: #A31515\">\"function\"</span><span style=\"color: #000000\"> && </span><span style=\"color: #1A1A1A\">define</span><span style=\"color: #000000\">.</span><span style=\"color: #1A1A1A\">amd</span><span style=\"color: #000000\">) {</span>\n<span style=\"color: #000000\">    define([</span><span style=\"color: #A31515\">\"require\"</span><span style=\"color: #000000\">, </span><span style=\"color: #A31515\">\"exports\"</span><span style=\"color: #000000\">, </span><span style=\"color: #A31515\">\"./mod\"</span><span style=\"color: #000000\">], </span><span style=\"color: #1A1A1A\">factory</span><span style=\"color: #000000\">);</span>\n<span style=\"color: #000000\">  }</span>\n<span style=\"color: #000000\">})(</span><span style=\"color: #0000FF\">function</span><span style=\"color: #000000\"> (</span><span style=\"color: #1A1A1A\">require</span><span style=\"color: #000000\">, </span><span style=\"color: #1A1A1A\">exports</span><span style=\"color: #000000\">) {</span>\n<span style=\"color: #000000\">  </span><span style=\"color: #0000FF\">var</span><span style=\"color: #000000\"> </span><span style=\"color: #1A1A1A\">mod_1</span><span style=\"color: #000000\"> = require(</span><span style=\"color: #A31515\">\"./mod\"</span><span style=\"color: #000000\">);</span>\n<span style=\"color: #000000\">  exports.</span><span style=\"color: #1A1A1A\">t</span><span style=\"color: #000000\"> = </span><span style=\"color: #1A1A1A\">mod_1</span><span style=\"color: #000000\">.</span><span style=\"color: #1A1A1A\">something</span><span style=\"color: #000000\"> + </span><span style=\"color: #09835A\">1</span><span style=\"color: #000000\">;</span>\n<span style=\"color: #000000\">});</span></code></div></pre>\n<h5 id=\"sistema-simplemodulejs\" style=\"position:relative;\"><a href=\"#sistema-simplemodulejs\" aria-label=\"sistema simplemodulejs permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Sistema SimpleModule.js</h5>\n<pre class=\"shiki\"><div class=\"language-id\">js</div><div class='code-container'><code><span style=\"color: #1A1A1A\">System</span><span style=\"color: #000000\">.register([</span><span style=\"color: #A31515\">\"./mod\"</span><span style=\"color: #000000\">], </span><span style=\"color: #0000FF\">function</span><span style=\"color: #000000\"> (</span><span style=\"color: #1A1A1A\">exports_1</span><span style=\"color: #000000\">) {</span>\n<span style=\"color: #000000\">  </span><span style=\"color: #0000FF\">var</span><span style=\"color: #000000\"> </span><span style=\"color: #1A1A1A\">mod_1</span><span style=\"color: #000000\">;</span>\n<span style=\"color: #000000\">  </span><span style=\"color: #0000FF\">var</span><span style=\"color: #000000\"> </span><span style=\"color: #1A1A1A\">t</span><span style=\"color: #000000\">;</span>\n<span style=\"color: #000000\">  </span><span style=\"color: #0000FF\">return</span><span style=\"color: #000000\"> {</span>\n<span style=\"color: #000000\">    setters: [</span>\n<span style=\"color: #000000\">      </span><span style=\"color: #0000FF\">function</span><span style=\"color: #000000\"> (</span><span style=\"color: #1A1A1A\">mod_1_1</span><span style=\"color: #000000\">) {</span>\n<span style=\"color: #000000\">        </span><span style=\"color: #1A1A1A\">mod_1</span><span style=\"color: #000000\"> = </span><span style=\"color: #1A1A1A\">mod_1_1</span><span style=\"color: #000000\">;</span>\n<span style=\"color: #000000\">      },</span>\n<span style=\"color: #000000\">    ],</span>\n<span style=\"color: #000000\">    execute: </span><span style=\"color: #0000FF\">function</span><span style=\"color: #000000\"> () {</span>\n<span style=\"color: #000000\">      exports_1(</span><span style=\"color: #A31515\">\"t\"</span><span style=\"color: #000000\">, (</span><span style=\"color: #1A1A1A\">t</span><span style=\"color: #000000\"> = </span><span style=\"color: #1A1A1A\">mod_1</span><span style=\"color: #000000\">.</span><span style=\"color: #1A1A1A\">something</span><span style=\"color: #000000\"> + </span><span style=\"color: #09835A\">1</span><span style=\"color: #000000\">));</span>\n<span style=\"color: #000000\">    },</span>\n<span style=\"color: #000000\">  };</span>\n<span style=\"color: #000000\">});</span></code></div></pre>\n<h5 id=\"módulos-nativos-ecmascript-2015-simplemodulejs\" style=\"position:relative;\"><a href=\"#m%C3%B3dulos-nativos-ecmascript-2015-simplemodulejs\" aria-label=\"módulos nativos ecmascript 2015 simplemodulejs permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Módulos nativos ECMAScript 2015 SimpleModule.js</h5>\n<pre class=\"shiki\"><div class=\"language-id\">js</div><div class='code-container'><code><span style=\"color: #0000FF\">import</span><span style=\"color: #000000\"> { </span><span style=\"color: #1A1A1A\">something</span><span style=\"color: #000000\"> } </span><span style=\"color: #0000FF\">from</span><span style=\"color: #000000\"> </span><span style=\"color: #A31515\">\"./mod\"</span><span style=\"color: #000000\">;</span>\n<span style=\"color: #0000FF\">export</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">var</span><span style=\"color: #000000\"> </span><span style=\"color: #1A1A1A\">t</span><span style=\"color: #000000\"> = </span><span style=\"color: #1A1A1A\">something</span><span style=\"color: #000000\"> + </span><span style=\"color: #09835A\">1</span><span style=\"color: #000000\">;</span></code></div></pre>\n<h2 id=\"exemplo-simples\" style=\"position:relative;\"><a href=\"#exemplo-simples\" aria-label=\"exemplo simples permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Exemplo simples</h2>\n<p>Abaixo, consolidamos as implementações do Validator usadas nos exemplos anteriores para exportar apenas um único export nomeado de cada módulo.</p>\n<p>Para compilar, devemos especificar o destino do módulo na linha de comando. Para Node.js, use <code>--module commonjs</code>;\npara require.js, use <code>--module amd</code>. Por exemplo:</p>\n<pre class=\"shiki\"><div class='code-container'><code>tsc --module commonjs Test.ts</code></div></pre>\n<p>Quando compilados, cada módulo se tornará um arquivo <code>.js</code> separado.\nAssim como acontece com as tags de referência, o compilador seguirá as instruções <code>import</code> para compilar os arquivos dependentes.</p>\n<h5 id=\"validationts\" style=\"position:relative;\"><a href=\"#validationts\" aria-label=\"validationts permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Validation.ts</h5>\n<pre class=\"shiki\"><div class=\"language-id\">ts</div><div class='code-container'><code><span style=\"color: #0000FF\">export</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">interface</span><span style=\"color: #000000\"> StringValidator {</span>\n<span style=\"color: #000000\">  isAcceptable(</span><span style=\"color: #1A1A1A\">s</span><span style=\"color: #000000\">: string): boolean;</span>\n<span style=\"color: #000000\">}</span></code></div></pre>\n<h5 id=\"lettersonlyvalidatorts\" style=\"position:relative;\"><a href=\"#lettersonlyvalidatorts\" aria-label=\"lettersonlyvalidatorts permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>LettersOnlyValidator.ts</h5>\n<pre class=\"shiki\"><div class=\"language-id\">ts</div><div class='code-container'><code><span style=\"color: #0000FF\">import</span><span style=\"color: #000000\"> { </span><span style=\"color: #1A1A1A\">StringValidator</span><span style=\"color: #000000\"> } </span><span style=\"color: #0000FF\">from</span><span style=\"color: #000000\"> </span><span style=\"color: #A31515\">\"./Validation\"</span><span style=\"color: #000000\">;</span>\n\n<span style=\"color: #0000FF\">const</span><span style=\"color: #000000\"> </span><span style=\"color: #1A1A1A\">lettersRegexp </span><span style=\"color: #000000\">=</span><span style=\"color: #A31515\"> /</span><span style=\"color: #0000FF\">^</span><span style=\"color: #A31515\">[A-Za-z]</span><span style=\"color: #000000\">+</span><span style=\"color: #0000FF\">$</span><span style=\"color: #A31515\">/</span><span style=\"color: #000000\">;</span>\n\n<span style=\"color: #0000FF\">export</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">class</span><span style=\"color: #000000\"> LettersOnlyValidator </span><span style=\"color: #0000FF\">implements</span><span style=\"color: #000000\"> StringValidator {</span>\n<span style=\"color: #000000\">  isAcceptable(</span><span style=\"color: #1A1A1A\">s</span><span style=\"color: #000000\">: string) {</span>\n<span style=\"color: #000000\">    </span><span style=\"color: #0000FF\">return</span><span style=\"color: #000000\"> </span><span style=\"color: #1A1A1A\">lettersRegexp</span><span style=\"color: #000000\">.test(</span><span style=\"color: #1A1A1A\">s</span><span style=\"color: #000000\">);</span>\n<span style=\"color: #000000\">  }</span>\n<span style=\"color: #000000\">}</span></code></div></pre>\n<h5 id=\"zipcodevalidatorts-3\" style=\"position:relative;\"><a href=\"#zipcodevalidatorts-3\" aria-label=\"zipcodevalidatorts 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ZipCodeValidator.ts</h5>\n<pre class=\"shiki\"><div class=\"language-id\">ts</div><div class='code-container'><code><span style=\"color: #0000FF\">import</span><span style=\"color: #000000\"> { </span><span style=\"color: #1A1A1A\">StringValidator</span><span style=\"color: #000000\"> } </span><span style=\"color: #0000FF\">from</span><span style=\"color: #000000\"> </span><span style=\"color: #A31515\">\"./Validation\"</span><span style=\"color: #000000\">;</span>\n\n<span style=\"color: #0000FF\">const</span><span style=\"color: #000000\"> </span><span style=\"color: #1A1A1A\">numberRegexp </span><span style=\"color: #000000\">=</span><span style=\"color: #A31515\"> /</span><span style=\"color: #0000FF\">^</span><span style=\"color: #A31515\">[0-9]</span><span style=\"color: #000000\">+</span><span style=\"color: #0000FF\">$</span><span style=\"color: #A31515\">/</span><span style=\"color: #000000\">;</span>\n\n<span style=\"color: #0000FF\">export</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">class</span><span style=\"color: #000000\"> ZipCodeValidator </span><span style=\"color: #0000FF\">implements</span><span style=\"color: #000000\"> StringValidator {</span>\n<span style=\"color: #000000\">  isAcceptable(</span><span style=\"color: #1A1A1A\">s</span><span style=\"color: #000000\">: string) {</span>\n<span style=\"color: #000000\">    </span><span style=\"color: #0000FF\">return</span><span style=\"color: #000000\"> </span><span style=\"color: #1A1A1A\">s</span><span style=\"color: #000000\">.length === </span><span style=\"color: #09835A\">5</span><span style=\"color: #000000\"> && </span><span style=\"color: #1A1A1A\">numberRegexp</span><span style=\"color: #000000\">.test(</span><span style=\"color: #1A1A1A\">s</span><span style=\"color: #000000\">);</span>\n<span style=\"color: #000000\">  }</span>\n<span style=\"color: #000000\">}</span></code></div></pre>\n<h5 id=\"testts-3\" style=\"position:relative;\"><a href=\"#testts-3\" aria-label=\"testts 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Test.ts</h5>\n<pre class=\"shiki\"><div class=\"language-id\">ts</div><div class='code-container'><code><span style=\"color: #0000FF\">import</span><span style=\"color: #000000\"> { </span><span style=\"color: #1A1A1A\">StringValidator</span><span style=\"color: #000000\"> } </span><span style=\"color: #0000FF\">from</span><span style=\"color: #000000\"> </span><span style=\"color: #A31515\">\"./Validation\"</span><span style=\"color: #000000\">;</span>\n<span style=\"color: #0000FF\">import</span><span style=\"color: #000000\"> { </span><span style=\"color: #1A1A1A\">ZipCodeValidator</span><span style=\"color: #000000\"> } </span><span style=\"color: #0000FF\">from</span><span style=\"color: #000000\"> </span><span style=\"color: #A31515\">\"./ZipCodeValidator\"</span><span style=\"color: #000000\">;</span>\n<span style=\"color: #0000FF\">import</span><span style=\"color: #000000\"> { </span><span style=\"color: #1A1A1A\">LettersOnlyValidator</span><span style=\"color: #000000\"> } </span><span style=\"color: #0000FF\">from</span><span style=\"color: #000000\"> </span><span style=\"color: #A31515\">\"./LettersOnlyValidator\"</span><span style=\"color: #000000\">;</span>\n\n<span style=\"color: #008000\">// Alguns exemplos para testar</span>\n<span style=\"color: #0000FF\">let</span><span style=\"color: #000000\"> </span><span style=\"color: #1A1A1A\">strings </span><span style=\"color: #000000\">= [</span><span style=\"color: #A31515\">\"Olá\"</span><span style=\"color: #000000\">, </span><span style=\"color: #A31515\">\"98052\"</span><span style=\"color: #000000\">, </span><span style=\"color: #A31515\">\"101\"</span><span style=\"color: #000000\">];</span>\n\n<span style=\"color: #008000\">// Validators para usar</span>\n<span style=\"color: #0000FF\">let</span><span style=\"color: #000000\"> </span><span style=\"color: #1A1A1A\">validators</span><span style=\"color: #000000\">:</span><span style=\"color: #1A1A1A\"> { [s</span><span style=\"color: #000000\">:</span><span style=\"color: #1A1A1A\"> string]</span><span style=\"color: #000000\">:</span><span style=\"color: #1A1A1A\"> StringValidator } </span><span style=\"color: #000000\">= {};</span>\n<span style=\"color: #1A1A1A\">validators</span><span style=\"color: #000000\">[</span><span style=\"color: #A31515\">\"ZIP code\"</span><span style=\"color: #000000\">] = </span><span style=\"color: #0000FF\">new</span><span style=\"color: #000000\"> ZipCodeValidator();</span>\n<span style=\"color: #1A1A1A\">validators</span><span style=\"color: #000000\">[</span><span style=\"color: #A31515\">\"Letters only\"</span><span style=\"color: #000000\">] = </span><span style=\"color: #0000FF\">new</span><span style=\"color: #000000\"> LettersOnlyValidator();</span>\n\n<span style=\"color: #008000\">// Mostra cada string que passou em cada validador</span>\n<span style=\"color: #1A1A1A\">strings</span><span style=\"color: #000000\">.forEach((</span><span style=\"color: #1A1A1A\">s</span><span style=\"color: #000000\">) </span><span style=\"color: #0000FF\">=&gt;</span><span style=\"color: #000000\"> {</span>\n<span style=\"color: #000000\">  </span><span style=\"color: #0000FF\">for</span><span style=\"color: #000000\"> (</span><span style=\"color: #0000FF\">let</span><span style=\"color: #000000\"> </span><span style=\"color: #1A1A1A\">name</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">in</span><span style=\"color: #000000\"> </span><span style=\"color: #1A1A1A\">validators</span><span style=\"color: #000000\">) {</span>\n<span style=\"color: #000000\">    console.log(</span>\n<span style=\"color: #000000\">      </span><span style=\"color: #A31515\">`\"</span><span style=\"color: #0000FF\">${</span><span style=\"color: #1A1A1A\">s</span><span style=\"color: #0000FF\">}</span><span style=\"color: #A31515\">\" - </span><span style=\"color: #0000FF\">${</span>\n<span style=\"color: #A31515\">        </span><span style=\"color: #1A1A1A\">validators</span><span style=\"color: #A31515\">[</span><span style=\"color: #1A1A1A\">name</span><span style=\"color: #A31515\">].isAcceptable(</span><span style=\"color: #1A1A1A\">s</span><span style=\"color: #A31515\">) </span><span style=\"color: #000000\">?</span><span style=\"color: #A31515\"> \"combina\" </span><span style=\"color: #000000\">:</span><span style=\"color: #A31515\"> \"não combina\"</span>\n<span style=\"color: #A31515\">      </span><span style=\"color: #0000FF\">}</span><span style=\"color: #A31515\"> </span><span style=\"color: #0000FF\">${</span><span style=\"color: #1A1A1A\">name</span><span style=\"color: #0000FF\">}</span><span style=\"color: #A31515\">`</span>\n<span style=\"color: #000000\">    );</span>\n<span style=\"color: #000000\">  }</span>\n<span style=\"color: #000000\">});</span></code></div></pre>\n<h2 id=\"carregamento-de-módulo-opcional-e-outros-cenários-de-carregamento-avançado\" style=\"position:relative;\"><a href=\"#carregamento-de-m%C3%B3dulo-opcional-e-outros-cen%C3%A1rios-de-carregamento-avan%C3%A7ado\" aria-label=\"carregamento de módulo opcional e outros cenários de carregamento avançado permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Carregamento de Módulo Opcional e Outros Cenários de Carregamento Avançado</h2>\n<p>Em alguns casos, você pode querer carregar apenas um módulo sob algumas condições.\nNo TypeScript, podemos usar o padrão mostrado abaixo para implementar este e outros cenários de carregamento avançado para chamar diretamente os carregadores de módulo sem perder a segurança de tipo.</p>\n<p>O compilador detecta se cada módulo é usado no JavaScript emitido.\nSe um identificador de módulo é usado apenas como parte de uma anotação de tipo e nunca como uma expressão, nenhuma chamada <code>require</code> é emitida para esse módulo.\nEssa exclusão de referências não utilizadas é uma boa otimização de desempenho e também permite o carregamento opcional desses módulos.</p>\n<p>A ideia central do padrão é que a instrução <code>import id = require (\"...\")</code> nos dá acesso aos tipos expostos pelo módulo.\nO carregador de módulo é chamado (por meio do <code>require</code>) de forma dinâmica, conforme mostrado nos blocos <code>if</code> abaixo.\nIsso aproveita a otimização de elisão de referência para que o módulo seja carregado apenas quando necessário.\nPara que esse padrão funcione, é importante que o símbolo definido por meio de uma <code>import</code> seja usado apenas em posições de tipo (ou seja, nunca em uma posição que seria emitida para o JavaScript).</p>\n<p>Para manter a segurança de tipo, podemos usar a palavra-chave <code>typeof</code>.\nA palavra-chave <code>typeof</code>, quando usado em uma posição de tipo, produz o tipo de um valor, neste caso o tipo do módulo.</p>\n<h5 id=\"carregamento-de-módulo-dinâmico-em-nodejs\" style=\"position:relative;\"><a href=\"#carregamento-de-m%C3%B3dulo-din%C3%A2mico-em-nodejs\" aria-label=\"carregamento de módulo dinâmico em nodejs permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Carregamento de módulo dinâmico em Node.js</h5>\n<pre class=\"shiki\"><div class=\"language-id\">ts</div><div class='code-container'><code><span style=\"color: #0000FF\">declare</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">function</span><span style=\"color: #000000\"> require(</span><span style=\"color: #1A1A1A\">moduleName</span><span style=\"color: #000000\">: string): any;</span>\n\n<span style=\"color: #0000FF\">import</span><span style=\"color: #000000\"> { </span><span style=\"color: #1A1A1A\">ZipCodeValidator</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">as</span><span style=\"color: #000000\"> </span><span style=\"color: #1A1A1A\">Zip</span><span style=\"color: #000000\"> } </span><span style=\"color: #0000FF\">from</span><span style=\"color: #000000\"> </span><span style=\"color: #A31515\">\"./ZipCodeValidator\"</span><span style=\"color: #000000\">;</span>\n\n<span style=\"color: #0000FF\">if</span><span style=\"color: #000000\"> (</span><span style=\"color: #1A1A1A\">needZipValidation</span><span style=\"color: #000000\">) {</span>\n<span style=\"color: #000000\">  </span><span style=\"color: #0000FF\">let</span><span style=\"color: #000000\"> </span><span style=\"color: #1A1A1A\">ZipCodeValidator</span><span style=\"color: #000000\">:</span><span style=\"color: #1A1A1A\"> </span><span style=\"color: #0000FF\">typeof</span><span style=\"color: #1A1A1A\"> Zip </span><span style=\"color: #000000\">= require(</span><span style=\"color: #A31515\">\"./ZipCodeValidator\"</span><span style=\"color: #000000\">);</span>\n<span style=\"color: #000000\">  </span><span style=\"color: #0000FF\">let</span><span style=\"color: #000000\"> </span><span style=\"color: #1A1A1A\">validator </span><span style=\"color: #000000\">= </span><span style=\"color: #0000FF\">new</span><span style=\"color: #000000\"> ZipCodeValidator();</span>\n<span style=\"color: #000000\">  </span><span style=\"color: #0000FF\">if</span><span style=\"color: #000000\"> (</span><span style=\"color: #1A1A1A\">validator</span><span style=\"color: #000000\">.isAcceptable(</span><span style=\"color: #A31515\">\"...\"</span><span style=\"color: #000000\">)) {</span>\n<span style=\"color: #000000\">    </span><span style=\"color: #008000\">/* ... */</span>\n<span style=\"color: #000000\">  }</span>\n<span style=\"color: #000000\">}</span></code></div></pre>\n<h5 id=\"exemplo-carregamento-de-módulo-dinâmico-em-requirejs\" style=\"position:relative;\"><a href=\"#exemplo-carregamento-de-m%C3%B3dulo-din%C3%A2mico-em-requirejs\" aria-label=\"exemplo carregamento de módulo dinâmico em requirejs permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Exemplo: Carregamento de Módulo Dinâmico em require.js</h5>\n<pre class=\"shiki\"><div class=\"language-id\">ts</div><div class='code-container'><code><span style=\"color: #0000FF\">declare</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">function</span><span style=\"color: #000000\"> require(</span>\n<span style=\"color: #000000\">  </span><span style=\"color: #1A1A1A\">moduleNames</span><span style=\"color: #000000\">: string[],</span>\n<span style=\"color: #000000\">  onLoad: (...</span><span style=\"color: #1A1A1A\">args</span><span style=\"color: #000000\">: any[]) </span><span style=\"color: #0000FF\">=&gt;</span><span style=\"color: #000000\"> void</span>\n<span style=\"color: #000000\">): void;</span>\n\n<span style=\"color: #0000FF\">import</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">*</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">as</span><span style=\"color: #000000\"> </span><span style=\"color: #1A1A1A\">Zip</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">from</span><span style=\"color: #000000\"> </span><span style=\"color: #A31515\">\"./ZipCodeValidator\"</span><span style=\"color: #000000\">;</span>\n\n<span style=\"color: #0000FF\">if</span><span style=\"color: #000000\"> (</span><span style=\"color: #1A1A1A\">needZipValidation</span><span style=\"color: #000000\">) {</span>\n<span style=\"color: #000000\">  require([</span><span style=\"color: #A31515\">\"./ZipCodeValidator\"</span><span style=\"color: #000000\">], (</span><span style=\"color: #1A1A1A\">ZipCodeValidator</span><span style=\"color: #000000\">: </span><span style=\"color: #0000FF\">typeof</span><span style=\"color: #000000\"> Zip) </span><span style=\"color: #0000FF\">=&gt;</span><span style=\"color: #000000\"> {</span>\n<span style=\"color: #000000\">    </span><span style=\"color: #0000FF\">let</span><span style=\"color: #000000\"> </span><span style=\"color: #1A1A1A\">validator </span><span style=\"color: #000000\">= </span><span style=\"color: #0000FF\">new</span><span style=\"color: #000000\"> ZipCodeValidator.ZipCodeValidator();</span>\n<span style=\"color: #000000\">    </span><span style=\"color: #0000FF\">if</span><span style=\"color: #000000\"> (</span><span style=\"color: #1A1A1A\">validator</span><span style=\"color: #000000\">.isAcceptable(</span><span style=\"color: #A31515\">\"...\"</span><span style=\"color: #000000\">)) {</span>\n<span style=\"color: #000000\">      </span><span style=\"color: #008000\">/* ... */</span>\n<span style=\"color: #000000\">    }</span>\n<span style=\"color: #000000\">  });</span>\n<span style=\"color: #000000\">}</span></code></div></pre>\n<h5 id=\"exemplo-carregamento-de-módulo-dinâmico-em-systemjs\" style=\"position:relative;\"><a href=\"#exemplo-carregamento-de-m%C3%B3dulo-din%C3%A2mico-em-systemjs\" aria-label=\"exemplo carregamento de módulo dinâmico em systemjs permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Exemplo: Carregamento de módulo dinâmico em System.js</h5>\n<pre class=\"shiki\"><div class=\"language-id\">ts</div><div class='code-container'><code><span style=\"color: #0000FF\">declare</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">const</span><span style=\"color: #000000\"> </span><span style=\"color: #1A1A1A\">System</span><span style=\"color: #000000\">:</span><span style=\"color: #1A1A1A\"> any</span><span style=\"color: #000000\">;</span>\n\n<span style=\"color: #0000FF\">import</span><span style=\"color: #000000\"> { </span><span style=\"color: #1A1A1A\">ZipCodeValidator</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">as</span><span style=\"color: #000000\"> </span><span style=\"color: #1A1A1A\">Zip</span><span style=\"color: #000000\"> } </span><span style=\"color: #0000FF\">from</span><span style=\"color: #000000\"> </span><span style=\"color: #A31515\">\"./ZipCodeValidator\"</span><span style=\"color: #000000\">;</span>\n\n<span style=\"color: #0000FF\">if</span><span style=\"color: #000000\"> (</span><span style=\"color: #1A1A1A\">needZipValidation</span><span style=\"color: #000000\">) {</span>\n<span style=\"color: #000000\">  </span><span style=\"color: #1A1A1A\">System</span><span style=\"color: #000000\">.import(</span><span style=\"color: #A31515\">\"./ZipCodeValidator\"</span><span style=\"color: #000000\">).then((</span><span style=\"color: #1A1A1A\">ZipCodeValidator</span><span style=\"color: #000000\">: </span><span style=\"color: #0000FF\">typeof</span><span style=\"color: #000000\"> Zip) </span><span style=\"color: #0000FF\">=&gt;</span><span style=\"color: #000000\"> {</span>\n<span style=\"color: #000000\">    </span><span style=\"color: #0000FF\">var</span><span style=\"color: #000000\"> </span><span style=\"color: #1A1A1A\">x </span><span style=\"color: #000000\">= </span><span style=\"color: #0000FF\">new</span><span style=\"color: #000000\"> ZipCodeValidator();</span>\n<span style=\"color: #000000\">    </span><span style=\"color: #0000FF\">if</span><span style=\"color: #000000\"> (</span><span style=\"color: #1A1A1A\">x</span><span style=\"color: #000000\">.isAcceptable(</span><span style=\"color: #A31515\">\"...\"</span><span style=\"color: #000000\">)) {</span>\n<span style=\"color: #000000\">      </span><span style=\"color: #008000\">/* ... */</span>\n<span style=\"color: #000000\">    }</span>\n<span style=\"color: #000000\">  });</span>\n<span style=\"color: #000000\">}</span></code></div></pre>\n<h2 id=\"trabalhando-com-outras-bibliotecas-em-javascript\" style=\"position:relative;\"><a href=\"#trabalhando-com-outras-bibliotecas-em-javascript\" aria-label=\"trabalhando com outras bibliotecas em javascript permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Trabalhando com outras bibliotecas em JavaScript</h2>\n<p>Para descrever a forma das bibliotecas não escritas em TypeScript, precisamos declarar a API que a biblioteca expõe.</p>\n<p>Chamamos as declarações que não definem uma implementação de “ambiente”.\nNormalmente, eles são definidos em arquivos <code>.d.ts</code>.\nSe você está familiarizado com C/C ++, pode pensar neles como arquivos <code>.h</code>.\nVejamos alguns exemplos.</p>\n<h2 id=\"módulos-de-ambiente\" style=\"position:relative;\"><a href=\"#m%C3%B3dulos-de-ambiente\" aria-label=\"módulos de ambiente permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Módulos de ambiente</h2>\n<p>No Node.js, a maioria das tarefas é realizada carregando um ou mais módulos.\nPoderíamos definir cada módulo em seu próprio arquivo <code>.d.ts</code> com declarações de exportação de nível superior, mas é mais conveniente gravá-los como um arquivo <code>.d.ts</code> maior.\nPara fazer isso, usamos uma construção semelhante aos namespaces do ambiente, mas usamos a palavra-chave <code>module</code> e o nome entre aspas do módulo que estará disponível para uma importação posterior.\nPor exemplo:</p>\n<h5 id=\"nodedts-trecho-simplificado\" style=\"position:relative;\"><a href=\"#nodedts-trecho-simplificado\" aria-label=\"nodedts trecho simplificado permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>node.d.ts (trecho simplificado)</h5>\n<pre class=\"shiki\"><div class=\"language-id\">ts</div><div class='code-container'><code><span style=\"color: #0000FF\">declare</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">module</span><span style=\"color: #000000\"> </span><span style=\"color: #A31515\">\"url\"</span><span style=\"color: #000000\"> {</span>\n<span style=\"color: #000000\">  </span><span style=\"color: #0000FF\">export</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">interface</span><span style=\"color: #000000\"> Url {</span>\n<span style=\"color: #000000\">    </span><span style=\"color: #1A1A1A\">protocol</span><span style=\"color: #000000\">?: string;</span>\n<span style=\"color: #000000\">    </span><span style=\"color: #1A1A1A\">hostname</span><span style=\"color: #000000\">?: string;</span>\n<span style=\"color: #000000\">    </span><span style=\"color: #1A1A1A\">pathname</span><span style=\"color: #000000\">?: string;</span>\n<span style=\"color: #000000\">  }</span>\n\n<span style=\"color: #000000\">  </span><span style=\"color: #0000FF\">export</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">function</span><span style=\"color: #000000\"> parse(</span>\n<span style=\"color: #000000\">    </span><span style=\"color: #1A1A1A\">urlStr</span><span style=\"color: #000000\">: string,</span>\n<span style=\"color: #000000\">    </span><span style=\"color: #1A1A1A\">parseQueryString</span><span style=\"color: #000000\">?,</span>\n<span style=\"color: #000000\">    </span><span style=\"color: #1A1A1A\">slashesDenoteHost</span><span style=\"color: #000000\">?</span>\n<span style=\"color: #000000\">  ): Url;</span>\n<span style=\"color: #000000\">}</span>\n\n<span style=\"color: #0000FF\">declare</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">module</span><span style=\"color: #000000\"> </span><span style=\"color: #A31515\">\"path\"</span><span style=\"color: #000000\"> {</span>\n<span style=\"color: #000000\">  </span><span style=\"color: #0000FF\">export</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">function</span><span style=\"color: #000000\"> normalize(</span><span style=\"color: #1A1A1A\">p</span><span style=\"color: #000000\">: string): string;</span>\n<span style=\"color: #000000\">  </span><span style=\"color: #0000FF\">export</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">function</span><span style=\"color: #000000\"> join(...</span><span style=\"color: #1A1A1A\">paths</span><span style=\"color: #000000\">: any[]): string;</span>\n<span style=\"color: #000000\">  </span><span style=\"color: #0000FF\">export</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">var</span><span style=\"color: #000000\"> </span><span style=\"color: #1A1A1A\">sep</span><span style=\"color: #000000\">:</span><span style=\"color: #1A1A1A\"> string</span><span style=\"color: #000000\">;</span>\n<span style=\"color: #000000\">}</span></code></div></pre>\n<p>Agora nós podemos chamar <code>/// &#x3C;reference></code> <code>node.d.ts</code> e então carregar os módulso usando <code>import url = require(\"url\");</code> ou <code>import * as URL from \"url\"</code>.</p>\n<pre class=\"shiki\"><div class=\"language-id\">ts</div><div class='code-container'><code><span style=\"color: #008000\">/// </span><span style=\"color: #800000\">&lt;reference</span><span style=\"color: #008000\"> </span><span style=\"color: #DC0000\">path</span><span style=\"color: #000000\">=</span><span style=\"color: #A31515\">\"node.d.ts\"</span><span style=\"color: #800000\">/&gt;</span>\n<span style=\"color: #0000FF\">import</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">*</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">as</span><span style=\"color: #000000\"> </span><span style=\"color: #1A1A1A\">URL</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">from</span><span style=\"color: #000000\"> </span><span style=\"color: #A31515\">\"url\"</span><span style=\"color: #000000\">;</span>\n<span style=\"color: #0000FF\">let</span><span style=\"color: #000000\"> </span><span style=\"color: #1A1A1A\">myUrl </span><span style=\"color: #000000\">= URL.parse(</span><span style=\"color: #A31515\">\"http://www.typescriptlang.org\"</span><span style=\"color: #000000\">);</span></code></div></pre>\n<h3 id=\"módulos-de-ambiente-abreviados\" style=\"position:relative;\"><a href=\"#m%C3%B3dulos-de-ambiente-abreviados\" aria-label=\"módulos de ambiente abreviados permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Módulos de ambiente abreviados</h3>\n<p>Se você não quiser perder tempo escrevendo declarações antes de usar um novo módulo, pode usar uma declaração abreviada para começar mais rapidamente.</p>\n<h5 id=\"declarationsdts\" style=\"position:relative;\"><a href=\"#declarationsdts\" aria-label=\"declarationsdts permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>declarations.d.ts</h5>\n<pre class=\"shiki\"><div class=\"language-id\">ts</div><div class='code-container'><code><span style=\"color: #0000FF\">declare</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">module</span><span style=\"color: #000000\"> </span><span style=\"color: #A31515\">\"hot-new-module\"</span><span style=\"color: #000000\">;</span></code></div></pre>\n<p>Todas as importações de um módulo abreviado terão o tipo <code>any</code>.</p>\n<pre class=\"shiki\"><div class=\"language-id\">ts</div><div class='code-container'><code><span style=\"color: #0000FF\">import</span><span style=\"color: #000000\"> </span><span style=\"color: #1A1A1A\">x</span><span style=\"color: #000000\">, { </span><span style=\"color: #1A1A1A\">y</span><span style=\"color: #000000\"> } </span><span style=\"color: #0000FF\">from</span><span style=\"color: #000000\"> </span><span style=\"color: #A31515\">\"hot-new-module\"</span><span style=\"color: #000000\">;</span>\n<span style=\"color: #000000\">x(</span><span style=\"color: #1A1A1A\">y</span><span style=\"color: #000000\">);</span></code></div></pre>\n<h3 id=\"declarações-curinga-de-módulo\" style=\"position:relative;\"><a href=\"#declara%C3%A7%C3%B5es-curinga-de-m%C3%B3dulo\" aria-label=\"declarações curinga de módulo permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Declarações curinga de módulo</h3>\n<p>Alguns carregadores de módulo, como <a href=\"https://github.com/systemjs/systemjs/blob/master/docs/overview.md#plugin-syntax\">SystemJS</a>\ne <a href=\"https://github.com/amdjs/amdjs-api/blob/master/LoaderPlugins.md\">AMD</a> permitem que conteúdo não JavaScript seja importado.\nNormalmente, eles usam um prefixo ou sufixo para indicar a semântica de carregamento especial.\nAs declarações do módulo curinga podem ser usadas para cobrir esses casos.</p>\n<pre class=\"shiki\"><div class=\"language-id\">ts</div><div class='code-container'><code><span style=\"color: #0000FF\">declare</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">module</span><span style=\"color: #000000\"> </span><span style=\"color: #A31515\">\"*!text\"</span><span style=\"color: #000000\"> {</span>\n<span style=\"color: #000000\">  </span><span style=\"color: #0000FF\">const</span><span style=\"color: #000000\"> </span><span style=\"color: #1A1A1A\">content</span><span style=\"color: #000000\">:</span><span style=\"color: #1A1A1A\"> string</span><span style=\"color: #000000\">;</span>\n<span style=\"color: #000000\">  </span><span style=\"color: #0000FF\">export</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">default</span><span style=\"color: #000000\"> </span><span style=\"color: #1A1A1A\">content</span><span style=\"color: #000000\">;</span>\n<span style=\"color: #000000\">}</span>\n<span style=\"color: #008000\">// Alguns fazem isso ao contrário.</span>\n<span style=\"color: #0000FF\">declare</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">module</span><span style=\"color: #000000\"> </span><span style=\"color: #A31515\">\"json!*\"</span><span style=\"color: #000000\"> {</span>\n<span style=\"color: #000000\">  </span><span style=\"color: #0000FF\">const</span><span style=\"color: #000000\"> </span><span style=\"color: #1A1A1A\">value</span><span style=\"color: #000000\">:</span><span style=\"color: #1A1A1A\"> any</span><span style=\"color: #000000\">;</span>\n<span style=\"color: #000000\">  </span><span style=\"color: #0000FF\">export</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">default</span><span style=\"color: #000000\"> </span><span style=\"color: #1A1A1A\">value</span><span style=\"color: #000000\">;</span>\n<span style=\"color: #000000\">}</span></code></div></pre>\n<p>Agora você pode importar coisas que correspondem <code>\"*!text\"</code> ou <code>\"json!*\"</code>.</p>\n<pre class=\"shiki\"><div class=\"language-id\">ts</div><div class='code-container'><code><span style=\"color: #0000FF\">import</span><span style=\"color: #000000\"> </span><span style=\"color: #1A1A1A\">fileContent</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">from</span><span style=\"color: #000000\"> </span><span style=\"color: #A31515\">\"./xyz.txt!text\"</span><span style=\"color: #000000\">;</span>\n<span style=\"color: #0000FF\">import</span><span style=\"color: #000000\"> </span><span style=\"color: #1A1A1A\">data</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">from</span><span style=\"color: #000000\"> </span><span style=\"color: #A31515\">\"json!http://example.com/data.json\"</span><span style=\"color: #000000\">;</span>\n<span style=\"color: #000000\">console.log(</span><span style=\"color: #1A1A1A\">data</span><span style=\"color: #000000\">, </span><span style=\"color: #1A1A1A\">fileContent</span><span style=\"color: #000000\">);</span></code></div></pre>\n<h3 id=\"módulos-umd\" style=\"position:relative;\"><a href=\"#m%C3%B3dulos-umd\" aria-label=\"módulos umd permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Módulos UMD</h3>\n<p>Algumas bibliotecas são projetadas para serem usadas em muitos carregadores de módulo ou sem carregamento de módulo (variáveis ​​globais).\nEsses são conhecidos como módulos <a href=\"https://github.com/umdjs/umd\">UMD</a>.\nEssas bibliotecas podem ser acessadas por meio de uma importação ou de uma variável global.\nPor exemplo:</p>\n<h5 id=\"math-libdts\" style=\"position:relative;\"><a href=\"#math-libdts\" aria-label=\"math libdts permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>math-lib.d.ts</h5>\n<pre class=\"shiki\"><div class=\"language-id\">ts</div><div class='code-container'><code><span style=\"color: #0000FF\">export</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">function</span><span style=\"color: #000000\"> isPrime(</span><span style=\"color: #1A1A1A\">x</span><span style=\"color: #000000\">: number): boolean;</span>\n<span style=\"color: #0000FF\">export</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">as</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">namespace</span><span style=\"color: #000000\"> mathLib;</span></code></div></pre>\n<p>A biblioteca pode então ser usada como uma importação dentro dos módulos:</p>\n<pre class=\"shiki\"><div class=\"language-id\">ts</div><div class='code-container'><code><span style=\"color: #0000FF\">import</span><span style=\"color: #000000\"> { </span><span style=\"color: #1A1A1A\">isPrime</span><span style=\"color: #000000\"> } </span><span style=\"color: #0000FF\">from</span><span style=\"color: #000000\"> </span><span style=\"color: #A31515\">\"math-lib\"</span><span style=\"color: #000000\">;</span>\n<span style=\"color: #000000\">isPrime(</span><span style=\"color: #09835A\">2</span><span style=\"color: #000000\">);</span>\n<span style=\"color: #1A1A1A\">mathLib</span><span style=\"color: #000000\">.isPrime(</span><span style=\"color: #09835A\">2</span><span style=\"color: #000000\">); </span><span style=\"color: #008000\">// ERRO: não pode usar a definição global de dentro de um módulo</span></code></div></pre>\n<p>Também pode ser usado como uma variável global, mas apenas dentro de um script.\n(Um script é um arquivo sem importações ou exportações.)</p>\n<pre class=\"shiki\"><div class=\"language-id\">ts</div><div class='code-container'><code><span style=\"color: #1A1A1A\">mathLib</span><span style=\"color: #000000\">.isPrime(</span><span style=\"color: #09835A\">2</span><span style=\"color: #000000\">);</span></code></div></pre>\n<h2 id=\"orientação-para-a-estruturação-de-módulos\" style=\"position:relative;\"><a href=\"#orienta%C3%A7%C3%A3o-para-a-estrutura%C3%A7%C3%A3o-de-m%C3%B3dulos\" aria-label=\"orientação para a estruturação de módulos permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Orientação para a estruturação de módulos</h2>\n<h2 id=\"exporte-o-mais-próximo-possível-do-nível-superior\" style=\"position:relative;\"><a href=\"#exporte-o-mais-pr%C3%B3ximo-poss%C3%ADvel-do-n%C3%ADvel-superior\" aria-label=\"exporte o mais próximo possível do nível superior permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Exporte o mais próximo possível do nível superior</h2>\n<p>Os consumidores de seu módulo devem ter o mínimo de atrito possível ao usar as coisas que você exporta.\nAdicionar muitos níveis de aninhamento tende a ser complicado, portanto, pense com cuidado sobre como você deseja estruturar as coisas.</p>\n<p>Exportar um namespace de seu módulo é um exemplo de adição de muitas camadas de aninhamento.\nEmbora os namespaces às vezes tenham seus usos, eles adicionam um nível extra de indireção ao usar módulos.\nIsso pode se tornar rapidamente um ponto problemático para os usuários e geralmente é desnecessário.</p>\n<p>Os métodos estáticos em uma classe exportada têm um problema semelhante - a própria classe adiciona uma camada de aninhamento.\nA menos que aumente a expressividade ou a intenção de uma forma claramente útil, considere simplesmente exportar uma função auxiliar.</p>\n<h3 id=\"se-você-é-o-único-exportando-uma-simples-class-ou-function-use-export-default\" style=\"position:relative;\"><a href=\"#se-voc%C3%AA-%C3%A9-o-%C3%BAnico-exportando-uma-simples-class-ou-function-use-export-default\" aria-label=\"se você é o único exportando uma simples class ou function use export default permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Se você é o único exportando uma simples <code>class</code> ou <code>function</code>, use <code>export default</code></h3>\n<p>Assim como “exportar próximo ao nível superior” reduz a fricção nos consumidores do seu módulo, o mesmo ocorre com a introdução de uma exportação padrão.\nSe o objetivo principal de um módulo é hospedar uma exportação específica, então você deve considerar exportá-lo como uma exportação padrão.\nIsso torna a importação e o uso real da importação um pouco mais fácil.\nPor exemplo:</p>\n<h4 id=\"myclassts\" style=\"position:relative;\"><a href=\"#myclassts\" aria-label=\"myclassts permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>MyClass.ts</h4>\n<pre class=\"shiki\"><div class=\"language-id\">ts</div><div class='code-container'><code><span style=\"color: #0000FF\">export</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">default</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">class</span><span style=\"color: #000000\"> SomeType {</span>\n<span style=\"color: #000000\">  </span><span style=\"color: #0000FF\">constructor</span><span style=\"color: #000000\">() { ... }</span>\n<span style=\"color: #000000\">}</span></code></div></pre>\n<h4 id=\"myfuncts\" style=\"position:relative;\"><a href=\"#myfuncts\" aria-label=\"myfuncts permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>MyFunc.ts</h4>\n<pre class=\"shiki\"><div class=\"language-id\">ts</div><div class='code-container'><code><span style=\"color: #0000FF\">export</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">default</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">function</span><span style=\"color: #000000\"> getThing() {</span>\n<span style=\"color: #000000\">  </span><span style=\"color: #0000FF\">return</span><span style=\"color: #000000\"> </span><span style=\"color: #A31515\">\"thing\"</span><span style=\"color: #000000\">;</span>\n<span style=\"color: #000000\">}</span></code></div></pre>\n<h4 id=\"consumerts\" style=\"position:relative;\"><a href=\"#consumerts\" aria-label=\"consumerts permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Consumer.ts</h4>\n<pre class=\"shiki\"><div class=\"language-id\">ts</div><div class='code-container'><code><span style=\"color: #0000FF\">import</span><span style=\"color: #000000\"> </span><span style=\"color: #1A1A1A\">t</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">from</span><span style=\"color: #000000\"> </span><span style=\"color: #A31515\">\"./MyClass\"</span><span style=\"color: #000000\">;</span>\n<span style=\"color: #0000FF\">import</span><span style=\"color: #000000\"> </span><span style=\"color: #1A1A1A\">f</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">from</span><span style=\"color: #000000\"> </span><span style=\"color: #A31515\">\"./MyFunc\"</span><span style=\"color: #000000\">;</span>\n<span style=\"color: #0000FF\">let</span><span style=\"color: #000000\"> </span><span style=\"color: #1A1A1A\">x </span><span style=\"color: #000000\">= </span><span style=\"color: #0000FF\">new</span><span style=\"color: #000000\"> t();</span>\n<span style=\"color: #000000\">console.log(f());</span></code></div></pre>\n<p>Isso é ideal para os consumidores. Eles podem nomear seu tipo como quiserem (<code>t</code> neste caso) e não precisam fazer nenhum pontilhado excessivo para localizar seus objetos.</p>\n<h3 id=\"se-você-estiver-exportando-vários-objetos-coloque-os-todos-em-um-nível-superior\" style=\"position:relative;\"><a href=\"#se-voc%C3%AA-estiver-exportando-v%C3%A1rios-objetos-coloque-os-todos-em-um-n%C3%ADvel-superior\" aria-label=\"se você estiver exportando vários objetos coloque os todos em um nível superior permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Se você estiver exportando vários objetos, coloque-os todos em um nível superior</h3>\n<h4 id=\"mythingsts\" style=\"position:relative;\"><a href=\"#mythingsts\" aria-label=\"mythingsts permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>MyThings.ts</h4>\n<pre class=\"shiki\"><div class=\"language-id\">ts</div><div class='code-container'><code><span style=\"color: #0000FF\">export</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">class</span><span style=\"color: #000000\"> SomeType {</span>\n<span style=\"color: #000000\">  </span><span style=\"color: #008000\">/* ... */</span>\n<span style=\"color: #000000\">}</span>\n<span style=\"color: #0000FF\">export</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">function</span><span style=\"color: #000000\"> someFunc() {</span>\n<span style=\"color: #000000\">  </span><span style=\"color: #008000\">/* ... */</span>\n<span style=\"color: #000000\">}</span></code></div></pre>\n<p>Por outro lado, ao importar:</p>\n<h3 id=\"liste-explicitamente-os-nomes-importados\" style=\"position:relative;\"><a href=\"#liste-explicitamente-os-nomes-importados\" aria-label=\"liste explicitamente os nomes importados permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Liste explicitamente os nomes importados</h3>\n<h4 id=\"consumerts-1\" style=\"position:relative;\"><a href=\"#consumerts-1\" aria-label=\"consumerts 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Consumer.ts</h4>\n<pre class=\"shiki\"><div class=\"language-id\">ts</div><div class='code-container'><code><span style=\"color: #0000FF\">import</span><span style=\"color: #000000\"> { </span><span style=\"color: #1A1A1A\">SomeType</span><span style=\"color: #000000\">, </span><span style=\"color: #1A1A1A\">someFunc</span><span style=\"color: #000000\"> } </span><span style=\"color: #0000FF\">from</span><span style=\"color: #000000\"> </span><span style=\"color: #A31515\">\"./MyThings\"</span><span style=\"color: #000000\">;</span>\n<span style=\"color: #0000FF\">let</span><span style=\"color: #000000\"> </span><span style=\"color: #1A1A1A\">x </span><span style=\"color: #000000\">= </span><span style=\"color: #0000FF\">new</span><span style=\"color: #000000\"> SomeType();</span>\n<span style=\"color: #0000FF\">let</span><span style=\"color: #000000\"> </span><span style=\"color: #1A1A1A\">y </span><span style=\"color: #000000\">= someFunc();</span></code></div></pre>\n<h3 id=\"use-o-padrão-de-importação-de-namespace-se-você-estiver-importando-um-grande-número-de-coisas\" style=\"position:relative;\"><a href=\"#use-o-padr%C3%A3o-de-importa%C3%A7%C3%A3o-de-namespace-se-voc%C3%AA-estiver-importando-um-grande-n%C3%BAmero-de-coisas\" aria-label=\"use o padrão de importação de namespace se você estiver importando um grande número de coisas permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Use o padrão de importação de namespace se você estiver importando um grande número de coisas</h3>\n<h4 id=\"mylargemodulets\" style=\"position:relative;\"><a href=\"#mylargemodulets\" aria-label=\"mylargemodulets permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>MyLargeModule.ts</h4>\n<pre class=\"shiki\"><div class=\"language-id\">ts</div><div class='code-container'><code><span style=\"color: #0000FF\">export</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">class</span><span style=\"color: #000000\"> Dog { ... }</span>\n<span style=\"color: #0000FF\">export</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">class</span><span style=\"color: #000000\"> Cat { ... }</span>\n<span style=\"color: #0000FF\">export</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">class</span><span style=\"color: #000000\"> Tree { ... }</span>\n<span style=\"color: #0000FF\">export</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">class</span><span style=\"color: #000000\"> Flower { ... }</span></code></div></pre>\n<h4 id=\"consumerts-2\" style=\"position:relative;\"><a href=\"#consumerts-2\" aria-label=\"consumerts 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Consumer.ts</h4>\n<pre class=\"shiki\"><div class=\"language-id\">ts</div><div class='code-container'><code><span style=\"color: #0000FF\">import</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">*</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">as</span><span style=\"color: #000000\"> </span><span style=\"color: #1A1A1A\">myLargeModule</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">from</span><span style=\"color: #000000\"> </span><span style=\"color: #A31515\">\"./MyLargeModule.ts\"</span><span style=\"color: #000000\">;</span>\n<span style=\"color: #0000FF\">let</span><span style=\"color: #000000\"> </span><span style=\"color: #1A1A1A\">x </span><span style=\"color: #000000\">= </span><span style=\"color: #0000FF\">new</span><span style=\"color: #000000\"> myLargeModule.Dog();</span></code></div></pre>\n<h2 id=\"reexportar-para-estender\" style=\"position:relative;\"><a href=\"#reexportar-para-estender\" aria-label=\"reexportar para estender permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Reexportar para estender</h2>\n<p>Frequentemente, você precisará estender a funcionalidade de um módulo.\nUm padrão JS comum é aumentar o objeto original com <em>extensions</em>, semelhante a como as extensões JQuery funcionam.\nComo mencionamos antes, os módulos não se <em>mergeiam</em> como os objetos de namespace global fariam.\nA solução recomendada é <em>não</em> alterar o objeto original, mas sim exportar uma nova entidade que fornece a nova funcionalidade.</p>\n<p>Considere uma implementação de calculadora simples definida no módulo <code>Calculator.ts</code>.\nO módulo também exporta uma função auxiliar para testar a funcionalidade da calculadora, passando uma lista de strings de entrada e escrevendo o resultado no final.</p>\n<h4 id=\"calculatorts\" style=\"position:relative;\"><a href=\"#calculatorts\" aria-label=\"calculatorts permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Calculator.ts</h4>\n<pre class=\"shiki\"><div class=\"language-id\">ts</div><div class='code-container'><code><span style=\"color: #0000FF\">export</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">class</span><span style=\"color: #000000\"> Calculator {</span>\n<span style=\"color: #000000\">  </span><span style=\"color: #0000FF\">private</span><span style=\"color: #000000\"> </span><span style=\"color: #1A1A1A\">current</span><span style=\"color: #000000\"> = </span><span style=\"color: #09835A\">0</span><span style=\"color: #000000\">;</span>\n<span style=\"color: #000000\">  </span><span style=\"color: #0000FF\">private</span><span style=\"color: #000000\"> </span><span style=\"color: #1A1A1A\">memory</span><span style=\"color: #000000\"> = </span><span style=\"color: #09835A\">0</span><span style=\"color: #000000\">;</span>\n<span style=\"color: #000000\">  </span><span style=\"color: #0000FF\">private</span><span style=\"color: #000000\"> </span><span style=\"color: #1A1A1A\">operator</span><span style=\"color: #000000\">: string;</span>\n\n<span style=\"color: #000000\">  </span><span style=\"color: #0000FF\">protected</span><span style=\"color: #000000\"> processDigit(</span><span style=\"color: #1A1A1A\">digit</span><span style=\"color: #000000\">: string, </span><span style=\"color: #1A1A1A\">currentValue</span><span style=\"color: #000000\">: number) {</span>\n<span style=\"color: #000000\">    </span><span style=\"color: #0000FF\">if</span><span style=\"color: #000000\"> (</span><span style=\"color: #1A1A1A\">digit</span><span style=\"color: #000000\"> &gt;= </span><span style=\"color: #A31515\">\"0\"</span><span style=\"color: #000000\"> && </span><span style=\"color: #1A1A1A\">digit</span><span style=\"color: #000000\"> &lt;= </span><span style=\"color: #A31515\">\"9\"</span><span style=\"color: #000000\">) {</span>\n<span style=\"color: #000000\">      </span><span style=\"color: #0000FF\">return</span><span style=\"color: #000000\"> </span><span style=\"color: #1A1A1A\">currentValue</span><span style=\"color: #000000\"> * </span><span style=\"color: #09835A\">10</span><span style=\"color: #000000\"> + (</span><span style=\"color: #1A1A1A\">digit</span><span style=\"color: #000000\">.charCodeAt(</span><span style=\"color: #09835A\">0</span><span style=\"color: #000000\">) - </span><span style=\"color: #A31515\">\"0\"</span><span style=\"color: #000000\">.charCodeAt(</span><span style=\"color: #09835A\">0</span><span style=\"color: #000000\">));</span>\n<span style=\"color: #000000\">    }</span>\n<span style=\"color: #000000\">  }</span>\n\n<span style=\"color: #000000\">  </span><span style=\"color: #0000FF\">protected</span><span style=\"color: #000000\"> processOperator(</span><span style=\"color: #1A1A1A\">operator</span><span style=\"color: #000000\">: string) {</span>\n<span style=\"color: #000000\">    </span><span style=\"color: #0000FF\">if</span><span style=\"color: #000000\"> ([</span><span style=\"color: #A31515\">\"+\"</span><span style=\"color: #000000\">, </span><span style=\"color: #A31515\">\"-\"</span><span style=\"color: #000000\">, </span><span style=\"color: #A31515\">\"*\"</span><span style=\"color: #000000\">, </span><span style=\"color: #A31515\">\"/\"</span><span style=\"color: #000000\">].indexOf(</span><span style=\"color: #1A1A1A\">operator</span><span style=\"color: #000000\">) &gt;= </span><span style=\"color: #09835A\">0</span><span style=\"color: #000000\">) {</span>\n<span style=\"color: #000000\">      </span><span style=\"color: #0000FF\">return</span><span style=\"color: #000000\"> </span><span style=\"color: #1A1A1A\">operator</span><span style=\"color: #000000\">;</span>\n<span style=\"color: #000000\">    }</span>\n<span style=\"color: #000000\">  }</span>\n\n<span style=\"color: #000000\">  </span><span style=\"color: #0000FF\">protected</span><span style=\"color: #000000\"> evaluateOperator(</span>\n<span style=\"color: #000000\">    </span><span style=\"color: #1A1A1A\">operator</span><span style=\"color: #000000\">: string,</span>\n<span style=\"color: #000000\">    </span><span style=\"color: #1A1A1A\">left</span><span style=\"color: #000000\">: number,</span>\n<span style=\"color: #000000\">    </span><span style=\"color: #1A1A1A\">right</span><span style=\"color: #000000\">: number</span>\n<span style=\"color: #000000\">  ): number {</span>\n<span style=\"color: #000000\">    </span><span style=\"color: #0000FF\">switch</span><span style=\"color: #000000\"> (</span><span style=\"color: #0000FF\">this</span><span style=\"color: #000000\">.</span><span style=\"color: #1A1A1A\">operator</span><span style=\"color: #000000\">) {</span>\n<span style=\"color: #000000\">      </span><span style=\"color: #0000FF\">case</span><span style=\"color: #000000\"> </span><span style=\"color: #A31515\">\"+\"</span><span style=\"color: #000000\">:</span>\n<span style=\"color: #000000\">        </span><span style=\"color: #0000FF\">return</span><span style=\"color: #000000\"> </span><span style=\"color: #1A1A1A\">left</span><span style=\"color: #000000\"> + </span><span style=\"color: #1A1A1A\">right</span><span style=\"color: #000000\">;</span>\n<span style=\"color: #000000\">      </span><span style=\"color: #0000FF\">case</span><span style=\"color: #000000\"> </span><span style=\"color: #A31515\">\"-\"</span><span style=\"color: #000000\">:</span>\n<span style=\"color: #000000\">        </span><span style=\"color: #0000FF\">return</span><span style=\"color: #000000\"> </span><span style=\"color: #1A1A1A\">left</span><span style=\"color: #000000\"> - </span><span style=\"color: #1A1A1A\">right</span><span style=\"color: #000000\">;</span>\n<span style=\"color: #000000\">      </span><span style=\"color: #0000FF\">case</span><span style=\"color: #000000\"> </span><span style=\"color: #A31515\">\"*\"</span><span style=\"color: #000000\">:</span>\n<span style=\"color: #000000\">        </span><span style=\"color: #0000FF\">return</span><span style=\"color: #000000\"> </span><span style=\"color: #1A1A1A\">left</span><span style=\"color: #000000\"> * </span><span style=\"color: #1A1A1A\">right</span><span style=\"color: #000000\">;</span>\n<span style=\"color: #000000\">      </span><span style=\"color: #0000FF\">case</span><span style=\"color: #000000\"> </span><span style=\"color: #A31515\">\"/\"</span><span style=\"color: #000000\">:</span>\n<span style=\"color: #000000\">        </span><span style=\"color: #0000FF\">return</span><span style=\"color: #000000\"> </span><span style=\"color: #1A1A1A\">left</span><span style=\"color: #000000\"> / </span><span style=\"color: #1A1A1A\">right</span><span style=\"color: #000000\">;</span>\n<span style=\"color: #000000\">    }</span>\n<span style=\"color: #000000\">  }</span>\n\n<span style=\"color: #000000\">  </span><span style=\"color: #0000FF\">private</span><span style=\"color: #000000\"> evaluate() {</span>\n<span style=\"color: #000000\">    </span><span style=\"color: #0000FF\">if</span><span style=\"color: #000000\"> (</span><span style=\"color: #0000FF\">this</span><span style=\"color: #000000\">.</span><span style=\"color: #1A1A1A\">operator</span><span style=\"color: #000000\">) {</span>\n<span style=\"color: #000000\">      </span><span style=\"color: #0000FF\">this</span><span style=\"color: #000000\">.</span><span style=\"color: #1A1A1A\">memory</span><span style=\"color: #000000\"> = </span><span style=\"color: #0000FF\">this</span><span style=\"color: #000000\">.evaluateOperator(</span>\n<span style=\"color: #000000\">        </span><span style=\"color: #0000FF\">this</span><span style=\"color: #000000\">.</span><span style=\"color: #1A1A1A\">operator</span><span style=\"color: #000000\">,</span>\n<span style=\"color: #000000\">        </span><span style=\"color: #0000FF\">this</span><span style=\"color: #000000\">.</span><span style=\"color: #1A1A1A\">memory</span><span style=\"color: #000000\">,</span>\n<span style=\"color: #000000\">        </span><span style=\"color: #0000FF\">this</span><span style=\"color: #000000\">.current</span>\n<span style=\"color: #000000\">      );</span>\n<span style=\"color: #000000\">    } </span><span style=\"color: #0000FF\">else</span><span style=\"color: #000000\"> {</span>\n<span style=\"color: #000000\">      </span><span style=\"color: #0000FF\">this</span><span style=\"color: #000000\">.</span><span style=\"color: #1A1A1A\">memory</span><span style=\"color: #000000\"> = </span><span style=\"color: #0000FF\">this</span><span style=\"color: #000000\">.current;</span>\n<span style=\"color: #000000\">    }</span>\n<span style=\"color: #000000\">    </span><span style=\"color: #0000FF\">this</span><span style=\"color: #000000\">.current = </span><span style=\"color: #09835A\">0</span><span style=\"color: #000000\">;</span>\n<span style=\"color: #000000\">  }</span>\n\n<span style=\"color: #000000\">  </span><span style=\"color: #0000FF\">public</span><span style=\"color: #000000\"> handleChar(</span><span style=\"color: #1A1A1A\">char</span><span style=\"color: #000000\">: string) {</span>\n<span style=\"color: #000000\">    </span><span style=\"color: #0000FF\">if</span><span style=\"color: #000000\"> (</span><span style=\"color: #1A1A1A\">char</span><span style=\"color: #000000\"> === </span><span style=\"color: #A31515\">\"=\"</span><span style=\"color: #000000\">) {</span>\n<span style=\"color: #000000\">      </span><span style=\"color: #0000FF\">this</span><span style=\"color: #000000\">.evaluate();</span>\n<span style=\"color: #000000\">      </span><span style=\"color: #0000FF\">return</span><span style=\"color: #000000\">;</span>\n<span style=\"color: #000000\">    } </span><span style=\"color: #0000FF\">else</span><span style=\"color: #000000\"> {</span>\n<span style=\"color: #000000\">      </span><span style=\"color: #0000FF\">let</span><span style=\"color: #000000\"> </span><span style=\"color: #1A1A1A\">value </span><span style=\"color: #000000\">= </span><span style=\"color: #0000FF\">this</span><span style=\"color: #000000\">.processDigit(</span><span style=\"color: #1A1A1A\">char</span><span style=\"color: #000000\">, </span><span style=\"color: #0000FF\">this</span><span style=\"color: #000000\">.current);</span>\n<span style=\"color: #000000\">      </span><span style=\"color: #0000FF\">if</span><span style=\"color: #000000\"> (</span><span style=\"color: #1A1A1A\">value</span><span style=\"color: #000000\"> !== </span><span style=\"color: #0000FF\">undefined</span><span style=\"color: #000000\">) {</span>\n<span style=\"color: #000000\">        </span><span style=\"color: #0000FF\">this</span><span style=\"color: #000000\">.current = </span><span style=\"color: #1A1A1A\">value</span><span style=\"color: #000000\">;</span>\n<span style=\"color: #000000\">        </span><span style=\"color: #0000FF\">return</span><span style=\"color: #000000\">;</span>\n<span style=\"color: #000000\">      } </span><span style=\"color: #0000FF\">else</span><span style=\"color: #000000\"> {</span>\n<span style=\"color: #000000\">        </span><span style=\"color: #0000FF\">let</span><span style=\"color: #000000\"> </span><span style=\"color: #1A1A1A\">value </span><span style=\"color: #000000\">= </span><span style=\"color: #0000FF\">this</span><span style=\"color: #000000\">.processOperator(</span><span style=\"color: #1A1A1A\">char</span><span style=\"color: #000000\">);</span>\n<span style=\"color: #000000\">        </span><span style=\"color: #0000FF\">if</span><span style=\"color: #000000\"> (</span><span style=\"color: #1A1A1A\">value</span><span style=\"color: #000000\"> !== </span><span style=\"color: #0000FF\">undefined</span><span style=\"color: #000000\">) {</span>\n<span style=\"color: #000000\">          </span><span style=\"color: #0000FF\">this</span><span style=\"color: #000000\">.evaluate();</span>\n<span style=\"color: #000000\">          </span><span style=\"color: #0000FF\">this</span><span style=\"color: #000000\">.</span><span style=\"color: #1A1A1A\">operator</span><span style=\"color: #000000\"> = </span><span style=\"color: #1A1A1A\">value</span><span style=\"color: #000000\">;</span>\n<span style=\"color: #000000\">          </span><span style=\"color: #0000FF\">return</span><span style=\"color: #000000\">;</span>\n<span style=\"color: #000000\">        }</span>\n<span style=\"color: #000000\">      }</span>\n<span style=\"color: #000000\">    }</span>\n<span style=\"color: #000000\">    </span><span style=\"color: #0000FF\">throw</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">new</span><span style=\"color: #000000\"> Error(</span><span style=\"color: #A31515\">`Unsupported input: '</span><span style=\"color: #0000FF\">${</span><span style=\"color: #1A1A1A\">char</span><span style=\"color: #0000FF\">}</span><span style=\"color: #A31515\">'`</span><span style=\"color: #000000\">);</span>\n<span style=\"color: #000000\">  }</span>\n\n<span style=\"color: #000000\">  </span><span style=\"color: #0000FF\">public</span><span style=\"color: #000000\"> getResult() {</span>\n<span style=\"color: #000000\">    </span><span style=\"color: #0000FF\">return</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">this</span><span style=\"color: #000000\">.</span><span style=\"color: #1A1A1A\">memory</span><span style=\"color: #000000\">;</span>\n<span style=\"color: #000000\">  }</span>\n<span style=\"color: #000000\">}</span>\n\n<span style=\"color: #0000FF\">export</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">function</span><span style=\"color: #000000\"> test(</span><span style=\"color: #1A1A1A\">c</span><span style=\"color: #000000\">: Calculator, </span><span style=\"color: #1A1A1A\">input</span><span style=\"color: #000000\">: string) {</span>\n<span style=\"color: #000000\">  </span><span style=\"color: #0000FF\">for</span><span style=\"color: #000000\"> (</span><span style=\"color: #0000FF\">let</span><span style=\"color: #000000\"> </span><span style=\"color: #1A1A1A\">i </span><span style=\"color: #000000\">= </span><span style=\"color: #09835A\">0</span><span style=\"color: #000000\">; </span><span style=\"color: #1A1A1A\">i</span><span style=\"color: #000000\"> &lt; </span><span style=\"color: #1A1A1A\">input</span><span style=\"color: #000000\">.length; </span><span style=\"color: #1A1A1A\">i</span><span style=\"color: #000000\">++) {</span>\n<span style=\"color: #000000\">    </span><span style=\"color: #1A1A1A\">c</span><span style=\"color: #000000\">.handleChar(</span><span style=\"color: #1A1A1A\">input</span><span style=\"color: #000000\">[</span><span style=\"color: #1A1A1A\">i</span><span style=\"color: #000000\">]);</span>\n<span style=\"color: #000000\">  }</span>\n\n<span style=\"color: #000000\">  console.log(</span><span style=\"color: #A31515\">`result of '</span><span style=\"color: #0000FF\">${</span><span style=\"color: #1A1A1A\">input</span><span style=\"color: #0000FF\">}</span><span style=\"color: #A31515\">' is '</span><span style=\"color: #0000FF\">${</span><span style=\"color: #1A1A1A\">c</span><span style=\"color: #A31515\">.getResult()</span><span style=\"color: #0000FF\">}</span><span style=\"color: #A31515\">'`</span><span style=\"color: #000000\">);</span>\n<span style=\"color: #000000\">}</span></code></div></pre>\n<p>Aqui está um teste simples para a calculadora usando a função <code>teste</code> exposta.</p>\n<h4 id=\"testcalculatorts\" style=\"position:relative;\"><a href=\"#testcalculatorts\" aria-label=\"testcalculatorts permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>TestCalculator.ts</h4>\n<pre class=\"shiki\"><div class=\"language-id\">ts</div><div class='code-container'><code><span style=\"color: #0000FF\">import</span><span style=\"color: #000000\"> { </span><span style=\"color: #1A1A1A\">Calculator</span><span style=\"color: #000000\">, </span><span style=\"color: #1A1A1A\">test</span><span style=\"color: #000000\"> } </span><span style=\"color: #0000FF\">from</span><span style=\"color: #000000\"> </span><span style=\"color: #A31515\">\"./Calculator\"</span><span style=\"color: #000000\">;</span>\n\n<span style=\"color: #0000FF\">let</span><span style=\"color: #000000\"> </span><span style=\"color: #1A1A1A\">c </span><span style=\"color: #000000\">= </span><span style=\"color: #0000FF\">new</span><span style=\"color: #000000\"> Calculator();</span>\n<span style=\"color: #000000\">test(</span><span style=\"color: #1A1A1A\">c</span><span style=\"color: #000000\">, </span><span style=\"color: #A31515\">\"1+2*33/11=\"</span><span style=\"color: #000000\">); </span><span style=\"color: #008000\">// escreve 9</span></code></div></pre>\n<p>Agora, para estender isso para adicionar suporte para entrada com números em bases diferentes de 10, vamos criar <code>ProgrammerCalculator.ts</code></p>\n<h4 id=\"programmercalculatorts\" style=\"position:relative;\"><a href=\"#programmercalculatorts\" aria-label=\"programmercalculatorts permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ProgrammerCalculator.ts</h4>\n<pre class=\"shiki\"><div class=\"language-id\">ts</div><div class='code-container'><code><span style=\"color: #0000FF\">import</span><span style=\"color: #000000\"> { </span><span style=\"color: #1A1A1A\">Calculator</span><span style=\"color: #000000\"> } </span><span style=\"color: #0000FF\">from</span><span style=\"color: #000000\"> </span><span style=\"color: #A31515\">\"./Calculator\"</span><span style=\"color: #000000\">;</span>\n\n<span style=\"color: #0000FF\">class</span><span style=\"color: #000000\"> ProgrammerCalculator </span><span style=\"color: #0000FF\">extends</span><span style=\"color: #000000\"> Calculator {</span>\n<span style=\"color: #000000\">  </span><span style=\"color: #0000FF\">static</span><span style=\"color: #000000\"> </span><span style=\"color: #1A1A1A\">digits</span><span style=\"color: #000000\"> = [</span>\n<span style=\"color: #000000\">    </span><span style=\"color: #A31515\">\"0\"</span><span style=\"color: #000000\">,</span>\n<span style=\"color: #000000\">    </span><span style=\"color: #A31515\">\"1\"</span><span style=\"color: #000000\">,</span>\n<span style=\"color: #000000\">    </span><span style=\"color: #A31515\">\"2\"</span><span style=\"color: #000000\">,</span>\n<span style=\"color: #000000\">    </span><span style=\"color: #A31515\">\"3\"</span><span style=\"color: #000000\">,</span>\n<span style=\"color: #000000\">    </span><span style=\"color: #A31515\">\"4\"</span><span style=\"color: #000000\">,</span>\n<span style=\"color: #000000\">    </span><span style=\"color: #A31515\">\"5\"</span><span style=\"color: #000000\">,</span>\n<span style=\"color: #000000\">    </span><span style=\"color: #A31515\">\"6\"</span><span style=\"color: #000000\">,</span>\n<span style=\"color: #000000\">    </span><span style=\"color: #A31515\">\"7\"</span><span style=\"color: #000000\">,</span>\n<span style=\"color: #000000\">    </span><span style=\"color: #A31515\">\"8\"</span><span style=\"color: #000000\">,</span>\n<span style=\"color: #000000\">    </span><span style=\"color: #A31515\">\"9\"</span><span style=\"color: #000000\">,</span>\n<span style=\"color: #000000\">    </span><span style=\"color: #A31515\">\"A\"</span><span style=\"color: #000000\">,</span>\n<span style=\"color: #000000\">    </span><span style=\"color: #A31515\">\"B\"</span><span style=\"color: #000000\">,</span>\n<span style=\"color: #000000\">    </span><span style=\"color: #A31515\">\"C\"</span><span style=\"color: #000000\">,</span>\n<span style=\"color: #000000\">    </span><span style=\"color: #A31515\">\"D\"</span><span style=\"color: #000000\">,</span>\n<span style=\"color: #000000\">    </span><span style=\"color: #A31515\">\"E\"</span><span style=\"color: #000000\">,</span>\n<span style=\"color: #000000\">    </span><span style=\"color: #A31515\">\"F\"</span><span style=\"color: #000000\">,</span>\n<span style=\"color: #000000\">  ];</span>\n\n<span style=\"color: #000000\">  </span><span style=\"color: #0000FF\">constructor</span><span style=\"color: #000000\">(</span><span style=\"color: #0000FF\">public</span><span style=\"color: #000000\"> </span><span style=\"color: #1A1A1A\">base</span><span style=\"color: #000000\">: number) {</span>\n<span style=\"color: #000000\">    </span><span style=\"color: #0000FF\">super</span><span style=\"color: #000000\">();</span>\n<span style=\"color: #000000\">    </span><span style=\"color: #0000FF\">const</span><span style=\"color: #000000\"> </span><span style=\"color: #1A1A1A\">maxBase </span><span style=\"color: #000000\">= </span><span style=\"color: #1A1A1A\">ProgrammerCalculator</span><span style=\"color: #000000\">.</span><span style=\"color: #1A1A1A\">digits</span><span style=\"color: #000000\">.length;</span>\n<span style=\"color: #000000\">    </span><span style=\"color: #0000FF\">if</span><span style=\"color: #000000\"> (</span><span style=\"color: #1A1A1A\">base</span><span style=\"color: #000000\"> &lt;= </span><span style=\"color: #09835A\">0</span><span style=\"color: #000000\"> || </span><span style=\"color: #1A1A1A\">base</span><span style=\"color: #000000\"> &gt; </span><span style=\"color: #1A1A1A\">maxBase</span><span style=\"color: #000000\">) {</span>\n<span style=\"color: #000000\">      </span><span style=\"color: #0000FF\">throw</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">new</span><span style=\"color: #000000\"> Error(</span><span style=\"color: #A31515\">`base deve estar entre 0 para </span><span style=\"color: #0000FF\">${</span><span style=\"color: #1A1A1A\">maxBase</span><span style=\"color: #0000FF\">}</span><span style=\"color: #A31515\"> inclusive.`</span><span style=\"color: #000000\">);</span>\n<span style=\"color: #000000\">    }</span>\n<span style=\"color: #000000\">  }</span>\n\n<span style=\"color: #000000\">  </span><span style=\"color: #0000FF\">protected</span><span style=\"color: #000000\"> processDigit(</span><span style=\"color: #1A1A1A\">digit</span><span style=\"color: #000000\">: string, </span><span style=\"color: #1A1A1A\">currentValue</span><span style=\"color: #000000\">: number) {</span>\n<span style=\"color: #000000\">    </span><span style=\"color: #0000FF\">if</span><span style=\"color: #000000\"> (</span><span style=\"color: #1A1A1A\">ProgrammerCalculator</span><span style=\"color: #000000\">.</span><span style=\"color: #1A1A1A\">digits</span><span style=\"color: #000000\">.indexOf(</span><span style=\"color: #1A1A1A\">digit</span><span style=\"color: #000000\">) &gt;= </span><span style=\"color: #09835A\">0</span><span style=\"color: #000000\">) {</span>\n<span style=\"color: #000000\">      </span><span style=\"color: #0000FF\">return</span><span style=\"color: #000000\"> (</span>\n<span style=\"color: #000000\">        </span><span style=\"color: #1A1A1A\">currentValue</span><span style=\"color: #000000\"> * </span><span style=\"color: #0000FF\">this</span><span style=\"color: #000000\">.</span><span style=\"color: #1A1A1A\">base</span><span style=\"color: #000000\"> + </span><span style=\"color: #1A1A1A\">ProgrammerCalculator</span><span style=\"color: #000000\">.</span><span style=\"color: #1A1A1A\">digits</span><span style=\"color: #000000\">.indexOf(</span><span style=\"color: #1A1A1A\">digit</span><span style=\"color: #000000\">)</span>\n<span style=\"color: #000000\">      );</span>\n<span style=\"color: #000000\">    }</span>\n<span style=\"color: #000000\">  }</span>\n<span style=\"color: #000000\">}</span>\n\n<span style=\"color: #008000\">// Exporta a nova calculadora estendida como Calculator</span>\n<span style=\"color: #0000FF\">export</span><span style=\"color: #000000\"> { </span><span style=\"color: #1A1A1A\">ProgrammerCalculator</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">as</span><span style=\"color: #000000\"> </span><span style=\"color: #1A1A1A\">Calculator</span><span style=\"color: #000000\"> };</span>\n\n<span style=\"color: #008000\">// Além disso, exporta a função auxiliar</span>\n<span style=\"color: #0000FF\">export</span><span style=\"color: #000000\"> { </span><span style=\"color: #1A1A1A\">test</span><span style=\"color: #000000\"> } </span><span style=\"color: #0000FF\">from</span><span style=\"color: #000000\"> </span><span style=\"color: #A31515\">\"./Calculator\"</span><span style=\"color: #000000\">;</span></code></div></pre>\n<p>o novo módulo <code>ProgrammerCalculator</code> exporta uma forma de API semelhante à do módulo <code>Calculator</code> original, mas não aumenta nenhum objeto no módulo original.\nAqui está um teste para nossa classe ProgrammerCalculator:</p>\n<h4 id=\"testprogrammercalculatorts\" style=\"position:relative;\"><a href=\"#testprogrammercalculatorts\" aria-label=\"testprogrammercalculatorts permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>TestProgrammerCalculator.ts</h4>\n<pre class=\"shiki\"><div class=\"language-id\">ts</div><div class='code-container'><code><span style=\"color: #0000FF\">import</span><span style=\"color: #000000\"> { </span><span style=\"color: #1A1A1A\">Calculator</span><span style=\"color: #000000\">, </span><span style=\"color: #1A1A1A\">test</span><span style=\"color: #000000\"> } </span><span style=\"color: #0000FF\">from</span><span style=\"color: #000000\"> </span><span style=\"color: #A31515\">\"./ProgrammerCalculator\"</span><span style=\"color: #000000\">;</span>\n\n<span style=\"color: #0000FF\">let</span><span style=\"color: #000000\"> </span><span style=\"color: #1A1A1A\">c </span><span style=\"color: #000000\">= </span><span style=\"color: #0000FF\">new</span><span style=\"color: #000000\"> Calculator(</span><span style=\"color: #09835A\">2</span><span style=\"color: #000000\">);</span>\n<span style=\"color: #000000\">test(</span><span style=\"color: #1A1A1A\">c</span><span style=\"color: #000000\">, </span><span style=\"color: #A31515\">\"001+010=\"</span><span style=\"color: #000000\">); </span><span style=\"color: #008000\">// escreve 3</span></code></div></pre>\n<h2 id=\"não-use-namespaces-nos-módulos\" style=\"position:relative;\"><a href=\"#n%C3%A3o-use-namespaces-nos-m%C3%B3dulos\" aria-label=\"não use namespaces nos módulos permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Não use namespaces nos módulos</h2>\n<p>Ao mudar pela primeira vez para uma organização baseada em módulo, uma tendência comum é envolver as exportações em uma camada adicional de namespaces.\nOs módulos têm seu próprio escopo e apenas as declarações exportadas são visíveis de fora do módulo.\nCom isso em mente, o namespace fornece muito pouco ou nenhum valor ao trabalhar com módulos.</p>\n<p>Na frente da organização, os namespaces são úteis para agrupar objetos e tipos relacionados logicamente no escopo global.\nPor exemplo, em C#, você encontrará todos os tipos de coleção em System.Collections.\nAo organizar nossos tipos em namespaces hierárquicos, oferecemos uma boa experiência de “descoberta” para usuários desses tipos.\nOs módulos, por outro lado, já estão necessariamente presentes em um sistema de arquivos.\nTemos que resolvê-los por caminho e nome de arquivo, portanto, há um esquema de organização lógico para usarmos.\nNós podemoso ter uma pasta /collections/generic/ com a lista de módulos nela.</p>\n<p>Os namespaces são importantes para evitar conflitos de nomenclatura no escopo global.\nPor exemplo, você pode ter <code>My.Application.Customer.AddForm</code> e <code>My.Application.Order.AddForm</code> — dois tipos com o mesmo nome, mas um namespace diferente.\nIsso, no entanto, não é um problema com módulos.\nDentro de um módulo, não há razão plausível para ter dois objetos com o mesmo nome.\nDo lado do consumo, o consumidor de qualquer módulo pode escolher o nome que usará para se referir ao módulo, portanto, conflitos de nomenclatura acidentais são impossíveis.</p>\n<blockquote>\n<p>Para obter mais discussão sobre módulos e namespaces, acesse <a href=\"/docs/handbook/namespaces-and-modules.html\">Namespaces e Módulos</a>.</p>\n</blockquote>\n<h2 id=\"sinais-de-alerta\" style=\"position:relative;\"><a href=\"#sinais-de-alerta\" aria-label=\"sinais de alerta permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Sinais de alerta</h2>\n<p>Todos os itens a seguir são sinais de alerta para a estruturação do módulo. Verifique novamente se você não está tentando criar um namespace para seus módulos externos se algum deles se aplicar aos seus arquivos:</p>\n<ul>\n<li>Um arquivo cuja única declaração de nível superior é <code>export namespace Foo { ... }</code> (remove <code>Foo</code> e move tudo para um nível ‘acima’)</li>\n<li>Múltiplos arquivos que tem um mesmo <code>export namespace Foo {</code> em um nível superior (não pense que eles vão se combinar em um único <code>Foo</code>!)</li>\n</ul>","headings":[{"value":"Export","depth":2},{"value":"Exportando a declaração","depth":2},{"value":"StringValidator.ts","depth":5},{"value":"ZipCodeValidator.ts","depth":5},{"value":"Declarações de Export","depth":2},{"value":"Re-exports","depth":2},{"value":"ParseIntBasedZipCodeValidator.ts","depth":5},{"value":"AllValidators.ts","depth":5},{"value":"Import","depth":2},{"value":"Importar um único export de um módulo","depth":2},{"value":"Importa o módulo inteiro em uma única variável, e a usa para acessar os exports do módulo","depth":2},{"value":"Importa um módulo apenas para efeitos colaterais","depth":2},{"value":"Tipos de import","depth":2},{"value":"Exports padrões","depth":2},{"value":"JQuery.d.ts","depth":5},{"value":"App.ts","depth":5},{"value":"ZipCodeValidator.ts","depth":5},{"value":"Test.ts","depth":5},{"value":"StaticZipCodeValidator.ts","depth":5},{"value":"Test.ts","depth":5},{"value":"OneTwoThree.ts","depth":5},{"value":"Log.ts","depth":5},{"value":"Exporta tudo como x","depth":2},{"value":"export = e import = require()","depth":2},{"value":"ZipCodeValidator.ts","depth":5},{"value":"Test.ts","depth":5},{"value":"Geração de código para Módulos","depth":2},{"value":"SimpleModule.ts","depth":5},{"value":"AMD / RequireJS SimpleModule.js","depth":5},{"value":"CommonJS / Node SimpleModule.js","depth":5},{"value":"UMD SimpleModule.js","depth":5},{"value":"Sistema SimpleModule.js","depth":5},{"value":"Módulos nativos ECMAScript 2015 SimpleModule.js","depth":5},{"value":"Exemplo simples","depth":2},{"value":"Validation.ts","depth":5},{"value":"LettersOnlyValidator.ts","depth":5},{"value":"ZipCodeValidator.ts","depth":5},{"value":"Test.ts","depth":5},{"value":"Carregamento de Módulo Opcional e Outros Cenários de Carregamento Avançado","depth":2},{"value":"Carregamento de módulo dinâmico em Node.js","depth":5},{"value":"Exemplo: Carregamento de Módulo Dinâmico em require.js","depth":5},{"value":"Exemplo: Carregamento de módulo dinâmico em System.js","depth":5},{"value":"Trabalhando com outras bibliotecas em JavaScript","depth":2},{"value":"Módulos de ambiente","depth":2},{"value":"node.d.ts (trecho simplificado)","depth":5},{"value":"Módulos de ambiente abreviados","depth":3},{"value":"declarations.d.ts","depth":5},{"value":"Declarações curinga de módulo","depth":3},{"value":"Módulos UMD","depth":3},{"value":"math-lib.d.ts","depth":5},{"value":"Orientação para a estruturação de módulos","depth":2},{"value":"Exporte o mais próximo possível do nível superior","depth":2},{"value":"Se você é o único exportando uma simples class ou function, use export default","depth":3},{"value":"MyClass.ts","depth":4},{"value":"MyFunc.ts","depth":4},{"value":"Consumer.ts","depth":4},{"value":"Se você estiver exportando vários objetos, coloque-os todos em um nível superior","depth":3},{"value":"MyThings.ts","depth":4},{"value":"Liste explicitamente os nomes importados","depth":3},{"value":"Consumer.ts","depth":4},{"value":"Use o padrão de importação de namespace se você estiver importando um grande número de coisas","depth":3},{"value":"MyLargeModule.ts","depth":4},{"value":"Consumer.ts","depth":4},{"value":"Reexportar para estender","depth":2},{"value":"Calculator.ts","depth":4},{"value":"TestCalculator.ts","depth":4},{"value":"ProgrammerCalculator.ts","depth":4},{"value":"TestProgrammerCalculator.ts","depth":4},{"value":"Não use namespaces nos módulos","depth":2},{"value":"Sinais de alerta","depth":2}],"frontmatter":{"permalink":"/pt/docs/handbook/modules.html","title":"Modules","disable_toc":null,"handbook":null,"oneline":"Como módulos funcionam no TypeScript","beta":null}},"prev":null,"next":null},"pageContext":{"id":"2modules","slug":"/pt/docs/handbook/modules.html","repoPath":"/packages/documentation/copy/pt/reference/Modules.md","lang":"pt","modifiedTime":"2020-11-23T10:39:15.627Z"}},"staticQueryHashes":[]}