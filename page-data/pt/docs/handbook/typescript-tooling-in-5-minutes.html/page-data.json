{"componentChunkName":"component---src-templates-documentation-tsx","path":"/pt/docs/handbook/typescript-tooling-in-5-minutes.html","result":{"data":{"allSitePage":{"nodes":[{"path":"/dev-404-page/"},{"path":"/docs/handbook/nightly-builds.html"},{"path":"/pt/docs/handbook/nightly-builds.html"},{"path":"/docs/handbook/declaration-files/consumption.html"},{"path":"/docs/handbook/declaration-files/by-example.html"},{"path":"/docs/handbook/declaration-files/deep-dive.html"},{"path":"/docs/handbook/declaration-files/do-s-and-don-ts.html"},{"path":"/docs/handbook/declaration-files/introduction.html"},{"path":"/docs/handbook/declaration-files/publishing.html"},{"path":"/docs/handbook/declaration-files/library-structures.html"},{"path":"/docs/handbook/declaration-files/templates.html"},{"path":"/docs/handbook/typescript-in-5-minutes.html"},{"path":"/docs/handbook/typescript-in-5-minutes-func.html"},{"path":"/docs/handbook/typescript-in-5-minutes-oop.html"},{"path":"/docs/handbook/typescript-from-scratch.html"},{"path":"/docs/handbook/basic-types.html"},{"path":"/docs/handbook/enums.html"},{"path":"/docs/handbook/classes.html"},{"path":"/docs/handbook/functions.html"},{"path":"/docs/handbook/generics.html"},{"path":"/docs/handbook/literal-types.html"},{"path":"/docs/handbook/intro.html"},{"path":"/docs/handbook/interfaces.html"},{"path":"/docs/handbook/unions-and-intersections.html"},{"path":"/docs/handbook/2/basic-types.html"},{"path":"/docs/handbook/2/classes.html"},{"path":"/docs/handbook/2/everyday-types.html"},{"path":"/docs/handbook/2/modules.html"},{"path":"/docs/handbook/2/narrowing.html"},{"path":"/docs/handbook/2/functions.html"},{"path":"/docs/handbook/2/objects.html"},{"path":"/docs/handbook/2/type-declarations.html"},{"path":"/docs/handbook/declaration-files/dts-from-js.html"},{"path":"/docs/handbook/2/understanding-errors.html"},{"path":"/docs/handbook/intro-to-js-ts.html"},{"path":"/docs/handbook/type-checking-javascript-files.html"},{"path":"/docs/handbook/jsdoc-supported-types.html"},{"path":"/docs/handbook/compiler-options-in-msbuild.html"},{"path":"/docs/handbook/configuring-watch.html"},{"path":"/docs/handbook/integrating-with-build-tools.html"},{"path":"/docs/handbook/compiler-options.html"},{"path":"/docs/handbook/tsconfig-json.html"},{"path":"/docs/handbook/project-references.html"},{"path":"/docs/handbook/declaration-merging.html"},{"path":"/docs/handbook/decorators.html"},{"path":"/docs/handbook/advanced-types.html"},{"path":"/docs/handbook/iterators-and-generators.html"},{"path":"/docs/handbook/mixins.html"},{"path":"/docs/handbook/jsx.html"},{"path":"/docs/handbook/module-resolution.html"},{"path":"/docs/handbook/modules.html"},{"path":"/docs/handbook/namespaces-and-modules.html"},{"path":"/docs/handbook/symbols.html"},{"path":"/docs/handbook/namespaces.html"},{"path":"/docs/handbook/triple-slash-directives.html"},{"path":"/docs/handbook/type-inference.html"},{"path":"/docs/handbook/type-compatibility.html"},{"path":"/docs/handbook/utility-types.html"},{"path":"/docs/handbook/variable-declarations.html"},{"path":"/docs/handbook/release-notes/typescript-1-1.html"},{"path":"/docs/handbook/release-notes/typescript-1-3.html"},{"path":"/docs/handbook/release-notes/typescript-1-4.html"},{"path":"/docs/handbook/release-notes/typescript-1-5.html"},{"path":"/docs/handbook/release-notes/typescript-1-6.html"},{"path":"/docs/handbook/release-notes/typescript-1-7.html"},{"path":"/docs/handbook/release-notes/typescript-1-8.html"},{"path":"/docs/handbook/release-notes/typescript-2-1.html"},{"path":"/docs/handbook/release-notes/typescript-2-0.html"},{"path":"/docs/handbook/release-notes/typescript-2-2.html"},{"path":"/docs/handbook/release-notes/typescript-2-3.html"},{"path":"/docs/handbook/release-notes/typescript-2-5.html"},{"path":"/docs/handbook/release-notes/typescript-2-4.html"},{"path":"/docs/handbook/release-notes/typescript-2-6.html"},{"path":"/docs/handbook/release-notes/typescript-2-7.html"},{"path":"/docs/handbook/release-notes/typescript-2-9.html"},{"path":"/docs/handbook/release-notes/typescript-2-8.html"},{"path":"/docs/handbook/release-notes/typescript-3-1.html"},{"path":"/docs/handbook/release-notes/typescript-3-0.html"},{"path":"/docs/handbook/release-notes/typescript-3-3.html"},{"path":"/docs/handbook/release-notes/typescript-3-2.html"},{"path":"/docs/handbook/release-notes/typescript-3-5.html"},{"path":"/docs/handbook/release-notes/typescript-3-4.html"},{"path":"/docs/handbook/release-notes/typescript-3-6.html"},{"path":"/docs/handbook/release-notes/typescript-3-8.html"},{"path":"/docs/handbook/release-notes/typescript-3-7.html"},{"path":"/docs/handbook/release-notes/typescript-3-9.html"},{"path":"/docs/handbook/asp-net-core.html"},{"path":"/docs/handbook/release-notes/typescript-4-0.html"},{"path":"/docs/handbook/angular.html"},{"path":"/docs/handbook/babel-with-typescript.html"},{"path":"/docs/handbook/dom-manipulation.html"},{"path":"/docs/handbook/gulp.html"},{"path":"/docs/handbook/react.html"},{"path":"/docs/handbook/migrating-from-javascript.html"},{"path":"/docs/handbook/typescript-tooling-in-5-minutes.html"},{"path":"/ko/docs/handbook/babel-with-typescript.html"},{"path":"/ko/docs/handbook/react.html"},{"path":"/pt/docs/handbook/intro-to-js-ts.html"},{"path":"/ko/docs/handbook/typescript-tooling-in-5-minutes.html"},{"path":"/pt/docs/handbook/tsconfig-json.html"},{"path":"/pt/docs/handbook/Decorators.html"},{"path":"/pt/docs/handbook/module-resolution.html"},{"path":"/pt/docs/handbook/namespaces.html"},{"path":"/pt/docs/handbook/react.html"},{"path":"/pt/docs/handbook/babel-with-typescript.html"},{"path":"/pt/docs/handbook/typescript-tooling-in-5-minutes.html"},{"path":"/vo/docs/handbook/basic-types.html"},{"path":"/docs/handbook/declaration-files/templates/global-modifying-module-d-ts.html"},{"path":"/docs/handbook/declaration-files/templates/global-plugin-d-ts.html"},{"path":"/docs/handbook/declaration-files/templates/global-d-ts.html"},{"path":"/docs/handbook/declaration-files/templates/module-class-d-ts.html"},{"path":"/docs/handbook/declaration-files/templates/module-function-d-ts.html"},{"path":"/docs/handbook/declaration-files/templates/module-plugin-d-ts.html"},{"path":"/docs/handbook/declaration-files/templates/module-d-ts.html"},{"path":"/docs/handbook/2/conditional-types.html"},{"path":"/docs/handbook/2/indexed-access-types.html"},{"path":"/docs/handbook/2/typeof-types.html"},{"path":"/docs/handbook/2/types-from-types.html"},{"path":"/pt/docs/handbook/declaration-files/dts-from-js.html"},{"path":"/pt/docs/handbook/symbols.html"},{"path":"/docs/handbook/release-notes/overview.html"},{"path":"/tsconfig"},{"path":"/es/tsconfig"},{"path":"/id/tsconfig"},{"path":"/ko/tsconfig"},{"path":"/ja/tsconfig"},{"path":"/pt/tsconfig"},{"path":"/vo/tsconfig"},{"path":"/zh/tsconfig"},{"path":"/play"},{"path":"/fa/play"},{"path":"/id/play"},{"path":"/ja/play"},{"path":"/zh/play"},{"path":"/es/play"},{"path":"/ko/play"},{"path":"/pt/play"},{"path":"/vo/play"},{"path":"/play/3-7/fixits/big-number-literals.ts.html"},{"path":"/play/3-7/fixits/const-to-let.ts.html"},{"path":"/play/3-7/fixits/infer-from-usage-changes.ts.html"},{"path":"/play/3-7/syntax-and-messaging/flattened-error-reporting.ts.html"},{"path":"/play/3-7/syntax-and-messaging/nullish-coalescing.ts.html"},{"path":"/play/3-7/syntax-and-messaging/optional-chaining.ts.html"},{"path":"/play/3-7/types-and-code-flow/assertion-functions.ts.html"},{"path":"/play/3-7/types-and-code-flow/recursive-type-references.ts.html"},{"path":"/play/3-7/types-and-code-flow/uncalled-function-checks.ts.html"},{"path":"/play/3-8/breaking-changes/checking-unions-with-index-signatures.ts.html"},{"path":"/play/3-8/jsdoc-improvements/accessibility-modifiers.js.html"},{"path":"/play/3-8/syntax-and-messaging/export-modules-from.ts.html"},{"path":"/play/3-8/syntax-and-messaging/private-class-fields.ts.html"},{"path":"/play/4-0/new-checks/class-constructor-code-flow.ts.html"},{"path":"/play/4-0/new-ts-features/named-tuples.ts.html"},{"path":"/play/4-0/new-ts-features/unknown-in-catch.ts.html"},{"path":"/play/4-0/new-ts-features/variadic-tuples.ts.html"},{"path":"/play/4-0/new-js-features/jsdoc-deprecated.ts.html"},{"path":"/play/4-0/new-js-features/logical-operators-and-assignment.ts.html"},{"path":"/play/4-0/new-js-features/nullish-coalescing.ts.html"},{"path":"/play/javascript/external-apis/typescript-with-deno.ts.html"},{"path":"/play/javascript/external-apis/typescript-with-node.js.html"},{"path":"/play/javascript/external-apis/typescript-with-web.js.html"},{"path":"/play/javascript/external-apis/typescript-with-webgl.js.html"},{"path":"/play/javascript/functions-with-javascript/function-chaining.ts.html"},{"path":"/play/javascript/functions-with-javascript/generic-functions.ts.html"},{"path":"/play/javascript/functions-with-javascript/typing-functions.ts.html"},{"path":"/play/javascript/helping-with-javascript/errors.ts.html"},{"path":"/play/javascript/helping-with-javascript/quick-fixes.ts.html"},{"path":"/play/javascript/javascript-essentials/code-flow.ts.html"},{"path":"/play/javascript/javascript-essentials/functions.ts.html"},{"path":"/play/javascript/javascript-essentials/hello-world.ts.html"},{"path":"/play/javascript/javascript-essentials/objects-and-arrays.ts.html"},{"path":"/play/javascript/modern-javascript/async-await.ts.html"},{"path":"/play/javascript/modern-javascript/immutability.ts.html"},{"path":"/play/javascript/modern-javascript/import-export.ts.html"},{"path":"/play/javascript/modern-javascript/jsdoc-support.js.html"},{"path":"/play/javascript/working-with-classes/classes-101.ts.html"},{"path":"/play/javascript/working-with-classes/generic-classes.ts.html"},{"path":"/play/javascript/working-with-classes/mixins.ts.html"},{"path":"/play/javascript/working-with-classes/this.ts.html"},{"path":"/play/playground/config/javascript-playgrounds.js.html"},{"path":"/play/playground/config/new-compiler-defaults.ts.html"},{"path":"/play/playground/language/automatic-type-acquisition.ts.html"},{"path":"/play/playground/language/fixits.ts.html"},{"path":"/play/typescript/language/soundness.ts.html"},{"path":"/play/typescript/language/structural-typing.ts.html"},{"path":"/play/typescript/language/type-guards.ts.html"},{"path":"/play/typescript/language/type-widening-and-narrowing.ts.html"},{"path":"/play/playground/tooling/mobile-support.ts.html"},{"path":"/play/playground/tooling/sharable-urls.ts.html"},{"path":"/play/playground/tooling/typescript-versions.ts.html"},{"path":"/play/typescript/language-extensions/enums.ts.html"},{"path":"/play/typescript/language-extensions/nominal-typing.ts.html"},{"path":"/play/typescript/language-extensions/types-vs-interfaces.ts.html"},{"path":"/play/typescript/meta-types/conditional-types.ts.html"},{"path":"/play/typescript/meta-types/discriminate-types.ts.html"},{"path":"/play/typescript/meta-types/indexed-types.ts.html"},{"path":"/play/typescript/meta-types/mapped-types.ts.html"},{"path":"/play/typescript/primitives/any.ts.html"},{"path":"/play/typescript/primitives/literals.ts.html"},{"path":"/play/typescript/primitives/union-and-intersection-types.ts.html"},{"path":"/play/typescript/primitives/unknown-and-never.ts.html"},{"path":"/play/typescript/type-primitives/built-in-utility-types.ts.html"},{"path":"/play/typescript/type-primitives/nullable-types.ts.html"},{"path":"/play/typescript/type-primitives/tuples.ts.html"},{"path":"/es/play/javascript/external-apis/typescript-with-deno.ts.html"},{"path":"/es/play/javascript/external-apis/typescript-with-node.js.html"},{"path":"/es/play/javascript/external-apis/typescript-with-web.js.html"},{"path":"/es/play/javascript/functions-with-javascript/function-chaining.ts.html"},{"path":"/es/play/javascript/functions-with-javascript/generic-functions.ts.html"},{"path":"/es/play/javascript/javascript-essentials/hello-world.ts.html"},{"path":"/es/play/javascript/javascript-essentials/objects-and-arrays.ts.html"},{"path":"/es/play/typescript/language/soundness.ts.html"},{"path":"/es/play/typescript/language/structural-typing.ts.html"},{"path":"/es/play/typescript/language/type-guards.ts.html"},{"path":"/es/play/typescript/language/type-widening-and-narrowing.ts.html"},{"path":"/es/play/typescript/meta-types/conditional-types.ts.html"},{"path":"/es/play/typescript/meta-types/discriminate-types.ts.html"},{"path":"/es/play/typescript/meta-types/indexed-types.ts.html"},{"path":"/es/play/typescript/meta-types/mapped-types.ts.html"},{"path":"/es/play/typescript/primitives/any.ts.html"},{"path":"/es/play/typescript/primitives/literals.ts.html"},{"path":"/es/play/typescript/primitives/union-and-intersection-types.ts.html"},{"path":"/es/play/typescript/primitives/unknown-and-never.ts.html"},{"path":"/es/play/typescript/type-primitives/built-in-utility-types.ts.html"},{"path":"/es/play/typescript/type-primitives/nullable-types.ts.html"},{"path":"/es/play/typescript/type-primitives/tuples.ts.html"},{"path":"/fa/play/javascript/javascript-essentials/hello-world.ts.html"},{"path":"/id/play/3-7/fixits/big-number-literals.ts.html"},{"path":"/id/play/3-7/fixits/const-to-let.ts.html"},{"path":"/id/play/3-7/fixits/infer-from-usage-changes.ts.html"},{"path":"/id/play/3-7/syntax-and-messaging/flattened-error-reporting.ts.html"},{"path":"/id/play/3-7/syntax-and-messaging/nullish-coalescing.ts.html"},{"path":"/id/play/3-7/syntax-and-messaging/optional-chaining.ts.html"},{"path":"/id/play/3-7/types-and-code-flow/assertion-functions.ts.html"},{"path":"/id/play/3-7/types-and-code-flow/recursive-type-reference.ts.html"},{"path":"/id/play/3-7/types-and-code-flow/uncalled-function-checks.ts.html"},{"path":"/id/play/3-8/breaking-changes/checking-unions-with-index-signatures.ts.html"},{"path":"/id/play/3-8/jsdoc-improvements/accessibility-modifiers.js.html"},{"path":"/id/play/3-8/syntax-and-messaging/export-modules-from.ts.html"},{"path":"/id/play/3-8/syntax-and-messaging/private-class-fields.ts.html"},{"path":"/id/play/4-0/new-checks/class-constructor-code-flow.ts.html"},{"path":"/id/play/4-0/new-js-features/jsdoc-deprecated.ts.html"},{"path":"/id/play/4-0/new-js-features/logical-operators-and-assignment.ts.html"},{"path":"/id/play/4-0/new-js-features/nullish-coalescing.ts.html"},{"path":"/id/play/4-0/new-ts-features/named-tuples.ts.html"},{"path":"/id/play/4-0/new-ts-features/unknown-in-catch.ts.html"},{"path":"/id/play/4-0/new-ts-features/variadic-tuples.ts.html"},{"path":"/id/play/javascript/external-apis/typescript-with-deno.ts.html"},{"path":"/id/play/javascript/external-apis/typescript-with-node.js.html"},{"path":"/id/play/javascript/external-apis/typescript-with-web.js.html"},{"path":"/id/play/javascript/external-apis/typescript-with-webgl.js.html"},{"path":"/id/play/javascript/helping-with-javascript/errors.ts.html"},{"path":"/id/play/javascript/helping-with-javascript/quick-fixes.ts.html"},{"path":"/id/play/javascript/javascript-essentials/code-flow.ts.html"},{"path":"/id/play/javascript/javascript-essentials/functions.ts.html"},{"path":"/id/play/javascript/javascript-essentials/hello-world.ts.html"},{"path":"/id/play/javascript/javascript-essentials/objects-and-arrays.ts.html"},{"path":"/ja/play/3-7/fixits/big-number-literals.ts.html"},{"path":"/ja/play/3-7/fixits/const-to-let.ts.html"},{"path":"/ja/play/3-7/fixits/infer-from-usage-changes.ts.html"},{"path":"/ja/play/3-7/syntax-and-messaging/flattened-error-reporting.ts.html"},{"path":"/ja/play/3-7/syntax-and-messaging/nullish-coalescing.ts.html"},{"path":"/ja/play/3-7/syntax-and-messaging/optional-chaining.ts.html"},{"path":"/ja/play/3-8/breaking-changes/checking-unions-with-index-signatures.ts.html"},{"path":"/ja/play/javascript/external-apis/typescript-with-deno.ts.html"},{"path":"/ja/play/typescript/language-extensions/enums.ts.html"},{"path":"/ja/play/typescript/language-extensions/nominal-typing.ts.html"},{"path":"/ja/play/typescript/language-extensions/types-vs-interfaces.ts.html"},{"path":"/ja/play/typescript/meta-types/conditional-types.ts.html"},{"path":"/ja/play/typescript/meta-types/discriminate-types.ts.html"},{"path":"/ja/play/typescript/meta-types/indexed-types.ts.html"},{"path":"/ja/play/typescript/meta-types/mapped-types.ts.html"},{"path":"/ja/play/typescript/primitives/any.ts.html"},{"path":"/ja/play/typescript/primitives/literals.ts.html"},{"path":"/ja/play/typescript/primitives/union-and-intersection-types.ts.html"},{"path":"/ja/play/typescript/primitives/unknown-and-never.ts.html"},{"path":"/ja/play/typescript/type-primitives/built-in-utility-types.ts.html"},{"path":"/ja/play/typescript/type-primitives/nullable-types.ts.html"},{"path":"/ja/play/typescript/type-primitives/tuples.ts.html"},{"path":"/ko/play/3-7/fixits/big-number-literals.ts.html"},{"path":"/ko/play/3-7/fixits/const-to-let.ts.html"},{"path":"/ko/play/3-7/syntax-and-messaging/optional-chaining.ts.html"},{"path":"/ko/play/3-8/syntax-and-messaging/export-modules-from.ts.html"},{"path":"/ko/play/javascript/external-apis/typescript-with-node.js.html"},{"path":"/ko/play/javascript/javascript-essentials/functions.ts.html"},{"path":"/ko/play/javascript/javascript-essentials/hello-world.ts.html"},{"path":"/ko/play/javascript/modern-javascript/async-await.ts.html"},{"path":"/ko/play/javascript/modern-javascript/immutability.ts.html"},{"path":"/ko/play/javascript/modern-javascript/import-export.ts.html"},{"path":"/ko/play/typescript/language-extensions/enums.ts.html"},{"path":"/ko/play/typescript/language-extensions/types-vs-interfaces.ts.html"},{"path":"/ko/play/typescript/primitives/any.ts.html"},{"path":"/ko/play/typescript/primitives/literals.ts.html"},{"path":"/pt/play/3-7/fixits/big-number-literals.ts.html"},{"path":"/pt/play/3-7/fixits/const-to-let.ts.html"},{"path":"/pt/play/3-7/fixits/infer-from-usage-changes.ts.html"},{"path":"/pt/play/3-7/syntax-and-messaging/nullish-coalescing.ts.html"},{"path":"/pt/play/3-7/syntax-and-messaging/flattened-error-reporting.ts.html"},{"path":"/pt/play/3-7/syntax-and-messaging/optional-chaining.ts.html"},{"path":"/pt/play/3-7/types-and-code-flow/assertion-functions.ts.html"},{"path":"/pt/play/3-7/types-and-code-flow/recursive-type-references.ts.html"},{"path":"/pt/play/3-7/types-and-code-flow/uncalled-function-checks.ts.html"},{"path":"/pt/play/3-8/breaking-changes/checking-unions-with-index-signatures.ts.html"},{"path":"/pt/play/3-8/jsdoc-improvements/accessibility-modifiers.js.html"},{"path":"/pt/play/3-8/syntax-and-messaging/export-modules-from.ts.html"},{"path":"/pt/play/3-8/syntax-and-messaging/private-class-fields.ts.html"},{"path":"/pt/play/4-0/new-checks/class-constructor-code-flow.ts.html"},{"path":"/pt/play/4-0/new-js-features/jsdoc-deprecated.ts.html"},{"path":"/pt/play/4-0/new-js-features/logical-operators-and-assignment.ts.html"},{"path":"/pt/play/4-0/new-js-features/nullish-coalescing.ts.html"},{"path":"/pt/play/4-0/new-ts-features/named-tuples.ts.html"},{"path":"/pt/play/4-0/new-ts-features/unknown-in-catch.ts.html"},{"path":"/pt/play/javascript/external-apis/typescript-with-deno.ts.html"},{"path":"/pt/play/javascript/external-apis/typescript-with-node.js.html"},{"path":"/pt/play/javascript/external-apis/typescript-with-web.js.html"},{"path":"/pt/play/javascript/external-apis/typescript-with-webgl.js.html"},{"path":"/pt/play/javascript/functions-with-javascript/function-chaining.ts.html"},{"path":"/pt/play/javascript/functions-with-javascript/generic-functions.ts.html"},{"path":"/pt/play/javascript/functions-with-javascript/typing-functions.ts.html"},{"path":"/pt/play/javascript/helping-with-javascript/quick-fixes.ts.html"},{"path":"/pt/play/javascript/javascript-essentials/code-flow.ts.html"},{"path":"/pt/play/javascript/javascript-essentials/functions.ts.html"},{"path":"/pt/play/javascript/javascript-essentials/hello-world.ts.html"},{"path":"/pt/play/javascript/javascript-essentials/objects-and-arrays.ts.html"},{"path":"/pt/play/javascript/modern-javascript/async-await.ts.html"},{"path":"/pt/play/javascript/modern-javascript/immutability.ts.html"},{"path":"/pt/play/javascript/modern-javascript/import-export.ts.html"},{"path":"/pt/play/javascript/modern-javascript/jsdoc-support.js.html"},{"path":"/pt/play/javascript/working-with-classes/classes-101.ts.html"},{"path":"/pt/play/javascript/working-with-classes/generic-classes.ts.html"},{"path":"/pt/play/javascript/working-with-classes/mixins.ts.html"},{"path":"/pt/play/javascript/working-with-classes/this.ts.html"},{"path":"/pt/play/playground/config/javascript-playgrounds.js.html"},{"path":"/pt/play/playground/config/new-compiler-defaults.ts.html"},{"path":"/pt/play/playground/language/automatic-type-acquisition.ts.html"},{"path":"/pt/play/playground/language/fixits.ts.html"},{"path":"/pt/play/playground/tooling/mobile-support.ts.html"},{"path":"/pt/play/playground/tooling/sharable-urls.ts.html"},{"path":"/pt/play/playground/tooling/typescript-versions.ts.html"},{"path":"/pt/play/typescript/language-extensions/enums.ts.html"},{"path":"/pt/play/typescript/meta-types/conditional-types.ts.html"},{"path":"/pt/play/typescript/meta-types/discriminate-types.ts.html"},{"path":"/pt/play/typescript/language-extensions/nominal-typing.ts.html"},{"path":"/pt/play/typescript/meta-types/indexed-types.ts.html"},{"path":"/pt/play/typescript/meta-types/mapped-types.ts.html"},{"path":"/pt/play/typescript/primitives/any.ts.html"},{"path":"/pt/play/typescript/type-primitives/nullable-types.ts.html"},{"path":"/pt/play/typescript/type-primitives/tuples.ts.html"},{"path":"/pt/play/typescript/language/structural-typing.ts.html"},{"path":"/pt/play/typescript/language/type-guards.ts.html"},{"path":"/pt/play/typescript/language/type-widening-and-narrowing.ts.html"},{"path":"/pt/play/typescript/language-extensions/types-vs-interfaces.ts.html"},{"path":"/pt/play/typescript/primitives/literals.ts.html"},{"path":"/vo/play/javascript/javascript-essentials/code-flow.ts.html"},{"path":"/vo/play/javascript/javascript-essentials/functions.ts.html"},{"path":"/vo/play/javascript/javascript-essentials/hello-world.ts.html"},{"path":"/vo/play/javascript/javascript-essentials/objects-and-arrays.ts.html"},{"path":"/zh/play/javascript/external-apis/typescript-with-deno.ts.html"},{"path":"/zh/play/javascript/external-apis/typescript-with-node.js.html"},{"path":"/zh/play/javascript/external-apis/typescript-with-web.js.html"},{"path":"/zh/play/javascript/external-apis/typescript-with-webgl.js.html"},{"path":"/zh/play/javascript/functions-with-javascript/function-chaining.ts.html"},{"path":"/zh/play/javascript/functions-with-javascript/generic-functions.ts.html"},{"path":"/zh/play/javascript/functions-with-javascript/typing-functions.ts.html"},{"path":"/zh/play/javascript/helping-with-javascript/errors.ts.html"},{"path":"/zh/play/javascript/helping-with-javascript/quick-fixes.ts.html"},{"path":"/zh/play/javascript/javascript-essentials/code-flow.ts.html"},{"path":"/zh/play/javascript/javascript-essentials/functions.ts.html"},{"path":"/zh/play/javascript/javascript-essentials/hello-world.ts.html"},{"path":"/zh/play/javascript/javascript-essentials/objects-and-arrays.ts.html"},{"path":"/zh/play/javascript/modern-javascript/async-await.ts.html"},{"path":"/zh/play/javascript/modern-javascript/immutability.ts.html"},{"path":"/zh/play/javascript/modern-javascript/import-export.ts.html"},{"path":"/zh/play/javascript/modern-javascript/jsdoc-support.js.html"},{"path":"/zh/play/javascript/working-with-classes/classes-101.ts.html"},{"path":"/zh/play/javascript/working-with-classes/generic-classes.ts.html"},{"path":"/zh/play/javascript/working-with-classes/mixins.ts.html"},{"path":"/zh/play/javascript/working-with-classes/this.ts.html"},{"path":"/zh/play/playground/config/javascript-playgrounds.js.html"},{"path":"/zh/play/playground/config/new-compiler-defaults.ts.html"},{"path":"/zh/play/playground/language/automatic-type-acquisition.ts.html"},{"path":"/zh/play/playground/language/fixits.ts.html"},{"path":"/zh/play/playground/tooling/mobile-support.ts.html"},{"path":"/zh/play/playground/tooling/sharable-urls.ts.html"},{"path":"/zh/play/playground/tooling/typescript-versions.ts.html"},{"path":"/zh/play/typescript/language/soundness.ts.html"},{"path":"/zh/play/typescript/language/structural-typing.ts.html"},{"path":"/zh/play/typescript/language/type-guards.ts.html"},{"path":"/zh/play/typescript/language/type-widening-and-narrowing.ts.html"},{"path":"/zh/play/typescript/language-extensions/enums.ts.html"},{"path":"/zh/play/typescript/language-extensions/nominal-typing.ts.html"},{"path":"/zh/play/typescript/language-extensions/types-vs-interfaces.ts.html"},{"path":"/zh/play/typescript/meta-types/conditional-types.ts.html"},{"path":"/zh/play/typescript/meta-types/discriminate-types.ts.html"},{"path":"/zh/play/typescript/meta-types/indexed-types.ts.html"},{"path":"/zh/play/typescript/meta-types/mapped-types.ts.html"},{"path":"/zh/play/typescript/primitives/any.ts.html"},{"path":"/zh/play/typescript/primitives/literals.ts.html"},{"path":"/zh/play/typescript/primitives/union-and-intersection-types.ts.html"},{"path":"/zh/play/typescript/primitives/unknown-and-never.ts.html"},{"path":"/zh/play/typescript/type-primitives/built-in-utility-types.ts.html"},{"path":"/zh/play/typescript/type-primitives/nullable-types.ts.html"},{"path":"/zh/play/typescript/type-primitives/tuples.ts.html"},{"path":"/pt/play/typescript/type-primitives/built-in-utility-types.ts.html"},{"path":"/pt/play/typescript/primitives/unknown-and-never.ts.html"},{"path":"/pt/play/typescript/primitives/union-and-intersection-types.ts.html"},{"path":"/community"},{"path":"/es/community"},{"path":"/id/community"},{"path":"/ja/community"},{"path":"/pl/community"},{"path":"/pt/community"},{"path":"/vo/community"},{"path":"/zh/community"},{"path":"/download"},{"path":"/es/download"},{"path":"/id/download"},{"path":"/ja/download"},{"path":"/pl/download"},{"path":"/pt/download"},{"path":"/vo/download"},{"path":"/zh/download"},{"path":"/empty"},{"path":"/es/empty"},{"path":"/id/empty"},{"path":"/ja/empty"},{"path":"/pl/empty"},{"path":"/pt/empty"},{"path":"/vo/empty"},{"path":"/zh/empty"},{"path":"/"},{"path":"/es/"},{"path":"/id/"},{"path":"/ja/"},{"path":"/pl/"},{"path":"/pt/"},{"path":"/vo/"},{"path":"/zh/"},{"path":"/tools"},{"path":"/es/tools"},{"path":"/id/tools"},{"path":"/ja/tools"},{"path":"/pl/tools"},{"path":"/pt/tools"},{"path":"/vo/tools"},{"path":"/zh/tools"},{"path":"/why-create-typescript"},{"path":"/es/why-create-typescript"},{"path":"/id/why-create-typescript"},{"path":"/ja/why-create-typescript"},{"path":"/pl/why-create-typescript"},{"path":"/pt/why-create-typescript"},{"path":"/vo/why-create-typescript"},{"path":"/zh/why-create-typescript"},{"path":"/docs/bootstrap"},{"path":"/es/docs/bootstrap"},{"path":"/id/docs/bootstrap"},{"path":"/ja/docs/bootstrap"},{"path":"/pl/docs/bootstrap"},{"path":"/pt/docs/bootstrap"},{"path":"/vo/docs/bootstrap"},{"path":"/zh/docs/bootstrap"},{"path":"/docs/"},{"path":"/es/docs/"},{"path":"/id/docs/"},{"path":"/ja/docs/"},{"path":"/pl/docs/"},{"path":"/pt/docs/"},{"path":"/vo/docs/"},{"path":"/zh/docs/"},{"path":"/docs/handbook/"},{"path":"/es/docs/handbook/"},{"path":"/id/docs/handbook/"},{"path":"/ja/docs/handbook/"},{"path":"/pl/docs/handbook/"},{"path":"/pt/docs/handbook/"},{"path":"/vo/docs/handbook/"},{"path":"/zh/docs/handbook/"},{"path":"/dt/search"},{"path":"/es/dt/search"},{"path":"/id/dt/search"},{"path":"/ja/dt/search"},{"path":"/pl/dt/search"},{"path":"/pt/dt/search"},{"path":"/vo/dt/search"},{"path":"/zh/dt/search"},{"path":"/branding/"},{"path":"/upcoming/"},{"path":"/dev/bug-workbench/"},{"path":"/dev/playground-plugins/"},{"path":"/dev/sandbox/"},{"path":"/dev/twoslash/"},{"path":"/dev/typescript-vfs/"}]},"markdownRemark":{"id":"ef3669d7-6d11-5a20-b77c-4eca7b9f1cad","excerpt":"Vamos começar criando um aplicativo da web simples com TypeScript. Instalando TypeScript Existem duas maneiras principais de obter o TypeScript disponível para…","html":"<p>Vamos começar criando um aplicativo da web simples com TypeScript.</p>\n<h2 id=\"instalando-typescript\" style=\"position:relative;\"><a href=\"#instalando-typescript\" aria-label=\"instalando typescript permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Instalando TypeScript</h2>\n<p>Existem duas maneiras principais de obter o TypeScript disponível para o seu projeto:</p>\n<ul>\n<li>Via npm (o gerenciador de pacotes Node.js)</li>\n<li>Instalando os plugins do Visual Studio do TypeScript</li>\n</ul>\n<p>O Visual Studio 2017 e o Visual Studio 2015 Update 3 incluem TypeScript por padrão.\nSe você não instalou o TypeScript com o Visual Studio, ainda pode <a href=\"/download\">baixá-lo</a>.</p>\n<p>Para usuários npm:</p>\n<pre class=\"shiki\"><div class=\"language-id\">shell</div><div class='code-container'><code><span style=\"color: #000000\">&gt; npm install -g typescript</span></code></div></pre>\n<h2 id=\"construindo-seu-primeiro-arquivo-typescript\" style=\"position:relative;\"><a href=\"#construindo-seu-primeiro-arquivo-typescript\" aria-label=\"construindo seu primeiro arquivo typescript permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Construindo seu primeiro arquivo TypeScript</h2>\n<p>Em seu editor, digite o seguinte código JavaScript em <code>greeter.ts</code>:</p>\n<pre class=\"shiki twoslash lsp\"><div class='code-container'><code><span style=\"color: #0000FF\">function</span><span style=\"color: #000000\"> <data-lsp lsp='function greeter(person: any): string'>greeter</data-lsp>(</span><span style=\"color: #1A1A1A\"><data-lsp lsp='(parameter) person: any'>person</data-lsp></span><span style=\"color: #000000\">) {</span>\n<span style=\"color: #000000\">  </span><span style=\"color: #0000FF\">return</span><span style=\"color: #000000\"> </span><span style=\"color: #A31515\">\"Hello, \"</span><span style=\"color: #000000\"> + </span><span style=\"color: #1A1A1A\"><data-lsp lsp='(parameter) person: any'>person</data-lsp></span><span style=\"color: #000000\">;</span>\n<span style=\"color: #000000\">}</span>\n\n<span style=\"color: #0000FF\">let</span><span style=\"color: #000000\"> </span><span style=\"color: #1A1A1A\"><data-lsp lsp='let user: string'>user</data-lsp> </span><span style=\"color: #000000\">= </span><span style=\"color: #A31515\">\"Jane User\"</span><span style=\"color: #000000\">;</span>\n\n<span style=\"color: #000000\"><data-lsp lsp='var document: Document'>document</data-lsp>.<data-lsp lsp='(property) Document.body: HTMLElement'>body</data-lsp>.</span><span style=\"color: #1A1A1A\"><data-lsp lsp='(property) Node.textContent: string | null'>textContent</data-lsp></span><span style=\"color: #000000\"> = <data-lsp lsp='function greeter(person: any): string'>greeter</data-lsp>(</span><span style=\"color: #1A1A1A\"><data-lsp lsp='let user: string'>user</data-lsp></span><span style=\"color: #000000\">);</span></code><a href='https://www.typescriptlang.org/play/#code/PTAEAEDsHsEkFsAOAbAlgY1QFwIKQJ4BcoAZgIbIDOApgFAkCuk6Wq0koA5gE7XVbVuACkSDK7AJSgA3rVCheWBtw4AiABLVkyaABpQq0AGpQo7uMgBuWgF9atZP1AMa3UAF4DAKTKRqoAFVXVWtaABNodAZ4akgsADoAI2gw-HiBAA8sAGF2ATiPLl5+QSEXQQlLIA'>Try</a></div></pre>\n<h2 id=\"compilando-seu-código\" style=\"position:relative;\"><a href=\"#compilando-seu-c%C3%B3digo\" aria-label=\"compilando seu código permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Compilando seu código</h2>\n<p>Usamos uma extensão <code>.ts</code>, mas este código é apenas JavaScript.\nVocê poderia ter copiado / colado diretamente de um aplicativo JavaScript existente.</p>\n<p>Na linha de comando, execute o compilador TypeScript:</p>\n<pre class=\"shiki\"><div class=\"language-id\">shell</div><div class='code-container'><code><span style=\"color: #000000\">tsc greeter.ts</span></code></div></pre>\n<p>O resultado será um arquivo <code>greeter.js</code> que contém o mesmo JavaScript que você alimentou.\nEstamos funcionando usando o TypeScript em nosso aplicativo JavaScript!</p>\n<p>Agora podemos começar a tirar proveito de algumas das novas ferramentas que o TypeScript oferece.\nAdicione uma anotação do tipo <code>: string</code> ao argumento da função ‘pessoa’ conforme mostrado aqui:</p>\n<pre class=\"shiki twoslash lsp\"><div class='code-container'><code><span style=\"color: #0000FF\">function</span><span style=\"color: #000000\"> <data-lsp lsp='function greeter(person: string): string'>greeter</data-lsp>(</span><span style=\"color: #1A1A1A\"><data-lsp lsp='(parameter) person: string'>person</data-lsp></span><span style=\"color: #000000\">: string) {</span>\n<span style=\"color: #000000\">  </span><span style=\"color: #0000FF\">return</span><span style=\"color: #000000\"> </span><span style=\"color: #A31515\">\"Hello, \"</span><span style=\"color: #000000\"> + </span><span style=\"color: #1A1A1A\"><data-lsp lsp='(parameter) person: string'>person</data-lsp></span><span style=\"color: #000000\">;</span>\n<span style=\"color: #000000\">}</span>\n\n<span style=\"color: #0000FF\">let</span><span style=\"color: #000000\"> </span><span style=\"color: #1A1A1A\"><data-lsp lsp='let user: string'>user</data-lsp> </span><span style=\"color: #000000\">= </span><span style=\"color: #A31515\">\"Jane User\"</span><span style=\"color: #000000\">;</span>\n\n<span style=\"color: #000000\"><data-lsp lsp='var document: Document'>document</data-lsp>.<data-lsp lsp='(property) Document.body: HTMLElement'>body</data-lsp>.</span><span style=\"color: #1A1A1A\"><data-lsp lsp='(property) Node.textContent: string | null'>textContent</data-lsp></span><span style=\"color: #000000\"> = <data-lsp lsp='function greeter(person: string): string'>greeter</data-lsp>(</span><span style=\"color: #1A1A1A\"><data-lsp lsp='let user: string'>user</data-lsp></span><span style=\"color: #000000\">);</span></code><a href='https://www.typescriptlang.org/play/#code/GYVwdgxgLglg9mABAcwE4FN1XagFABxwGcEAuRIqVGMZASkQG8AoRRDKEVJAIgAl0AG0FwANIh6IA1IkKoSYANzMAvs2aCsiEERyIAvBIBSAQzDpEAVV2oey5gBM4EEAFt0YKADoARnAcAnl7YAB5QAMII2J4GKBhYOLg6OHSKQA'>Try</a></div></pre>\n<h2 id=\"digite-anotações\" style=\"position:relative;\"><a href=\"#digite-anota%C3%A7%C3%B5es\" aria-label=\"digite anotações permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Digite anotações</h2>\n<p>As anotações de tipo no TypeScript são maneiras leves de registrar o contrato pretendido da função ou variável.\nNeste caso, pretendemos que a função greeter seja chamada com um único parâmetro de string.\nPodemos tentar alterar a chamada de greeter para passar uma matriz em vez disso:</p>\n<pre class=\"shiki twoslash lsp\"><div class='code-container'><code><span style=\"color: #0000FF\">function</span><span style=\"color: #000000\"> <data-lsp lsp='function greeter(person: string): string'>greeter</data-lsp>(</span><span style=\"color: #1A1A1A\"><data-lsp lsp='(parameter) person: string'>person</data-lsp></span><span style=\"color: #000000\">: string) {</span>\n<span style=\"color: #000000\">  </span><span style=\"color: #0000FF\">return</span><span style=\"color: #000000\"> </span><span style=\"color: #A31515\">\"Hello, \"</span><span style=\"color: #000000\"> + </span><span style=\"color: #1A1A1A\"><data-lsp lsp='(parameter) person: string'>person</data-lsp></span><span style=\"color: #000000\">;</span>\n<span style=\"color: #000000\">}</span>\n\n<span style=\"color: #0000FF\">let</span><span style=\"color: #000000\"> </span><span style=\"color: #1A1A1A\"><data-lsp lsp='let user: number[]'>user</data-lsp> </span><span style=\"color: #000000\">= [</span><span style=\"color: #09835A\">0</span><span style=\"color: #000000\">, </span><span style=\"color: #09835A\">1</span><span style=\"color: #000000\">, </span><span style=\"color: #09835A\">2</span><span style=\"color: #000000\">];</span>\n\n<span style=\"color: #000000\"><data-lsp lsp='var document: Document'>document</data-lsp>.<data-lsp lsp='(property) Document.body: HTMLElement'>body</data-lsp>.</span><span style=\"color: #1A1A1A\"><data-lsp lsp='(property) Node.textContent: string | null'>textContent</data-lsp></span><span style=\"color: #000000\"> = <data-lsp lsp='function greeter(person: string): string'>greeter</data-lsp>(</span><span style=\"color: #1A1A1A\"><data-err><data-lsp lsp='let user: number[]'>user</data-lsp></data-err></span><span style=\"color: #000000\">);</span>\n<span class=\"error\"><span>Argument of type 'number[]' is not assignable to parameter of type 'string'.</span><span class=\"code\">2345</span></span><span class=\"error-behind\">Argument of type 'number[]' is not assignable to parameter of type 'string'.</span></code><a href='https://www.typescriptlang.org/play/#code/PTAEAEFMCdoe2gZwFygEwGYAsBWAUAGYCuAdgMYAuAlnCaAObSSQUwAUADjIraohdCol6ASlABvPKFBMKRaHQBEACUgAbNXAA0oRaADUoLkloBuPAF88eNS1BFEMUAF5QAbQAMOgIw60AXXM8ABM4MiIAW0gSCgA6ACM4YIBPWNYADwoAYVpWGJcGJhZ2BxgRUyA'>Try</a></div></pre>\n<p>Recompilando, você verá um erro:</p>\n<pre class=\"shiki\"><div class=\"language-id\">shell</div><div class='code-container'><code><span style=\"color: #000000\">error TS2345: Argument of type </span><span style=\"color: #A31515\">'number[]'</span><span style=\"color: #000000\"> is not assignable to parameter of type </span><span style=\"color: #A31515\">'string'</span><span style=\"color: #000000\">.</span></code></div></pre>\n<p>Da mesma forma, tente remover todos os argumentos para a chamada de greeter.\nO TypeScript permitirá que você saiba que você chamou esta função com um número inesperado de parâmetros.\nEm ambos os casos, o TypeScript pode oferecer análise estática com base na estrutura do seu código e nas anotações de tipo fornecidas.</p>\n<p>Observe que embora tenha havido erros, o arquivo <code>greeter.js</code> ainda é criado.\nVocê pode usar o TypeScript mesmo se houver erros no seu código. Mas, neste caso, o TypeScript está avisando que seu código provavelmente não será executado conforme o esperado.</p>\n<h2 id=\"interfaces\" style=\"position:relative;\"><a href=\"#interfaces\" aria-label=\"interfaces permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Interfaces</h2>\n<p>Vamos desenvolver ainda mais nosso exemplo. Aqui, usamos uma interface que descreve objetos que possuem um campo firstName e lastName.\nNo TypeScript, dois tipos são compatíveis se sua estrutura interna for compatível.\nIsso nos permite implementar uma interface apenas tendo a forma que a interface requer, sem uma cláusula <code>implements</code> explícita.</p>\n<pre class=\"shiki twoslash lsp\"><div class='code-container'><code><span style=\"color: #0000FF\">interface</span><span style=\"color: #000000\"> <data-lsp lsp='interface Person'>Person</data-lsp> {</span>\n<span style=\"color: #000000\">  </span><span style=\"color: #1A1A1A\"><data-lsp lsp='(property) Person.firstName: string'>firstName</data-lsp></span><span style=\"color: #000000\">: string;</span>\n<span style=\"color: #000000\">  </span><span style=\"color: #1A1A1A\"><data-lsp lsp='(property) Person.lastName: string'>lastName</data-lsp></span><span style=\"color: #000000\">: string;</span>\n<span style=\"color: #000000\">}</span>\n\n<span style=\"color: #0000FF\">function</span><span style=\"color: #000000\"> <data-lsp lsp='function greeter(person: Person): string'>greeter</data-lsp>(</span><span style=\"color: #1A1A1A\"><data-lsp lsp='(parameter) person: Person'>person</data-lsp></span><span style=\"color: #000000\">: <data-lsp lsp='interface Person'>Person</data-lsp>) {</span>\n<span style=\"color: #000000\">  </span><span style=\"color: #0000FF\">return</span><span style=\"color: #000000\"> </span><span style=\"color: #A31515\">\"Hello, \"</span><span style=\"color: #000000\"> + </span><span style=\"color: #1A1A1A\"><data-lsp lsp='(parameter) person: Person'>person</data-lsp></span><span style=\"color: #000000\">.</span><span style=\"color: #1A1A1A\"><data-lsp lsp='(property) Person.firstName: string'>firstName</data-lsp></span><span style=\"color: #000000\"> + </span><span style=\"color: #A31515\">\" \"</span><span style=\"color: #000000\"> + </span><span style=\"color: #1A1A1A\"><data-lsp lsp='(parameter) person: Person'>person</data-lsp></span><span style=\"color: #000000\">.</span><span style=\"color: #1A1A1A\"><data-lsp lsp='(property) Person.lastName: string'>lastName</data-lsp></span><span style=\"color: #000000\">;</span>\n<span style=\"color: #000000\">}</span>\n\n<span style=\"color: #0000FF\">let</span><span style=\"color: #000000\"> </span><span style=\"color: #1A1A1A\"><data-lsp lsp='let user: {&amp;#13;    firstName: string;&amp;#13;    lastName: string;&amp;#13;}'>user</data-lsp> </span><span style=\"color: #000000\">= { <data-lsp lsp='(property) firstName: string'>firstName</data-lsp>: </span><span style=\"color: #A31515\">\"Jane\"</span><span style=\"color: #000000\">, <data-lsp lsp='(property) lastName: string'>lastName</data-lsp>: </span><span style=\"color: #A31515\">\"User\"</span><span style=\"color: #000000\"> };</span>\n\n<span style=\"color: #000000\"><data-lsp lsp='var document: Document'>document</data-lsp>.<data-lsp lsp='(property) Document.body: HTMLElement'>body</data-lsp>.</span><span style=\"color: #1A1A1A\"><data-lsp lsp='(property) Node.textContent: string | null'>textContent</data-lsp></span><span style=\"color: #000000\"> = <data-lsp lsp='function greeter(person: Person): string'>greeter</data-lsp>(</span><span style=\"color: #1A1A1A\"><data-lsp lsp='let user: {&amp;#13;    firstName: string;&amp;#13;    lastName: string;&amp;#13;}'>user</data-lsp></span><span style=\"color: #000000\">);</span></code><a href='https://www.typescriptlang.org/play/#code/JYOwLgpgTgZghgYwgAgArQM4HsTIN4BQyyMwUGYAcnALYQBcyFUoA5gNxHIA2cF1dRszacAvgQIwAriARhgOZKygQIkKAAoADphyN05HAEp8XFWClRcAIgASEbtywAaZNeQBqZDsMgAdKTkVLQoXu7uXj7Y-rz8IWIS3GrIUhjQyAC8+CRkcYJuAFJwIBDWrrHB+dYAqmlQ7qKcBAAmWAhSdOB+AEZYzQCefpAAHmAAwjiQ4JlKKmrQGqnQRuxAA'>Try</a></div></pre>\n<h2 id=\"classes\" style=\"position:relative;\"><a href=\"#classes\" aria-label=\"classes permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Classes</h2>\n<p>Finalmente, vamos estender o exemplo uma última vez com as aulas.\nTypeScript oferece suporte a novos recursos em JavaScript, como suporte para programação orientada a objetos baseada em classes.</p>\n<p>Aqui, criaremos uma classe <code>Student</code> com um construtor e alguns campos públicos.\nObserve que as classes e as interfaces funcionam bem juntas, permitindo que o programador decida sobre o nível certo de abstração.</p>\n<p>Também digno de nota, o uso de <code>public</code> em argumentos para o construtor é uma forma abreviada que nos permite criar propriedades automaticamente com aquele nome.</p>\n<pre class=\"shiki twoslash lsp\"><div class='code-container'><code><span style=\"color: #0000FF\">class</span><span style=\"color: #000000\"> <data-lsp lsp='class Student'>Student</data-lsp> {</span>\n<span style=\"color: #000000\">  </span><span style=\"color: #1A1A1A\"><data-lsp lsp='(property) Student.fullName: string'>fullName</data-lsp></span><span style=\"color: #000000\">: string;</span>\n<span style=\"color: #000000\">  </span><span style=\"color: #0000FF\">constructor</span><span style=\"color: #000000\">(</span>\n<span style=\"color: #000000\">    </span><span style=\"color: #0000FF\">public</span><span style=\"color: #000000\"> </span><span style=\"color: #1A1A1A\"><data-lsp lsp='(property) Student.firstName: string'>firstName</data-lsp></span><span style=\"color: #000000\">: string,</span>\n<span style=\"color: #000000\">    </span><span style=\"color: #0000FF\">public</span><span style=\"color: #000000\"> </span><span style=\"color: #1A1A1A\"><data-lsp lsp='(property) Student.middleInitial: string'>middleInitial</data-lsp></span><span style=\"color: #000000\">: string,</span>\n<span style=\"color: #000000\">    </span><span style=\"color: #0000FF\">public</span><span style=\"color: #000000\"> </span><span style=\"color: #1A1A1A\"><data-lsp lsp='(property) Student.lastName: string'>lastName</data-lsp></span><span style=\"color: #000000\">: string</span>\n<span style=\"color: #000000\">  ) {</span>\n<span style=\"color: #000000\">    </span><span style=\"color: #0000FF\">this</span><span style=\"color: #000000\">.</span><span style=\"color: #1A1A1A\"><data-lsp lsp='(property) Student.fullName: string'>fullName</data-lsp></span><span style=\"color: #000000\"> = </span><span style=\"color: #1A1A1A\"><data-lsp lsp='(parameter) firstName: string'>firstName</data-lsp></span><span style=\"color: #000000\"> + </span><span style=\"color: #A31515\">\" \"</span><span style=\"color: #000000\"> + </span><span style=\"color: #1A1A1A\"><data-lsp lsp='(parameter) middleInitial: string'>middleInitial</data-lsp></span><span style=\"color: #000000\"> + </span><span style=\"color: #A31515\">\" \"</span><span style=\"color: #000000\"> + </span><span style=\"color: #1A1A1A\"><data-lsp lsp='(parameter) lastName: string'>lastName</data-lsp></span><span style=\"color: #000000\">;</span>\n<span style=\"color: #000000\">  }</span>\n<span style=\"color: #000000\">}</span>\n\n<span style=\"color: #0000FF\">interface</span><span style=\"color: #000000\"> <data-lsp lsp='interface Person'>Person</data-lsp> {</span>\n<span style=\"color: #000000\">  </span><span style=\"color: #1A1A1A\"><data-lsp lsp='(property) Person.firstName: string'>firstName</data-lsp></span><span style=\"color: #000000\">: string;</span>\n<span style=\"color: #000000\">  </span><span style=\"color: #1A1A1A\"><data-lsp lsp='(property) Person.lastName: string'>lastName</data-lsp></span><span style=\"color: #000000\">: string;</span>\n<span style=\"color: #000000\">}</span>\n\n<span style=\"color: #0000FF\">function</span><span style=\"color: #000000\"> <data-lsp lsp='function greeter(person: Person): string'>greeter</data-lsp>(</span><span style=\"color: #1A1A1A\"><data-lsp lsp='(parameter) person: Person'>person</data-lsp></span><span style=\"color: #000000\">: <data-lsp lsp='interface Person'>Person</data-lsp>) {</span>\n<span style=\"color: #000000\">  </span><span style=\"color: #0000FF\">return</span><span style=\"color: #000000\"> </span><span style=\"color: #A31515\">\"Hello, \"</span><span style=\"color: #000000\"> + </span><span style=\"color: #1A1A1A\"><data-lsp lsp='(parameter) person: Person'>person</data-lsp></span><span style=\"color: #000000\">.</span><span style=\"color: #1A1A1A\"><data-lsp lsp='(property) Person.firstName: string'>firstName</data-lsp></span><span style=\"color: #000000\"> + </span><span style=\"color: #A31515\">\" \"</span><span style=\"color: #000000\"> + </span><span style=\"color: #1A1A1A\"><data-lsp lsp='(parameter) person: Person'>person</data-lsp></span><span style=\"color: #000000\">.</span><span style=\"color: #1A1A1A\"><data-lsp lsp='(property) Person.lastName: string'>lastName</data-lsp></span><span style=\"color: #000000\">;</span>\n<span style=\"color: #000000\">}</span>\n\n<span style=\"color: #0000FF\">let</span><span style=\"color: #000000\"> </span><span style=\"color: #1A1A1A\"><data-lsp lsp='let user: Student'>user</data-lsp> </span><span style=\"color: #000000\">= </span><span style=\"color: #0000FF\">new</span><span style=\"color: #000000\"> <data-lsp lsp='constructor Student(firstName: string, middleInitial: string, lastName: string): Student'>Student</data-lsp>(</span><span style=\"color: #A31515\">\"Jane\"</span><span style=\"color: #000000\">, </span><span style=\"color: #A31515\">\"M.\"</span><span style=\"color: #000000\">, </span><span style=\"color: #A31515\">\"User\"</span><span style=\"color: #000000\">);</span>\n\n<span style=\"color: #000000\"><data-lsp lsp='var document: Document'>document</data-lsp>.<data-lsp lsp='(property) Document.body: HTMLElement'>body</data-lsp>.</span><span style=\"color: #1A1A1A\"><data-lsp lsp='(property) Node.textContent: string | null'>textContent</data-lsp></span><span style=\"color: #000000\"> = <data-lsp lsp='function greeter(person: Person): string'>greeter</data-lsp>(</span><span style=\"color: #1A1A1A\"><data-lsp lsp='let user: Student'>user</data-lsp></span><span style=\"color: #000000\">);</span></code><a href='https://www.typescriptlang.org/play/#code/MYGwhgzhAEDKAuBXAJgUwHb2gbwFDWgDNEQQA5MAW1QC5oJ4AnAS3QHMBufaYAe3QaNEweL0YAKbgQAOiAEYhmwIs0YMK1OoNZsANFOiyFS6JWbJkIVAEl0zeMzAgtTHfoIz5i5eHVVa9K7s3ACUOAbwABbMEAB0xKQaqNAAvCpq8EnQANTQAET5OabmljZ2Dk5FBQW5vpn+XAQAvrgtuKzwqIyEYMDJAApdEPzhBISqfpqBLOyN0HVJLjOcrbi4xOgizCNsjKionRLSQ-x0g2r8YXgEe0iM6PkAEqikvLqFuccX6PET9dRVD6GE4-BYNVa4KxYRAQLqpaDoVAAdzgSDQmHEeQAUmBEXl3nkALKxfH5ACqsMYeRCXFwyF4wEQ1EwsTkvGQAE9Yp0AB7wADC-E6mHhu32h3EMK6NKAA'>Try</a></div></pre>\n<p>Execute novamente <code>tsc greeter.ts</code> e você verá que o JavaScript gerado é o mesmo do código anterior.\nAs classes em TypeScript são apenas uma abreviatura para o mesmo OO baseado em protótipo que é freqüentemente usado em JavaScript.</p>\n<h2 id=\"executando-seu-aplicativo-da-web-typescript\" style=\"position:relative;\"><a href=\"#executando-seu-aplicativo-da-web-typescript\" aria-label=\"executando seu aplicativo da web typescript permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Executando seu aplicativo da web TypeScript</h2>\n<p>Agora digite o seguinte em <code>greeter.html</code>:</p>\n<pre class=\"shiki\"><div class=\"language-id\">html</div><div class='code-container'><code><span style=\"color: #800000\">&lt;!</span><span style=\"color: #000000\">DOCTYPE html</span><span style=\"color: #800000\">&gt;</span>\n<span style=\"color: #800000\">&lt;html&gt;</span>\n<span style=\"color: #000000\">  </span><span style=\"color: #800000\">&lt;head&gt;</span>\n<span style=\"color: #000000\">    </span><span style=\"color: #800000\">&lt;title&gt;</span><span style=\"color: #000000\">TypeScript Greeter</span><span style=\"color: #800000\">&lt;/title&gt;</span>\n<span style=\"color: #000000\">  </span><span style=\"color: #800000\">&lt;/head&gt;</span>\n<span style=\"color: #000000\">  </span><span style=\"color: #800000\">&lt;body&gt;</span>\n<span style=\"color: #000000\">    </span><span style=\"color: #800000\">&lt;script</span><span style=\"color: #000000\"> </span><span style=\"color: #DC0000\">src</span><span style=\"color: #000000\">=</span><span style=\"color: #0000FF\">\"greeter.js\"</span><span style=\"color: #800000\">&gt;&lt;/script&gt;</span>\n<span style=\"color: #000000\">  </span><span style=\"color: #800000\">&lt;/body&gt;</span>\n<span style=\"color: #800000\">&lt;/html&gt;</span></code></div></pre>\n<p>Abra <code>greeter.html</code> no navegador para executar seu primeiro aplicativo da Web TypeScript simples!</p>\n<p>Opcional: Abra <code>greeter.ts</code> no Visual Studio ou copie o código para o playground do TypeScript.\nVocê pode passar o mouse sobre os identificadores para ver seus tipos.\nObserve que, em alguns casos, esses tipos são inferidos automaticamente para você.\nDigite novamente a última linha e veja as listas de completamento e a ajuda de parâmetros com base nos tipos de elementos DOM.\nColoque o cursor sobre a referência da função greeter e pressione F12 para ir para sua definição.\nObserve também que você pode clicar com o botão direito em um símbolo e usar a refatoração para renomeá-lo.</p>\n<p>As informações de tipo fornecidas funcionam em conjunto com as ferramentas para trabalhar com JavaScript na escala do aplicativo.\nPara obter mais exemplos do que é possível no TypeScript, consulte a seção Amostras do site.</p>\n<p><img src=\"/images/docs/greet_person.png\" alt=\"Visual Studio picture\"></p>","headings":[{"value":"Instalando TypeScript","depth":2},{"value":"Construindo seu primeiro arquivo TypeScript","depth":2},{"value":"Compilando seu código","depth":2},{"value":"Digite anotações","depth":2},{"value":"Interfaces","depth":2},{"value":"Classes","depth":2},{"value":"Executando seu aplicativo da web TypeScript","depth":2}],"frontmatter":{"permalink":"/pt/docs/handbook/typescript-tooling-in-5-minutes.html","title":"Ferramentas TypeScript em 5 minutos","disable_toc":null,"oneline":"Um tutorial para entender como criar um pequeno site com TypeScript","beta":null}},"prev":null,"next":null},"pageContext":{"id":"0ferramentas-typescript-em-5-minutos","slug":"/pt/docs/handbook/typescript-tooling-in-5-minutes.html","repoPath":"/packages/documentation/copy/pt/tutorials/TypeScript Tooling in 5 minutes.md","lang":"pt","modifiedTime":"2020-10-29T11:50:57.714Z"}},"staticQueryHashes":[]}