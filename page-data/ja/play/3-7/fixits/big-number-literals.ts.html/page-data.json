{"componentChunkName":"component---src-templates-play-example-tsx","path":"/ja/play/3-7/fixits/big-number-literals.ts.html","result":{"pageContext":{"name":"Big number literals","title":"Big number literals","lang":"ja","html":"\n JavaScript を書く際に、JavaScript で表現できる数字の大きさに\n 制限があることをあることをご存知でしたか？\n\n<code><pre>\nconst maxHighValue = 9007199254740991\nconst maxLowValue = -9007199254740991\n\n// これらの数字を上回る/下回ることは、大変危険です。\n\nconst oneOverMax = 9007199254740992\nconst oneBelowMin = -9007199254740992\n\n</pre></code>\n// このサイズの数値を扱うための解決策は、\n これらの数値を、number の代わりに BigInts に変換することです:\n\n https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/BigInt\n\n TypeScriptは、2の52乗以上の数値リテラル(正/負)の修正機能を提供するようになり、\n 接尾辞 \"n\"を追加してJavaScriptにBigInt型であることを知らせるようになりました。\n\n 数値リテラル\n<code><pre>\n9007199254740993;\n-9007199254740993\n9007199254740994;\n-9007199254740994\n\n// 六進数\n0x19999999999999;\n-0x19999999999999\n0x20000000000000;\n-0x20000000000000\n0x20000000000001;\n-0x20000000000001\n","redirectHref":"ja/play/?target=99#example/big-number-literals"}},"staticQueryHashes":[]}