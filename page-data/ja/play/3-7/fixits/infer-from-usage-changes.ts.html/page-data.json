{"componentChunkName":"component---src-templates-play-example-tsx","path":"/ja/play/3-7/fixits/infer-from-usage-changes.ts.html","result":{"pageContext":{"name":"Infer From Usage Changes","title":"Infer From Usage Changes","lang":"ja","html":"\n 3.7 で TypeScript 既存の「使用状況からの推論」によるコード修正はよりスマートになりました。\n 既知の重要な型 (string, number, array, Promise) のリストを用いて、\n 型の使用方法がこれらのオブジェクトのAPIと一致するかどうかを推論する様になりました。\n\n 次のいくつかの例では、関数のパラメータを選択し、電球をクリックして \"Infer Parameter types...\" を選択してください。\n\n 数値配列の推論:\n\n<code><pre>\nfunction pushNumber(arr) {\n  arr.push(12)\n}\n\n// promiseの推論:\n\nfunction awaitPromise(promise) {\n  promise.then(value => console.log(value))\n}\n\n// 関数とその戻り値の型の推論:\n\nfunction inferAny(app) {\n  const result = app.use('hi')\n  return result\n}\n\n// 文字列配列に文字列が追加された為、文字列配列を推論します:\n\nfunction insertString(names) {\n  names[1] = 'hello'\n}\n","redirectHref":"ja/play/?noImplicitAny=false#example/infer-from-usage-changes"}},"staticQueryHashes":[]}