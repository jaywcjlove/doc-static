{"componentChunkName":"component---src-templates-play-example-tsx","path":"/play/4-7/new-js-features/control-flow-improvements.ts.html","result":{"pageContext":{"name":"Control Flow Improvements","title":"Control Flow Improvements","lang":"en","html":" In almost every release there are control flow improvements,\n in 4.7 there are improvements in computed properties work when\n narrowing. To learn more about narrowing see: example:type-widening-and-narrowing\n\n<code><pre>\nconst dog = \"stringer\";\n\nconst dogsToOwnersOrID = {\n  hayes: \"The McShanes\",\n  poppy: \"Pat\",\n  stringer: \"Jane\",\n  otto: 1,\n} as Record<string, string | number>;\n\n</pre></code>\n// A computed property is a property access which is not hardcoded,\n for example:\n\n<code><pre>\nconst owner = dogsToOwnersOrID[dog];\n//    ^?\n\n</pre></code>\n// Prior to TypeScript 4.7, using a computed property would not\n reliably narrow the type of a value.\n\n<code><pre>\nif (typeof dogsToOwnersOrID[dog] === \"string\") {\n  const str = dogsToOwnersOrID[dog].toUpperCase();\n  //     ^?\n\n  // In 4.6, this would still be 'string | number'.\n}\n","redirectHref":"/play/?ts=4.7.3#example/control-flow-improvements"}},"staticQueryHashes":[]}