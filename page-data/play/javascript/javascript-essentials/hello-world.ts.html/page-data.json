{"componentChunkName":"component---src-templates-play-example-tsx","path":"/play/javascript/javascript-essentials/hello-world.ts.html","result":{"pageContext":{"name":"Hello World","title":"Hello World","lang":"en","html":"\n Welcome to the TypeScript playground. This site is a lot\n like running a TypeScript project inside a web browser.\n\n The playground makes it easy for you to safely experiment\n with ideas in TypeScript by making it trivial to share\n these projects. The URL for this page is everything\n required to load the project for someone else.\n\n<code><pre>\nconst hello = \"Hello\";\n\n</pre></code>\n// You can see on the right the result of the TypeScript\n compiler: this is vanilla JavaScript which can run on\n browsers, servers or anywhere really.\n\n<code><pre>\nconst world = \"World\";\n\n</pre></code>\n// You can see how it makes tiny changes to the code, by\n converting a \"const\" to a \"var\". This is one of the many\n things TypeScript does to make it possible to run\n anywhere JavaScript runs.\n\n<code><pre>\nconsole.log(hello + \" \" + world);\n\n</pre></code>\n// Now that you have an idea of how the playground works,\n let's look at how TypeScript makes working with\n JavaScript more fun. During this section we'll be trying\n to keep as close to vanilla JavaScript as possible to\n show how you can re-use existing knowledge.\n\n Click below to continue:\n\n example:objects-and-arrays\n","redirectHref":"/play/?target=1#example/hello-world"}},"staticQueryHashes":[]}