{"componentChunkName":"component---src-templates-play-example-tsx","path":"/play/javascript/modern-javascript/immutability.ts.html","result":{"pageContext":{"name":"Immutability","title":"Immutability","lang":"en","html":" JavaScript is a language with a few ways to declare that\n some of your objects don't change. The most prominent is\n const - which says that the value won't change.\n\n<code><pre>\nconst helloWorld = \"Hello World\";\n\n</pre></code>\n// You cannot change helloWorld now, TypeScript will give\n you an error about this, because you would get one at\n runtime instead.\n\n<code><pre>\nhelloWorld = \"Hi world\";\n\n</pre></code>\n// Why care about immutability? A lot of this is about\n reducing complexity in your code. If you can reduce the\n number of things which can change, then there are less\n things to keep track of.\n\n Using const is a great first step, however this fails\n down a bit when using objects.\n\n<code><pre>\nconst myConstantObject = {\n  msg: \"Hello World\",\n};\n\n</pre></code>\n// myConstantObject is not quite a constant though, because\n we can still make changes to parts of the object, for\n example we can change msg:\n\n<code><pre>\nmyConstantObject.msg = \"Hi World\";\n\n</pre></code>\n// const means the value at that point stays the same, but\n that the object itself may change internally. This can\n be changed using Object.freeze.\n\n<code><pre>\nconst myDefinitelyConstantObject = Object.freeze({\n  msg: \"Hello World\",\n});\n\n</pre></code>\n// When an object is frozen, then you cannot change the\n internals. TypeScript will offer errors in these cases:\n\n<code><pre>\nmyDefinitelyConstantObject.msg = \"Hi World\";\n\n// This works the same for arrays too:\n\nconst myFrozenArray = Object.freeze([\"Hi\"]);\nmyFrozenArray.push(\"World\");\n\n</pre></code>\n// Using freeze means you can trust that the object is\n staying the same under the hood.\n\n TypeScript has a few extra syntax hooks to improve working\n with immutable data which you can find in the TypeScript\n section of the examples:\n\n example:literals\n example:type-widening-and-narrowing\n","redirectHref":"/play/?#example/immutability"}},"staticQueryHashes":[]}