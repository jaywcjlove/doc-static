{"componentChunkName":"component---src-templates-play-example-tsx","path":"/play/4-2/fixits/create-function-from-call.ts.html","result":{"pageContext":{"name":"Create Function from Call","title":"Create Function from Call","lang":"en","html":" In 4.2 a community member (@a-tarasyuk) added the ability to generate functions\n from calls which aren't defined. For example if you select all the code on line 5,\n then click \"Quick Fix\", you will see the option to have the missing function generated.\n\n<code><pre>\nconst id = generateUUID();\n\n</pre></code>\n// The fixit will take into account contextual information like the potential\n return type for the function. For example, TypeScript knows the return type\n because it is annotated at the variable declaration.\n\n<code><pre>\nconst idStr: string = generateUUID1();\n\n// The fixit will keep the same number of generics arguments when they are used:\n\nconst idObj = generateUUID3<{ id: string }>();\n\n// Parameters also act as you would expect:\n\nconst complexUUID = generateUUID4(\"SHA32\", 5, { namespace: \"typescriptlang.org\" });\n\n</pre></code>\n// It's not possible to show in the playground, but the codefix can create stubbed\n functions across different modules too - lots to use.\n","redirectHref":"/play/?ts=4.2.0-beta#example/create-function-from-call"}},"staticQueryHashes":[]}