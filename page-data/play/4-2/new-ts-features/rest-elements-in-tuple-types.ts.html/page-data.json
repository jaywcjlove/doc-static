{"componentChunkName":"component---src-templates-play-example-tsx","path":"/play/4-2/new-ts-features/rest-elements-in-tuple-types.ts.html","result":{"pageContext":{"name":"Rest Elements in Tuple Types","title":"Rest Elements in Tuple Types","lang":"en","html":" Tuple types are a feature where the position of a type in an\n array is important. For example, in string[] (array) you know that all\n elements in the array are a string, in [string] (tuple) you know that\n only the first element is a string. According to the type system, a\n [string] is an array with only one element, of string.\n\n<code><pre>\nconst stringArray: string[] = [\"sugar\", \"tea\", \"rum\"];\nconst singleStringTuple: [string] = [\"sugar\", \"tea\", \"rum\"];\n\n</pre></code>\n// Tuples allow TypeScript to describe arrays like: [string, number] - which\n means that only a string and a number can be used in the first and second\n positions respectively.\n\n<code><pre>\nconst stringNumberTuple: [string, number] = [\"Weeks from shore\", 2];\n\n</pre></code>\n// Under the hood, TypeScript uses Tuples to describe parameters for functions\n which you can learn more from in:\n\n - example:tuples\n - example:named-tuples\n\n What was added in TypeScript 4.2 is the ability to describe functions which\n take an unknown number of parameters but that have a particular start,\n middle or end. This is done via the spread operator ... in a tuple to\n indicate that the number varies (aka: variadic)\n\n This type represents an unknown number of strings in the array but always\n finishes with an object.\n<code><pre>\ntype StringsThenConfig = [...string[], { huh: boolean }];\n\nconst firstChorus: StringsThenConfig = [\"Blow\", \"Me Bully boys\", \"blow\", { huh: true }];\nconst secondChorus: StringsThenConfig = [\"We'll take our leave and go\", { huh: false }];\nconst thirdChorus: StringsThenConfig = [\"When she dived down below\", { huh: true }];\n\n</pre></code>\n// You can learn more about how the feature has evolved in the beta blog post:\n https://devblogs.microsoft.com/typescript/announcing-typescript-4-2-beta/\n","redirectHref":"/play/?ts=4.2.0-beta#example/rest-elements-in-tuple-types"}},"staticQueryHashes":[]}