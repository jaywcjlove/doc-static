{"componentChunkName":"component---src-templates-play-example-tsx","path":"/play/typescript/meta-types/mapped-types.ts.html","result":{"pageContext":{"name":"Mapped Types","title":"Mapped Types","lang":"en","html":" Mapped types are a way to create new types based\n on another type. Effectively a transformational type.\n\n Common cases for using a mapped type is dealing with\n partial subsets of an existing type. For example\n an API may return an Artist:\n\n<code><pre>\ninterface Artist {\n  id: number;\n  name: string;\n  bio: string;\n}\n\n</pre></code>\n// However, if you were to send an update to the API which\n only changes a subset of the Artist then you would\n typically have to create an additional type:\n\n<code><pre>\ninterface ArtistForEdit {\n  id: number;\n  name?: string;\n  bio?: string;\n}\n\n</pre></code>\n// It's very likely that this would get out of sync with\n the Artist above. Mapped types let you create a change\n in an existing type.\n\n<code><pre>\ntype MyPartialType<Type> = {\n  // For every existing property inside the type of Type\n  // convert it to be a ?: version\n  [Property in keyof Type]?: Type[Property];\n};\n\n</pre></code>\n// Now we can use the mapped type instead to create\n our edit interface:\n<code><pre>\ntype MappedArtistForEdit = MyPartialType<Artist>;\n\n</pre></code>\n// This is close to perfect, but it does allow id to be null\n which should never happen. So, let's make one quick\n improvement by using an intersection type (see:\n example:union-and-intersection-types )\n\n<code><pre>\ntype MyPartialTypeForEdit<Type> = {\n  [Property in keyof Type]?: Type[Property];\n} & { id: number };\n\n</pre></code>\n// This takes the partial result of the mapped type, and\n merges it with an object which has id: number set.\n Effectively forcing id to be in the type.\n\n<code><pre>\ntype CorrectMappedArtistForEdit = MyPartialTypeForEdit<Artist>;\n\n</pre></code>\n// This is a pretty simple example of how mapped types\n work, but covers most of the basics. If you'd like to\n dive in with more depth, check out the handbook:\n\n https://www.typescriptlang.org/docs/handbook/advanced-types.html#mapped-types\n","redirectHref":"/play/?#example/mapped-types"}},"staticQueryHashes":[]}