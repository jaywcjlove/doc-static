{"componentChunkName":"component---src-templates-play-example-tsx","path":"/play/3-8/syntax-and-messaging/export-modules-from.ts.html","result":{"pageContext":{"name":"Export Modules From","title":"Export Modules From","lang":"en","html":" TypeScripts ability to re-export got closer to supporting\n the additional cases available in ES2018\n\n JavaScript exports have the ability to elegantly\n re-export a part of a dependency:\n\n<code><pre>\nexport { ScriptTransformer } from \"@jest/transform\";\n\n</pre></code>\n// When you wanted to export the full object, that\n becomes a little more verbose in previous versions\n of TypeScript:\n\n<code><pre>\nimport * as console from \"@jest/console\";\nimport * as reporters from \"@jest/reporters\";\n\nexport { console, reporters };\n\n</pre></code>\n// With 3.8, TypeScript supports more of the export\n statement forms in the JavaScript specs, letting\n you write a single line to re-export a module\n\n<code><pre>\nexport * as jestConsole from \"@jest/console\";\nexport * as jestReporters from \"@jest/reporters\";\n","redirectHref":"/play/?ts=3.8.3#example/export-modules-from"}},"staticQueryHashes":[]}