{"componentChunkName":"component---src-templates-play-example-tsx","path":"/play/playground/language/automatic-type-acquisition.ts.html","result":{"pageContext":{"name":"Automatic Type Acquisition","title":"Automatic Type Acquisition","lang":"en","html":" Automatic Type Acquisition is the term for how TypeScript\n grabs type definitions from @types on npm behind the scenes\n to provide a better user experience for JavaScript users.\n\n The playground now has a similar (but a bit more limited)\n version of the type acquisition process built into\n TypeScript.\n\n You can use it by creating imports in your code. It works\n either through @types from DefinitelyTyped or via d.ts\n files inside the dependency itself.\n\n<code><pre>\nimport { danger } from \"danger\";\n\n</pre></code>\n// Highlight these identifiers below to see the associated\n JSDocs from the built-in types:\n\n<code><pre>\ndanger.github;\n\n</pre></code>\n// This handles transitive dependencies also, so in this case,\n danger depends on @octokit/rest also.\n\n<code><pre>\ndanger.github.api.pulls.createComment();\n\n</pre></code>\n// Type acquisition will also take Node's built-in modules\n into account and pull in Node's type declarations\n when you use any of those dependencies. Note, these\n tend to take a bit longer than the others since there's\n quite a lot of types to download!\n\n<code><pre>\nimport { readFileSync } from \"fs\";\n\nconst inputPath = \"my/path/file.ts\";\nreadFileSync(inputPath, \"utf8\");\n","redirectHref":"/play/?#example/automatic-type-acquisition"}},"staticQueryHashes":[]}