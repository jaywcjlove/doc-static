{"version":3,"file":"src_app_custom-elements_contributor_contributor-list_module_ts.d806c22ac9711c56.js","mappings":"0QAWA,MAAMA,EAAmBC,KAAqB,oBACxCC,EAAc,CAAC,UAAW,gBAAiB,OAG1C,IAAMC,EAAb,MAAM,MAAOA,EAGXC,YAAoBC,eAClBC,KAAKC,aAAeD,KAAKE,kBAGnBA,kBACN,MAAMD,EAAeD,KAAKD,KAAKI,IAAkCT,GAAkBU,MAEjFC,OAAIC,IACF,MAAMC,EAA+C,GACrDC,cAAOC,KAAKH,GAAUI,QAAQC,IAC5B,MAAMC,EAAcN,EAASK,GAC7BC,EAAYC,OAAOH,QAAQI,KACJP,EAAWO,KAAWP,EAAWO,GAAS,KAClDC,KAAKH,OAIfL,KAITF,OAAIW,GAAQR,OAAOC,KAAKO,GAAMX,IAAIM,IAC9B,MAAMM,EAAQrB,EAAYsB,QAAQP,GAClC,MAAO,CACLQ,KAAMR,EACNM,OAAiB,IAAVA,EAAerB,EAAYwB,OAASH,EAC3ChB,aAAce,EAAKL,GAAKU,KAAKC,MAGhCD,KAAKE,KAGRC,UAGDvB,SAA2DwB,UACrDxB,gDAvCEJ,GAAkB6B,wCAAlB7B,EAAkB8B,QAAlB9B,EAAkB,YAAlBA,GAAb,GA2CA,WAA6B+B,EAAgBC,GAC5C,OAAOD,EAAET,KAAKW,cAAgBD,EAAEV,KAAKW,cAAgB,GAAI,EAG1D,WAAuBF,EAAqBC,GAC1C,OAAOD,EAAEX,QAAUY,EAAEZ,MAClBW,EAAET,KAAOU,EAAEV,KAAO,GAAI,EACtBS,EAAEX,MAAQY,EAAEZ,MAAQ,GAAI,sCChDRS,oBACIA,sBACJA,kCACAA,eAEoBA,iCAASK,sBACzBL,sBACJA,8BAHIA,yFAIJA,eAC8CA,iCAASK,sBACnDL,uBAA4BA,gBAAIA,gCADhCA,8EAOjBA,qBAAmDA,yDAASA,8BACxDA,cAAIA,SAAeA,QACnBA,gBAA2BA,SAAcA,kCADrCA,8BACuBA,qEAKhC,IAAMM,EAAb,MAAM,MAAOA,EAnCblC,cAqCEE,eAAY,cACZA,iBAAcL,KAAqB,eAEnCsC,SAASC,GACPA,EAAOC,WAAaD,EAAOC,wDANlBH,8BAAoBI,4lBAhC7BV,iBAA0E,WAG9CA,gCAASW,uBAC7BX,cAAIA,SAAeA,QAEnBA,iBACqF,WAE5EA,0BAGAA,qBAKAA,qBAIJA,YAITA,0BAIJA,eA7BKA,+CAIOA,8BAGCA,4FAEaA,oCAGLA,wCAKAA,wCAQUA,4FAOtBM,GAAb,2CC/BMN,oBAGIA,qEAASA,0BAAmBA,SAAQA,8CADpCA,2CAC4BA,wCAI9BA,kCACIA,qDAHRA,qBAAkD,WAE9CA,mCAEFA,gCAFsCA,wDAMrC,IAAMY,EAAb,MAAM,MAAOA,EAKXxC,YACUyC,EACAC,GADAxC,0BACAA,uBAEVyC,WACE,MAAMC,EAAa1C,KAAKwC,gBAAgBG,SAAS7B,OAAS,GAE1Dd,KAAKuC,mBAAmBtC,aACrB2C,UAAUC,IACT7C,KAAKa,OAASgC,EACd7C,KAAK8C,WAAaD,EAAKxC,IAAI0C,GAAKA,EAAE5B,MAClCnB,KAAKgD,YAAYN,KAIvBM,YAAY7B,GACVA,EAAOA,EAAK8B,cACZjD,KAAKkD,cAAgBlD,KAAKa,OAAOsC,KAAKJ,GAAKA,EAAE5B,KAAK8B,gBAAkB9B,IAASnB,KAAKa,OAAO,GACzFb,KAAKwC,gBAAgBY,UAAU,GAAI,CAACtC,MAAOd,KAAKkD,cAAc/B,qDAvBrDmB,GAAwBZ,8CAAxBY,EAAwBF,4XAdjCV,iBACEA,0BAIFA,QACAA,kCAL2BA,uCAKjBA,sFAQDY,GAAb,GCTae,EAAb,MAAM,MAAOA,EALbvD,cAMEE,4BAAoCsC,gDADzBe,6DAFA,CAAExD,GAAoByD,SAFtBC,KAAcC,QAIdH,GAAb","names":["contributorsPath","CONTENT_URL_PREFIX","knownGroups","ContributorService","constructor","http","this","contributors","getContributors","get","pipe","map","contribs","contribMap","Object","keys","forEach","key","contributor","groups","group","push","cmap","order","indexOf","name","length","sort","compareContributors","compareGroups","publishLast","connect","i0","factory","l","r","toUpperCase","$event","ContributorComponent","flipCard","person","isFlipped","selectors","ctx","ContributorListComponent","contributorService","locationService","ngOnInit","groupName","search","subscribe","grps","groupNames","g","selectGroup","toLowerCase","selectedGroup","find","setSearch","ContributorListModule","imports","CommonModule","MatIconModule"],"sourceRoot":"webpack:///","sources":["./src/app/custom-elements/contributor/contributor.service.ts","./src/app/custom-elements/contributor/contributor.component.ts","./src/app/custom-elements/contributor/contributor-list.component.ts","./src/app/custom-elements/contributor/contributor-list.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { ConnectableObservable, Observable } from 'rxjs';\nimport { map, publishLast } from 'rxjs/operators';\n\nimport { Contributor, ContributorGroup } from './contributors.model';\n\n// TODO(andrewjs): Look into changing this so that we don't import the service just to get the const\nimport { CONTENT_URL_PREFIX } from 'app/documents/document.service';\n\nconst contributorsPath = CONTENT_URL_PREFIX + 'contributors.json';\nconst knownGroups = ['Angular', 'Collaborators', 'GDE'];\n\n@Injectable()\nexport class ContributorService {\n  contributors: Observable<ContributorGroup[]>;\n\n  constructor(private http: HttpClient) {\n    this.contributors = this.getContributors();\n  }\n\n  private getContributors() {\n    const contributors = this.http.get<{[key: string]: Contributor}>(contributorsPath).pipe(\n      // Create group map\n      map(contribs => {\n        const contribMap: { [name: string]: Contributor[]} = {};\n        Object.keys(contribs).forEach(key => {\n          const contributor = contribs[key];\n          contributor.groups.forEach(group => {\n            const contribGroup = contribMap[group] || (contribMap[group] = []);\n            contribGroup.push(contributor);\n          });\n        });\n\n        return contribMap;\n      }),\n\n      // Flatten group map into sorted group array of sorted contributors\n      map(cmap => Object.keys(cmap).map(key => {\n          const order = knownGroups.indexOf(key);\n          return {\n            name: key,\n            order: order === -1 ? knownGroups.length : order,\n            contributors: cmap[key].sort(compareContributors)\n          } as ContributorGroup;\n        })\n        .sort(compareGroups)\n      ),\n\n      publishLast(),\n    );\n\n    (contributors as ConnectableObservable<ContributorGroup[]>).connect();\n    return contributors;\n  }\n}\n\nfunction compareContributors(l: Contributor, r: Contributor) {\n return l.name.toUpperCase() > r.name.toUpperCase() ? 1 : -1;\n}\n\nfunction compareGroups(l: ContributorGroup, r: ContributorGroup) {\n  return l.order === r.order ?\n    (l.name > r.name ? 1 : -1) :\n     l.order > r.order ? 1 : -1;\n}\n","import { Component, Input } from '@angular/core';\n\nimport { Contributor } from './contributors.model';\nimport { CONTENT_URL_PREFIX } from 'app/documents/document.service';\n\n@Component({\n  selector: 'aio-contributor',\n  template: `\n    <div [ngClass]=\"{ 'flipped': person.isFlipped }\" class=\"contributor-card\">\n\n        <!-- eslint-disable-next-line @angular-eslint/template/click-events-have-key-events -->\n        <div class=\"card-front\" (click)=\"flipCard(person)\">\n            <h3>{{person.name}}</h3>\n\n            <div class=\"contributor-image\"\n                 [style.background-image]=\"'url('+pictureBase+(person.picture || noPicture)+')'\">\n                 <div class=\"contributor-info\">\n                     <button *ngIf=\"person.bio\" mat-button class=\"info-item\">\n                         View Bio\n                     </button>\n                     <a *ngIf=\"person.twitter\" mat-icon-button class=\"info-item icon\"\n                         href=\"https://twitter.com/{{person.twitter}}\"\n                         target=\"_blank\" (click)=\"$event.stopPropagation()\">\n                         <mat-icon svgIcon=\"logos:twitter\"></mat-icon>\n                     </a>\n                     <a *ngIf=\"person.website\" mat-icon-button class=\"info-item icon\"\n                         href=\"{{person.website}}\" target=\"_blank\" (click)=\"$event.stopPropagation()\">\n                         <mat-icon class=\"link-icon\">link</mat-icon>\n                     </a>\n                 </div>\n            </div>\n        </div>\n\n        <button class=\"card-back\" *ngIf=\"person.isFlipped\" (click)=\"flipCard(person)\">\n            <h3>{{person.name}}</h3>\n            <p class=\"contributor-bio\">{{person.bio}}</p>\n        </button>\n    </div>\n  `\n})\nexport class ContributorComponent {\n  @Input() person: Contributor;\n  noPicture = '_no-one.png';\n  pictureBase = CONTENT_URL_PREFIX + 'images/bios/';\n\n  flipCard(person: Contributor) {\n    person.isFlipped = !person.isFlipped;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ContributorGroup } from './contributors.model';\nimport { ContributorService } from './contributor.service';\nimport { LocationService } from 'app/shared/location.service';\n\n@Component({\n  selector: 'aio-contributor-list',\n  template: `\n    <div class=\"flex-center group-buttons\">\n      <button *ngFor=\"let name of groupNames\"\n          class=\"button mat-button filter-button\"\n          [class.selected]=\"name === selectedGroup.name\"\n          (click)=\"selectGroup(name)\">{{name}}</button>\n    </div>\n    <section *ngIf=\"selectedGroup\" class=\"grid-fluid\">\n      <div class=\"contributor-group\">\n        <aio-contributor *ngFor=\"let person of selectedGroup.contributors\"\n            [person]=\"person\"></aio-contributor>\n      </div>\n    </section>\n  `,\n})\nexport class ContributorListComponent implements OnInit {\n  private groups: ContributorGroup[];\n  groupNames: string[];\n  selectedGroup: ContributorGroup;\n\n  constructor(\n    private contributorService: ContributorService,\n    private locationService: LocationService) { }\n\n  ngOnInit() {\n    const groupName =  this.locationService.search().group || '';\n    // no need to unsubscribe because `contributors` completes\n    this.contributorService.contributors\n      .subscribe(grps => {\n        this.groups = grps;\n        this.groupNames = grps.map(g => g.name);\n        this.selectGroup(groupName);\n      });\n  }\n\n  selectGroup(name: string) {\n    name = name.toLowerCase();\n    this.selectedGroup = this.groups.find(g => g.name.toLowerCase() === name) || this.groups[0];\n    this.locationService.setSearch('', {group: this.selectedGroup.name});\n  }\n}\n","import { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatIconModule } from '@angular/material/icon';\nimport { ContributorListComponent } from './contributor-list.component';\nimport { ContributorService } from './contributor.service';\nimport { ContributorComponent } from './contributor.component';\nimport { WithCustomElementComponent } from '../element-registry';\n\n@NgModule({\n  imports: [ CommonModule, MatIconModule ],\n  declarations: [ ContributorListComponent, ContributorComponent ],\n  providers: [ ContributorService ]\n})\nexport class ContributorListModule implements WithCustomElementComponent {\n  customElementComponent: Type<any> = ContributorListComponent;\n}\n"]}