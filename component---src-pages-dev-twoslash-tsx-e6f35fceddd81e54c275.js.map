{"version":3,"sources":["webpack:///./src/components/SuppressWhenTouch.tsx","webpack:///./src/components/devNav.tsx","webpack:///./src/pages/dev/twoslash.tsx","webpack:///../shiki-twoslash/src/utils.ts","webpack:///../shiki-twoslash/src/renderers/twoslash.ts","webpack:///./src/lib/isTouchDevice.ts"],"names":["SuppressWhenTouch","children","hideOnTouch","useEffect","isTouchDevice","suppressible","document","getElementById","firstChild","removeChild","h4","createElement","textContent","p","appendChild","id","DevNav","props","isActive","str","active","toLowerCase","className","style","display","href","withPrefix","Index","getLoaderScript","src","async","onload","re","global","require","config","paths","vs","sandbox","ignoreDuplicateModules","main","ts","sandboxEnv","a","_ts","parentNode","console","error","createTypeScriptSandbox","text","codeSamples","code","compilerOptions","domID","supportTwoslashCompilerOptions","editor","focus","window","createDefaultMapFromCDN","target","lzstring","mapWithLibFiles","runTwoslash","newContent","getText","set","newResults","twoslasher","tsModule","lzstringModule","fsMap","codeAsFakeShikiTokens","split","map","line","content","html","twoslashRenderer","results","innerHTML","innerText","extension","playgroundURL","err","failure","header","opener","name","startsWith","message","log","debouncedTwoslash","debounce","onDidChangeModelContent","setTimeout","querySelectorAll","forEach","button","classList","remove","codeElement","monaco","colorize","tabSize","then","newHTML","body","title","description","lang","marginTop","paddingTop","maxWidth","flex","blurb","role","height","onClick","e","contains","setText","paddingLeft","borderLeft","position","overflow","locale","createHighlightedString2","ranges","actions","hasErrors","r","classes","push","index","end","lsp","begin","slice","sort","l","action","idx","rem","newString","Math","abs","replaceTripleArrow","stripHTML","replace","table","toString","chr","lines","options","twoslash","langId","errorsGroupedByLine","groupBy","errors","Map","staticQuickInfosGroupedByLine","staticQuickInfos","q","queriesGroupedByLine","queries","filePos","i","get","lspValues","length","tokenPos","token","tokenContent","findTokenFunc","start","character","errorsInToken","filter","lspResponsesInToken","queriesInToken","allTokensByStart","range","kind","color","messages","escapeHtml","renderedMessage","join","codes","query","previousLine","previousLineWhitespace","exec","linePrefix","padStart","offset","queryTextWithPrefix","completions","lis","c","completionsPrefix","localeCompare","after","substr","kindModifiers","includes","playgroundLink","list","keyGetter","item","key","collection","hasTouchScreen","navigator","maxTouchPoints","msMaxTouchPoints","mQ","matchMedia","media","matches","UA","userAgent","test"],"mappings":"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","file":"component---src-pages-dev-twoslash-tsx-e6f35fceddd81e54c275.js","sourcesContent":["import React, { useEffect } from \"react\"\nimport { isTouchDevice } from \"../lib/isTouchDevice\"\n\n/**\n * A React component which will remove its children (at runtime!)\n * from the hierarchy if we're on a touch device\n */\nexport const SuppressWhenTouch = ({ children, hideOnTouch }: any) => {\n\n  useEffect(() => {\n    if (isTouchDevice()) {\n      // It's touch, so let's kill the content in the child and \n      // replace it with a message that this section isn't good for mobile\n      const suppressible = document.getElementById(\"touch-suppressible\")!\n      while (suppressible.firstChild) {\n        suppressible.removeChild(suppressible.firstChild)\n      }\n\n      if (hideOnTouch) return\n\n      const h4 = document.createElement(\"h4\")\n      h4.textContent = \"Section best on a computer\"\n\n      const p = document.createElement(\"p\")\n      p.textContent = \"This part of the site does not run well on a touch-oriented browser. We recommend switching to a computer to carry on.\"\n\n      suppressible.appendChild(h4)\n      suppressible.appendChild(p)\n    }\n\n  }, [])\n  return (\n    <div id=\"touch-suppressible\">\n      {children}\n    </div>)\n}\n","import * as React from \"react\"\nimport { withPrefix } from \"gatsby\"\n\ninterface DevNavProps {\n  active?: string\n}\n\nexport const DevNav = (props: DevNavProps) => {\n  const isActive = (str) =>\n    props.active && props.active.toLowerCase() === str ? \"active\" : \"\"\n\n  return <nav className=\"navbar-sub dev-tools\">\n    <ul className=\"nav\">\n      <li className=\"name\"><h3>Developer Tools</h3></li>\n      <li style={{ display: \"none\" }}>\n        <a className={isActive(\"compiler api\")} href={withPrefix(\"/dev/compiler\")}>Compiler API</a>\n      </li>\n      <li>\n        <a className={isActive(\"sandbox\")} href={withPrefix(\"/dev/sandbox\")}>Sandbox</a>\n      </li>\n      <li>\n        <a className={isActive(\"twoslash\")} href={withPrefix(\"/dev/twoslash\")}>Twoslash</a>\n      </li>\n      <li>\n        <a className={isActive(\"typescript vfs\")} href={withPrefix(\"/dev/typescript-vfs\")}>TypeScript VFS</a>\n      </li>\n      <li>\n        <a className={isActive(\"playground plugins\")} href={withPrefix(\"/dev/playground-plugins\")}>Playground Plugins</a>\n      </li>\n      <li>\n        <a className={isActive(\"bug workbench\")} href={withPrefix(\"/dev/bug-workbench\")}>Bug Workbench</a>\n      </li>\n    </ul>\n  </nav >\n}\n","import React, { useEffect } from \"react\"\nimport { Layout } from \"../../components/layout\"\nimport { withPrefix, graphql } from \"gatsby\"\nimport { twoslasher } from \"@typescript/twoslash\"\nimport { createDefaultMapFromCDN } from \"@typescript/vfs\"\nimport { twoslashRenderer } from \"shiki-twoslash/src/renderers/twoslash\"\nimport { debounce } from 'ts-debounce';\n\nimport \"./dev.scss\"\nimport { Intl } from \"../../components/Intl\"\nimport { DevNav } from \"../../components/devNav\"\nimport { isTouchDevice } from \"../../lib/isTouchDevice\"\nimport { SuppressWhenTouch } from \"../../components/SuppressWhenTouch\"\n\n/** Note: to run all the web infra in debug, run:\n  localStorage.debug = '*'\n\n  to remove logging: localStorage.debug = undefined\n */\n\ntype Props = {}\n\nconst Index: React.FC<Props> = (props) => {\n  useEffect(() => {\n    // No monaco for touch\n    if (isTouchDevice()) { return }\n\n    const getLoaderScript = document.createElement('script');\n    getLoaderScript.src = withPrefix(\"/js/vs.loader.js\");\n    getLoaderScript.async = true;\n    getLoaderScript.onload = () => {\n      // @ts-ignore\n      const re: any = global.require\n\n      re.config({\n        paths: {\n          vs: \"https://typescript.azureedge.net/cdn/4.0.5/monaco/min/vs\",\n          sandbox: withPrefix('/js/sandbox')\n        },\n        ignoreDuplicateModules: [\"vs/editor/editor.main\"],\n      });\n\n      re([\"vs/editor/editor.main\", \"vs/language/typescript/tsWorker\", \"sandbox/index\"], async (main: typeof import(\"monaco-editor\"), ts: typeof import(\"typescript\"), sandboxEnv: typeof import(\"typescript-sandbox\")) => {\n        // This triggers making \"ts\" available in the global scope\n        re([\"vs/language/typescript/lib/typescriptServices\"], async (_ts) => {\n          const ts = (global as any).ts\n          const isOK = main && ts && sandboxEnv\n\n          if (isOK) {\n            document.getElementById(\"loader\")!.parentNode?.removeChild(document.getElementById(\"loader\")!)\n          } else {\n            console.error(\"Error: main\", !!main, \"ts\", !!ts, \"sandbox\", !!sandboxEnv)\n          }\n\n          document.getElementById(\"monaco-editor-embed\")!.style.display = \"block\"\n          const sandbox = await sandboxEnv.createTypeScriptSandbox({ text: codeSamples[0].code, compilerOptions: {}, domID: \"monaco-editor-embed\", supportTwoslashCompilerOptions: true }, main, ts)\n          sandbox.editor.focus()\n\n          // @ts-ignore\n          window.sandbox = sandbox\n\n          const mapWithLibFiles = await createDefaultMapFromCDN({ target: 3 }, '3.7.3', true, ts, sandbox.lzstring as any)\n\n          const runTwoslash = () => {\n            const newContent = sandbox.getText()\n            mapWithLibFiles.set(\"index.ts\", newContent)\n\n            try {\n              const newResults = twoslasher(newContent, \"tsx\", {\n                tsModule: ts,\n                lzstringModule: sandbox.lzstring as any,\n                fsMap: mapWithLibFiles\n              })\n              const codeAsFakeShikiTokens = newResults.code.split(\"\\n\").map(line => [{ content: line }])\n              const html = twoslashRenderer(codeAsFakeShikiTokens, {}, newResults)\n\n              const results = document.getElementById(\"twoslash-results\")!\n\n              document.getElementById(\"twoslash-failure\")!.style.display = \"none\"\n              document.getElementById(\"twoslash-results\")!.innerHTML = html\n\n              // Remove all the kids\n              while (results.firstChild) {\n                results.removeChild(results.firstChild)\n              }\n\n              const p = document.createElement(\"p\")\n              p.innerText = newResults.extension\n              p.className = \"extension\"\n\n              const code = document.createElement(\"div\")\n              code.innerHTML = html\n\n              const a = document.createElement(\"a\")\n              a.innerText = \"Playground\"\n              a.href = newResults.playgroundURL\n\n              results.appendChild(p)\n              results.appendChild(code)\n              results.appendChild(a)\n\n            } catch (error) {\n              const err = error as Error\n              const failure = document.getElementById(\"twoslash-failure\")\n\n              if (!failure) return;\n              failure.style.display = \"block\"\n\n              while (failure.firstChild) {\n                failure.removeChild(failure.firstChild)\n              }\n\n              const content = document.createElement(\"div\")\n              content.className = \"err-content\"\n\n              const header = document.createElement(\"h3\")\n              header.textContent = \"Exception Raised\"\n\n              const text = document.createElement(\"p\")\n              const opener = err.name.startsWith(\"Error\") ? err.name.split(\"Error\")[1] : err.name\n              text.textContent = opener + err.message.split(\"## Code\")[0]\n\n              content.appendChild(header)\n              content.appendChild(text)\n              failure.appendChild(content)\n\n              console.log(error)\n            }\n          }\n\n          const debouncedTwoslash = debounce(runTwoslash, 500)\n          sandbox.editor.onDidChangeModelContent(debouncedTwoslash)\n          runTwoslash()\n\n          setTimeout(() => {\n            document.querySelectorAll(\"#example-buttons .disabled\").forEach(button => {\n              button.classList.remove(\"disabled\")\n            })\n\n            document.querySelectorAll(\".html-code\").forEach(codeElement => {\n              sandbox.monaco.editor.colorize(codeElement.textContent || \"\", \"html\", { tabSize: 2 }).then(newHTML => {\n                codeElement.innerHTML = newHTML\n              })\n            })\n\n            document.querySelectorAll(\".ts-code\").forEach(codeElement => {\n              sandbox.monaco.editor.colorize(codeElement.textContent || \"\", \"typescript\", { tabSize: 2 }).then(newHTML => {\n                codeElement.innerHTML = newHTML\n              })\n            })\n          }, 300)\n        });\n      })\n    }\n\n    document.body.appendChild(getLoaderScript);\n  }, [])\n\n  return (\n    <>\n      <Layout title=\"Developers - Twoslash Code Samples\" description=\"Learn about the TypeScript code sample library twoslash. Used for transpiling, providing hover to identifiers and compiler-driven error states.\" lang=\"en\">\n        <div id=\"dev\">\n          <DevNav active=\"twoslash\" />\n          <div className=\"raised content main-content-block\">\n            <div className=\"split-fifty\">\n              <div>\n                <h1 style={{ marginTop: \"20px\" }}>TypeScript Twoslash</h1>\n                <p>A markup format for TypeScript code, ideal for creating self-contained code samples which let the TypeScript compiler do the extra leg-work.</p>\n                <p>If you know TypeScript, you basically know twoslash.</p>\n                <p>Twoslash adds the ability to declare tsconfig options inline, split a sample into multiple files and a few other useful commands. You can see the full API <a href=\"https://github.com/microsoft/TypeScript-Website/tree/v2/packages/ts-twoslasher\">inside the README</a></p>\n              </div>\n              <div style={{ paddingTop: \"4.5rem\" }}>\n                <p>The Twoslash markup language helps with:</p>\n                <ul>\n                  <li>Enforcing accurate errors from a TypeScript code sample, and leaving the messaging to the compiler</li>\n                  <li>Splitting a code sample to hide distracting code</li>\n                  <li>Declaratively highlighting symbols in your code sample</li>\n                  <li>Replacing code with the results of transpilation to different files, or ancillary files like .d.ts or .map files</li>\n                  <li>Handle multi-file imports in a single code sample</li>\n                  <li>Creating a playground link for the code</li>\n                </ul>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"raised content main-content-block\" style={{ maxWidth: \"90%\" }}>\n\n            <div className=\"sixhundred\" style={{ flex: 1 }}>\n              <SuppressWhenTouch>\n                <h3 style={{ marginTop: \"0\" }}>Markup</h3>\n                <p id=\"exampleBlurb\">{codeSamples[0].blurb}</p>\n                <div id=\"loader\">\n                  <div className=\"lds-grid\"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\n                  <p id=\"loading-message\" role=\"status\">Downloading Sandbox...</p>\n                </div>\n                <div style={{ height: \"300px\", display: \"none\" }} id=\"monaco-editor-embed\" />\n                <div id=\"example-buttons\">\n                  {codeSamples.map(code => {\n                    const setExample = (e) => {\n                      if (e.target.classList.contains(\"disabled\")) return\n\n                      document.getElementById(\"exampleBlurb\")!.innerText = code.blurb\n                      // @ts-ignore\n                      window.sandbox.setText(code.code)\n                    }\n                    return <div className=\"button disabled\" onClick={setExample}>{code.name}</div>\n                  }\n                  )}\n                </div>\n              </SuppressWhenTouch>\n            </div>\n\n            <div style={{ paddingLeft: \"20px\", borderLeft: \"1px solid gray\", position: \"relative\", flex: 1, overflow: \"auto\" }}>\n              <SuppressWhenTouch>\n                <h3 style={{ marginTop: \"0\" }}>Results</h3>\n\n                <div id=\"twoslash-results\" />\n                <div id=\"twoslash-failure\" />\n              </SuppressWhenTouch>\n            </div>\n          </div>\n\n          <div className=\"raised main-content-block\">\n            <h2>Usage</h2>\n            <p>Twoslash's usage guide is available on the npm README at <a href='https://www.npmjs.com/package/@typescript/twoslash'><code>@typescript/twoslash</code></a>.</p>\n          </div>\n        </div>\n      </Layout>\n    </>\n  )\n}\n\nexport default (props: Props) => <Intl locale=\"en\"><Index {...props} /></Intl>\n\n// prettier-ignore\nconst codeSamples = [\n  {\n    name: \"Highlights runtime types\",\n    blurb: \"See how TS Twoslash will grab the highlight information for identifiers in your code\",\n    code: `// @errors: 2532\ndeclare const quantumString: string | undefined;\n\n// Right now this string is in two states, hover below to see\nquantumString\n  \nif (quantumString) {\n  // However, in here we now have a different type\n  // you can verify by hovering below\n  quantumString.length;\n}\n    `\n  },\n  {\n    name: \"Show Errors\",\n    blurb: \"Twoslash will help highlight compiler error messages\",\n    code: `// @errors: 7006\nfunction fn(s) {\n  console.log(s.subtr(3))\n}\n\nfn(42)`\n  }, {\n    name: \"Set Compiler Flags\",\n    blurb: \"You can define compiler flags inline in a code sample which are removed from the output\",\n    code: `// @noImplicitAny: false\n// This will not throw because of the noImplicitAny\nfunction fn(s) {\n  console.log(s.subtr(3))\n}\n\nfn(42);`\n  }, {\n    name: \"Trims code\",\n    blurb: \"You can write code to help it compile in the sample which is hidden in the output\",\n    code: `interface IdLabel {id: number, /* some fields */ }\ninterface NameLabel {name: string, /* other fields */ }\ntype NameOrId<T extends number | string> = T extends number ? IdLabel : NameLabel;\n// This comment should not be included\n\n// ---cut---\nfunction createLabel<T extends number | string>(idOrName: T): NameOrId<T> {\n  throw \"unimplemented\"\n}\n\nlet a = createLabel(\"typescript\");`\n  },\n  {\n    name: \"Show the JS\",\n    blurb: \"Use @showEmit to show the JS files\",\n    code: `// @showEmit\nexport function getStringLength(value: string) {\n  return value\n}\n`},\n  {\n    name: \"Show the DTS\",\n    blurb: \"Use @showEmittedFile to set the d.ts file to be the result code\",\n    code: `// @declaration: true\n// @showEmit\n// @showEmittedFile: index.d.ts\n/**\n * Gets the length of a string\n * @param value a string\n */\nexport function getStringLength(value: string) {\n  return value\n}\n`},\n  {\n    name: \"Highlights\",\n    blurb: \"Highlight some code in the editor\",\n    code: `function greet(person: string, date: Date) {\n  console.log(\\`Hello \\${person}, today is \\${date.toDateString()}!\\`);\n}\n\ngreet(\"Maddison\", new Date());\n//                ^^^^^^^^^^\n`\n  }\n]\n","type Range = {\n  begin: number\n  end: number\n  text?: string\n  count?: number\n  tooltip?: string[]\n  classes?: string\n  lsp?: string\n}\n\nconst splice = (str: string, idx: number, rem: number, newString: string) =>\n  str.slice(0, idx) + newString + str.slice(idx + Math.abs(rem))\n\n/**\n * We're given the text which lives inside the token, and this function will\n * annotate it with twoslash metadata\n */\nexport function createHighlightedString2(ranges: Range[], text: string) {\n  const actions = [] as { text: string; index: number }[]\n  let hasErrors = false\n\n  // Why the weird chars? We need to make sure that generic syntax isn't\n  // interpreted as html tags - to do that we need to switch out < to &lt; - *but*\n  // making that transition changes the indexes because it's gone from 1 char to 4 chars\n\n  // So, use an obscure character to indicate a real < for HTML, then switch it after\n\n  ranges.forEach(r => {\n    if (r.classes === \"lsp\") {\n      actions.push({ text: \"⇍/data-lsp⇏\", index: r.end })\n      actions.push({ text: `⇍data-lsp lsp=⇯${r.lsp || \"\"}⇯⇏`, index: r.begin })\n    } else if (r.classes === \"err\") {\n      hasErrors = true\n    } else if (r.classes === \"query\") {\n      actions.push({ text: \"⇍/data-highlight⇏\", index: r.end })\n      actions.push({ text: `⇍data-highlight'⇏`, index: r.begin })\n    }\n  })\n\n  let html = (\" \" + text).slice(1)\n\n  // Apply all the edits\n  actions\n    .sort((l, r) => r.index - l.index)\n    .forEach(action => {\n      html = splice(html, action.index, 0, action.text)\n    })\n\n  if (hasErrors) html = `⇍data-err⇏${html}⇍/data-err⇏`\n\n  return replaceTripleArrow(stripHTML(html))\n}\n\nexport const subTripleArrow = (str: string) => str.replace(/</g, \"⇍\").replace(/>/g, \"⇏\").replace(/'/g, \"⇯\")\nexport const replaceTripleArrow = (str: string) => str.replace(/⇍/g, \"<\").replace(/⇏/g, \">\").replace(/⇯/g, \"'\")\nexport const replaceTripleArrowEncoded = (str: string) =>\n  str.replace(/⇍/g, \"&lt;\").replace(/⇏/g, \"&gt;\").replace(/⇯/g, \"&apos;\")\n\nexport function stripHTML(text: string) {\n  var table: any = {\n    \"<\": \"lt\",\n    '\"': \"quot\",\n    \"'\": \"apos\",\n    \"&\": \"amp\",\n    \"\\r\": \"#10\",\n    \"\\n\": \"#13\",\n  }\n\n  return text.toString().replace(/[<\"'\\r\\n&]/g, function (chr) {\n    return \"&\" + table[chr] + \";\"\n  })\n}\n\nexport function escapeHtml(html: string) {\n  return html.replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\")\n}\n","type Lines = import(\"shiki\").IThemedToken[][]\ntype Options = import(\"shiki/dist/renderer\").HtmlRendererOptions\ntype TwoSlash = import(\"@typescript/twoslash\").TwoSlashReturn\n\nimport { stripHTML, createHighlightedString2, subTripleArrow, replaceTripleArrowEncoded, escapeHtml } from \"../utils\"\n\n// OK, so - this is just straight up complex code.\n\n// What we're trying to do is merge two sets of information into a single tree for HTML\n\n// 1: Syntax highlight info from shiki\n// 2: Twoslash metadata like errors, indentifiers etc\n\n// Because shiki gives use a set of lines to work from, then the first thing which happens\n// is converting twoslash data into the same format.\n\n// Things which make it hard:\n//\n// - Twoslash results can be cut, so sometimes there is edge cases between twoslash results\n// - Twoslash results can be multi-file\n// - the DOM requires a flattened graph of html elements\n//\n\nexport function twoslashRenderer(lines: Lines, options: Options, twoslash: TwoSlash) {\n  let html = \"\"\n\n  html += `<pre class=\"shiki twoslash lsp\">`\n  if (options.langId) {\n    html += `<div class=\"language-id\">${options.langId}</div>`\n  }\n  html += `<div class='code-container'><code>`\n\n  const errorsGroupedByLine = groupBy(twoslash.errors, e => e.line) || new Map()\n  const staticQuickInfosGroupedByLine = groupBy(twoslash.staticQuickInfos, q => q.line) || new Map()\n  // A query is always about the line above it!\n  const queriesGroupedByLine = groupBy(twoslash.queries, q => q.line - 1) || new Map()\n\n  let filePos = 0\n  lines.forEach((l, i) => {\n    const errors = errorsGroupedByLine.get(i) || []\n    const lspValues = staticQuickInfosGroupedByLine.get(i) || []\n    const queries = queriesGroupedByLine.get(i) || []\n\n    if (l.length === 0 && i === 0) {\n      // Skip the first newline if it's blank\n      filePos += 1\n    } else if (l.length === 0) {\n      filePos += 1\n      html += `\\n`\n    } else {\n      // Keep track of the position of the current token in a line so we can match it up to the\n      // errors and lang serv identifiers\n      let tokenPos = 0\n\n      l.forEach(token => {\n        let tokenContent = \"\"\n        // Underlining particular words\n        const findTokenFunc = (start: number) => (e: any) =>\n          start <= e.character && start + token.content.length >= e.character + e.length\n\n        const findTokenDebug = (start: number) => (e: any) => {\n          const result = start <= e.character && start + token.content.length >= e.character + e.length\n          // prettier-ignore\n          console.log(result, start, '<=', e.character, '&&', start + token.content.length, '>=', e.character + e.length)\n          if (result) {\n            console.log(\"Found:\", e)\n            console.log(\"Inside:\", token)\n          }\n          return result\n        }\n\n        const errorsInToken = errors.filter(findTokenFunc(tokenPos))\n        const lspResponsesInToken = lspValues.filter(findTokenFunc(tokenPos))\n        const queriesInToken = queries.filter(findTokenFunc(tokenPos))\n\n        const allTokens = [...errorsInToken, ...lspResponsesInToken, ...queriesInToken]\n        const allTokensByStart = allTokens.sort((l, r) => {\n          return (l.start || 0) - (r.start || 0)\n        })\n\n        if (allTokensByStart.length) {\n          const ranges = allTokensByStart.map(token => {\n            const range: any = {\n              begin: token.start! - filePos,\n              end: token.start! + token.length! - filePos,\n            }\n\n            if (\n              range.begin < 0 ||\n              range.end < 0\n            ) {\n              // prettier-ignore\n              // throw new Error(`The begin range of a token is at a minus location, filePos:${filePos} current token: ${JSON.stringify(token, null, '  ')}\\n result: ${JSON.stringify(range, null, '  ')}`)\n            }\n\n            if (\"renderedMessage\" in token) range.classes = \"err\"\n            if (\"kind\" in token) range.classes = token.kind\n            if (\"targetString\" in token) {\n              range.classes = \"lsp\"\n              range[\"lsp\"] = stripHTML(token.text)\n            }\n            return range\n          })\n\n          tokenContent += createHighlightedString2(ranges, token.content)\n        } else {\n          tokenContent += subTripleArrow(token.content)\n        }\n\n        html += `<span style=\"color: ${token.color}\">${tokenContent}</span>`\n        tokenPos += token.content.length\n        filePos += token.content.length\n      })\n\n      html += `\\n`\n      filePos += 1\n    }\n\n    // Adding error messages to the line after\n    if (errors.length) {\n      const messages = errors.map(e => escapeHtml(e.renderedMessage)).join(\"</br>\")\n      const codes = errors.map(e => e.code).join(\"<br/>\")\n      html += `<span class=\"error\"><span>${messages}</span><span class=\"code\">${codes}</span></span>`\n      html += `<span class=\"error-behind\">${messages}</span>`\n    }\n\n    // Add queries to the next line\n    if (queries.length) {\n      queries.forEach(query => {\n        switch (query.kind) {\n          case \"query\": {\n            const previousLine = (lines[i - 1] || [])[0]?.content || \"\"\n            const previousLineWhitespace = previousLine.slice(0, /\\S/.exec(previousLine)?.index || 0)\n            // prettier-ignore\n            const linePrefix = previousLineWhitespace + \"//\" + \"\".padStart(query.offset - 2 - previousLineWhitespace.length)\n            // prettier-ignore\n            const queryTextWithPrefix = query.text?.split(\"\\n\").map((l, i) => i !== 0 ? linePrefix + l : l).join(\"\\n\")\n            html += `<span class='query'>${linePrefix + \"^ = \" + queryTextWithPrefix}</span>`\n            break\n          }\n          case \"completions\": {\n            if (!query.completions) {\n              html += `<span class='query'>${\"//\" + \"\".padStart(query.offset - 2) + \"^ - No completions found\"}</span>`\n            } else {\n              const prefixed = query.completions.filter(c => c.name.startsWith(query.completionsPrefix || \"____\"))\n\n              const lis = prefixed\n                .sort((l, r) => l.name.localeCompare(r.name))\n                .map(c => {\n                  const after = c.name.substr(query.completionsPrefix?.length || 0)\n                  const name = `<span><span class='result-found'>${query.completionsPrefix || \"\"}</span>${after}<span>`\n                  const isDeprecated = c.kindModifiers?.split(\",\").includes(\"deprecated\")\n                  const liClass = isDeprecated ? \"deprecated\" : \"\"\n                  return `<li class='${liClass}'>${name}</li>`\n                })\n                .join(\"\")\n              html +=\n                \"\".padStart(query.offset) + `<span class='inline-completions'><ul class='dropdown'>${lis}</ul></span>`\n            }\n          }\n        }\n      })\n      html += \"\\n\"\n    }\n  })\n  html = replaceTripleArrowEncoded(html.replace(/\\n*$/, \"\")) // Get rid of final new lines\n  const playgroundLink = `<a href='${twoslash.playgroundURL}'>Try</a>`\n  html += `</code>${playgroundLink}</div></pre>`\n\n  return html\n}\n\n/** Returns a map where all the keys are the value in keyGetter  */\nfunction groupBy<T>(list: T[], keyGetter: (obj: any) => number) {\n  const map = new Map<number, T[]>()\n  list.forEach(item => {\n    const key = keyGetter(item)\n    const collection = map.get(key)\n    if (!collection) {\n      map.set(key, [item])\n    } else {\n      collection.push(item)\n    }\n  })\n  return map\n}\n","/** Based on https://developer.mozilla.org/docs/Web/HTTP/Browser_detection_using_the_user_agent */\nexport function isTouchDevice() {\n  var hasTouchScreen = false\n  if (\"maxTouchPoints\" in navigator) {\n    hasTouchScreen = navigator.maxTouchPoints > 0\n  } else if (\"msMaxTouchPoints\" in navigator) {\n    // @ts-ignore\n    hasTouchScreen = navigator.msMaxTouchPoints > 0\n  } else {\n    var mQ =\n      typeof window !== \"undefined\" &&\n      window.matchMedia &&\n      matchMedia(\"(pointer:coarse)\")\n    if (mQ && mQ.media === \"(pointer:coarse)\") {\n      hasTouchScreen = !!mQ.matches\n    } else if (\"orientation\" in window) {\n      hasTouchScreen = true // deprecated, but good fallback\n    } else {\n      // Only as a last resort, fall back to user agent sniffing\n      // @ts-ignore\n      var UA = navigator.userAgent\n      hasTouchScreen =\n        /\\b(BlackBerry|webOS|iPhone|IEMobile)\\b/i.test(UA) ||\n        /\\b(Android|Windows Phone|iPad|iPod)\\b/i.test(UA)\n    }\n  }\n  return hasTouchScreen\n}\n"],"sourceRoot":""}