{"version":3,"sources":["webpack:///./src/templates/pages/docs/index.tsx","webpack:///./src/components/QuickJump.tsx"],"names":["Index","props","i","createInternational","useIntl","nav","getDocumentationNavForLanguage","pageContext","lang","title","description","allSitePage","data","className","style","marginTop","map","navRoot","id","showIntro","key","oneline","items","item","path","permalink","to","href","query","locale","QuickJump","intl","releaseURL","withPrefix","releaseInfo","releaseNotesURL","betaURL","undefined","isBeta","betaPostURL","isRC","rcPostURL","IntlLink","createIntlLink","textAlign","tags","betaMajMin","stableMajMin"],"mappings":"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","file":"component---src-templates-pages-docs-index-tsx-c78bff56b7f7640b12ef.js","sourcesContent":["import * as React from \"react\";\nimport { Layout } from \"../../../components/layout\";\n\nimport \"../css/documentation.scss\";\nimport { Intl } from \"../../../components/Intl\";\n\nimport { docCopy } from \"../../../copy/en/documentation\";\nimport { createInternational } from \"../../../lib/createInternational\";\nimport { useIntl } from \"react-intl\";\nimport { graphql } from \"gatsby\";\nimport { DocsHomeQuery } from \"../../../__generated__/gatsby-types\";\nimport { QuickJump } from \"../../../components/QuickJump\";\nimport { getDocumentationNavForLanguage } from \"../../../lib/documentationNavigation\"\n\nimport { Link } from \"gatsby\"\n\nimport \"../css/documentation.scss\"\nimport \"../../documentation.scss\"\n\ntype Props = {\n  data: DocsHomeQuery;\n  pageContext: any;\n};\n\nconst Index: React.FC<Props> = (props) => {\n  const i = createInternational<typeof docCopy>(useIntl());\n  const nav = getDocumentationNavForLanguage(props.pageContext.lang)\n\n  return (\n    <Layout\n      title={i(\"doc_layout_title\")}\n      description={i(\"doc_layout_description\")}\n      lang={props.pageContext.lang}\n      allSitePage={props.data.allSitePage}\n    >\n\n      <div className=\"main-content-block headline\" style={{ marginTop: \"40px\" }}>\n        <h1>TypeScript Documentation</h1>\n      </div>\n\n\n      <div className=\"main-content-block container handbook-content\" >\n        <div className=\"columns wide\">\n          {nav.map(navRoot => {\n            if (navRoot.id === \"what's-new\") return null\n            const showIntro = navRoot.id === \"handbook\"\n\n            return (\n              <div className=\"item raised\" key={navRoot.id}>\n\n                <h4>{navRoot.title}</h4>\n                <p>{navRoot.oneline || \" \"}</p>\n\n                <ul>\n                  {navRoot.items && navRoot.items.map(item => {\n                    const path = item.permalink!\n                    if (item.items) return null\n\n                    return <li key={item.id}>\n                      <Link to={path}>{item.title}</Link>\n                    </li>\n                  })}\n                </ul>\n\n                {showIntro && <p>We also have an <a href='/assets/typescript-handbook-beta.epub'>epub</a> and <a href='/assets/typescript-handbook-beta.pdf'>pdf</a> version of the Handbook.</p>}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n\n      <QuickJump\n        title={i(\"doc_headline\")}\n        allSitePage={props.data.allSitePage}\n        lang={props.pageContext.lang}\n      />\n\n    </Layout>\n  );\n};\n\nexport const query = graphql`\n  query DocsHome {\n    ...AllSitePage\n  }\n`;\n\nexport default (props: Props) => (\n  <Intl locale={props.pageContext.lang}>\n    <Index {...props} />\n  </Intl>\n);\n","import * as React from \"react\";\nimport { useIntl } from \"react-intl\";\nimport { createInternational } from \"../lib/createInternational\";\nimport { docCopy } from \"../copy/en/documentation\";\nimport { AllSitePage, createIntlLink } from \"./IntlLink\";\n\n// Automatic metadata from npm and VS Marketplace\nimport releaseInfo from \"../lib/release-info.json\";\nimport { withPrefix } from \"gatsby\";\n\nexport type Props = {\n  title: string;\n  allSitePage: AllSitePage;\n  lang: string;\n};\nexport const QuickJump = (props: Props) => {\n  const intl = useIntl();\n  const i = createInternational<typeof docCopy>(intl);\n  i;\n\n  const releaseURL = withPrefix(releaseInfo.releaseNotesURL);\n  let betaURL: string | undefined = undefined;\n  if (releaseInfo.isBeta) betaURL = releaseInfo.betaPostURL;\n  if (releaseInfo.isRC) betaURL = releaseInfo.rcPostURL;\n\n  const IntlLink = createIntlLink(props.lang, props.allSitePage);\n\n  // TODO: Internationalize these strings\n  return <div className=\"main-content-block\">\n    <h2 style={{ textAlign: \"center\" }}>{props.title}</h2>\n    <div className=\"columns\">\n      <div className=\"item raised\">\n        <h4>Get Started</h4>\n        <ul>\n          <li>\n            <IntlLink to=\"/docs/bootstrap\">\n              Bootstrap a TS project\n            </IntlLink>\n          </li>\n          <li>\n            <IntlLink to=\"/docs/handbook/typescript-in-5-minutes.html\">\n              JS to TS\n            </IntlLink>\n          </li>\n          <li>\n            <IntlLink to=\"/docs/handbook/typescript-from-scratch.html\">\n              New to Programming\n            </IntlLink>\n          </li>\n          <li>\n            <IntlLink to=\"/docs/handbook/typescript-in-5-minutes-oop.html\">\n              OOP to JS\n            </IntlLink>\n          </li>\n          <li>\n            <IntlLink to=\"/docs/handbook/typescript-in-5-minutes-func.html\">\n              Functional to JS\n            </IntlLink>\n          </li>\n          <li><IntlLink to=\"/download\">Installation</IntlLink></li>\n        </ul>\n      </div>\n\n      <div className=\"item raised\">\n        <h4>Handbook</h4>\n        <ul>\n          <li>\n            <IntlLink to=\"/docs/handbook/basic-types.html\">\n              Basic Types\n            </IntlLink>\n          </li>\n          <li>\n            <IntlLink to=\"/docs/handbook/advanced-types.html\">\n              Advanced Types\n            </IntlLink>\n          </li>\n          <li>\n            <IntlLink to=\"/docs/handbook/interfaces.html\">\n              Interfaces\n            </IntlLink>\n          </li>\n          <li>\n            <IntlLink to=\"/docs/handbook/variable-declarations.html\">\n              Variable Declarations\n            </IntlLink>\n          </li>\n          <li>\n            <IntlLink to=\"/docs/handbook/functions.html\">Functions</IntlLink>\n          </li>\n        </ul>\n      </div>\n\n      <div className=\"item raised\">\n        <h4>Tools</h4>\n        <ul>\n          <li><IntlLink to=\"/play/\">Playground</IntlLink></li>\n          <li><IntlLink to=\"/tsconfig/\">TSConfig Reference</IntlLink></li>\n        </ul>\n        <h4 style={{ marginTop: \"28px\" }}>Release Notes</h4>\n        <ul>\n          {betaURL\n            ? <li>\n              <a href={betaURL}>\n                What's upcoming in {releaseInfo.tags.betaMajMin}?\n              </a>\n            </li>\n            : null}\n          <li>\n            <IntlLink to={releaseURL}>\n              What's new in {releaseInfo.tags.stableMajMin}\n            </IntlLink>\n          </li>\n        </ul>\n      </div>\n\n      <div className=\"item raised\">\n        <h4>Tutorials</h4>\n        <ul>\n          <li>\n            <IntlLink to=\"/docs/handbook/asp-net-core.html\">ASP.NET</IntlLink>\n          </li>\n          <li>\n            <IntlLink to=\"/docs/handbook/migrating-from-javascript.html\">\n              Migrating from JS\n            </IntlLink>\n          </li>\n          <li>\n            <IntlLink to=\"/docs/handbook/dom-manipulation.html\">\n              Working with the DOM\n            </IntlLink>\n          </li>\n          <li>\n            <IntlLink to=\"/docs/handbook/react-&-webpack.html\">\n              React &amp; Webpack\n            </IntlLink>\n          </li>\n        </ul>\n      </div>\n    </div>\n  </div>;\n};\n"],"sourceRoot":""}