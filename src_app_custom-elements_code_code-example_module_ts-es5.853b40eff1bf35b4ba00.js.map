{"version":3,"sources":["webpack:///src/app/custom-elements/code/code-example.component.ts","webpack:///src/app/custom-elements/code/code-example.module.ts"],"names":["CodeExampleModule","CodeExampleComponent","_path","isAvoid","this","_header","header","classes","path","indexOf","_hidecopy","hidecopy","contentElem","content","nativeElement","aioCode","code","innerHTML","customElementComponent"],"mappings":"8iBAqBI,kBAAuB,SAAU,S,mBAAV,0B,ICTdA,E,QDqBN,iBAAMC,EAAN,WAlBP,uBA4CU,KAAAC,MAAQ,GAoBgB,KAAAC,W,UA9C3B,O,EAAA,G,EAAA,mBAiBL,WAAuB,OAAOC,KAAKC,SAjB9B,IASL,SACWC,GACTF,KAAKC,QAAUC,EACfF,KAAKG,QAAU,CACb,gBAAiBH,KAAKE,OACtB,eAAgBF,KAAKE,UAdpB,gBAyBL,WAAqB,OAAOF,KAAKF,OAzB5B,IAoBL,SACSM,GACPJ,KAAKF,MAAQM,EACbJ,KAAKD,SAA4C,IAAlCC,KAAKI,KAAKC,QAAQ,aAvB9B,oBAiCL,WAA0B,OAAOL,KAAKM,WAjCjC,IA4BL,SACaC,GAEXP,KAAKM,UAAwB,MAAZC,GAAsC,mBAAfA,KA/BrC,8BAoCL,SACuBA,GACrBP,KAAKO,SAAWA,IAtCb,+BAyCL,SACwBA,GACtBP,KAAKO,SAAWA,IA3Cb,6BAoDL,WACE,IAAMC,EAAcR,KAAKS,QAAQC,cACjCV,KAAKW,QAAQC,KAAOJ,EAAYK,UAChCL,EAAYK,UAAY,Q,2BAvDrB,K,6CAAMhB,I,wBAAAA,EAAoB,qD,OAAA,M,eAkDpB,IAAe,I,qkBAhExB,mBAAoC,SAAyB,QAE7D,0BAEA,uB,MAFS,gCAEC,oCAAmB,sBAAnB,CAAmB,sBAAnB,CAAmB,cAAnB,CAAmB,kBAAnB,CAAmB,sBAAnB,CAAmB,qB,+CAU1B,G,SCrBA,IAAMD,EANb,uBAOE,KAAAkB,uBAAoCjB,I,oCADzBD,I,wBAAAA,I,4BALF,CAAE,KAAc,Q","file":"x","sourcesContent":["/* tslint:disable component-selector */\nimport { Component, HostBinding, ElementRef, ViewChild, Input, AfterViewInit } from '@angular/core';\nimport { CodeComponent } from './code.component';\n\n/**\n * An embeddable code block that displays nicely formatted code.\n * Example usage:\n *\n * ```\n * <code-example language=\"ts\" linenums=\"2\" class=\"special\" header=\"Do Stuff\">\n * // a code block\n * console.log('do stuff');\n * </code-example>\n * ```\n */\n@Component({\n  selector: 'code-example',\n  template: `\n    <!-- Content projection is used to get the content HTML provided to this component -->\n    <div #content style=\"display: none\"><ng-content></ng-content></div>\n\n    <header *ngIf=\"header\">{{header}}</header>\n\n    <aio-code [ngClass]=\"classes\"\n              [language]=\"language\"\n              [linenums]=\"linenums\"\n              [path]=\"path\"\n              [region]=\"region\"\n              [hideCopy]=\"hidecopy\"\n              [header]=\"header\">\n    </aio-code>\n  `,\n})\nexport class CodeExampleComponent implements AfterViewInit {\n  classes: {};\n\n  @Input() language: string;\n\n  @Input() linenums: string;\n\n  @Input() region: string;\n\n  @Input()\n  set header(header: string) {\n    this._header = header;\n    this.classes = {\n      'headed-code': !!this.header,\n      'simple-code': !this.header,\n    };\n  }\n  get header(): string { return this._header; }\n  private _header: string;\n\n  @Input()\n  set path(path: string) {\n    this._path = path;\n    this.isAvoid = this.path.indexOf('.avoid.') !== -1;\n  }\n  get path(): string { return this._path; }\n  private _path = '';\n\n  @Input()\n  set hidecopy(hidecopy: boolean) {\n    // Coerce the boolean value.\n    this._hidecopy = hidecopy != null && `${hidecopy}` !== 'false';\n  }\n  get hidecopy(): boolean { return this._hidecopy; }\n  private _hidecopy: boolean;\n\n  @Input('hide-copy')\n  set hyphenatedHideCopy(hidecopy: boolean) {\n    this.hidecopy = hidecopy;\n  }\n\n  @Input('hideCopy')\n  set capitalizedHideCopy(hidecopy: boolean) {\n    this.hidecopy = hidecopy;\n  }\n\n  @HostBinding('class.avoidFile') isAvoid = false;\n\n  @ViewChild('content', { static: true }) content: ElementRef<HTMLDivElement>;\n\n  @ViewChild(CodeComponent, { static: true }) aioCode: CodeComponent;\n\n  ngAfterViewInit() {\n    const contentElem = this.content.nativeElement;\n    this.aioCode.code = contentElem.innerHTML;\n    contentElem.innerHTML = '';  // Remove DOM nodes that are no longer needed.\n  }\n}\n","import { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CodeExampleComponent } from './code-example.component';\nimport { CodeModule } from './code.module';\nimport { WithCustomElementComponent } from '../element-registry';\n\n@NgModule({\n  imports: [ CommonModule, CodeModule ],\n  declarations: [ CodeExampleComponent ],\n  exports: [ CodeExampleComponent ],\n  entryComponents: [ CodeExampleComponent ]\n})\nexport class CodeExampleModule implements WithCustomElementComponent {\n  customElementComponent: Type<any> = CodeExampleComponent;\n}\n"]}