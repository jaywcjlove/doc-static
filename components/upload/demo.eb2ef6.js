(window.webpackJsonp=window.webpackJsonp||[]).push([[193],{3357:function(y,K){},4036:function(y,K,m){y.exports={content:{"zh-CN":[["p","点击上传用户头像，并使用 ",["code","beforeUpload"]," 限制用户上传的图片格式和大小。"],["blockquote",["p",["code","beforeUpload"]," 的返回值可以是一个 Promise 以支持异步处理，如服务端校验等：",["a",{title:null,href:"http://react-component.github.io/upload/examples/beforeUpload.html"},"示例"],"。"]]],"en-US":[["p","Click to upload user's avatar, and validate size and format of picture with ",["code","beforeUpload"],"."],["blockquote",["p","The return value of function ",["code","beforeUpload"]," can be a Promise to check asynchronously. ",["a",{title:null,href:"http://react-component.github.io/upload/examples/beforeUpload.html"},"demo"]]]]},meta:{order:1,title:{"zh-CN":"用户头像","en-US":"Avatar"},filename:"components/upload/demo/avatar.md",id:"components-upload-demo-avatar"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"jsx",highlighted:`<span class="token keyword">import</span> <span class="token punctuation">{</span> Upload<span class="token punctuation">,</span> message <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> LoadingOutlined<span class="token punctuation">,</span> PlusOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'@ant-design/icons'</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">getBase64</span><span class="token punctuation">(</span>img<span class="token punctuation">,</span> callback<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> reader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileReader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  reader<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'load'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">callback</span><span class="token punctuation">(</span>reader<span class="token punctuation">.</span>result<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  reader<span class="token punctuation">.</span><span class="token function">readAsDataURL</span><span class="token punctuation">(</span>img<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">beforeUpload</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> isJpgOrPng <span class="token operator">=</span> file<span class="token punctuation">.</span>type <span class="token operator">===</span> <span class="token string">'image/jpeg'</span> <span class="token operator">||</span> file<span class="token punctuation">.</span>type <span class="token operator">===</span> <span class="token string">'image/png'</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isJpgOrPng<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">'You can only upload JPG/PNG file!'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">const</span> isLt2M <span class="token operator">=</span> file<span class="token punctuation">.</span>size <span class="token operator">/</span> <span class="token number">1024</span> <span class="token operator">/</span> <span class="token number">1024</span> <span class="token operator">&lt;</span> <span class="token number">2</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isLt2M<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">'Image must smaller than 2MB!'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> isJpgOrPng <span class="token operator">&amp;&amp;</span> isLt2M<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">Avatar</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>
  state <span class="token operator">=</span> <span class="token punctuation">{</span>
    loading<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  handleChange <span class="token operator">=</span> info <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token string">'uploading'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> loading<span class="token punctuation">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token string">'done'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment" spellcheck="true">// Get this url from response in real world.</span>
      <span class="token function">getBase64</span><span class="token punctuation">(</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>originFileObj<span class="token punctuation">,</span> imageUrl <span class="token operator">=</span><span class="token operator">></span>
        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
          imageUrl<span class="token punctuation">,</span>
          loading<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> uploadButton <span class="token operator">=</span> <span class="token punctuation">(</span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>
        <span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>loading <span class="token operator">?</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LoadingOutlined</span> <span class="token punctuation">/></span></span> <span class="token punctuation">:</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>PlusOutlined</span> <span class="token punctuation">/></span></span><span class="token punctuation">}</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ant-upload-text<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Upload<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> imageUrl <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Upload</span>
        <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>avatar<span class="token punctuation">"</span></span>
        <span class="token attr-name">listType</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>picture-card<span class="token punctuation">"</span></span>
        <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>avatar-uploader<span class="token punctuation">"</span></span>
        <span class="token attr-name">showUploadList</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token boolean">false</span><span class="token punctuation">}</span></span>
        <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://www.mocky.io/v2/5cc8019d300000980a055e76<span class="token punctuation">"</span></span>
        <span class="token attr-name">beforeUpload</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>beforeUpload<span class="token punctuation">}</span></span>
        <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>handleChange<span class="token punctuation">}</span></span>
      <span class="token punctuation">></span></span>
        <span class="token punctuation">{</span>imageUrl <span class="token operator">?</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>imageUrl<span class="token punctuation">}</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>avatar<span class="token punctuation">"</span></span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> width<span class="token punctuation">:</span> <span class="token string">'100%'</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span> <span class="token punctuation">:</span> uploadButton<span class="token punctuation">}</span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Upload</span><span class="token punctuation">></span></span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

ReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Avatar</span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>`}],highlightedCodes:{jsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> Upload<span class="token punctuation">,</span> message <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> LoadingOutlined<span class="token punctuation">,</span> PlusOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'@ant-design/icons'</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">getBase64</span><span class="token punctuation">(</span><span class="token parameter">img<span class="token punctuation">,</span> callback</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> reader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileReader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  reader<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'load'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token function">callback</span><span class="token punctuation">(</span>reader<span class="token punctuation">.</span>result<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  reader<span class="token punctuation">.</span><span class="token function">readAsDataURL</span><span class="token punctuation">(</span>img<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">beforeUpload</span><span class="token punctuation">(</span><span class="token parameter">file</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> isJpgOrPng <span class="token operator">=</span> file<span class="token punctuation">.</span>type <span class="token operator">===</span> <span class="token string">'image/jpeg'</span> <span class="token operator">||</span> file<span class="token punctuation">.</span>type <span class="token operator">===</span> <span class="token string">'image/png'</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isJpgOrPng<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">'You can only upload JPG/PNG file!'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">const</span> isLt2M <span class="token operator">=</span> file<span class="token punctuation">.</span>size <span class="token operator">/</span> <span class="token number">1024</span> <span class="token operator">/</span> <span class="token number">1024</span> <span class="token operator">&lt;</span> <span class="token number">2</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isLt2M<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">'Image must smaller than 2MB!'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> isJpgOrPng <span class="token operator">&amp;&amp;</span> isLt2M<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">Avatar</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>
  state <span class="token operator">=</span> <span class="token punctuation">{</span>
    loading<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token function-variable function">handleChange</span> <span class="token operator">=</span> <span class="token parameter">info</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token string">'uploading'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> loading<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token string">'done'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// Get this url from response in real world.</span>
      <span class="token function">getBase64</span><span class="token punctuation">(</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>originFileObj<span class="token punctuation">,</span> <span class="token parameter">imageUrl</span> <span class="token operator">=></span>
        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
          imageUrl<span class="token punctuation">,</span>
          loading<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> uploadButton <span class="token operator">=</span> <span class="token punctuation">(</span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>
        <span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>loading <span class="token operator">?</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">LoadingOutlined</span></span> <span class="token punctuation">/></span></span> <span class="token operator">:</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">PlusOutlined</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">}</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ant-upload-text<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Upload<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> imageUrl <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Upload</span></span>
        <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>avatar<span class="token punctuation">"</span></span>
        <span class="token attr-name">listType</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>picture-card<span class="token punctuation">"</span></span>
        <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>avatar-uploader<span class="token punctuation">"</span></span>
        <span class="token attr-name">showUploadList</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token boolean">false</span><span class="token punctuation">}</span></span>
        <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://www.mocky.io/v2/5cc8019d300000980a055e76<span class="token punctuation">"</span></span>
        <span class="token attr-name">beforeUpload</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>beforeUpload<span class="token punctuation">}</span></span>
        <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>handleChange<span class="token punctuation">}</span></span>
      <span class="token punctuation">></span></span>
        <span class="token punctuation">{</span>imageUrl <span class="token operator">?</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>imageUrl<span class="token punctuation">}</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>avatar<span class="token punctuation">"</span></span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> width<span class="token operator">:</span> <span class="token string">'100%'</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span> <span class="token operator">:</span> uploadButton<span class="token punctuation">}</span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Upload</span></span><span class="token punctuation">></span></span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

ReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Avatar</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>`},preview:function na(){var j=m(0),L=m(28),o=m(8),s=m(47);function t(k){return typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"?t=function b(e){return typeof e}:t=function b(e){return e&&typeof Symbol==="function"&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},t(k)}function F(k,b){if(!(k instanceof b))throw new TypeError("Cannot call a class as a function")}function r(k,b){for(var e=0;e<b.length;e++){var f=b[e];f.enumerable=f.enumerable||!1,f.configurable=!0,"value"in f&&(f.writable=!0),Object.defineProperty(k,f.key,f)}}function z(k,b,e){return b&&r(k.prototype,b),e&&r(k,e),k}function A(k,b){if(typeof b!=="function"&&b!==null)throw new TypeError("Super expression must either be null or a function");k.prototype=Object.create(b&&b.prototype,{constructor:{value:k,writable:!0,configurable:!0}}),b&&G(k,b)}function G(k,b){return G=Object.setPrototypeOf||function e(f,i){return f.__proto__=i,f},G(k,b)}function H(k){var b=M();return function e(){var f=B(k),i;if(b){var g=B(this).constructor;i=Reflect.construct(f,arguments,g)}else i=f.apply(this,arguments);return D(this,i)}}function D(k,b){return b&&(t(b)==="object"||typeof b==="function")?b:I(k)}function I(k){if(k===void 0)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return k}function M(){if(typeof Reflect==="undefined"||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if(typeof Proxy==="function")return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],function(){})),!0}catch(k){return!1}}function B(k){return B=Object.setPrototypeOf?Object.getPrototypeOf:function b(e){return e.__proto__||Object.getPrototypeOf(e)},B(k)}function p(k,b,e){return b in k?Object.defineProperty(k,b,{value:e,enumerable:!0,configurable:!0,writable:!0}):k[b]=e,k}function u(k,b){var e=new FileReader();e.addEventListener("load",function(){return b(e.result)}),e.readAsDataURL(k)}function q(k){var b=k.type==="image/jpeg"||k.type==="image/png";b||o.message.error("You can only upload JPG/PNG file!");var e=k.size/1024/1024<2;return e||o.message.error("Image must smaller than 2MB!"),b&&e}var n=function(k){A(e,k);var b=H(e);function e(){var f;F(this,e);for(var i=arguments.length,g=new Array(i),d=0;d<i;d++)g[d]=arguments[d];return f=b.call.apply(b,[this].concat(g)),p(I(f),"state",{loading:!1}),p(I(f),"handleChange",function(a){if(a.file.status==="uploading"){f.setState({loading:!0});return}a.file.status==="done"&&u(a.file.originFileObj,function(c){return f.setState({imageUrl:c,loading:!1})})}),f}return z(e,[{key:"render",value:function f(){var i=j.createElement("div",null,this.state.loading?j.createElement(s.LoadingOutlined,null):j.createElement(s.PlusOutlined,null),j.createElement("div",{className:"ant-upload-text"},"Upload")),g=this.state.imageUrl;return j.createElement(o.Upload,{name:"avatar",listType:"picture-card",className:"avatar-uploader",showUploadList:!1,action:"https://www.mocky.io/v2/5cc8019d300000980a055e76",beforeUpload:q,onChange:this.handleChange},g?j.createElement("img",{src:g,alt:"avatar",style:{width:"100%"}}):i)}}]),e}(j.Component);return j.createElement(n,null)},style:`.avatar-uploader > .ant-upload {
  width: 128px;
  height: 128px;
}`,highlightedStyle:`<span class="token selector"><span class="token class">.avatar-uploader</span> > <span class="token class">.ant-upload</span> </span><span class="token punctuation">{</span>
  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">128</span>px<span class="token punctuation">;</span>
  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">128</span>px<span class="token punctuation">;</span>
<span class="token punctuation">}</span>`}},4037:function(y,K,m){y.exports={content:{"zh-CN":[["p","经典款式，用户点击按钮弹出文件选择框。"]],"en-US":[["p","Classic mode. File selection dialog pops up when upload button is clicked."]]},meta:{order:0,title:{"zh-CN":"点击上传","en-US":"Upload by clicking"},filename:"components/upload/demo/basic.md",id:"components-upload-demo-basic"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"jsx",highlighted:`<span class="token keyword">import</span> <span class="token punctuation">{</span> Upload<span class="token punctuation">,</span> message<span class="token punctuation">,</span> Button <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> UploadOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'@ant-design/icons'</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> props <span class="token operator">=</span> <span class="token punctuation">{</span>
  name<span class="token punctuation">:</span> <span class="token string">'file'</span><span class="token punctuation">,</span>
  action<span class="token punctuation">:</span> <span class="token string">'https://www.mocky.io/v2/5cc8019d300000980a055e76'</span><span class="token punctuation">,</span>
  headers<span class="token punctuation">:</span> <span class="token punctuation">{</span>
    authorization<span class="token punctuation">:</span> <span class="token string">'authorization-text'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">onChange</span><span class="token punctuation">(</span>info<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>status <span class="token operator">!==</span> <span class="token string">'uploading'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>info<span class="token punctuation">.</span>file<span class="token punctuation">,</span> info<span class="token punctuation">.</span>fileList<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token string">'done'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      message<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token template-string"><span class="token string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> file uploaded successfully\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token string">'error'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token template-string"><span class="token string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> file upload failed.\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

ReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>
  <span class="token operator">&lt;</span>Upload <span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span><span class="token operator">></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>UploadOutlined</span> <span class="token punctuation">/></span></span> Click to Upload
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Upload</span><span class="token punctuation">></span></span><span class="token punctuation">,</span>
  mountNode<span class="token punctuation">,</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>`}],highlightedCodes:{jsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> Upload<span class="token punctuation">,</span> message<span class="token punctuation">,</span> Button <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> UploadOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'@ant-design/icons'</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> props <span class="token operator">=</span> <span class="token punctuation">{</span>
  name<span class="token operator">:</span> <span class="token string">'file'</span><span class="token punctuation">,</span>
  action<span class="token operator">:</span> <span class="token string">'https://www.mocky.io/v2/5cc8019d300000980a055e76'</span><span class="token punctuation">,</span>
  headers<span class="token operator">:</span> <span class="token punctuation">{</span>
    authorization<span class="token operator">:</span> <span class="token string">'authorization-text'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">onChange</span><span class="token punctuation">(</span><span class="token parameter">info</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>status <span class="token operator">!==</span> <span class="token string">'uploading'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>info<span class="token punctuation">.</span>file<span class="token punctuation">,</span> info<span class="token punctuation">.</span>fileList<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token string">'done'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      message<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> file uploaded successfully</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token string">'error'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> file upload failed.</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

ReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Upload</span></span> <span class="token spread"><span class="token punctuation">{</span><span class="token punctuation">...</span><span class="token attr-value">props</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">UploadOutlined</span></span> <span class="token punctuation">/></span></span> Click to Upload
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Upload</span></span><span class="token punctuation">></span></span><span class="token punctuation">,</span>
  mountNode<span class="token punctuation">,</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>`},preview:function na(){var j=m(0),L=m(28),o=m(8),s=m(47),t={name:"file",action:"https://www.mocky.io/v2/5cc8019d300000980a055e76",headers:{authorization:"authorization-text"},onChange:function F(r){r.file.status!=="uploading"&&console.log(r.file,r.fileList),r.file.status==="done"?o.message.success("".concat(r.file.name," file uploaded successfully")):r.file.status==="error"&&o.message.error("".concat(r.file.name," file upload failed."))}};return j.createElement(o.Upload,t,j.createElement(o.Button,null,j.createElement(s.UploadOutlined,null)," Click to Upload"))}}},4038:function(y,K,m){y.exports={content:{"zh-CN":[["p","配合 ",["a",{title:null,href:"https://github.com/nanxiaobei/antd-img-crop"},"antd-img-crop"]," 实现上传前裁切图片。"]],"en-US":[["p","Use ",["a",{title:null,href:"https://github.com/nanxiaobei/antd-img-crop"},"antd-img-crop"]," to crop image before uploading."]]},meta:{order:14,title:{"zh-CN":"上传前裁切图片","en-US":"Crop image before uploading"},filename:"components/upload/demo/crop-image.md",id:"components-upload-demo-crop-image"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"jsx",highlighted:`<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Upload <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> ImgCrop <span class="token keyword">from</span> <span class="token string">'antd-img-crop'</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> Demo <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>fileList<span class="token punctuation">,</span> setFileList<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      uid<span class="token punctuation">:</span> <span class="token string">'-1'</span><span class="token punctuation">,</span>
      name<span class="token punctuation">:</span> <span class="token string">'image.png'</span><span class="token punctuation">,</span>
      status<span class="token punctuation">:</span> <span class="token string">'done'</span><span class="token punctuation">,</span>
      url<span class="token punctuation">:</span> <span class="token string">'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> onChange <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> fileList<span class="token punctuation">:</span> newFileList <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>
    <span class="token function">setFileList</span><span class="token punctuation">(</span>newFileList<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> onPreview <span class="token operator">=</span> <span class="token keyword">async</span> file <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> src <span class="token operator">=</span> file<span class="token punctuation">.</span>url<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>src<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      src <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span>resolve <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> reader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileReader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        reader<span class="token punctuation">.</span><span class="token function">readAsDataURL</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>originFileObj<span class="token punctuation">)</span><span class="token punctuation">;</span>
        reader<span class="token punctuation">.</span>onload <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">resolve</span><span class="token punctuation">(</span>reader<span class="token punctuation">.</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">const</span> image <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Image</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    image<span class="token punctuation">.</span>src <span class="token operator">=</span> src<span class="token punctuation">;</span>
    <span class="token keyword">const</span> imgWindow <span class="token operator">=</span> window<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span>src<span class="token punctuation">)</span><span class="token punctuation">;</span>
    imgWindow<span class="token punctuation">.</span>document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>image<span class="token punctuation">.</span>outerHTML<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ImgCrop</span> <span class="token attr-name">rotate</span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Upload</span>
        <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://www.mocky.io/v2/5cc8019d300000980a055e76<span class="token punctuation">"</span></span>
        <span class="token attr-name">listType</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>picture-card<span class="token punctuation">"</span></span>
        <span class="token attr-name">fileList</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>fileList<span class="token punctuation">}</span></span>
        <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>onChange<span class="token punctuation">}</span></span>
        <span class="token attr-name">onPreview</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>onPreview<span class="token punctuation">}</span></span>
      <span class="token punctuation">></span></span>
        <span class="token punctuation">{</span>fileList<span class="token punctuation">.</span>length <span class="token operator">&lt;</span> <span class="token number">5</span> <span class="token operator">&amp;&amp;</span> <span class="token string">'+ Upload'</span><span class="token punctuation">}</span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Upload</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ImgCrop</span><span class="token punctuation">></span></span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

ReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Demo</span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>`}],highlightedCodes:{jsx:`<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Upload <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> ImgCrop <span class="token keyword">from</span> <span class="token string">'antd-img-crop'</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">Demo</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>fileList<span class="token punctuation">,</span> setFileList<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      uid<span class="token operator">:</span> <span class="token string">'-1'</span><span class="token punctuation">,</span>
      name<span class="token operator">:</span> <span class="token string">'image.png'</span><span class="token punctuation">,</span>
      status<span class="token operator">:</span> <span class="token string">'done'</span><span class="token punctuation">,</span>
      url<span class="token operator">:</span> <span class="token string">'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> <span class="token function-variable function">onChange</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> fileList<span class="token operator">:</span> newFileList <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token function">setFileList</span><span class="token punctuation">(</span>newFileList<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> <span class="token function-variable function">onPreview</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token parameter">file</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> src <span class="token operator">=</span> file<span class="token punctuation">.</span>url<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>src<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      src <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token parameter">resolve</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> reader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileReader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        reader<span class="token punctuation">.</span><span class="token function">readAsDataURL</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>originFileObj<span class="token punctuation">)</span><span class="token punctuation">;</span>
        reader<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token function">resolve</span><span class="token punctuation">(</span>reader<span class="token punctuation">.</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">const</span> image <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Image</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    image<span class="token punctuation">.</span>src <span class="token operator">=</span> src<span class="token punctuation">;</span>
    <span class="token keyword">const</span> imgWindow <span class="token operator">=</span> window<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span>src<span class="token punctuation">)</span><span class="token punctuation">;</span>
    imgWindow<span class="token punctuation">.</span>document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>image<span class="token punctuation">.</span>outerHTML<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">ImgCrop</span></span> <span class="token attr-name">rotate</span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Upload</span></span>
        <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://www.mocky.io/v2/5cc8019d300000980a055e76<span class="token punctuation">"</span></span>
        <span class="token attr-name">listType</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>picture-card<span class="token punctuation">"</span></span>
        <span class="token attr-name">fileList</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>fileList<span class="token punctuation">}</span></span>
        <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>onChange<span class="token punctuation">}</span></span>
        <span class="token attr-name">onPreview</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>onPreview<span class="token punctuation">}</span></span>
      <span class="token punctuation">></span></span>
        <span class="token punctuation">{</span>fileList<span class="token punctuation">.</span>length <span class="token operator">&lt;</span> <span class="token number">5</span> <span class="token operator">&amp;&amp;</span> <span class="token string">'+ Upload'</span><span class="token punctuation">}</span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Upload</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">ImgCrop</span></span><span class="token punctuation">></span></span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

ReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Demo</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>`},preview:function na(){var j=m(0),L=m(28);function o(n){return typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"?o=function k(b){return typeof b}:o=function k(b){return b&&typeof Symbol==="function"&&b.constructor===Symbol&&b!==Symbol.prototype?"symbol":typeof b},o(n)}var s=A(m(0)),t=m(8),F=r(m(4056));function r(n){return n&&n.__esModule?n:{default:n}}function z(){if(typeof WeakMap!=="function")return null;var n=new WeakMap();return z=function k(){return n},n}function A(n){if(n&&n.__esModule)return n;if(n===null||o(n)!=="object"&&typeof n!=="function")return{default:n};var k=z();if(k&&k.has(n))return k.get(n);var b={},e=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var f in n)if(Object.prototype.hasOwnProperty.call(n,f)){var i=e?Object.getOwnPropertyDescriptor(n,f):null;i&&(i.get||i.set)?Object.defineProperty(b,f,i):b[f]=n[f]}return b.default=n,k&&k.set(n,b),b}function G(n,k,b,e,f,i,g){try{var d=n[i](g),a=d.value}catch(c){b(c);return}d.done?k(a):Promise.resolve(a).then(e,f)}function H(n){return function(){var k=this,b=arguments;return new Promise(function(e,f){var i=n.apply(k,b);function g(a){G(i,e,f,g,d,"next",a)}function d(a){G(i,e,f,g,d,"throw",a)}g(void 0)})}}function D(n,k){return u(n)||p(n,k)||M(n,k)||I()}function I(){throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function M(n,k){if(!n)return;if(typeof n==="string")return B(n,k);var b=Object.prototype.toString.call(n).slice(8,-1);b==="Object"&&n.constructor&&(b=n.constructor.name);if(b==="Map"||b==="Set")return Array.from(n);if(b==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(b))return B(n,k)}function B(n,k){(k==null||k>n.length)&&(k=n.length);for(var b=0,e=new Array(k);b<k;b++)e[b]=n[b];return e}function p(n,k){if(typeof Symbol==="undefined"||!(Symbol.iterator in Object(n)))return;var b=[],e=!0,f=!1,i=void 0;try{for(var g=n[Symbol.iterator](),d;!(e=(d=g.next()).done);e=!0){b.push(d.value);if(k&&b.length===k)break}}catch(a){f=!0,i=a}finally{try{!e&&g.return!=null&&g.return()}finally{if(f)throw i}}return b}function u(n){if(Array.isArray(n))return n}var q=function n(){var k=(0,s.useState)([{uid:"-1",name:"image.png",status:"done",url:"https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png"}]),b=D(k,2),e=b[0],f=b[1],i=function d(a){var c=a.fileList;f(c)},g=function(){var d=H(regeneratorRuntime.mark(function a(c){var h,l,w;return regeneratorRuntime.wrap(function v(E){for(;;)switch(E.prev=E.next){case 0:h=c.url;if(h){E.next=5;break}return E.next=4,new Promise(function(x){var C=new FileReader();C.readAsDataURL(c.originFileObj),C.onload=function(){return x(C.result)}});case 4:h=E.sent;case 5:l=new Image(),l.src=h,w=window.open(h),w.document.write(l.outerHTML);case 9:case"end":return E.stop()}},a)}));return function a(c){return d.apply(this,arguments)}}();return s.default.createElement(F.default,{rotate:!0},s.default.createElement(t.Upload,{action:"https://www.mocky.io/v2/5cc8019d300000980a055e76",listType:"picture-card",fileList:e,onChange:i,onPreview:g},e.length<5&&"+ Upload"))};return s.default.createElement(q,null)}}},4039:function(y,K,m){y.exports={content:{"zh-CN":[["p","使用 ",["code","progress"]," 属性自定义进度条样式。"]],"en-US":[["p","Use ",["code","progress"]," for customize progress bar."]]},meta:{order:15,title:{"zh-CN":"自定义进度条样式","en-US":"Customize Progress Bar"},filename:"components/upload/demo/customize-progress-bar.md",id:"components-upload-demo-customize-progress-bar"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"jsx",highlighted:`<span class="token keyword">import</span> <span class="token punctuation">{</span> Upload<span class="token punctuation">,</span> message<span class="token punctuation">,</span> Button <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> UploadOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'@ant-design/icons'</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> props <span class="token operator">=</span> <span class="token punctuation">{</span>
  name<span class="token punctuation">:</span> <span class="token string">'file'</span><span class="token punctuation">,</span>
  action<span class="token punctuation">:</span> <span class="token string">'https://www.mocky.io/v2/5cc8019d300000980a055e76'</span><span class="token punctuation">,</span>
  headers<span class="token punctuation">:</span> <span class="token punctuation">{</span>
    authorization<span class="token punctuation">:</span> <span class="token string">'authorization-text'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">onChange</span><span class="token punctuation">(</span>info<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>status <span class="token operator">!==</span> <span class="token string">'uploading'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>info<span class="token punctuation">.</span>file<span class="token punctuation">,</span> info<span class="token punctuation">.</span>fileList<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token string">'done'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      message<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token template-string"><span class="token string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> file uploaded successfully\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token string">'error'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token template-string"><span class="token string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> file upload failed.\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  progress<span class="token punctuation">:</span> <span class="token punctuation">{</span>
    strokeColor<span class="token punctuation">:</span> <span class="token punctuation">{</span>
      <span class="token string">'0%'</span><span class="token punctuation">:</span> <span class="token string">'#108ee9'</span><span class="token punctuation">,</span>
      <span class="token string">'100%'</span><span class="token punctuation">:</span> <span class="token string">'#87d068'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    strokeWidth<span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span>
    format<span class="token punctuation">:</span> percent <span class="token operator">=</span><span class="token operator">></span> <span class="token template-string"><span class="token string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token function">parseFloat</span><span class="token punctuation">(</span>percent<span class="token punctuation">.</span><span class="token function">toFixed</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">%\`</span></span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

ReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>
  <span class="token operator">&lt;</span>Upload <span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span><span class="token operator">></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>UploadOutlined</span> <span class="token punctuation">/></span></span> Click to Upload
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Upload</span><span class="token punctuation">></span></span><span class="token punctuation">,</span>
  mountNode<span class="token punctuation">,</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>`}],highlightedCodes:{jsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> Upload<span class="token punctuation">,</span> message<span class="token punctuation">,</span> Button <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> UploadOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'@ant-design/icons'</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> props <span class="token operator">=</span> <span class="token punctuation">{</span>
  name<span class="token operator">:</span> <span class="token string">'file'</span><span class="token punctuation">,</span>
  action<span class="token operator">:</span> <span class="token string">'https://www.mocky.io/v2/5cc8019d300000980a055e76'</span><span class="token punctuation">,</span>
  headers<span class="token operator">:</span> <span class="token punctuation">{</span>
    authorization<span class="token operator">:</span> <span class="token string">'authorization-text'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">onChange</span><span class="token punctuation">(</span><span class="token parameter">info</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>status <span class="token operator">!==</span> <span class="token string">'uploading'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>info<span class="token punctuation">.</span>file<span class="token punctuation">,</span> info<span class="token punctuation">.</span>fileList<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token string">'done'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      message<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> file uploaded successfully</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token string">'error'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> file upload failed.</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  progress<span class="token operator">:</span> <span class="token punctuation">{</span>
    strokeColor<span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token string">'0%'</span><span class="token operator">:</span> <span class="token string">'#108ee9'</span><span class="token punctuation">,</span>
      <span class="token string">'100%'</span><span class="token operator">:</span> <span class="token string">'#87d068'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    strokeWidth<span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>
    <span class="token function-variable function">format</span><span class="token operator">:</span> <span class="token parameter">percent</span> <span class="token operator">=></span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token function">parseFloat</span><span class="token punctuation">(</span>percent<span class="token punctuation">.</span><span class="token function">toFixed</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">%</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

ReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Upload</span></span> <span class="token spread"><span class="token punctuation">{</span><span class="token punctuation">...</span><span class="token attr-value">props</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">UploadOutlined</span></span> <span class="token punctuation">/></span></span> Click to Upload
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Upload</span></span><span class="token punctuation">></span></span><span class="token punctuation">,</span>
  mountNode<span class="token punctuation">,</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>`},preview:function na(){var j=m(0),L=m(28),o=m(8),s=m(47),t={name:"file",action:"https://www.mocky.io/v2/5cc8019d300000980a055e76",headers:{authorization:"authorization-text"},onChange:function F(r){r.file.status!=="uploading"&&console.log(r.file,r.fileList),r.file.status==="done"?o.message.success("".concat(r.file.name," file uploaded successfully")):r.file.status==="error"&&o.message.error("".concat(r.file.name," file upload failed."))},progress:{strokeColor:{"0%":"#108ee9","100%":"#87d068"},strokeWidth:3,format:function F(r){return"".concat(parseFloat(r.toFixed(2)),"%")}}};return j.createElement(o.Upload,t,j.createElement(o.Button,null,j.createElement(s.UploadOutlined,null)," Click to Upload"))}}},4040:function(y,K,m){y.exports={content:{"zh-CN":[["p","使用 ",["code","defaultFileList"]," 设置已上传的内容。"]],"en-US":[["p","Use ",["code","defaultFileList"]," for uploaded files when page init."]]},meta:{order:2,title:{"zh-CN":"已上传的文件列表","en-US":"Default Files"},filename:"components/upload/demo/defaultFileList.md",id:"components-upload-demo-defaultFileList"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"jsx",highlighted:`<span class="token keyword">import</span> <span class="token punctuation">{</span> Upload<span class="token punctuation">,</span> Button <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> UploadOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'@ant-design/icons'</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> props <span class="token operator">=</span> <span class="token punctuation">{</span>
  action<span class="token punctuation">:</span> <span class="token string">'https://www.mocky.io/v2/5cc8019d300000980a055e76'</span><span class="token punctuation">,</span>
  <span class="token function">onChange</span><span class="token punctuation">(</span><span class="token punctuation">{</span> file<span class="token punctuation">,</span> fileList <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>file<span class="token punctuation">.</span>status <span class="token operator">!==</span> <span class="token string">'uploading'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>file<span class="token punctuation">,</span> fileList<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  defaultFileList<span class="token punctuation">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      uid<span class="token punctuation">:</span> <span class="token string">'1'</span><span class="token punctuation">,</span>
      name<span class="token punctuation">:</span> <span class="token string">'xxx.png'</span><span class="token punctuation">,</span>
      status<span class="token punctuation">:</span> <span class="token string">'done'</span><span class="token punctuation">,</span>
      response<span class="token punctuation">:</span> <span class="token string">'Server Error 500'</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// custom error message to show</span>
      url<span class="token punctuation">:</span> <span class="token string">'http://www.baidu.com/xxx.png'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      uid<span class="token punctuation">:</span> <span class="token string">'2'</span><span class="token punctuation">,</span>
      name<span class="token punctuation">:</span> <span class="token string">'yyy.png'</span><span class="token punctuation">,</span>
      status<span class="token punctuation">:</span> <span class="token string">'done'</span><span class="token punctuation">,</span>
      url<span class="token punctuation">:</span> <span class="token string">'http://www.baidu.com/yyy.png'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      uid<span class="token punctuation">:</span> <span class="token string">'3'</span><span class="token punctuation">,</span>
      name<span class="token punctuation">:</span> <span class="token string">'zzz.png'</span><span class="token punctuation">,</span>
      status<span class="token punctuation">:</span> <span class="token string">'error'</span><span class="token punctuation">,</span>
      response<span class="token punctuation">:</span> <span class="token string">'Server Error 500'</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// custom error message to show</span>
      url<span class="token punctuation">:</span> <span class="token string">'http://www.baidu.com/zzz.png'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

ReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>
  <span class="token operator">&lt;</span>Upload <span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span><span class="token operator">></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>UploadOutlined</span> <span class="token punctuation">/></span></span> Upload
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Upload</span><span class="token punctuation">></span></span><span class="token punctuation">,</span>
  mountNode<span class="token punctuation">,</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>`}],highlightedCodes:{jsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> Upload<span class="token punctuation">,</span> Button <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> UploadOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'@ant-design/icons'</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> props <span class="token operator">=</span> <span class="token punctuation">{</span>
  action<span class="token operator">:</span> <span class="token string">'https://www.mocky.io/v2/5cc8019d300000980a055e76'</span><span class="token punctuation">,</span>
  <span class="token function">onChange</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> file<span class="token punctuation">,</span> fileList <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>file<span class="token punctuation">.</span>status <span class="token operator">!==</span> <span class="token string">'uploading'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>file<span class="token punctuation">,</span> fileList<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  defaultFileList<span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      uid<span class="token operator">:</span> <span class="token string">'1'</span><span class="token punctuation">,</span>
      name<span class="token operator">:</span> <span class="token string">'xxx.png'</span><span class="token punctuation">,</span>
      status<span class="token operator">:</span> <span class="token string">'done'</span><span class="token punctuation">,</span>
      response<span class="token operator">:</span> <span class="token string">'Server Error 500'</span><span class="token punctuation">,</span> <span class="token comment">// custom error message to show</span>
      url<span class="token operator">:</span> <span class="token string">'http://www.baidu.com/xxx.png'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      uid<span class="token operator">:</span> <span class="token string">'2'</span><span class="token punctuation">,</span>
      name<span class="token operator">:</span> <span class="token string">'yyy.png'</span><span class="token punctuation">,</span>
      status<span class="token operator">:</span> <span class="token string">'done'</span><span class="token punctuation">,</span>
      url<span class="token operator">:</span> <span class="token string">'http://www.baidu.com/yyy.png'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      uid<span class="token operator">:</span> <span class="token string">'3'</span><span class="token punctuation">,</span>
      name<span class="token operator">:</span> <span class="token string">'zzz.png'</span><span class="token punctuation">,</span>
      status<span class="token operator">:</span> <span class="token string">'error'</span><span class="token punctuation">,</span>
      response<span class="token operator">:</span> <span class="token string">'Server Error 500'</span><span class="token punctuation">,</span> <span class="token comment">// custom error message to show</span>
      url<span class="token operator">:</span> <span class="token string">'http://www.baidu.com/zzz.png'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

ReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Upload</span></span> <span class="token spread"><span class="token punctuation">{</span><span class="token punctuation">...</span><span class="token attr-value">props</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">UploadOutlined</span></span> <span class="token punctuation">/></span></span> Upload
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Upload</span></span><span class="token punctuation">></span></span><span class="token punctuation">,</span>
  mountNode<span class="token punctuation">,</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>`},preview:function na(){var j=m(0),L=m(28),o=m(8),s=m(47),t={action:"https://www.mocky.io/v2/5cc8019d300000980a055e76",onChange:function F(r){var z=r.file,A=r.fileList;z.status!=="uploading"&&console.log(z,A)},defaultFileList:[{uid:"1",name:"xxx.png",status:"done",response:"Server Error 500",url:"http://www.baidu.com/xxx.png"},{uid:"2",name:"yyy.png",status:"done",url:"http://www.baidu.com/yyy.png"},{uid:"3",name:"zzz.png",status:"error",response:"Server Error 500",url:"http://www.baidu.com/zzz.png"}]};return j.createElement(o.Upload,t,j.createElement(o.Button,null,j.createElement(s.UploadOutlined,null)," Upload"))}}},4041:function(y,K,m){y.exports={content:{"zh-CN":[["p","支持上传一个文件夹里的所有文件。"]],"en-US":[["p","You can select and upload a whole directory."]]},meta:{order:6,title:{"zh-CN":"文件夹上传","en-US":"Upload directory"},filename:"components/upload/demo/directory.md",id:"components-upload-demo-directory"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"jsx",highlighted:`<span class="token keyword">import</span> <span class="token punctuation">{</span> Upload<span class="token punctuation">,</span> Button <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> UploadOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'@ant-design/icons'</span><span class="token punctuation">;</span>

ReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Upload</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://www.mocky.io/v2/5cc8019d300000980a055e76<span class="token punctuation">"</span></span> <span class="token attr-name">directory</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>UploadOutlined</span> <span class="token punctuation">/></span></span> Upload Directory
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Upload</span><span class="token punctuation">></span></span><span class="token punctuation">,</span>
  mountNode<span class="token punctuation">,</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>`}],highlightedCodes:{jsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> Upload<span class="token punctuation">,</span> Button <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> UploadOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'@ant-design/icons'</span><span class="token punctuation">;</span>

ReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Upload</span></span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://www.mocky.io/v2/5cc8019d300000980a055e76<span class="token punctuation">"</span></span> <span class="token attr-name">directory</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">UploadOutlined</span></span> <span class="token punctuation">/></span></span> Upload Directory
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Upload</span></span><span class="token punctuation">></span></span><span class="token punctuation">,</span>
  mountNode<span class="token punctuation">,</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>`},preview:function na(){var j=m(0),L=m(28),o=m(8),s=m(47);return j.createElement(o.Upload,{action:"https://www.mocky.io/v2/5cc8019d300000980a055e76",directory:!0},j.createElement(o.Button,null,j.createElement(s.UploadOutlined,null)," Upload Directory"))}}},4042:function(y,K,m){y.exports={content:{"zh-CN":[["p","把文件拖入指定区域，完成上传，同样支持点击上传。"],["p","设置 ",["code","multiple"]," 后，在 ",["code","IE10+"]," 可以一次上传多个文件。"]],"en-US":[["p","You can drag files to a specific area, to upload. Alternatively, you can also upload by selecting."],["p","We can upload serveral files at once in modern browsers by giving the input the ",["code","multiple"]," attribute."]]},meta:{order:5,title:{"zh-CN":"拖拽上传","en-US":"Drag and Drop"},filename:"components/upload/demo/drag.md",id:"components-upload-demo-drag"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"jsx",highlighted:`<span class="token keyword">import</span> <span class="token punctuation">{</span> Upload<span class="token punctuation">,</span> message <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> InboxOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'@ant-design/icons'</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token punctuation">{</span> Dragger <span class="token punctuation">}</span> <span class="token operator">=</span> Upload<span class="token punctuation">;</span>

<span class="token keyword">const</span> props <span class="token operator">=</span> <span class="token punctuation">{</span>
  name<span class="token punctuation">:</span> <span class="token string">'file'</span><span class="token punctuation">,</span>
  multiple<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  action<span class="token punctuation">:</span> <span class="token string">'https://www.mocky.io/v2/5cc8019d300000980a055e76'</span><span class="token punctuation">,</span>
  <span class="token function">onChange</span><span class="token punctuation">(</span>info<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> status <span class="token punctuation">}</span> <span class="token operator">=</span> info<span class="token punctuation">.</span>file<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>status <span class="token operator">!==</span> <span class="token string">'uploading'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>info<span class="token punctuation">.</span>file<span class="token punctuation">,</span> info<span class="token punctuation">.</span>fileList<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>status <span class="token operator">===</span> <span class="token string">'done'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      message<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token template-string"><span class="token string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> file uploaded successfully.\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>status <span class="token operator">===</span> <span class="token string">'error'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token template-string"><span class="token string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> file upload failed.\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

ReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>
  <span class="token operator">&lt;</span>Dragger <span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span><span class="token operator">></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ant-upload-drag-icon<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>InboxOutlined</span> <span class="token punctuation">/></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ant-upload-text<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Click or drag file to <span class="token keyword">this</span> area to upload<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ant-upload-hint<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
      Support <span class="token keyword">for</span> a single or bulk upload<span class="token punctuation">.</span> Strictly prohibit <span class="token keyword">from</span> uploading company data or other
      band files
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Dragger</span><span class="token punctuation">></span></span><span class="token punctuation">,</span>
  mountNode<span class="token punctuation">,</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>`}],highlightedCodes:{jsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> Upload<span class="token punctuation">,</span> message <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> InboxOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'@ant-design/icons'</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token punctuation">{</span> Dragger <span class="token punctuation">}</span> <span class="token operator">=</span> Upload<span class="token punctuation">;</span>

<span class="token keyword">const</span> props <span class="token operator">=</span> <span class="token punctuation">{</span>
  name<span class="token operator">:</span> <span class="token string">'file'</span><span class="token punctuation">,</span>
  multiple<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  action<span class="token operator">:</span> <span class="token string">'https://www.mocky.io/v2/5cc8019d300000980a055e76'</span><span class="token punctuation">,</span>
  <span class="token function">onChange</span><span class="token punctuation">(</span><span class="token parameter">info</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> status <span class="token punctuation">}</span> <span class="token operator">=</span> info<span class="token punctuation">.</span>file<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>status <span class="token operator">!==</span> <span class="token string">'uploading'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>info<span class="token punctuation">.</span>file<span class="token punctuation">,</span> info<span class="token punctuation">.</span>fileList<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>status <span class="token operator">===</span> <span class="token string">'done'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      message<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> file uploaded successfully.</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>status <span class="token operator">===</span> <span class="token string">'error'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> file upload failed.</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

ReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Dragger</span></span> <span class="token spread"><span class="token punctuation">{</span><span class="token punctuation">...</span><span class="token attr-value">props</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ant-upload-drag-icon<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">InboxOutlined</span></span> <span class="token punctuation">/></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ant-upload-text<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Click or drag file to <span class="token keyword">this</span> area to upload<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ant-upload-hint<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
      Support <span class="token keyword">for</span> a single or bulk upload<span class="token punctuation">.</span> Strictly prohibit <span class="token keyword">from</span> uploading company data or other
      band files
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Dragger</span></span><span class="token punctuation">></span></span><span class="token punctuation">,</span>
  mountNode<span class="token punctuation">,</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>`},preview:function na(){var j=m(0),L=m(28),o=m(8),s=m(47),t=o.Upload.Dragger,F={name:"file",multiple:!0,action:"https://www.mocky.io/v2/5cc8019d300000980a055e76",onChange:function r(z){var A=z.file.status;A!=="uploading"&&console.log(z.file,z.fileList),A==="done"?o.message.success("".concat(z.file.name," file uploaded successfully.")):A==="error"&&o.message.error("".concat(z.file.name," file upload failed."))}};return j.createElement(t,F,j.createElement("p",{className:"ant-upload-drag-icon"},j.createElement(s.InboxOutlined,null)),j.createElement("p",{className:"ant-upload-text"},"Click or drag file to this area to upload"),j.createElement("p",{className:"ant-upload-hint"},"Support for a single or bulk upload. Strictly prohibit from uploading company data or other band files"))}}},4043:function(y,K,m){y.exports={content:{"zh-CN":[["p","根据类型默认显示对应 icon"]],"en-US":[["p","Displays the corresponding by default by type icon"]]},meta:{order:12,debug:!0,title:{"zh-CN":"自定义显示 icon","en-US":"custom show icon"},filename:"components/upload/demo/file-type.md",id:"components-upload-demo-file-type"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"jsx",highlighted:`<span class="token keyword">import</span> <span class="token punctuation">{</span> Upload<span class="token punctuation">,</span> Modal <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span>
  LoadingOutlined<span class="token punctuation">,</span>
  PaperClipOutlined<span class="token punctuation">,</span>
  PictureTwoTone<span class="token punctuation">,</span>
  FilePdfTwoTone<span class="token punctuation">,</span>
  FileWordTwoTone<span class="token punctuation">,</span>
  FileExcelTwoTone<span class="token punctuation">,</span>
  PlusOutlined<span class="token punctuation">,</span>
<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'@ant-design/icons'</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">getBase64</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> reader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileReader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    reader<span class="token punctuation">.</span><span class="token function">readAsDataURL</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>
    reader<span class="token punctuation">.</span>onload <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">resolve</span><span class="token punctuation">(</span>reader<span class="token punctuation">.</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
    reader<span class="token punctuation">.</span>onerror <span class="token operator">=</span> error <span class="token operator">=</span><span class="token operator">></span> <span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">PicturesWall</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>
  state <span class="token operator">=</span> <span class="token punctuation">{</span>
    previewVisible<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    previewImage<span class="token punctuation">:</span> <span class="token string">''</span><span class="token punctuation">,</span>
    fileList<span class="token punctuation">:</span> <span class="token punctuation">[</span>
      <span class="token punctuation">{</span>
        uid<span class="token punctuation">:</span> <span class="token string">'-2'</span><span class="token punctuation">,</span>
        name<span class="token punctuation">:</span> <span class="token string">'pdf.pdf'</span><span class="token punctuation">,</span>
        status<span class="token punctuation">:</span> <span class="token string">'done'</span><span class="token punctuation">,</span>
        url<span class="token punctuation">:</span> <span class="token string">'http://cdn07.foxitsoftware.cn/pub/foxit/cpdf/FoxitCompanyProfile.pdf'</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        uid<span class="token punctuation">:</span> <span class="token string">'-3'</span><span class="token punctuation">,</span>
        name<span class="token punctuation">:</span> <span class="token string">'doc.doc'</span><span class="token punctuation">,</span>
        status<span class="token punctuation">:</span> <span class="token string">'done'</span><span class="token punctuation">,</span>
        url<span class="token punctuation">:</span> <span class="token string">'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.doc'</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        uid<span class="token punctuation">:</span> <span class="token string">'-4'</span><span class="token punctuation">,</span>
        name<span class="token punctuation">:</span> <span class="token string">'image.png'</span><span class="token punctuation">,</span>
        status<span class="token punctuation">:</span> <span class="token string">'error'</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        uid<span class="token punctuation">:</span> <span class="token string">'-5'</span><span class="token punctuation">,</span>
        name<span class="token punctuation">:</span> <span class="token string">'pdf.pdf'</span><span class="token punctuation">,</span>
        status<span class="token punctuation">:</span> <span class="token string">'error'</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        uid<span class="token punctuation">:</span> <span class="token string">'-6'</span><span class="token punctuation">,</span>
        name<span class="token punctuation">:</span> <span class="token string">'doc.doc'</span><span class="token punctuation">,</span>
        status<span class="token punctuation">:</span> <span class="token string">'error'</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  handleCancel <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> previewVisible<span class="token punctuation">:</span> <span class="token boolean">false</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  handlePreview <span class="token operator">=</span> <span class="token keyword">async</span> file <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>file<span class="token punctuation">.</span>url <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>file<span class="token punctuation">.</span>preview<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      file<span class="token punctuation">.</span>preview <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">getBase64</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>originFileObj<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      previewImage<span class="token punctuation">:</span> file<span class="token punctuation">.</span>url <span class="token operator">||</span> file<span class="token punctuation">.</span>preview<span class="token punctuation">,</span>
      previewVisible<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  handleChange <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> fileList <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> fileList <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  handleIconRender <span class="token operator">=</span> <span class="token punctuation">(</span>file<span class="token punctuation">,</span> listType<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> fileSufIconList <span class="token operator">=</span> <span class="token punctuation">[</span>
      <span class="token punctuation">{</span> type<span class="token punctuation">:</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>FilePdfTwoTone</span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> suf<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'.pdf'</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span> type<span class="token punctuation">:</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>FileExcelTwoTone</span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> suf<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'.xlsx'</span><span class="token punctuation">,</span> <span class="token string">'.xls'</span><span class="token punctuation">,</span> <span class="token string">'.csv'</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span> type<span class="token punctuation">:</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>FileWordTwoTone</span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> suf<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'.doc'</span><span class="token punctuation">,</span> <span class="token string">'.docx'</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        type<span class="token punctuation">:</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>PictureTwoTone</span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span>
        suf<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'.webp'</span><span class="token punctuation">,</span> <span class="token string">'.svg'</span><span class="token punctuation">,</span> <span class="token string">'.png'</span><span class="token punctuation">,</span> <span class="token string">'.gif'</span><span class="token punctuation">,</span> <span class="token string">'.jpg'</span><span class="token punctuation">,</span> <span class="token string">'.jpeg'</span><span class="token punctuation">,</span> <span class="token string">'.jfif'</span><span class="token punctuation">,</span> <span class="token string">'.bmp'</span><span class="token punctuation">,</span> <span class="token string">'.dpg'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token comment" spellcheck="true">// console.log(1, file, listType);</span>
    <span class="token keyword">let</span> icon <span class="token operator">=</span> file<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token string">'uploading'</span> <span class="token operator">?</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LoadingOutlined</span> <span class="token punctuation">/></span></span> <span class="token punctuation">:</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>PaperClipOutlined</span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>listType <span class="token operator">===</span> <span class="token string">'picture'</span> <span class="token operator">||</span> listType <span class="token operator">===</span> <span class="token string">'picture-card'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>listType <span class="token operator">===</span> <span class="token string">'picture-card'</span> <span class="token operator">&amp;&amp;</span> file<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token string">'uploading'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        icon <span class="token operator">=</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LoadingOutlined</span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// or icon = 'uploading...';</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        fileSufIconList<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>item <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span>item<span class="token punctuation">.</span>suf<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>name<span class="token punctuation">.</span><span class="token function">substr</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>name<span class="token punctuation">.</span><span class="token function">lastIndexOf</span><span class="token punctuation">(</span><span class="token string">'.'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            icon <span class="token operator">=</span> item<span class="token punctuation">.</span>type<span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> icon<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> previewVisible<span class="token punctuation">,</span> previewImage<span class="token punctuation">,</span> fileList <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">;</span>
    <span class="token keyword">const</span> uploadButton <span class="token operator">=</span> <span class="token punctuation">(</span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>PlusOutlined</span> <span class="token punctuation">/></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ant-upload-text<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Upload<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>clearfix<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Upload</span>
          <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://www.mocky.io/v2/5cc8019d300000980a055e76<span class="token punctuation">"</span></span>
          <span class="token attr-name">listType</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>picture-card<span class="token punctuation">"</span></span>
          <span class="token attr-name">fileList</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>fileList<span class="token punctuation">}</span></span>
          <span class="token attr-name">onPreview</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>handlePreview<span class="token punctuation">}</span></span>
          <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>handleChange<span class="token punctuation">}</span></span>
          <span class="token attr-name">iconRender</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>handleIconRender<span class="token punctuation">}</span></span>
        <span class="token punctuation">></span></span>
          <span class="token punctuation">{</span>fileList<span class="token punctuation">.</span>length <span class="token operator">>=</span> <span class="token number">8</span> <span class="token operator">?</span> <span class="token keyword">null</span> <span class="token punctuation">:</span> uploadButton<span class="token punctuation">}</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Upload</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Modal</span> <span class="token attr-name">visible</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>previewVisible<span class="token punctuation">}</span></span> <span class="token attr-name">footer</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">null</span><span class="token punctuation">}</span></span> <span class="token attr-name">onCancel</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>handleCancel<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>example<span class="token punctuation">"</span></span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> width<span class="token punctuation">:</span> <span class="token string">'100%'</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span> <span class="token attr-name">src</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>previewImage<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Modal</span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

ReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>PicturesWall</span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>`}],highlightedCodes:{jsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> Upload<span class="token punctuation">,</span> Modal <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span>
  LoadingOutlined<span class="token punctuation">,</span>
  PaperClipOutlined<span class="token punctuation">,</span>
  PictureTwoTone<span class="token punctuation">,</span>
  FilePdfTwoTone<span class="token punctuation">,</span>
  FileWordTwoTone<span class="token punctuation">,</span>
  FileExcelTwoTone<span class="token punctuation">,</span>
  PlusOutlined<span class="token punctuation">,</span>
<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'@ant-design/icons'</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">getBase64</span><span class="token punctuation">(</span><span class="token parameter">file</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> reader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileReader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    reader<span class="token punctuation">.</span><span class="token function">readAsDataURL</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>
    reader<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token function">resolve</span><span class="token punctuation">(</span>reader<span class="token punctuation">.</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
    reader<span class="token punctuation">.</span><span class="token function-variable function">onerror</span> <span class="token operator">=</span> <span class="token parameter">error</span> <span class="token operator">=></span> <span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">PicturesWall</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>
  state <span class="token operator">=</span> <span class="token punctuation">{</span>
    previewVisible<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    previewImage<span class="token operator">:</span> <span class="token string">''</span><span class="token punctuation">,</span>
    fileList<span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token punctuation">{</span>
        uid<span class="token operator">:</span> <span class="token string">'-2'</span><span class="token punctuation">,</span>
        name<span class="token operator">:</span> <span class="token string">'pdf.pdf'</span><span class="token punctuation">,</span>
        status<span class="token operator">:</span> <span class="token string">'done'</span><span class="token punctuation">,</span>
        url<span class="token operator">:</span> <span class="token string">'http://cdn07.foxitsoftware.cn/pub/foxit/cpdf/FoxitCompanyProfile.pdf'</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        uid<span class="token operator">:</span> <span class="token string">'-3'</span><span class="token punctuation">,</span>
        name<span class="token operator">:</span> <span class="token string">'doc.doc'</span><span class="token punctuation">,</span>
        status<span class="token operator">:</span> <span class="token string">'done'</span><span class="token punctuation">,</span>
        url<span class="token operator">:</span> <span class="token string">'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.doc'</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        uid<span class="token operator">:</span> <span class="token string">'-4'</span><span class="token punctuation">,</span>
        name<span class="token operator">:</span> <span class="token string">'image.png'</span><span class="token punctuation">,</span>
        status<span class="token operator">:</span> <span class="token string">'error'</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        uid<span class="token operator">:</span> <span class="token string">'-5'</span><span class="token punctuation">,</span>
        name<span class="token operator">:</span> <span class="token string">'pdf.pdf'</span><span class="token punctuation">,</span>
        status<span class="token operator">:</span> <span class="token string">'error'</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        uid<span class="token operator">:</span> <span class="token string">'-6'</span><span class="token punctuation">,</span>
        name<span class="token operator">:</span> <span class="token string">'doc.doc'</span><span class="token punctuation">,</span>
        status<span class="token operator">:</span> <span class="token string">'error'</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token function-variable function">handleCancel</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> previewVisible<span class="token operator">:</span> <span class="token boolean">false</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token function-variable function">handlePreview</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token parameter">file</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>file<span class="token punctuation">.</span>url <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>file<span class="token punctuation">.</span>preview<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      file<span class="token punctuation">.</span>preview <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">getBase64</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>originFileObj<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      previewImage<span class="token operator">:</span> file<span class="token punctuation">.</span>url <span class="token operator">||</span> file<span class="token punctuation">.</span>preview<span class="token punctuation">,</span>
      previewVisible<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token function-variable function">handleChange</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> fileList <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> fileList <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token function-variable function">handleIconRender</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">file<span class="token punctuation">,</span> listType</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> fileSufIconList <span class="token operator">=</span> <span class="token punctuation">[</span>
      <span class="token punctuation">{</span> type<span class="token operator">:</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">FilePdfTwoTone</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> suf<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'.pdf'</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span> type<span class="token operator">:</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">FileExcelTwoTone</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> suf<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'.xlsx'</span><span class="token punctuation">,</span> <span class="token string">'.xls'</span><span class="token punctuation">,</span> <span class="token string">'.csv'</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span> type<span class="token operator">:</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">FileWordTwoTone</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> suf<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'.doc'</span><span class="token punctuation">,</span> <span class="token string">'.docx'</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        type<span class="token operator">:</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">PictureTwoTone</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span>
        suf<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'.webp'</span><span class="token punctuation">,</span> <span class="token string">'.svg'</span><span class="token punctuation">,</span> <span class="token string">'.png'</span><span class="token punctuation">,</span> <span class="token string">'.gif'</span><span class="token punctuation">,</span> <span class="token string">'.jpg'</span><span class="token punctuation">,</span> <span class="token string">'.jpeg'</span><span class="token punctuation">,</span> <span class="token string">'.jfif'</span><span class="token punctuation">,</span> <span class="token string">'.bmp'</span><span class="token punctuation">,</span> <span class="token string">'.dpg'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token comment">// console.log(1, file, listType);</span>
    <span class="token keyword">let</span> icon <span class="token operator">=</span> file<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token string">'uploading'</span> <span class="token operator">?</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">LoadingOutlined</span></span> <span class="token punctuation">/></span></span> <span class="token operator">:</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">PaperClipOutlined</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>listType <span class="token operator">===</span> <span class="token string">'picture'</span> <span class="token operator">||</span> listType <span class="token operator">===</span> <span class="token string">'picture-card'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>listType <span class="token operator">===</span> <span class="token string">'picture-card'</span> <span class="token operator">&amp;&amp;</span> file<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token string">'uploading'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        icon <span class="token operator">=</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">LoadingOutlined</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span> <span class="token comment">// or icon = 'uploading...';</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        fileSufIconList<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span>item<span class="token punctuation">.</span>suf<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>name<span class="token punctuation">.</span><span class="token function">substr</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>name<span class="token punctuation">.</span><span class="token function">lastIndexOf</span><span class="token punctuation">(</span><span class="token string">'.'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            icon <span class="token operator">=</span> item<span class="token punctuation">.</span>type<span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> icon<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> previewVisible<span class="token punctuation">,</span> previewImage<span class="token punctuation">,</span> fileList <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">;</span>
    <span class="token keyword">const</span> uploadButton <span class="token operator">=</span> <span class="token punctuation">(</span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">PlusOutlined</span></span> <span class="token punctuation">/></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ant-upload-text<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Upload<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>clearfix<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Upload</span></span>
          <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://www.mocky.io/v2/5cc8019d300000980a055e76<span class="token punctuation">"</span></span>
          <span class="token attr-name">listType</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>picture-card<span class="token punctuation">"</span></span>
          <span class="token attr-name">fileList</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>fileList<span class="token punctuation">}</span></span>
          <span class="token attr-name">onPreview</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>handlePreview<span class="token punctuation">}</span></span>
          <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>handleChange<span class="token punctuation">}</span></span>
          <span class="token attr-name">iconRender</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>handleIconRender<span class="token punctuation">}</span></span>
        <span class="token punctuation">></span></span>
          <span class="token punctuation">{</span>fileList<span class="token punctuation">.</span>length <span class="token operator">>=</span> <span class="token number">8</span> <span class="token operator">?</span> <span class="token keyword">null</span> <span class="token operator">:</span> uploadButton<span class="token punctuation">}</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Upload</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Modal</span></span> <span class="token attr-name">visible</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>previewVisible<span class="token punctuation">}</span></span> <span class="token attr-name">footer</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">null</span><span class="token punctuation">}</span></span> <span class="token attr-name">onCancel</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>handleCancel<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>example<span class="token punctuation">"</span></span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> width<span class="token operator">:</span> <span class="token string">'100%'</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span> <span class="token attr-name">src</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>previewImage<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Modal</span></span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

ReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">PicturesWall</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>`},preview:function na(){var j=m(0),L=m(28),o=m(8),s=m(47);function t(b){return typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"?t=function e(f){return typeof f}:t=function e(f){return f&&typeof Symbol==="function"&&f.constructor===Symbol&&f!==Symbol.prototype?"symbol":typeof f},t(b)}function F(b,e,f,i,g,d,a){try{var c=b[d](a),h=c.value}catch(l){f(l);return}c.done?e(h):Promise.resolve(h).then(i,g)}function r(b){return function(){var e=this,f=arguments;return new Promise(function(i,g){var d=b.apply(e,f);function a(h){F(d,i,g,a,c,"next",h)}function c(h){F(d,i,g,a,c,"throw",h)}a(void 0)})}}function z(b,e){if(!(b instanceof e))throw new TypeError("Cannot call a class as a function")}function A(b,e){for(var f=0;f<e.length;f++){var i=e[f];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(b,i.key,i)}}function G(b,e,f){return e&&A(b.prototype,e),f&&A(b,f),b}function H(b,e){if(typeof e!=="function"&&e!==null)throw new TypeError("Super expression must either be null or a function");b.prototype=Object.create(e&&e.prototype,{constructor:{value:b,writable:!0,configurable:!0}}),e&&D(b,e)}function D(b,e){return D=Object.setPrototypeOf||function f(i,g){return i.__proto__=g,i},D(b,e)}function I(b){var e=p();return function f(){var i=u(b),g;if(e){var d=u(this).constructor;g=Reflect.construct(i,arguments,d)}else g=i.apply(this,arguments);return M(this,g)}}function M(b,e){return e&&(t(e)==="object"||typeof e==="function")?e:B(b)}function B(b){if(b===void 0)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return b}function p(){if(typeof Reflect==="undefined"||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if(typeof Proxy==="function")return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],function(){})),!0}catch(b){return!1}}function u(b){return u=Object.setPrototypeOf?Object.getPrototypeOf:function e(f){return f.__proto__||Object.getPrototypeOf(f)},u(b)}function q(b,e,f){return e in b?Object.defineProperty(b,e,{value:f,enumerable:!0,configurable:!0,writable:!0}):b[e]=f,b}function n(b){return new Promise(function(e,f){var i=new FileReader();i.readAsDataURL(b),i.onload=function(){return e(i.result)},i.onerror=function(g){return f(g)}})}var k=function(b){H(f,b);var e=I(f);function f(){var i;z(this,f);for(var g=arguments.length,d=new Array(g),a=0;a<g;a++)d[a]=arguments[a];return i=e.call.apply(e,[this].concat(d)),q(B(i),"state",{previewVisible:!1,previewImage:"",fileList:[{uid:"-2",name:"pdf.pdf",status:"done",url:"http://cdn07.foxitsoftware.cn/pub/foxit/cpdf/FoxitCompanyProfile.pdf"},{uid:"-3",name:"doc.doc",status:"done",url:"https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.doc"},{uid:"-4",name:"image.png",status:"error"},{uid:"-5",name:"pdf.pdf",status:"error"},{uid:"-6",name:"doc.doc",status:"error"}]}),q(B(i),"handleCancel",function(){return i.setState({previewVisible:!1})}),q(B(i),"handlePreview",function(){var c=r(regeneratorRuntime.mark(function h(l){return regeneratorRuntime.wrap(function w(v){for(;;)switch(v.prev=v.next){case 0:if(!(!l.url&&!l.preview)){v.next=4;break}return v.next=3,n(l.originFileObj);case 3:l.preview=v.sent;case 4:i.setState({previewImage:l.url||l.preview,previewVisible:!0});case 5:case"end":return v.stop()}},h)}));return function(h){return c.apply(this,arguments)}}()),q(B(i),"handleChange",function(c){var h=c.fileList;return i.setState({fileList:h})}),q(B(i),"handleIconRender",function(c,h){var l=[{type:j.createElement(s.FilePdfTwoTone,null),suf:[".pdf"]},{type:j.createElement(s.FileExcelTwoTone,null),suf:[".xlsx",".xls",".csv"]},{type:j.createElement(s.FileWordTwoTone,null),suf:[".doc",".docx"]},{type:j.createElement(s.PictureTwoTone,null),suf:[".webp",".svg",".png",".gif",".jpg",".jpeg",".jfif",".bmp",".dpg"]}],w=c.status==="uploading"?j.createElement(s.LoadingOutlined,null):j.createElement(s.PaperClipOutlined,null);return(h==="picture"||h==="picture-card")&&(h==="picture-card"&&c.status==="uploading"?w=j.createElement(s.LoadingOutlined,null):l.forEach(function(v){v.suf.includes(c.name.substr(c.name.lastIndexOf(".")))&&(w=v.type)})),w}),i}return G(f,[{key:"render",value:function i(){var g=this.state,d=g.previewVisible,a=g.previewImage,c=g.fileList,h=j.createElement("div",null,j.createElement(s.PlusOutlined,null),j.createElement("div",{className:"ant-upload-text"},"Upload"));return j.createElement("div",{className:"clearfix"},j.createElement(o.Upload,{action:"https://www.mocky.io/v2/5cc8019d300000980a055e76",listType:"picture-card",fileList:c,onPreview:this.handlePreview,onChange:this.handleChange,iconRender:this.handleIconRender},c.length>=8?null:h),j.createElement(o.Modal,{visible:d,footer:null,onCancel:this.handleCancel},j.createElement("img",{alt:"example",style:{width:"100%"},src:a})))}}]),f}(j.Component);return j.createElement(k,null)},style:`/* you can make up upload button and sample style by using stylesheets */
.ant-upload-select-picture-card i {
  color: #999;
  font-size: 32px;
}

.ant-upload-select-picture-card .ant-upload-text {
  margin-top: 8px;
  color: #666;
}`,highlightedStyle:`<span class="token comment" spellcheck="true">/* you can make up upload button and sample style by using stylesheets */</span>
<span class="token selector"><span class="token class">.ant-upload-select-picture-card</span> i </span><span class="token punctuation">{</span>
  <span class="token property">color</span><span class="token punctuation">:</span> <span class="token hexcode">#999</span><span class="token punctuation">;</span>
  <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">32</span>px<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector"><span class="token class">.ant-upload-select-picture-card</span> <span class="token class">.ant-upload-text</span> </span><span class="token punctuation">{</span>
  <span class="token property">margin-top</span><span class="token punctuation">:</span> <span class="token number">8</span>px<span class="token punctuation">;</span>
  <span class="token property">color</span><span class="token punctuation">:</span> <span class="token hexcode">#666</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>`}},4044:function(y,K,m){y.exports={content:{"zh-CN":[["p","使用 ",["code","fileList"]," 对列表进行完全控制，可以实现各种自定义功能，以下演示二种情况："],["ol",["li",["p","上传列表数量的限制。"]],["li",["p","读取远程路径并显示链接。"]]]],"en-US":[["p","You can gain full control over filelist by configuring ",["code","fileList"],". You can accomplish all kinds of customed functions. The following shows two circumstances:"],["ol",["li",["p","limit the number of uploaded files."]],["li",["p","read from response and show file link."]]]]},meta:{order:4,title:{"zh-CN":"完全控制的上传列表","en-US":"Complete control over file list"},filename:"components/upload/demo/fileList.md",id:"components-upload-demo-fileList"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"jsx",highlighted:`<span class="token keyword">import</span> <span class="token punctuation">{</span> Upload<span class="token punctuation">,</span> Button <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> UploadOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'@ant-design/icons'</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name">MyUpload</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>
  state <span class="token operator">=</span> <span class="token punctuation">{</span>
    fileList<span class="token punctuation">:</span> <span class="token punctuation">[</span>
      <span class="token punctuation">{</span>
        uid<span class="token punctuation">:</span> <span class="token string">'-1'</span><span class="token punctuation">,</span>
        name<span class="token punctuation">:</span> <span class="token string">'xxx.png'</span><span class="token punctuation">,</span>
        status<span class="token punctuation">:</span> <span class="token string">'done'</span><span class="token punctuation">,</span>
        url<span class="token punctuation">:</span> <span class="token string">'http://www.baidu.com/xxx.png'</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  handleChange <span class="token operator">=</span> info <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> fileList <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>info<span class="token punctuation">.</span>fileList<span class="token punctuation">]</span><span class="token punctuation">;</span>

    <span class="token comment" spellcheck="true">// 1. Limit the number of uploaded files</span>
    <span class="token comment" spellcheck="true">// Only to show two recent uploaded files, and old ones will be replaced by the new</span>
    fileList <span class="token operator">=</span> fileList<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment" spellcheck="true">// 2. Read from response and show file link</span>
    fileList <span class="token operator">=</span> fileList<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>file <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>file<span class="token punctuation">.</span>response<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment" spellcheck="true">// Component will show file.url as link</span>
        file<span class="token punctuation">.</span>url <span class="token operator">=</span> file<span class="token punctuation">.</span>response<span class="token punctuation">.</span>url<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">return</span> file<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> fileList <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> props <span class="token operator">=</span> <span class="token punctuation">{</span>
      action<span class="token punctuation">:</span> <span class="token string">'https://www.mocky.io/v2/5cc8019d300000980a055e76'</span><span class="token punctuation">,</span>
      onChange<span class="token punctuation">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>handleChange<span class="token punctuation">,</span>
      multiple<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span>
      <span class="token operator">&lt;</span>Upload <span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span> fileList<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>fileList<span class="token punctuation">}</span><span class="token operator">></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span><span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>UploadOutlined</span> <span class="token punctuation">/></span></span> Upload
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Upload</span><span class="token punctuation">></span></span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

ReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>MyUpload</span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>`}],highlightedCodes:{jsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> Upload<span class="token punctuation">,</span> Button <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> UploadOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'@ant-design/icons'</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name">MyUpload</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>
  state <span class="token operator">=</span> <span class="token punctuation">{</span>
    fileList<span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token punctuation">{</span>
        uid<span class="token operator">:</span> <span class="token string">'-1'</span><span class="token punctuation">,</span>
        name<span class="token operator">:</span> <span class="token string">'xxx.png'</span><span class="token punctuation">,</span>
        status<span class="token operator">:</span> <span class="token string">'done'</span><span class="token punctuation">,</span>
        url<span class="token operator">:</span> <span class="token string">'http://www.baidu.com/xxx.png'</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token function-variable function">handleChange</span> <span class="token operator">=</span> <span class="token parameter">info</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> fileList <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>info<span class="token punctuation">.</span>fileList<span class="token punctuation">]</span><span class="token punctuation">;</span>

    <span class="token comment">// 1. Limit the number of uploaded files</span>
    <span class="token comment">// Only to show two recent uploaded files, and old ones will be replaced by the new</span>
    fileList <span class="token operator">=</span> fileList<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// 2. Read from response and show file link</span>
    fileList <span class="token operator">=</span> fileList<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">file</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>file<span class="token punctuation">.</span>response<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// Component will show file.url as link</span>
        file<span class="token punctuation">.</span>url <span class="token operator">=</span> file<span class="token punctuation">.</span>response<span class="token punctuation">.</span>url<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">return</span> file<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> fileList <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> props <span class="token operator">=</span> <span class="token punctuation">{</span>
      action<span class="token operator">:</span> <span class="token string">'https://www.mocky.io/v2/5cc8019d300000980a055e76'</span><span class="token punctuation">,</span>
      onChange<span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>handleChange<span class="token punctuation">,</span>
      multiple<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Upload</span></span> <span class="token spread"><span class="token punctuation">{</span><span class="token punctuation">...</span><span class="token attr-value">props</span><span class="token punctuation">}</span></span> <span class="token attr-name">fileList</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>fileList<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">UploadOutlined</span></span> <span class="token punctuation">/></span></span> Upload
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Upload</span></span><span class="token punctuation">></span></span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

ReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">MyUpload</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>`},preview:function na(){var j=m(0),L=m(28),o=m(8),s=m(47);function t(g){return typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"?t=function d(a){return typeof a}:t=function d(a){return a&&typeof Symbol==="function"&&a.constructor===Symbol&&a!==Symbol.prototype?"symbol":typeof a},t(g)}function F(){return F=Object.assign||function(g){for(var d=1;d<arguments.length;d++){var a=arguments[d];for(var c in a)Object.prototype.hasOwnProperty.call(a,c)&&(g[c]=a[c])}return g},F.apply(this,arguments)}function r(g){return H(g)||G(g)||A(g)||z()}function z(){throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function A(g,d){if(!g)return;if(typeof g==="string")return D(g,d);var a=Object.prototype.toString.call(g).slice(8,-1);a==="Object"&&g.constructor&&(a=g.constructor.name);if(a==="Map"||a==="Set")return Array.from(g);if(a==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(a))return D(g,d)}function G(g){if(typeof Symbol!=="undefined"&&Symbol.iterator in Object(g))return Array.from(g)}function H(g){if(Array.isArray(g))return D(g)}function D(g,d){(d==null||d>g.length)&&(d=g.length);for(var a=0,c=new Array(d);a<d;a++)c[a]=g[a];return c}function I(g,d){if(!(g instanceof d))throw new TypeError("Cannot call a class as a function")}function M(g,d){for(var a=0;a<d.length;a++){var c=d[a];c.enumerable=c.enumerable||!1,c.configurable=!0,"value"in c&&(c.writable=!0),Object.defineProperty(g,c.key,c)}}function B(g,d,a){return d&&M(g.prototype,d),a&&M(g,a),g}function p(g,d){if(typeof d!=="function"&&d!==null)throw new TypeError("Super expression must either be null or a function");g.prototype=Object.create(d&&d.prototype,{constructor:{value:g,writable:!0,configurable:!0}}),d&&u(g,d)}function u(g,d){return u=Object.setPrototypeOf||function a(c,h){return c.__proto__=h,c},u(g,d)}function q(g){var d=b();return function a(){var c=e(g),h;if(d){var l=e(this).constructor;h=Reflect.construct(c,arguments,l)}else h=c.apply(this,arguments);return n(this,h)}}function n(g,d){return d&&(t(d)==="object"||typeof d==="function")?d:k(g)}function k(g){if(g===void 0)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return g}function b(){if(typeof Reflect==="undefined"||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if(typeof Proxy==="function")return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],function(){})),!0}catch(g){return!1}}function e(g){return e=Object.setPrototypeOf?Object.getPrototypeOf:function d(a){return a.__proto__||Object.getPrototypeOf(a)},e(g)}function f(g,d,a){return d in g?Object.defineProperty(g,d,{value:a,enumerable:!0,configurable:!0,writable:!0}):g[d]=a,g}var i=function(g){p(a,g);var d=q(a);function a(){var c;I(this,a);for(var h=arguments.length,l=new Array(h),w=0;w<h;w++)l[w]=arguments[w];return c=d.call.apply(d,[this].concat(l)),f(k(c),"state",{fileList:[{uid:"-1",name:"xxx.png",status:"done",url:"http://www.baidu.com/xxx.png"}]}),f(k(c),"handleChange",function(v){var E=r(v.fileList);E=E.slice(-2),E=E.map(function(x){return x.response&&(x.url=x.response.url),x}),c.setState({fileList:E})}),c}return B(a,[{key:"render",value:function c(){var h={action:"https://www.mocky.io/v2/5cc8019d300000980a055e76",onChange:this.handleChange,multiple:!0};return j.createElement(o.Upload,F({},h,{fileList:this.state.fileList}),j.createElement(o.Button,null,j.createElement(s.UploadOutlined,null)," Upload"))}}]),a}(j.Component);return j.createElement(i,null)}}},4045:function(y,K,m){y.exports={content:{"zh-CN":[["p","用户可以上传图片并在列表中显示缩略图。当上传照片数到达限制后，上传按钮消失。"]],"en-US":[["p","After users upload picture, the thumbnail will be shown in list. The upload button will disappear when count meets limitation."]]},meta:{order:3,title:{"zh-CN":"照片墙","en-US":"Pictures Wall"},filename:"components/upload/demo/picture-card.md",id:"components-upload-demo-picture-card"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"jsx",highlighted:`<span class="token keyword">import</span> <span class="token punctuation">{</span> Upload<span class="token punctuation">,</span> Modal <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> PlusOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'@ant-design/icons'</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">getBase64</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> reader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileReader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    reader<span class="token punctuation">.</span><span class="token function">readAsDataURL</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>
    reader<span class="token punctuation">.</span>onload <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">resolve</span><span class="token punctuation">(</span>reader<span class="token punctuation">.</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
    reader<span class="token punctuation">.</span>onerror <span class="token operator">=</span> error <span class="token operator">=</span><span class="token operator">></span> <span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">PicturesWall</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>
  state <span class="token operator">=</span> <span class="token punctuation">{</span>
    previewVisible<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    previewImage<span class="token punctuation">:</span> <span class="token string">''</span><span class="token punctuation">,</span>
    previewTitle<span class="token punctuation">:</span> <span class="token string">''</span><span class="token punctuation">,</span>
    fileList<span class="token punctuation">:</span> <span class="token punctuation">[</span>
      <span class="token punctuation">{</span>
        uid<span class="token punctuation">:</span> <span class="token string">'-1'</span><span class="token punctuation">,</span>
        name<span class="token punctuation">:</span> <span class="token string">'image.png'</span><span class="token punctuation">,</span>
        status<span class="token punctuation">:</span> <span class="token string">'done'</span><span class="token punctuation">,</span>
        url<span class="token punctuation">:</span> <span class="token string">'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png'</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        uid<span class="token punctuation">:</span> <span class="token string">'-2'</span><span class="token punctuation">,</span>
        name<span class="token punctuation">:</span> <span class="token string">'image.png'</span><span class="token punctuation">,</span>
        status<span class="token punctuation">:</span> <span class="token string">'done'</span><span class="token punctuation">,</span>
        url<span class="token punctuation">:</span> <span class="token string">'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png'</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        uid<span class="token punctuation">:</span> <span class="token string">'-3'</span><span class="token punctuation">,</span>
        name<span class="token punctuation">:</span> <span class="token string">'image.png'</span><span class="token punctuation">,</span>
        status<span class="token punctuation">:</span> <span class="token string">'done'</span><span class="token punctuation">,</span>
        url<span class="token punctuation">:</span> <span class="token string">'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png'</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        uid<span class="token punctuation">:</span> <span class="token string">'-4'</span><span class="token punctuation">,</span>
        name<span class="token punctuation">:</span> <span class="token string">'image.png'</span><span class="token punctuation">,</span>
        status<span class="token punctuation">:</span> <span class="token string">'done'</span><span class="token punctuation">,</span>
        url<span class="token punctuation">:</span> <span class="token string">'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png'</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        uid<span class="token punctuation">:</span> <span class="token string">'-5'</span><span class="token punctuation">,</span>
        name<span class="token punctuation">:</span> <span class="token string">'image.png'</span><span class="token punctuation">,</span>
        status<span class="token punctuation">:</span> <span class="token string">'error'</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  handleCancel <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> previewVisible<span class="token punctuation">:</span> <span class="token boolean">false</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  handlePreview <span class="token operator">=</span> <span class="token keyword">async</span> file <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>file<span class="token punctuation">.</span>url <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>file<span class="token punctuation">.</span>preview<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      file<span class="token punctuation">.</span>preview <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">getBase64</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>originFileObj<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      previewImage<span class="token punctuation">:</span> file<span class="token punctuation">.</span>url <span class="token operator">||</span> file<span class="token punctuation">.</span>preview<span class="token punctuation">,</span>
      previewVisible<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
      previewTitle<span class="token punctuation">:</span> file<span class="token punctuation">.</span>name <span class="token operator">||</span> file<span class="token punctuation">.</span>url<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>url<span class="token punctuation">.</span><span class="token function">lastIndexOf</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  handleChange <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> fileList <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> fileList <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> previewVisible<span class="token punctuation">,</span> previewImage<span class="token punctuation">,</span> fileList<span class="token punctuation">,</span> previewTitle <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">;</span>
    <span class="token keyword">const</span> uploadButton <span class="token operator">=</span> <span class="token punctuation">(</span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>PlusOutlined</span> <span class="token punctuation">/></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ant-upload-text<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Upload<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>clearfix<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Upload</span>
          <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://www.mocky.io/v2/5cc8019d300000980a055e76<span class="token punctuation">"</span></span>
          <span class="token attr-name">listType</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>picture-card<span class="token punctuation">"</span></span>
          <span class="token attr-name">fileList</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>fileList<span class="token punctuation">}</span></span>
          <span class="token attr-name">onPreview</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>handlePreview<span class="token punctuation">}</span></span>
          <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>handleChange<span class="token punctuation">}</span></span>
        <span class="token punctuation">></span></span>
          <span class="token punctuation">{</span>fileList<span class="token punctuation">.</span>length <span class="token operator">>=</span> <span class="token number">8</span> <span class="token operator">?</span> <span class="token keyword">null</span> <span class="token punctuation">:</span> uploadButton<span class="token punctuation">}</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Upload</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Modal</span>
          <span class="token attr-name">visible</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>previewVisible<span class="token punctuation">}</span></span>
          <span class="token attr-name">title</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>previewTitle<span class="token punctuation">}</span></span>
          <span class="token attr-name">footer</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">null</span><span class="token punctuation">}</span></span>
          <span class="token attr-name">onCancel</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>handleCancel<span class="token punctuation">}</span></span>
        <span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>example<span class="token punctuation">"</span></span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> width<span class="token punctuation">:</span> <span class="token string">'100%'</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span> <span class="token attr-name">src</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>previewImage<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Modal</span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

ReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>PicturesWall</span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>`}],highlightedCodes:{jsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> Upload<span class="token punctuation">,</span> Modal <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> PlusOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'@ant-design/icons'</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">getBase64</span><span class="token punctuation">(</span><span class="token parameter">file</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> reader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileReader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    reader<span class="token punctuation">.</span><span class="token function">readAsDataURL</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>
    reader<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token function">resolve</span><span class="token punctuation">(</span>reader<span class="token punctuation">.</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
    reader<span class="token punctuation">.</span><span class="token function-variable function">onerror</span> <span class="token operator">=</span> <span class="token parameter">error</span> <span class="token operator">=></span> <span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">PicturesWall</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>
  state <span class="token operator">=</span> <span class="token punctuation">{</span>
    previewVisible<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    previewImage<span class="token operator">:</span> <span class="token string">''</span><span class="token punctuation">,</span>
    previewTitle<span class="token operator">:</span> <span class="token string">''</span><span class="token punctuation">,</span>
    fileList<span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token punctuation">{</span>
        uid<span class="token operator">:</span> <span class="token string">'-1'</span><span class="token punctuation">,</span>
        name<span class="token operator">:</span> <span class="token string">'image.png'</span><span class="token punctuation">,</span>
        status<span class="token operator">:</span> <span class="token string">'done'</span><span class="token punctuation">,</span>
        url<span class="token operator">:</span> <span class="token string">'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png'</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        uid<span class="token operator">:</span> <span class="token string">'-2'</span><span class="token punctuation">,</span>
        name<span class="token operator">:</span> <span class="token string">'image.png'</span><span class="token punctuation">,</span>
        status<span class="token operator">:</span> <span class="token string">'done'</span><span class="token punctuation">,</span>
        url<span class="token operator">:</span> <span class="token string">'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png'</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        uid<span class="token operator">:</span> <span class="token string">'-3'</span><span class="token punctuation">,</span>
        name<span class="token operator">:</span> <span class="token string">'image.png'</span><span class="token punctuation">,</span>
        status<span class="token operator">:</span> <span class="token string">'done'</span><span class="token punctuation">,</span>
        url<span class="token operator">:</span> <span class="token string">'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png'</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        uid<span class="token operator">:</span> <span class="token string">'-4'</span><span class="token punctuation">,</span>
        name<span class="token operator">:</span> <span class="token string">'image.png'</span><span class="token punctuation">,</span>
        status<span class="token operator">:</span> <span class="token string">'done'</span><span class="token punctuation">,</span>
        url<span class="token operator">:</span> <span class="token string">'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png'</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        uid<span class="token operator">:</span> <span class="token string">'-5'</span><span class="token punctuation">,</span>
        name<span class="token operator">:</span> <span class="token string">'image.png'</span><span class="token punctuation">,</span>
        status<span class="token operator">:</span> <span class="token string">'error'</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token function-variable function">handleCancel</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> previewVisible<span class="token operator">:</span> <span class="token boolean">false</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token function-variable function">handlePreview</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token parameter">file</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>file<span class="token punctuation">.</span>url <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>file<span class="token punctuation">.</span>preview<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      file<span class="token punctuation">.</span>preview <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">getBase64</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>originFileObj<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      previewImage<span class="token operator">:</span> file<span class="token punctuation">.</span>url <span class="token operator">||</span> file<span class="token punctuation">.</span>preview<span class="token punctuation">,</span>
      previewVisible<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
      previewTitle<span class="token operator">:</span> file<span class="token punctuation">.</span>name <span class="token operator">||</span> file<span class="token punctuation">.</span>url<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>url<span class="token punctuation">.</span><span class="token function">lastIndexOf</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token function-variable function">handleChange</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> fileList <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> fileList <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> previewVisible<span class="token punctuation">,</span> previewImage<span class="token punctuation">,</span> fileList<span class="token punctuation">,</span> previewTitle <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">;</span>
    <span class="token keyword">const</span> uploadButton <span class="token operator">=</span> <span class="token punctuation">(</span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">PlusOutlined</span></span> <span class="token punctuation">/></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ant-upload-text<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Upload<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>clearfix<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Upload</span></span>
          <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://www.mocky.io/v2/5cc8019d300000980a055e76<span class="token punctuation">"</span></span>
          <span class="token attr-name">listType</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>picture-card<span class="token punctuation">"</span></span>
          <span class="token attr-name">fileList</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>fileList<span class="token punctuation">}</span></span>
          <span class="token attr-name">onPreview</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>handlePreview<span class="token punctuation">}</span></span>
          <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>handleChange<span class="token punctuation">}</span></span>
        <span class="token punctuation">></span></span>
          <span class="token punctuation">{</span>fileList<span class="token punctuation">.</span>length <span class="token operator">>=</span> <span class="token number">8</span> <span class="token operator">?</span> <span class="token keyword">null</span> <span class="token operator">:</span> uploadButton<span class="token punctuation">}</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Upload</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Modal</span></span>
          <span class="token attr-name">visible</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>previewVisible<span class="token punctuation">}</span></span>
          <span class="token attr-name">title</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>previewTitle<span class="token punctuation">}</span></span>
          <span class="token attr-name">footer</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">null</span><span class="token punctuation">}</span></span>
          <span class="token attr-name">onCancel</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>handleCancel<span class="token punctuation">}</span></span>
        <span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>example<span class="token punctuation">"</span></span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> width<span class="token operator">:</span> <span class="token string">'100%'</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span> <span class="token attr-name">src</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>previewImage<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Modal</span></span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

ReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">PicturesWall</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>`},preview:function na(){var j=m(0),L=m(28),o=m(8),s=m(47);function t(b){return typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"?t=function e(f){return typeof f}:t=function e(f){return f&&typeof Symbol==="function"&&f.constructor===Symbol&&f!==Symbol.prototype?"symbol":typeof f},t(b)}function F(b,e,f,i,g,d,a){try{var c=b[d](a),h=c.value}catch(l){f(l);return}c.done?e(h):Promise.resolve(h).then(i,g)}function r(b){return function(){var e=this,f=arguments;return new Promise(function(i,g){var d=b.apply(e,f);function a(h){F(d,i,g,a,c,"next",h)}function c(h){F(d,i,g,a,c,"throw",h)}a(void 0)})}}function z(b,e){if(!(b instanceof e))throw new TypeError("Cannot call a class as a function")}function A(b,e){for(var f=0;f<e.length;f++){var i=e[f];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(b,i.key,i)}}function G(b,e,f){return e&&A(b.prototype,e),f&&A(b,f),b}function H(b,e){if(typeof e!=="function"&&e!==null)throw new TypeError("Super expression must either be null or a function");b.prototype=Object.create(e&&e.prototype,{constructor:{value:b,writable:!0,configurable:!0}}),e&&D(b,e)}function D(b,e){return D=Object.setPrototypeOf||function f(i,g){return i.__proto__=g,i},D(b,e)}function I(b){var e=p();return function f(){var i=u(b),g;if(e){var d=u(this).constructor;g=Reflect.construct(i,arguments,d)}else g=i.apply(this,arguments);return M(this,g)}}function M(b,e){return e&&(t(e)==="object"||typeof e==="function")?e:B(b)}function B(b){if(b===void 0)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return b}function p(){if(typeof Reflect==="undefined"||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if(typeof Proxy==="function")return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],function(){})),!0}catch(b){return!1}}function u(b){return u=Object.setPrototypeOf?Object.getPrototypeOf:function e(f){return f.__proto__||Object.getPrototypeOf(f)},u(b)}function q(b,e,f){return e in b?Object.defineProperty(b,e,{value:f,enumerable:!0,configurable:!0,writable:!0}):b[e]=f,b}function n(b){return new Promise(function(e,f){var i=new FileReader();i.readAsDataURL(b),i.onload=function(){return e(i.result)},i.onerror=function(g){return f(g)}})}var k=function(b){H(f,b);var e=I(f);function f(){var i;z(this,f);for(var g=arguments.length,d=new Array(g),a=0;a<g;a++)d[a]=arguments[a];return i=e.call.apply(e,[this].concat(d)),q(B(i),"state",{previewVisible:!1,previewImage:"",previewTitle:"",fileList:[{uid:"-1",name:"image.png",status:"done",url:"https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png"},{uid:"-2",name:"image.png",status:"done",url:"https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png"},{uid:"-3",name:"image.png",status:"done",url:"https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png"},{uid:"-4",name:"image.png",status:"done",url:"https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png"},{uid:"-5",name:"image.png",status:"error"}]}),q(B(i),"handleCancel",function(){return i.setState({previewVisible:!1})}),q(B(i),"handlePreview",function(){var c=r(regeneratorRuntime.mark(function h(l){return regeneratorRuntime.wrap(function w(v){for(;;)switch(v.prev=v.next){case 0:if(!(!l.url&&!l.preview)){v.next=4;break}return v.next=3,n(l.originFileObj);case 3:l.preview=v.sent;case 4:i.setState({previewImage:l.url||l.preview,previewVisible:!0,previewTitle:l.name||l.url.substring(l.url.lastIndexOf("/")+1)});case 5:case"end":return v.stop()}},h)}));return function(h){return c.apply(this,arguments)}}()),q(B(i),"handleChange",function(c){var h=c.fileList;return i.setState({fileList:h})}),i}return G(f,[{key:"render",value:function i(){var g=this.state,d=g.previewVisible,a=g.previewImage,c=g.fileList,h=g.previewTitle,l=j.createElement("div",null,j.createElement(s.PlusOutlined,null),j.createElement("div",{className:"ant-upload-text"},"Upload"));return j.createElement("div",{className:"clearfix"},j.createElement(o.Upload,{action:"https://www.mocky.io/v2/5cc8019d300000980a055e76",listType:"picture-card",fileList:c,onPreview:this.handlePreview,onChange:this.handleChange},c.length>=8?null:l),j.createElement(o.Modal,{visible:d,title:h,footer:null,onCancel:this.handleCancel},j.createElement("img",{alt:"example",style:{width:"100%"},src:a})))}}]),f}(j.Component);return j.createElement(k,null)},style:`/* you can make up upload button and sample style by using stylesheets */
.ant-upload-select-picture-card i {
  color: #999;
  font-size: 32px;
}

.ant-upload-select-picture-card .ant-upload-text {
  margin-top: 8px;
  color: #666;
}`,highlightedStyle:`<span class="token comment" spellcheck="true">/* you can make up upload button and sample style by using stylesheets */</span>
<span class="token selector"><span class="token class">.ant-upload-select-picture-card</span> i </span><span class="token punctuation">{</span>
  <span class="token property">color</span><span class="token punctuation">:</span> <span class="token hexcode">#999</span><span class="token punctuation">;</span>
  <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">32</span>px<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector"><span class="token class">.ant-upload-select-picture-card</span> <span class="token class">.ant-upload-text</span> </span><span class="token punctuation">{</span>
  <span class="token property">margin-top</span><span class="token punctuation">:</span> <span class="token number">8</span>px<span class="token punctuation">;</span>
  <span class="token property">color</span><span class="token punctuation">:</span> <span class="token hexcode">#666</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>`}},4046:function(y,K,m){y.exports={content:{"zh-CN":[["p","上传文件为图片，可展示本地缩略图。",["code","IE8/9"]," 不支持浏览器本地缩略图展示（",["a",{title:null,href:"https://developer.mozilla.org/en-US/docs/Web/API/FileReader/readAsDataURL"},"Ref"],"），可以写 ",["code","thumbUrl"]," 属性来代替。"]],"en-US":[["p","If uploaded file is a picture, the thumbnail can be shown. ",["code","IE8/9"]," do not support local thumbnail show. Please use ",["code","thumbUrl"]," instead."]]},meta:{order:8,title:{"zh-CN":"图片列表样式","en-US":"Pictures with list style"},filename:"components/upload/demo/picture-style.md",id:"components-upload-demo-picture-style"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"jsx",highlighted:`<span class="token keyword">import</span> <span class="token punctuation">{</span> Upload<span class="token punctuation">,</span> Button <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> UploadOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'@ant-design/icons'</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> fileList <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    uid<span class="token punctuation">:</span> <span class="token string">'-1'</span><span class="token punctuation">,</span>
    name<span class="token punctuation">:</span> <span class="token string">'xxx.png'</span><span class="token punctuation">,</span>
    status<span class="token punctuation">:</span> <span class="token string">'done'</span><span class="token punctuation">,</span>
    url<span class="token punctuation">:</span> <span class="token string">'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png'</span><span class="token punctuation">,</span>
    thumbUrl<span class="token punctuation">:</span> <span class="token string">'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    uid<span class="token punctuation">:</span> <span class="token string">'-2'</span><span class="token punctuation">,</span>
    name<span class="token punctuation">:</span> <span class="token string">'yyy.png'</span><span class="token punctuation">,</span>
    status<span class="token punctuation">:</span> <span class="token string">'error'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> props <span class="token operator">=</span> <span class="token punctuation">{</span>
  action<span class="token punctuation">:</span> <span class="token string">'https://www.mocky.io/v2/5cc8019d300000980a055e76'</span><span class="token punctuation">,</span>
  listType<span class="token punctuation">:</span> <span class="token string">'picture'</span><span class="token punctuation">,</span>
  defaultFileList<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token operator">...</span>fileList<span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> props2 <span class="token operator">=</span> <span class="token punctuation">{</span>
  action<span class="token punctuation">:</span> <span class="token string">'https://www.mocky.io/v2/5cc8019d300000980a055e76'</span><span class="token punctuation">,</span>
  listType<span class="token punctuation">:</span> <span class="token string">'picture'</span><span class="token punctuation">,</span>
  defaultFileList<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token operator">...</span>fileList<span class="token punctuation">]</span><span class="token punctuation">,</span>
  className<span class="token punctuation">:</span> <span class="token string">'upload-list-inline'</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

ReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>
  <span class="token operator">&lt;</span><span class="token operator">></span>
    <span class="token operator">&lt;</span>Upload <span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span><span class="token operator">></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>UploadOutlined</span> <span class="token punctuation">/></span></span> Upload
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Upload</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/></span></span>
    <span class="token operator">&lt;</span>Upload <span class="token punctuation">{</span><span class="token operator">...</span>props2<span class="token punctuation">}</span><span class="token operator">></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>UploadOutlined</span> <span class="token punctuation">/></span></span> Upload
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Upload</span><span class="token punctuation">></span></span>
  <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">,</span>
  mountNode<span class="token punctuation">,</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>`}],highlightedCodes:{jsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> Upload<span class="token punctuation">,</span> Button <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> UploadOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'@ant-design/icons'</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> fileList <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    uid<span class="token operator">:</span> <span class="token string">'-1'</span><span class="token punctuation">,</span>
    name<span class="token operator">:</span> <span class="token string">'xxx.png'</span><span class="token punctuation">,</span>
    status<span class="token operator">:</span> <span class="token string">'done'</span><span class="token punctuation">,</span>
    url<span class="token operator">:</span> <span class="token string">'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png'</span><span class="token punctuation">,</span>
    thumbUrl<span class="token operator">:</span> <span class="token string">'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    uid<span class="token operator">:</span> <span class="token string">'-2'</span><span class="token punctuation">,</span>
    name<span class="token operator">:</span> <span class="token string">'yyy.png'</span><span class="token punctuation">,</span>
    status<span class="token operator">:</span> <span class="token string">'error'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> props <span class="token operator">=</span> <span class="token punctuation">{</span>
  action<span class="token operator">:</span> <span class="token string">'https://www.mocky.io/v2/5cc8019d300000980a055e76'</span><span class="token punctuation">,</span>
  listType<span class="token operator">:</span> <span class="token string">'picture'</span><span class="token punctuation">,</span>
  defaultFileList<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token operator">...</span>fileList<span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> props2 <span class="token operator">=</span> <span class="token punctuation">{</span>
  action<span class="token operator">:</span> <span class="token string">'https://www.mocky.io/v2/5cc8019d300000980a055e76'</span><span class="token punctuation">,</span>
  listType<span class="token operator">:</span> <span class="token string">'picture'</span><span class="token punctuation">,</span>
  defaultFileList<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token operator">...</span>fileList<span class="token punctuation">]</span><span class="token punctuation">,</span>
  className<span class="token operator">:</span> <span class="token string">'upload-list-inline'</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

ReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Upload</span></span> <span class="token spread"><span class="token punctuation">{</span><span class="token punctuation">...</span><span class="token attr-value">props</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">UploadOutlined</span></span> <span class="token punctuation">/></span></span> Upload
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Upload</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Upload</span></span> <span class="token spread"><span class="token punctuation">{</span><span class="token punctuation">...</span><span class="token attr-value">props2</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">UploadOutlined</span></span> <span class="token punctuation">/></span></span> Upload
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Upload</span></span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span></span><span class="token punctuation">></span></span><span class="token punctuation">,</span>
  mountNode<span class="token punctuation">,</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>`},preview:function na(){var j=m(0),L=m(28),o=m(8),s=m(47),t=[{uid:"-1",name:"xxx.png",status:"done",url:"https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png",thumbUrl:"https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png"},{uid:"-2",name:"yyy.png",status:"error"}],F={action:"https://www.mocky.io/v2/5cc8019d300000980a055e76",listType:"picture",defaultFileList:[].concat(t)},r={action:"https://www.mocky.io/v2/5cc8019d300000980a055e76",listType:"picture",defaultFileList:[].concat(t),className:"upload-list-inline"};return j.createElement(j.Fragment,null,j.createElement(o.Upload,F,j.createElement(o.Button,null,j.createElement(s.UploadOutlined,null)," Upload")),j.createElement("br",null),j.createElement("br",null),j.createElement(o.Upload,r,j.createElement(o.Button,null,j.createElement(s.UploadOutlined,null)," Upload")))},style:`/* tile uploaded pictures */
.upload-list-inline .ant-upload-list-item {
  float: left;
  width: 200px;
  margin-right: 8px;
}

.upload-list-inline [class*='-upload-list-rtl'] .ant-upload-list-item {
  float: right;
}
.upload-list-inline .ant-upload-animate-enter {
  animation-name: uploadAnimateInlineIn;
}
.upload-list-inline .ant-upload-animate-leave {
  animation-name: uploadAnimateInlineOut;
}`,highlightedStyle:`<span class="token comment" spellcheck="true">/* tile uploaded pictures */</span>
<span class="token selector"><span class="token class">.upload-list-inline</span> <span class="token class">.ant-upload-list-item</span> </span><span class="token punctuation">{</span>
  <span class="token property">float</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span>
  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">200</span>px<span class="token punctuation">;</span>
  <span class="token property">margin-right</span><span class="token punctuation">:</span> <span class="token number">8</span>px<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector"><span class="token class">.upload-list-inline</span> <span class="token attribute">[class*='-upload-list-rtl']</span> <span class="token class">.ant-upload-list-item</span> </span><span class="token punctuation">{</span>
  <span class="token property">float</span><span class="token punctuation">:</span> right<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector"><span class="token class">.upload-list-inline</span> <span class="token class">.ant-upload-animate-enter</span> </span><span class="token punctuation">{</span>
  <span class="token property">animation-name</span><span class="token punctuation">:</span> uploadAnimateInlineIn<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector"><span class="token class">.upload-list-inline</span> <span class="token class">.ant-upload-animate-leave</span> </span><span class="token punctuation">{</span>
  <span class="token property">animation-name</span><span class="token punctuation">:</span> uploadAnimateInlineOut<span class="token punctuation">;</span>
<span class="token punctuation">}</span>`}},4047:function(y,K,m){y.exports={content:{"zh-CN":[["p","自定义本地预览，用于处理非图片格式文件（例如视频文件）。"]],"en-US":[["p","Customize local preview. Can handle with non-image format files such as video."]]},meta:{order:9,title:{"zh-CN":"自定义预览","en-US":"Customize preview file"},filename:"components/upload/demo/preview-file.md",id:"components-upload-demo-preview-file"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"jsx",highlighted:`<span class="token keyword">import</span> <span class="token punctuation">{</span> Upload<span class="token punctuation">,</span> Button <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> UploadOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'@ant-design/icons'</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> props <span class="token operator">=</span> <span class="token punctuation">{</span>
  action<span class="token punctuation">:</span> <span class="token string">'//jsonplaceholder.typicode.com/posts/'</span><span class="token punctuation">,</span>
  listType<span class="token punctuation">:</span> <span class="token string">'picture'</span><span class="token punctuation">,</span>
  <span class="token function">previewFile</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'Your upload file:'</span><span class="token punctuation">,</span> file<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment" spellcheck="true">// Your process logic. Here we just mock to the same file</span>
    <span class="token keyword">return</span> <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">'https://next.json-generator.com/api/json/get/4ytyBoLK8'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
      method<span class="token punctuation">:</span> <span class="token string">'POST'</span><span class="token punctuation">,</span>
      body<span class="token punctuation">:</span> file<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>res <span class="token operator">=</span><span class="token operator">></span> res<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">{</span> thumbnail <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> thumbnail<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

ReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>
  <span class="token operator">&lt;</span><span class="token operator">></span>
    <span class="token operator">&lt;</span>Upload <span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span><span class="token operator">></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>UploadOutlined</span> <span class="token punctuation">/></span></span> Upload
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Upload</span><span class="token punctuation">></span></span>
  <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">,</span>
  mountNode<span class="token punctuation">,</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>`}],highlightedCodes:{jsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> Upload<span class="token punctuation">,</span> Button <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> UploadOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'@ant-design/icons'</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> props <span class="token operator">=</span> <span class="token punctuation">{</span>
  action<span class="token operator">:</span> <span class="token string">'//jsonplaceholder.typicode.com/posts/'</span><span class="token punctuation">,</span>
  listType<span class="token operator">:</span> <span class="token string">'picture'</span><span class="token punctuation">,</span>
  <span class="token function">previewFile</span><span class="token punctuation">(</span><span class="token parameter">file</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'Your upload file:'</span><span class="token punctuation">,</span> file<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// Your process logic. Here we just mock to the same file</span>
    <span class="token keyword">return</span> <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">'https://next.json-generator.com/api/json/get/4ytyBoLK8'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
      method<span class="token operator">:</span> <span class="token string">'POST'</span><span class="token punctuation">,</span>
      body<span class="token operator">:</span> file<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=></span> res<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> thumbnail <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> thumbnail<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

ReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Upload</span></span> <span class="token spread"><span class="token punctuation">{</span><span class="token punctuation">...</span><span class="token attr-value">props</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">UploadOutlined</span></span> <span class="token punctuation">/></span></span> Upload
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Upload</span></span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span></span><span class="token punctuation">></span></span><span class="token punctuation">,</span>
  mountNode<span class="token punctuation">,</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>`},preview:function na(){var j=m(0),L=m(28),o=m(8),s=m(47),t={action:"//jsonplaceholder.typicode.com/posts/",listType:"picture",previewFile:function F(r){return console.log("Your upload file:",r),fetch("https://next.json-generator.com/api/json/get/4ytyBoLK8",{method:"POST",body:r}).then(function(z){return z.json()}).then(function(z){var A=z.thumbnail;return A})}};return j.createElement(j.Fragment,null,j.createElement(o.Upload,t,j.createElement(o.Button,null,j.createElement(s.UploadOutlined,null)," Upload")))}}},4048:function(y,K,m){y.exports={content:{"zh-CN":[["p","使用 ",["code","transformFile"]," 转换上传的文件（例如添加水印）。"]],"en-US":[["p","Use ",["code","transformFile"]," for transform file before request such as add a watermark."]]},meta:{order:10,title:{"zh-CN":"上传前转换文件","en-US":"Transform file before request"},filename:"components/upload/demo/transform-file.md",id:"components-upload-demo-transform-file"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"jsx",highlighted:`<span class="token keyword">import</span> <span class="token punctuation">{</span> Upload<span class="token punctuation">,</span> Button <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> UploadOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'@ant-design/icons'</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> props <span class="token operator">=</span> <span class="token punctuation">{</span>
  action<span class="token punctuation">:</span> <span class="token string">'https://www.mocky.io/v2/5cc8019d300000980a055e76'</span><span class="token punctuation">,</span>
  <span class="token function">transformFile</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span>resolve <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> reader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileReader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      reader<span class="token punctuation">.</span><span class="token function">readAsDataURL</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>
      reader<span class="token punctuation">.</span>onload <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> canvas <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">'canvas'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">const</span> img <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">'img'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        img<span class="token punctuation">.</span>src <span class="token operator">=</span> reader<span class="token punctuation">.</span>result<span class="token punctuation">;</span>
        img<span class="token punctuation">.</span>onload <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>
          <span class="token keyword">const</span> ctx <span class="token operator">=</span> canvas<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">'2d'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          ctx<span class="token punctuation">.</span><span class="token function">drawImage</span><span class="token punctuation">(</span>img<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          ctx<span class="token punctuation">.</span>fillStyle <span class="token operator">=</span> <span class="token string">'red'</span><span class="token punctuation">;</span>
          ctx<span class="token punctuation">.</span>textBaseline <span class="token operator">=</span> <span class="token string">'middle'</span><span class="token punctuation">;</span>
          ctx<span class="token punctuation">.</span><span class="token function">fillText</span><span class="token punctuation">(</span><span class="token string">'Ant Design'</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          canvas<span class="token punctuation">.</span><span class="token function">toBlob</span><span class="token punctuation">(</span>resolve<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

ReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>
  <span class="token operator">&lt;</span><span class="token operator">></span>
    <span class="token operator">&lt;</span>Upload <span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span><span class="token operator">></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>UploadOutlined</span> <span class="token punctuation">/></span></span> Upload
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Upload</span><span class="token punctuation">></span></span>
  <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">,</span>
  mountNode<span class="token punctuation">,</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>`}],highlightedCodes:{jsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> Upload<span class="token punctuation">,</span> Button <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> UploadOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'@ant-design/icons'</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> props <span class="token operator">=</span> <span class="token punctuation">{</span>
  action<span class="token operator">:</span> <span class="token string">'https://www.mocky.io/v2/5cc8019d300000980a055e76'</span><span class="token punctuation">,</span>
  <span class="token function">transformFile</span><span class="token punctuation">(</span><span class="token parameter">file</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token parameter">resolve</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> reader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileReader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      reader<span class="token punctuation">.</span><span class="token function">readAsDataURL</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>
      reader<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> canvas <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">'canvas'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">const</span> img <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">'img'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        img<span class="token punctuation">.</span>src <span class="token operator">=</span> reader<span class="token punctuation">.</span>result<span class="token punctuation">;</span>
        img<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
          <span class="token keyword">const</span> ctx <span class="token operator">=</span> canvas<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">'2d'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          ctx<span class="token punctuation">.</span><span class="token function">drawImage</span><span class="token punctuation">(</span>img<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          ctx<span class="token punctuation">.</span>fillStyle <span class="token operator">=</span> <span class="token string">'red'</span><span class="token punctuation">;</span>
          ctx<span class="token punctuation">.</span>textBaseline <span class="token operator">=</span> <span class="token string">'middle'</span><span class="token punctuation">;</span>
          ctx<span class="token punctuation">.</span><span class="token function">fillText</span><span class="token punctuation">(</span><span class="token string">'Ant Design'</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          canvas<span class="token punctuation">.</span><span class="token function">toBlob</span><span class="token punctuation">(</span>resolve<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

ReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Upload</span></span> <span class="token spread"><span class="token punctuation">{</span><span class="token punctuation">...</span><span class="token attr-value">props</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">UploadOutlined</span></span> <span class="token punctuation">/></span></span> Upload
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Upload</span></span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span></span><span class="token punctuation">></span></span><span class="token punctuation">,</span>
  mountNode<span class="token punctuation">,</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>`},preview:function na(){var j=m(0),L=m(28),o=m(8),s=m(47),t={action:"https://www.mocky.io/v2/5cc8019d300000980a055e76",transformFile:function F(r){return new Promise(function(z){var A=new FileReader();A.readAsDataURL(r),A.onload=function(){var G=document.createElement("canvas"),H=document.createElement("img");H.src=A.result,H.onload=function(){var D=G.getContext("2d");D.drawImage(H,0,0),D.fillStyle="red",D.textBaseline="middle",D.fillText("Ant Design",20,20),G.toBlob(z)}}})}};return j.createElement(j.Fragment,null,j.createElement(o.Upload,t,j.createElement(o.Button,null,j.createElement(s.UploadOutlined,null)," Upload")))}}},4049:function(y,K,m){y.exports={content:{"zh-CN":[["p","使用 ",["code","showUploadList"]," 设置列表交互图标。"]],"en-US":[["p","Use ",["code","showUploadList"]," for custom action icons of files."]]},meta:{order:12,title:{"zh-CN":"自定义交互图标","en-US":"custom action icon"},filename:"components/upload/demo/upload-custom-action-icon.md",id:"components-upload-demo-upload-custom-action-icon"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"jsx",highlighted:`<span class="token keyword">import</span> <span class="token punctuation">{</span> Upload<span class="token punctuation">,</span> Button <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> UploadOutlined<span class="token punctuation">,</span> StarOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'@ant-design/icons'</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> props <span class="token operator">=</span> <span class="token punctuation">{</span>
  action<span class="token punctuation">:</span> <span class="token string">'https://www.mocky.io/v2/5cc8019d300000980a055e76'</span><span class="token punctuation">,</span>
  <span class="token function">onChange</span><span class="token punctuation">(</span><span class="token punctuation">{</span> file<span class="token punctuation">,</span> fileList <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>file<span class="token punctuation">.</span>status <span class="token operator">!==</span> <span class="token string">'uploading'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>file<span class="token punctuation">,</span> fileList<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  defaultFileList<span class="token punctuation">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      uid<span class="token punctuation">:</span> <span class="token string">'1'</span><span class="token punctuation">,</span>
      name<span class="token punctuation">:</span> <span class="token string">'xxx.png'</span><span class="token punctuation">,</span>
      status<span class="token punctuation">:</span> <span class="token string">'done'</span><span class="token punctuation">,</span>
      response<span class="token punctuation">:</span> <span class="token string">'Server Error 500'</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// custom error message to show</span>
      url<span class="token punctuation">:</span> <span class="token string">'http://www.baidu.com/xxx.png'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      uid<span class="token punctuation">:</span> <span class="token string">'2'</span><span class="token punctuation">,</span>
      name<span class="token punctuation">:</span> <span class="token string">'yyy.png'</span><span class="token punctuation">,</span>
      status<span class="token punctuation">:</span> <span class="token string">'done'</span><span class="token punctuation">,</span>
      url<span class="token punctuation">:</span> <span class="token string">'http://www.baidu.com/yyy.png'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      uid<span class="token punctuation">:</span> <span class="token string">'3'</span><span class="token punctuation">,</span>
      name<span class="token punctuation">:</span> <span class="token string">'zzz.png'</span><span class="token punctuation">,</span>
      status<span class="token punctuation">:</span> <span class="token string">'error'</span><span class="token punctuation">,</span>
      response<span class="token punctuation">:</span> <span class="token string">'Server Error 500'</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// custom error message to show</span>
      url<span class="token punctuation">:</span> <span class="token string">'http://www.baidu.com/zzz.png'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
  showUploadList<span class="token punctuation">:</span> <span class="token punctuation">{</span>
    showDownloadIcon<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    downloadIcon<span class="token punctuation">:</span> <span class="token string">'download '</span><span class="token punctuation">,</span>
    showRemoveIcon<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    removeIcon<span class="token punctuation">:</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>StarOutlined</span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>e <span class="token operator">=</span><span class="token operator">></span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span> <span class="token string">'custom removeIcon event'</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

ReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>
  <span class="token operator">&lt;</span>Upload <span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span><span class="token operator">></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>UploadOutlined</span> <span class="token punctuation">/></span></span> Upload
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Upload</span><span class="token punctuation">></span></span><span class="token punctuation">,</span>
  mountNode<span class="token punctuation">,</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>`}],highlightedCodes:{jsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> Upload<span class="token punctuation">,</span> Button <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> UploadOutlined<span class="token punctuation">,</span> StarOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'@ant-design/icons'</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> props <span class="token operator">=</span> <span class="token punctuation">{</span>
  action<span class="token operator">:</span> <span class="token string">'https://www.mocky.io/v2/5cc8019d300000980a055e76'</span><span class="token punctuation">,</span>
  <span class="token function">onChange</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> file<span class="token punctuation">,</span> fileList <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>file<span class="token punctuation">.</span>status <span class="token operator">!==</span> <span class="token string">'uploading'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>file<span class="token punctuation">,</span> fileList<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  defaultFileList<span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      uid<span class="token operator">:</span> <span class="token string">'1'</span><span class="token punctuation">,</span>
      name<span class="token operator">:</span> <span class="token string">'xxx.png'</span><span class="token punctuation">,</span>
      status<span class="token operator">:</span> <span class="token string">'done'</span><span class="token punctuation">,</span>
      response<span class="token operator">:</span> <span class="token string">'Server Error 500'</span><span class="token punctuation">,</span> <span class="token comment">// custom error message to show</span>
      url<span class="token operator">:</span> <span class="token string">'http://www.baidu.com/xxx.png'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      uid<span class="token operator">:</span> <span class="token string">'2'</span><span class="token punctuation">,</span>
      name<span class="token operator">:</span> <span class="token string">'yyy.png'</span><span class="token punctuation">,</span>
      status<span class="token operator">:</span> <span class="token string">'done'</span><span class="token punctuation">,</span>
      url<span class="token operator">:</span> <span class="token string">'http://www.baidu.com/yyy.png'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      uid<span class="token operator">:</span> <span class="token string">'3'</span><span class="token punctuation">,</span>
      name<span class="token operator">:</span> <span class="token string">'zzz.png'</span><span class="token punctuation">,</span>
      status<span class="token operator">:</span> <span class="token string">'error'</span><span class="token punctuation">,</span>
      response<span class="token operator">:</span> <span class="token string">'Server Error 500'</span><span class="token punctuation">,</span> <span class="token comment">// custom error message to show</span>
      url<span class="token operator">:</span> <span class="token string">'http://www.baidu.com/zzz.png'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
  showUploadList<span class="token operator">:</span> <span class="token punctuation">{</span>
    showDownloadIcon<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    downloadIcon<span class="token operator">:</span> <span class="token string">'download '</span><span class="token punctuation">,</span>
    showRemoveIcon<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    removeIcon<span class="token operator">:</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">StarOutlined</span></span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token parameter">e</span> <span class="token operator">=></span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span> <span class="token string">'custom removeIcon event'</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

ReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Upload</span></span> <span class="token spread"><span class="token punctuation">{</span><span class="token punctuation">...</span><span class="token attr-value">props</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">UploadOutlined</span></span> <span class="token punctuation">/></span></span> Upload
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Upload</span></span><span class="token punctuation">></span></span><span class="token punctuation">,</span>
  mountNode<span class="token punctuation">,</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>`},preview:function na(){var j=m(0),L=m(28),o=m(8),s=m(47),t={action:"https://www.mocky.io/v2/5cc8019d300000980a055e76",onChange:function F(r){var z=r.file,A=r.fileList;z.status!=="uploading"&&console.log(z,A)},defaultFileList:[{uid:"1",name:"xxx.png",status:"done",response:"Server Error 500",url:"http://www.baidu.com/xxx.png"},{uid:"2",name:"yyy.png",status:"done",url:"http://www.baidu.com/yyy.png"},{uid:"3",name:"zzz.png",status:"error",response:"Server Error 500",url:"http://www.baidu.com/zzz.png"}],showUploadList:{showDownloadIcon:!0,downloadIcon:"download ",showRemoveIcon:!0,removeIcon:j.createElement(s.StarOutlined,{onClick:function F(r){return console.log(r,"custom removeIcon event")}})}};return j.createElement(o.Upload,t,j.createElement(o.Button,null,j.createElement(s.UploadOutlined,null)," Upload"))}}},4050:function(y,K,m){y.exports={content:{"zh-CN":[["p",["code","beforeUpload"]," 返回 ",["code","false"]," 后，手动上传文件。"]],"en-US":[["p","Upload files manually after ",["code","beforeUpload"]," returns ",["code","false"],"."]]},meta:{order:7,title:{"zh-CN":"手动上传","en-US":"Upload manually"},filename:"components/upload/demo/upload-manually.md",id:"components-upload-demo-upload-manually"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"jsx",highlighted:`<span class="token keyword">import</span> <span class="token punctuation">{</span> Upload<span class="token punctuation">,</span> Button<span class="token punctuation">,</span> message <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> UploadOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'@ant-design/icons'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> reqwest <span class="token keyword">from</span> <span class="token string">'reqwest'</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name">Demo</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>
  state <span class="token operator">=</span> <span class="token punctuation">{</span>
    fileList<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    uploading<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  handleUpload <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> fileList <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">;</span>
    <span class="token keyword">const</span> formData <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FormData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    fileList<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>file <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>
      formData<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">'files[]'</span><span class="token punctuation">,</span> file<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      uploading<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment" spellcheck="true">// You can use any AJAX library you like</span>
    <span class="token function">reqwest</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      url<span class="token punctuation">:</span> <span class="token string">'https://www.mocky.io/v2/5cc8019d300000980a055e76'</span><span class="token punctuation">,</span>
      method<span class="token punctuation">:</span> <span class="token string">'post'</span><span class="token punctuation">,</span>
      processData<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
      data<span class="token punctuation">:</span> formData<span class="token punctuation">,</span>
      success<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
          fileList<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
          uploading<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        message<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token string">'upload successfully.'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      error<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
          uploading<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">'upload failed.'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> uploading<span class="token punctuation">,</span> fileList <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">;</span>
    <span class="token keyword">const</span> props <span class="token operator">=</span> <span class="token punctuation">{</span>
      onRemove<span class="token punctuation">:</span> file <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span>state <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>
          <span class="token keyword">const</span> index <span class="token operator">=</span> state<span class="token punctuation">.</span>fileList<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token keyword">const</span> newFileList <span class="token operator">=</span> state<span class="token punctuation">.</span>fileList<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          newFileList<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token keyword">return</span> <span class="token punctuation">{</span>
            fileList<span class="token punctuation">:</span> newFileList<span class="token punctuation">,</span>
          <span class="token punctuation">}</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      beforeUpload<span class="token punctuation">:</span> file <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span>state <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span><span class="token punctuation">{</span>
          fileList<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token operator">...</span>state<span class="token punctuation">.</span>fileList<span class="token punctuation">,</span> file<span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      fileList<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> <span class="token punctuation">(</span>
      <span class="token operator">&lt;</span><span class="token operator">></span>
        <span class="token operator">&lt;</span>Upload <span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span><span class="token operator">></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>UploadOutlined</span> <span class="token punctuation">/></span></span> Select File
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Upload</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span>
          <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>primary<span class="token punctuation">"</span></span>
          <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>handleUpload<span class="token punctuation">}</span></span>
          <span class="token attr-name">disabled</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>fileList<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">}</span></span>
          <span class="token attr-name">loading</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>uploading<span class="token punctuation">}</span></span>
          <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> marginTop<span class="token punctuation">:</span> <span class="token number">16</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
        <span class="token punctuation">></span></span>
          <span class="token punctuation">{</span>uploading <span class="token operator">?</span> <span class="token string">'Uploading'</span> <span class="token punctuation">:</span> <span class="token string">'Start Upload'</span><span class="token punctuation">}</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">></span></span>
      <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token operator">></span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

ReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Demo</span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>`}],highlightedCodes:{jsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> Upload<span class="token punctuation">,</span> Button<span class="token punctuation">,</span> message <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> UploadOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'@ant-design/icons'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> reqwest <span class="token keyword">from</span> <span class="token string">'reqwest'</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name">Demo</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>
  state <span class="token operator">=</span> <span class="token punctuation">{</span>
    fileList<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    uploading<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token function-variable function">handleUpload</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> fileList <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">;</span>
    <span class="token keyword">const</span> formData <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FormData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    fileList<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">file</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
      formData<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">'files[]'</span><span class="token punctuation">,</span> file<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      uploading<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// You can use any AJAX library you like</span>
    <span class="token function">reqwest</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      url<span class="token operator">:</span> <span class="token string">'https://www.mocky.io/v2/5cc8019d300000980a055e76'</span><span class="token punctuation">,</span>
      method<span class="token operator">:</span> <span class="token string">'post'</span><span class="token punctuation">,</span>
      processData<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
      data<span class="token operator">:</span> formData<span class="token punctuation">,</span>
      <span class="token function-variable function">success</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
          fileList<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
          uploading<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        message<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token string">'upload successfully.'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token function-variable function">error</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
          uploading<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">'upload failed.'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> uploading<span class="token punctuation">,</span> fileList <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">;</span>
    <span class="token keyword">const</span> props <span class="token operator">=</span> <span class="token punctuation">{</span>
      <span class="token function-variable function">onRemove</span><span class="token operator">:</span> <span class="token parameter">file</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token parameter">state</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
          <span class="token keyword">const</span> index <span class="token operator">=</span> state<span class="token punctuation">.</span>fileList<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token keyword">const</span> newFileList <span class="token operator">=</span> state<span class="token punctuation">.</span>fileList<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          newFileList<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token keyword">return</span> <span class="token punctuation">{</span>
            fileList<span class="token operator">:</span> newFileList<span class="token punctuation">,</span>
          <span class="token punctuation">}</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token function-variable function">beforeUpload</span><span class="token operator">:</span> <span class="token parameter">file</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token parameter">state</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span>
          fileList<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token operator">...</span>state<span class="token punctuation">.</span>fileList<span class="token punctuation">,</span> file<span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      fileList<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> <span class="token punctuation">(</span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Upload</span></span> <span class="token spread"><span class="token punctuation">{</span><span class="token punctuation">...</span><span class="token attr-value">props</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">UploadOutlined</span></span> <span class="token punctuation">/></span></span> Select File
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Upload</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span>
          <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>primary<span class="token punctuation">"</span></span>
          <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>handleUpload<span class="token punctuation">}</span></span>
          <span class="token attr-name">disabled</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>fileList<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">}</span></span>
          <span class="token attr-name">loading</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>uploading<span class="token punctuation">}</span></span>
          <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> marginTop<span class="token operator">:</span> <span class="token number">16</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
        <span class="token punctuation">></span></span>
          <span class="token punctuation">{</span>uploading <span class="token operator">?</span> <span class="token string">'Uploading'</span> <span class="token operator">:</span> <span class="token string">'Start Upload'</span><span class="token punctuation">}</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span></span><span class="token punctuation">></span></span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

ReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Demo</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>`},preview:function na(){var j=m(0),L=m(28),o=m(8),s=m(47),t=F(m(3353));function F(d){return d&&d.__esModule?d:{default:d}}function r(d){return typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"?r=function a(c){return typeof c}:r=function a(c){return c&&typeof Symbol==="function"&&c.constructor===Symbol&&c!==Symbol.prototype?"symbol":typeof c},r(d)}function z(d){return D(d)||H(d)||G(d)||A()}function A(){throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function G(d,a){if(!d)return;if(typeof d==="string")return I(d,a);var c=Object.prototype.toString.call(d).slice(8,-1);c==="Object"&&d.constructor&&(c=d.constructor.name);if(c==="Map"||c==="Set")return Array.from(d);if(c==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(c))return I(d,a)}function H(d){if(typeof Symbol!=="undefined"&&Symbol.iterator in Object(d))return Array.from(d)}function D(d){if(Array.isArray(d))return I(d)}function I(d,a){(a==null||a>d.length)&&(a=d.length);for(var c=0,h=new Array(a);c<a;c++)h[c]=d[c];return h}function M(d,a){if(!(d instanceof a))throw new TypeError("Cannot call a class as a function")}function B(d,a){for(var c=0;c<a.length;c++){var h=a[c];h.enumerable=h.enumerable||!1,h.configurable=!0,"value"in h&&(h.writable=!0),Object.defineProperty(d,h.key,h)}}function p(d,a,c){return a&&B(d.prototype,a),c&&B(d,c),d}function u(d,a){if(typeof a!=="function"&&a!==null)throw new TypeError("Super expression must either be null or a function");d.prototype=Object.create(a&&a.prototype,{constructor:{value:d,writable:!0,configurable:!0}}),a&&q(d,a)}function q(d,a){return q=Object.setPrototypeOf||function c(h,l){return h.__proto__=l,h},q(d,a)}function n(d){var a=e();return function c(){var h=f(d),l;if(a){var w=f(this).constructor;l=Reflect.construct(h,arguments,w)}else l=h.apply(this,arguments);return k(this,l)}}function k(d,a){return a&&(r(a)==="object"||typeof a==="function")?a:b(d)}function b(d){if(d===void 0)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return d}function e(){if(typeof Reflect==="undefined"||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if(typeof Proxy==="function")return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],function(){})),!0}catch(d){return!1}}function f(d){return f=Object.setPrototypeOf?Object.getPrototypeOf:function a(c){return c.__proto__||Object.getPrototypeOf(c)},f(d)}function i(d,a,c){return a in d?Object.defineProperty(d,a,{value:c,enumerable:!0,configurable:!0,writable:!0}):d[a]=c,d}var g=function(d){u(c,d);var a=n(c);function c(){var h;M(this,c);for(var l=arguments.length,w=new Array(l),v=0;v<l;v++)w[v]=arguments[v];return h=a.call.apply(a,[this].concat(w)),i(b(h),"state",{fileList:[],uploading:!1}),i(b(h),"handleUpload",function(){var E=h.state.fileList,x=new FormData();E.forEach(function(C){x.append("files[]",C)}),h.setState({uploading:!0}),(0,t.default)({url:"https://www.mocky.io/v2/5cc8019d300000980a055e76",method:"post",processData:!1,data:x,success:function C(){h.setState({fileList:[],uploading:!1}),o.message.success("upload successfully.")},error:function C(){h.setState({uploading:!1}),o.message.error("upload failed.")}})}),h}return p(c,[{key:"render",value:function h(){var l=this,w=this.state,v=w.uploading,E=w.fileList,x={onRemove:function C(N){l.setState(function(J){var O=J.fileList.indexOf(N),P=J.fileList.slice();return P.splice(O,1),{fileList:P}})},beforeUpload:function C(N){return l.setState(function(J){return{fileList:[].concat(z(J.fileList),[N])}}),!1},fileList:E};return j.createElement(j.Fragment,null,j.createElement(o.Upload,x,j.createElement(o.Button,null,j.createElement(s.UploadOutlined,null)," Select File")),j.createElement(o.Button,{type:"primary",onClick:this.handleUpload,disabled:E.length===0,loading:v,style:{marginTop:16}},v?"Uploading":"Start Upload"))}}]),c}(j.Component);return j.createElement(g,null)}}},4051:function(y,K,m){y.exports={content:{"zh-CN":[["p",["code","beforeUpload"]," 返回 ",["code","false"]," 或 ",["code","Promise.reject"]," 时，只用于拦截上传行为，不会阻止文件进入上传列表（",["a",{title:null,href:"https://github.com/ant-design/ant-design/issues/15561#issuecomment-475108235"},"原因"],"）。如果需要阻止列表展现，可以参照此例配合 ",["code","onChange"]," 进行实现。"]],"en-US":[["p",["code","beforeUpload"]," only prevent upload behavior when return false or reject promise, the prevented file would still show in file list. Here is the example you can keep prevented files out of list by using ",["code","onChange"],"."]]},meta:{order:7.1,title:{"zh-CN":"只上传 png 图片","en-US":"Upload png file only"},filename:"components/upload/demo/upload-png-only.md",id:"components-upload-demo-upload-png-only"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"jsx",highlighted:`<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Upload<span class="token punctuation">,</span> Button<span class="token punctuation">,</span> message <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> UploadOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'@ant-design/icons'</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> Uploader <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>fileList<span class="token punctuation">,</span> updateFileList<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> props <span class="token operator">=</span> <span class="token punctuation">{</span>
    fileList<span class="token punctuation">,</span>
    beforeUpload<span class="token punctuation">:</span> file <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>file<span class="token punctuation">.</span>type <span class="token operator">!==</span> <span class="token string">'image/png'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token template-string"><span class="token string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>file<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> is not a png file\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">return</span> file<span class="token punctuation">.</span>type <span class="token operator">===</span> <span class="token string">'image/png'</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    onChange<span class="token punctuation">:</span> info <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>info<span class="token punctuation">.</span>fileList<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment" spellcheck="true">// file.status is empty when beforeUpload return false</span>
      <span class="token function">updateFileList</span><span class="token punctuation">(</span>info<span class="token punctuation">.</span>fileList<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>file <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">!</span><span class="token operator">!</span>file<span class="token punctuation">.</span>status<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token operator">&lt;</span>Upload <span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span><span class="token operator">></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>UploadOutlined</span> <span class="token punctuation">/></span></span> Upload png only
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Upload</span><span class="token punctuation">></span></span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

ReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Uploader</span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>`}],highlightedCodes:{jsx:`<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Upload<span class="token punctuation">,</span> Button<span class="token punctuation">,</span> message <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> UploadOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'@ant-design/icons'</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">Uploader</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>fileList<span class="token punctuation">,</span> updateFileList<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> props <span class="token operator">=</span> <span class="token punctuation">{</span>
    fileList<span class="token punctuation">,</span>
    <span class="token function-variable function">beforeUpload</span><span class="token operator">:</span> <span class="token parameter">file</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>file<span class="token punctuation">.</span>type <span class="token operator">!==</span> <span class="token string">'image/png'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>file<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> is not a png file</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">return</span> file<span class="token punctuation">.</span>type <span class="token operator">===</span> <span class="token string">'image/png'</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function-variable function">onChange</span><span class="token operator">:</span> <span class="token parameter">info</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>info<span class="token punctuation">.</span>fileList<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">// file.status is empty when beforeUpload return false</span>
      <span class="token function">updateFileList</span><span class="token punctuation">(</span>info<span class="token punctuation">.</span>fileList<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">file</span> <span class="token operator">=></span> <span class="token operator">!</span><span class="token operator">!</span>file<span class="token punctuation">.</span>status<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Upload</span></span> <span class="token spread"><span class="token punctuation">{</span><span class="token punctuation">...</span><span class="token attr-value">props</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">UploadOutlined</span></span> <span class="token punctuation">/></span></span> Upload png only
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Upload</span></span><span class="token punctuation">></span></span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

ReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Uploader</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>`},preview:function na(){var j=m(0),L=m(28);function o(p){return typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"?o=function u(q){return typeof q}:o=function u(q){return q&&typeof Symbol==="function"&&q.constructor===Symbol&&q!==Symbol.prototype?"symbol":typeof q},o(p)}var s=z(m(0)),t=m(8),F=m(47);function r(){if(typeof WeakMap!=="function")return null;var p=new WeakMap();return r=function u(){return p},p}function z(p){if(p&&p.__esModule)return p;if(p===null||o(p)!=="object"&&typeof p!=="function")return{default:p};var u=r();if(u&&u.has(p))return u.get(p);var q={},n=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var k in p)if(Object.prototype.hasOwnProperty.call(p,k)){var b=n?Object.getOwnPropertyDescriptor(p,k):null;b&&(b.get||b.set)?Object.defineProperty(q,k,b):q[k]=p[k]}return q.default=p,u&&u.set(p,q),q}function A(p,u){return M(p)||I(p,u)||H(p,u)||G()}function G(){throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function H(p,u){if(!p)return;if(typeof p==="string")return D(p,u);var q=Object.prototype.toString.call(p).slice(8,-1);q==="Object"&&p.constructor&&(q=p.constructor.name);if(q==="Map"||q==="Set")return Array.from(p);if(q==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(q))return D(p,u)}function D(p,u){(u==null||u>p.length)&&(u=p.length);for(var q=0,n=new Array(u);q<u;q++)n[q]=p[q];return n}function I(p,u){if(typeof Symbol==="undefined"||!(Symbol.iterator in Object(p)))return;var q=[],n=!0,k=!1,b=void 0;try{for(var e=p[Symbol.iterator](),f;!(n=(f=e.next()).done);n=!0){q.push(f.value);if(u&&q.length===u)break}}catch(i){k=!0,b=i}finally{try{!n&&e.return!=null&&e.return()}finally{if(k)throw b}}return q}function M(p){if(Array.isArray(p))return p}var B=function p(){var u=(0,s.useState)([]),q=A(u,2),n=q[0],k=q[1],b={fileList:n,beforeUpload:function e(f){return f.type!=="image/png"&&t.message.error("".concat(f.name," is not a png file")),f.type==="image/png"},onChange:function e(f){console.log(f.fileList),k(f.fileList.filter(function(i){return!!i.status}))}};return s.default.createElement(t.Upload,b,s.default.createElement(t.Button,null,s.default.createElement(F.UploadOutlined,null)," Upload png only"))};return s.default.createElement(B,null)}}},4052:function(y,K,m){y.exports={content:{"zh-CN":[["p","使用阿里云 OSS 上传示例."]],"en-US":[["p","Use Aliyun OSS upload example."]]},meta:{order:11,title:{"zh-CN":"阿里云 OSS","en-US":"Aliyun OSS"},filename:"components/upload/demo/upload-with-aliyun-oss.md",id:"components-upload-demo-upload-with-aliyun-oss"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"jsx",highlighted:`<span class="token keyword">import</span> <span class="token punctuation">{</span> Form<span class="token punctuation">,</span> Upload<span class="token punctuation">,</span> message<span class="token punctuation">,</span> Button <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> UploadOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'@ant-design/icons'</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name">AliyunOSSUpload</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>
  state <span class="token operator">=</span> <span class="token punctuation">{</span>
    OSSData<span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">async</span> <span class="token function">componentDidMount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  init <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> OSSData <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">mockGetOSSData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        OSSData<span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token comment" spellcheck="true">// Mock get OSS api</span>
  <span class="token comment" spellcheck="true">// https://help.aliyun.com/document_detail/31988.html</span>
  mockGetOSSData <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      dir<span class="token punctuation">:</span> <span class="token string">'user-dir/'</span><span class="token punctuation">,</span>
      expire<span class="token punctuation">:</span> <span class="token string">'1577811661'</span><span class="token punctuation">,</span>
      host<span class="token punctuation">:</span> <span class="token string">'//www.mocky.io/v2/5cc8019d300000980a055e76'</span><span class="token punctuation">,</span>
      accessId<span class="token punctuation">:</span> <span class="token string">'c2hhb2RhaG9uZw=='</span><span class="token punctuation">,</span>
      policy<span class="token punctuation">:</span> <span class="token string">'eGl4aWhhaGFrdWt1ZGFkYQ=='</span><span class="token punctuation">,</span>
      signature<span class="token punctuation">:</span> <span class="token string">'ZGFob25nc2hhbw=='</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  onChange <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> fileList <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> onChange <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'Aliyun OSS:'</span><span class="token punctuation">,</span> fileList<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>onChange<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">onChange</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">...</span>fileList<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  onRemove <span class="token operator">=</span> file <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> value<span class="token punctuation">,</span> onChange <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">;</span>

    <span class="token keyword">const</span> files <span class="token operator">=</span> value<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>v <span class="token operator">=</span><span class="token operator">></span> v<span class="token punctuation">.</span>url <span class="token operator">!==</span> file<span class="token punctuation">.</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>onChange<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">onChange</span><span class="token punctuation">(</span>files<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  transformFile <span class="token operator">=</span> file <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> OSSData <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">;</span>

    <span class="token keyword">const</span> suffix <span class="token operator">=</span> file<span class="token punctuation">.</span>name<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>name<span class="token punctuation">.</span><span class="token function">lastIndexOf</span><span class="token punctuation">(</span><span class="token string">'.'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> filename <span class="token operator">=</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> suffix<span class="token punctuation">;</span>
    file<span class="token punctuation">.</span>url <span class="token operator">=</span> OSSData<span class="token punctuation">.</span>dir <span class="token operator">+</span> filename<span class="token punctuation">;</span>

    <span class="token keyword">return</span> file<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  getExtraData <span class="token operator">=</span> file <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> OSSData <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">;</span>

    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      key<span class="token punctuation">:</span> file<span class="token punctuation">.</span>url<span class="token punctuation">,</span>
      OSSAccessKeyId<span class="token punctuation">:</span> OSSData<span class="token punctuation">.</span>accessId<span class="token punctuation">,</span>
      policy<span class="token punctuation">:</span> OSSData<span class="token punctuation">.</span>policy<span class="token punctuation">,</span>
      Signature<span class="token punctuation">:</span> OSSData<span class="token punctuation">.</span>signature<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  beforeUpload <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> OSSData <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">;</span>
    <span class="token keyword">const</span> expire <span class="token operator">=</span> OSSData<span class="token punctuation">.</span>expire <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>expire <span class="token operator">&lt;</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> value <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">;</span>
    <span class="token keyword">const</span> props <span class="token operator">=</span> <span class="token punctuation">{</span>
      name<span class="token punctuation">:</span> <span class="token string">'file'</span><span class="token punctuation">,</span>
      fileList<span class="token punctuation">:</span> value<span class="token punctuation">,</span>
      action<span class="token punctuation">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>OSSData<span class="token punctuation">.</span>host<span class="token punctuation">,</span>
      onChange<span class="token punctuation">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>onChange<span class="token punctuation">,</span>
      onRemove<span class="token punctuation">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>onRemove<span class="token punctuation">,</span>
      transformFile<span class="token punctuation">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>transformFile<span class="token punctuation">,</span>
      data<span class="token punctuation">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>getExtraData<span class="token punctuation">,</span>
      beforeUpload<span class="token punctuation">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>beforeUpload<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span>
      <span class="token operator">&lt;</span>Upload <span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span><span class="token operator">></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span><span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>UploadOutlined</span> <span class="token punctuation">/></span></span> Click to Upload
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Upload</span><span class="token punctuation">></span></span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> FormPage <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Form</span> <span class="token attr-name">labelCol</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> span<span class="token punctuation">:</span> <span class="token number">4</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Form.Item</span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Photos<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>photos<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>AliyunOSSUpload</span> <span class="token punctuation">/></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Form.Item</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Form</span><span class="token punctuation">></span></span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

ReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>FormPage</span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>`}],highlightedCodes:{jsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> Form<span class="token punctuation">,</span> Upload<span class="token punctuation">,</span> message<span class="token punctuation">,</span> Button <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> UploadOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'@ant-design/icons'</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name">AliyunOSSUpload</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>
  state <span class="token operator">=</span> <span class="token punctuation">{</span>
    OSSData<span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">async</span> <span class="token function">componentDidMount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token function-variable function">init</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> OSSData <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">mockGetOSSData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        OSSData<span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token comment">// Mock get OSS api</span>
  <span class="token comment">// https://help.aliyun.com/document_detail/31988.html</span>
  <span class="token function-variable function">mockGetOSSData</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      dir<span class="token operator">:</span> <span class="token string">'user-dir/'</span><span class="token punctuation">,</span>
      expire<span class="token operator">:</span> <span class="token string">'1577811661'</span><span class="token punctuation">,</span>
      host<span class="token operator">:</span> <span class="token string">'//www.mocky.io/v2/5cc8019d300000980a055e76'</span><span class="token punctuation">,</span>
      accessId<span class="token operator">:</span> <span class="token string">'c2hhb2RhaG9uZw=='</span><span class="token punctuation">,</span>
      policy<span class="token operator">:</span> <span class="token string">'eGl4aWhhaGFrdWt1ZGFkYQ=='</span><span class="token punctuation">,</span>
      signature<span class="token operator">:</span> <span class="token string">'ZGFob25nc2hhbw=='</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token function-variable function">onChange</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> fileList <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> onChange <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'Aliyun OSS:'</span><span class="token punctuation">,</span> fileList<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>onChange<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">onChange</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">...</span>fileList<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token function-variable function">onRemove</span> <span class="token operator">=</span> <span class="token parameter">file</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> value<span class="token punctuation">,</span> onChange <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">;</span>

    <span class="token keyword">const</span> files <span class="token operator">=</span> value<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">v</span> <span class="token operator">=></span> v<span class="token punctuation">.</span>url <span class="token operator">!==</span> file<span class="token punctuation">.</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>onChange<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">onChange</span><span class="token punctuation">(</span>files<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token function-variable function">transformFile</span> <span class="token operator">=</span> <span class="token parameter">file</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> OSSData <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">;</span>

    <span class="token keyword">const</span> suffix <span class="token operator">=</span> file<span class="token punctuation">.</span>name<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>name<span class="token punctuation">.</span><span class="token function">lastIndexOf</span><span class="token punctuation">(</span><span class="token string">'.'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> filename <span class="token operator">=</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> suffix<span class="token punctuation">;</span>
    file<span class="token punctuation">.</span>url <span class="token operator">=</span> OSSData<span class="token punctuation">.</span>dir <span class="token operator">+</span> filename<span class="token punctuation">;</span>

    <span class="token keyword">return</span> file<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token function-variable function">getExtraData</span> <span class="token operator">=</span> <span class="token parameter">file</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> OSSData <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">;</span>

    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      key<span class="token operator">:</span> file<span class="token punctuation">.</span>url<span class="token punctuation">,</span>
      OSSAccessKeyId<span class="token operator">:</span> OSSData<span class="token punctuation">.</span>accessId<span class="token punctuation">,</span>
      policy<span class="token operator">:</span> OSSData<span class="token punctuation">.</span>policy<span class="token punctuation">,</span>
      Signature<span class="token operator">:</span> OSSData<span class="token punctuation">.</span>signature<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token function-variable function">beforeUpload</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> OSSData <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">;</span>
    <span class="token keyword">const</span> expire <span class="token operator">=</span> OSSData<span class="token punctuation">.</span>expire <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>expire <span class="token operator">&lt;</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> value <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">;</span>
    <span class="token keyword">const</span> props <span class="token operator">=</span> <span class="token punctuation">{</span>
      name<span class="token operator">:</span> <span class="token string">'file'</span><span class="token punctuation">,</span>
      fileList<span class="token operator">:</span> value<span class="token punctuation">,</span>
      action<span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>OSSData<span class="token punctuation">.</span>host<span class="token punctuation">,</span>
      onChange<span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>onChange<span class="token punctuation">,</span>
      onRemove<span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>onRemove<span class="token punctuation">,</span>
      transformFile<span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>transformFile<span class="token punctuation">,</span>
      data<span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>getExtraData<span class="token punctuation">,</span>
      beforeUpload<span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>beforeUpload<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Upload</span></span> <span class="token spread"><span class="token punctuation">{</span><span class="token punctuation">...</span><span class="token attr-value">props</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">UploadOutlined</span></span> <span class="token punctuation">/></span></span> Click to Upload
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Upload</span></span><span class="token punctuation">></span></span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> <span class="token function-variable function">FormPage</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Form</span></span> <span class="token attr-name">labelCol</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> span<span class="token operator">:</span> <span class="token number">4</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Form.Item</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Photos<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>photos<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">AliyunOSSUpload</span></span> <span class="token punctuation">/></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Form.Item</span></span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Form</span></span><span class="token punctuation">></span></span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

ReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">FormPage</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>`},preview:function na(){var j=m(0),L=m(28),o=m(8),s=m(47);function t(a){return typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"?t=function c(h){return typeof h}:t=function c(h){return h&&typeof Symbol==="function"&&h.constructor===Symbol&&h!==Symbol.prototype?"symbol":typeof h},t(a)}function F(a){return G(a)||A(a)||z(a)||r()}function r(){throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function z(a,c){if(!a)return;if(typeof a==="string")return H(a,c);var h=Object.prototype.toString.call(a).slice(8,-1);h==="Object"&&a.constructor&&(h=a.constructor.name);if(h==="Map"||h==="Set")return Array.from(a);if(h==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(h))return H(a,c)}function A(a){if(typeof Symbol!=="undefined"&&Symbol.iterator in Object(a))return Array.from(a)}function G(a){if(Array.isArray(a))return H(a)}function H(a,c){(c==null||c>a.length)&&(c=a.length);for(var h=0,l=new Array(c);h<c;h++)l[h]=a[h];return l}function D(a,c,h,l,w,v,E){try{var x=a[v](E),C=x.value}catch(N){h(N);return}x.done?c(C):Promise.resolve(C).then(l,w)}function I(a){return function(){var c=this,h=arguments;return new Promise(function(l,w){var v=a.apply(c,h);function E(C){D(v,l,w,E,x,"next",C)}function x(C){D(v,l,w,E,x,"throw",C)}E(void 0)})}}function M(a,c){if(!(a instanceof c))throw new TypeError("Cannot call a class as a function")}function B(a,c){for(var h=0;h<c.length;h++){var l=c[h];l.enumerable=l.enumerable||!1,l.configurable=!0,"value"in l&&(l.writable=!0),Object.defineProperty(a,l.key,l)}}function p(a,c,h){return c&&B(a.prototype,c),h&&B(a,h),a}function u(a,c){if(typeof c!=="function"&&c!==null)throw new TypeError("Super expression must either be null or a function");a.prototype=Object.create(c&&c.prototype,{constructor:{value:a,writable:!0,configurable:!0}}),c&&q(a,c)}function q(a,c){return q=Object.setPrototypeOf||function h(l,w){return l.__proto__=w,l},q(a,c)}function n(a){var c=e();return function h(){var l=f(a),w;if(c){var v=f(this).constructor;w=Reflect.construct(l,arguments,v)}else w=l.apply(this,arguments);return k(this,w)}}function k(a,c){return c&&(t(c)==="object"||typeof c==="function")?c:b(a)}function b(a){if(a===void 0)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return a}function e(){if(typeof Reflect==="undefined"||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if(typeof Proxy==="function")return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],function(){})),!0}catch(a){return!1}}function f(a){return f=Object.setPrototypeOf?Object.getPrototypeOf:function c(h){return h.__proto__||Object.getPrototypeOf(h)},f(a)}function i(a,c,h){return c in a?Object.defineProperty(a,c,{value:h,enumerable:!0,configurable:!0,writable:!0}):a[c]=h,a}var g=function(a){u(h,a);var c=n(h);function h(){var l;M(this,h);for(var w=arguments.length,v=new Array(w),E=0;E<w;E++)v[E]=arguments[E];return l=c.call.apply(c,[this].concat(v)),i(b(l),"state",{OSSData:{}}),i(b(l),"init",I(regeneratorRuntime.mark(function x(){var C;return regeneratorRuntime.wrap(function N(J){for(;;)switch(J.prev=J.next){case 0:return J.prev=0,J.next=3,l.mockGetOSSData();case 3:C=J.sent,l.setState({OSSData:C}),J.next=10;break;case 7:J.prev=7,J.t0=J.catch(0),o.message.error(J.t0);case 10:case"end":return J.stop()}},x,null,[[0,7]])}))),i(b(l),"mockGetOSSData",function(){return{dir:"user-dir/",expire:"1577811661",host:"//www.mocky.io/v2/5cc8019d300000980a055e76",accessId:"c2hhb2RhaG9uZw==",policy:"eGl4aWhhaGFrdWt1ZGFkYQ==",signature:"ZGFob25nc2hhbw=="}}),i(b(l),"onChange",function(x){var C=x.fileList,N=l.props.onChange;console.log("Aliyun OSS:",C),N&&N(F(C))}),i(b(l),"onRemove",function(x){var C=l.props,N=C.value,J=C.onChange,O=N.filter(function(P){return P.url!==x.url});J&&J(O)}),i(b(l),"transformFile",function(x){var C=l.state.OSSData,N=x.name.slice(x.name.lastIndexOf(".")),J=Date.now()+N;return x.url=C.dir+J,x}),i(b(l),"getExtraData",function(x){var C=l.state.OSSData;return{key:x.url,OSSAccessKeyId:C.accessId,policy:C.policy,Signature:C.signature}}),i(b(l),"beforeUpload",I(regeneratorRuntime.mark(function x(){var C,N;return regeneratorRuntime.wrap(function J(O){for(;;)switch(O.prev=O.next){case 0:C=l.state.OSSData,N=C.expire*1e3;if(!(N<Date.now())){O.next=5;break}return O.next=5,l.init();case 5:return O.abrupt("return",!0);case 6:case"end":return O.stop()}},x)}))),l}return p(h,[{key:"componentDidMount",value:function(){var l=I(regeneratorRuntime.mark(function v(){return regeneratorRuntime.wrap(function E(x){for(;;)switch(x.prev=x.next){case 0:return x.next=2,this.init();case 2:case"end":return x.stop()}},v,this)}));function w(){return l.apply(this,arguments)}return w}()},{key:"render",value:function l(){var w=this.props.value,v={name:"file",fileList:w,action:this.state.OSSData.host,onChange:this.onChange,onRemove:this.onRemove,transformFile:this.transformFile,data:this.getExtraData,beforeUpload:this.beforeUpload};return j.createElement(o.Upload,v,j.createElement(o.Button,null,j.createElement(s.UploadOutlined,null)," Click to Upload"))}}]),h}(j.Component),d=function a(){return j.createElement(o.Form,{labelCol:{span:4}},j.createElement(o.Form.Item,{label:"Photos",name:"photos"},j.createElement(g,null)))};return j.createElement(d,null)}}}}]);
