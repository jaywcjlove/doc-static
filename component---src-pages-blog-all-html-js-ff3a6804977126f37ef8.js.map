{"version":3,"sources":["webpack:///./src/utils/toCommaSeparatedList.js","webpack:///./src/components/Header/index.js","webpack:///./node_modules/gatsby/node_modules/core-js/modules/es.function.name.js","webpack:///./src/components/Header/Header.js","webpack:///./src/pages/blog/all.html.js"],"names":["addString","list","string","push","key","length","toCommaSeparatedList","array","renderCallback","map","forEach","item","index","Header","DESCRIPTORS","defineProperty","f","FunctionPrototype","Function","prototype","FunctionPrototypeToString","toString","nameRE","configurable","get","call","this","match","error","children","css","color","colors","dark","marginRight","fonts","header","pageQuery","AllBlogPosts","data","location","sharedStyles","articleLayout","container","content","canonicalUrl","urlRoot","title","display","flexWrap","marginLeft","allMarkdownRemark","edges","node","paddingLeft","paddingTop","borderTop","paddingBottom","width","media","size","greaterThan","fields","slug","fontSize","lineHeight","fontWeight","borderBottom","borderBottomColor","black","to","frontmatter","date","author","subtle","marginTop","name"],"mappings":"4FAAA,0BAWMA,EAAY,SAACC,EAAmBC,GAApB,OAChBD,EAAKE,KAAK,wBAAMC,IAAQH,EAAKI,OAAV,IAAoBH,GAAWA,KA2BrCI,IAzBc,SAC3BC,EACAC,GAEA,GAAID,EAAMF,QAAU,EAClB,OAAOE,EAAME,IAAID,GAGnB,IAAMP,EAAO,GAcb,OAZAM,EAAMG,SAAQ,SAACC,EAAMC,GACfA,IAAUL,EAAMF,OAAS,GAC3BL,EAAUC,EAAuB,IAAjBM,EAAMF,OAAe,QAAU,UAC/CJ,EAAKE,KAAKK,EAAeG,EAAMC,KACtBA,EAAQ,GACjBZ,EAAUC,EAAM,MAChBA,EAAKE,KAAKK,EAAeG,EAAMC,KAE/BX,EAAKE,KAAKK,EAAeG,EAAMC,OAI5BX,K,wDCpCT,gBAQeY,MAAf,G,qBCRA,IAAIC,EAAc,EAAQ,QACtBC,EAAiB,EAAQ,QAAuCC,EAEhEC,EAAoBC,SAASC,UAC7BC,EAA4BH,EAAkBI,SAC9CC,EAAS,wBAKTR,KAJO,SAIkBG,IAC3BF,EAAeE,EALN,OAK+B,CACtCM,cAAc,EACdC,IAAK,WACH,IACE,OAAOJ,EAA0BK,KAAKC,MAAMC,MAAML,GAAQ,GAC1D,MAAOM,GACP,MAAO,Q,mFCMAf,IAXA,SAAC,GAAD,IAAEgB,EAAF,EAAEA,SAAF,OACb,sBACEC,IAAG,eACDC,MAAOC,IAAOC,KACdC,YAAa,MACVC,IAAMC,SAEVP,M,2PCmFQQ,EAAS,aA2BPC,UAxGM,SAAC,GAAD,IAAEC,EAAF,EAAEA,KAAMC,EAAR,EAAQA,SAAR,OACnB,gBAAC,IAAD,CAAQA,SAAUA,GAChB,gBAAC,IAAD,KACE,uBAAKV,IAAKW,IAAaC,cAAcC,WACnC,uBAAKb,IAAKW,IAAaC,cAAcE,SACnC,gBAAC,IAAD,kBACA,gBAAC,IAAD,CACEC,aAAiBC,IAAL,iBACZC,MAAM,sBAER,sBACEjB,IAAK,CACHkB,QAAS,OACTC,SAAU,OACVC,YAAa,KAEdX,EAAKY,kBAAkBC,MAAM3C,KAAI,kBAAE4C,EAAF,EAAEA,KAAF,OAChC,sBACEvB,KAAG,GACDwB,YAAa,GACbC,WAAY,GACZC,UAAW,qBACXC,cAAe,GACfC,MAAO,QALN,EAOAC,IAAMC,KAAK,WAAY,CACtBF,MAAO,OARR,EAWAC,IAAME,YAAY,UAAW,CAC5BH,MAAO,UAZR,GAeHtD,IAAKiD,EAAKS,OAAOC,MACjB,sBACEjC,IAAK,CACHkC,SAAU,GACVjC,MAAOC,IAAOC,KACdgC,WAAY,IACZC,WAAY,MAEd,gBAAC,OAAD,CACEpC,IAAK,CACHqC,aAAc,oBACd,SAAU,CACRC,kBAAmBpC,IAAOqC,QAG9BjE,IAAKiD,EAAKS,OAAOC,KACjBO,GAAIjB,EAAKS,OAAOC,MACfV,EAAKkB,YAAYxB,QAGtB,gBAAC,IAAD,KAAYM,EAAKS,OAAOU,MACvBnB,EAAKkB,YAAYE,OAChB,uBACE3C,IAAK,CACHC,MAAOC,IAAO0C,OACdC,WAAY,IAHhB,KAKK,IACFrE,YAAqB+C,EAAKkB,YAAYE,QAAQ,SAAAA,GAAM,OACnD,wBAAMrE,IAAKqE,EAAOF,YAAYK,MAC3BH,EAAOF,YAAYK,UAIxB,gB","file":"component---src-pages-blog-all-html-js-ff3a6804977126f37ef8.js","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * @emails react-core\n * @flow\n */\n\nimport React from 'react';\n\nimport type {Node} from 'react';\n\nconst addString = (list: Array<Node>, string: string) =>\n  list.push(<span key={`${list.length}-${string}`}>{string}</span>);\n\nconst toCommaSeparatedList = (\n  array: Array<any>,\n  renderCallback: Function,\n): Array<any> => {\n  if (array.length <= 1) {\n    return array.map(renderCallback);\n  }\n\n  const list = [];\n\n  array.forEach((item, index) => {\n    if (index === array.length - 1) {\n      addString(list, array.length === 2 ? ' and ' : ', and ');\n      list.push(renderCallback(item, index));\n    } else if (index > 0) {\n      addString(list, ', ');\n      list.push(renderCallback(item, index));\n    } else {\n      list.push(renderCallback(item, index));\n    }\n  });\n\n  return list;\n};\n\nexport default toCommaSeparatedList;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * @emails react-core\n */\n\nimport Header from './Header';\n\nexport default Header;\n","var DESCRIPTORS = require('../internals/descriptors');\nvar defineProperty = require('../internals/object-define-property').f;\n\nvar FunctionPrototype = Function.prototype;\nvar FunctionPrototypeToString = FunctionPrototype.toString;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name';\n\n// Function instances `.name` property\n// https://tc39.github.io/ecma262/#sec-function-instances-name\nif (DESCRIPTORS && !(NAME in FunctionPrototype)) {\n  defineProperty(FunctionPrototype, NAME, {\n    configurable: true,\n    get: function () {\n      try {\n        return FunctionPrototypeToString.call(this).match(nameRE)[1];\n      } catch (error) {\n        return '';\n      }\n    }\n  });\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * @emails react-core\n * @flow\n */\n\nimport React from 'react';\nimport {colors, fonts} from 'theme';\n\nimport type {Node} from 'react';\n\nconst Header = ({children}: {children: Node}) => (\n  <h1\n    css={{\n      color: colors.dark,\n      marginRight: '5%',\n      ...fonts.header,\n    }}>\n    {children}\n  </h1>\n);\n\nexport default Header;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * @emails react-core\n * @flow\n */\n\nimport {graphql, Link} from 'gatsby';\nimport Layout from 'components/Layout';\nimport Container from 'components/Container';\nimport Header from 'components/Header';\nimport TitleAndMetaTags from 'components/TitleAndMetaTags';\nimport React from 'react';\nimport {urlRoot} from 'site-constants';\nimport {colors, media, sharedStyles} from 'theme';\nimport toCommaSeparatedList from 'utils/toCommaSeparatedList';\nimport MetaTitle from 'templates/components/MetaTitle';\n\nimport type {allMarkdownRemarkData} from 'types';\n\ntype Props = {\n  data: allMarkdownRemarkData,\n  location: Location,\n};\n\nconst AllBlogPosts = ({data, location}: Props) => (\n  <Layout location={location}>\n    <Container>\n      <div css={sharedStyles.articleLayout.container}>\n        <div css={sharedStyles.articleLayout.content}>\n          <Header>All Posts</Header>\n          <TitleAndMetaTags\n            canonicalUrl={`${urlRoot}/blog/all.html`}\n            title=\"React - All Posts\"\n          />\n          <ul\n            css={{\n              display: 'flex',\n              flexWrap: 'wrap',\n              marginLeft: -40,\n            }}>\n            {data.allMarkdownRemark.edges.map(({node}) => (\n              <li\n                css={{\n                  paddingLeft: 40,\n                  paddingTop: 40,\n                  borderTop: '1px dotted #ececec',\n                  paddingBottom: 40,\n                  width: '100%',\n\n                  [media.size('medium')]: {\n                    width: '50%',\n                  },\n\n                  [media.greaterThan('large')]: {\n                    width: '33.33%',\n                  },\n                }}\n                key={node.fields.slug}>\n                <h2\n                  css={{\n                    fontSize: 24,\n                    color: colors.dark,\n                    lineHeight: 1.3,\n                    fontWeight: 700,\n                  }}>\n                  <Link\n                    css={{\n                      borderBottom: '1px solid #ececec',\n                      ':hover': {\n                        borderBottomColor: colors.black,\n                      },\n                    }}\n                    key={node.fields.slug}\n                    to={node.fields.slug}>\n                    {node.frontmatter.title}\n                  </Link>\n                </h2>\n                <MetaTitle>{node.fields.date}</MetaTitle>\n                {node.frontmatter.author ? (\n                  <div\n                    css={{\n                      color: colors.subtle,\n                      marginTop: -5,\n                    }}>\n                    by{' '}\n                    {toCommaSeparatedList(node.frontmatter.author, author => (\n                      <span key={author.frontmatter.name}>\n                        {author.frontmatter.name}\n                      </span>\n                    ))}\n                  </div>\n                ) : null}\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    </Container>\n  </Layout>\n);\n\nexport const pageQuery = graphql`\n  query AllBlogPostsPageQuery {\n    allMarkdownRemark(\n      filter: {fileAbsolutePath: {regex: \"/blog/\"}}\n      sort: {fields: [fields___date], order: DESC}\n    ) {\n      edges {\n        node {\n          frontmatter {\n            title\n            author {\n              frontmatter {\n                name\n                url\n              }\n            }\n          }\n          fields {\n            date(formatString: \"MMMM DD, YYYY\")\n            slug\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default AllBlogPosts;\n"],"sourceRoot":""}