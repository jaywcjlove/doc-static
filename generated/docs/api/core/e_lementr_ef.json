{
  "id": "api/core/ElementRef",
  "title": "ElementRef",
  "contents": "<article>\n  <div class=\"breadcrumb-container\">\n    <div class=\"breadcrumb\">\n      <script type=\"application/ld+json\">\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          \"itemListElement\": [\n            { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.cn//api\", \"name\": \"API\" } },\n            { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.cn/api/core\", \"name\": \"@angular/core\" } },\n            { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.cn/api/core/ElementRef\", \"name\": \"ElementRef\" } }\n          ]\n        }\n      </script>\n        <a href=\"/api\">API</a> > <a href=\"api/core\">@angular/core</a>\n    </div>\n    <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular-cn/edit/cn/packages/core/src/linker/element_ref.ts?message=docs(core)%3A%20请简述你的修改...#L54-L140\" aria-label=\"提供编辑建议\" title=\"提供编辑建议\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/angular/angular-cn/tree/15.0.1/packages/core/src/linker/element_ref.ts#L54-L140\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n  </div>\n  <header class=\"api-header\">\n    <h1 id=\"elementref\">ElementRef<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ElementRef#elementref\"><i class=\"material-icons\">link</i></a></h1>\n    <label class=\"api-type-label class\">class</label>\n    <label class=\"api-status-label security\">安全性</label>\n    <label class=\"github-links api-status-label final\" title=\"This class should not be extended.\">\n      <a href=\"https://github.com/angular/angular-cn/tree/15.0.1/docs/PUBLIC_API.md#final-classes\">final</a>\n    </label>\n  </header>\n  <aio-toc class=\"embedded\"></aio-toc>\n\n  <div class=\"api-body\">\n  <section class=\"short-description\">\n    <p>A wrapper around a native element inside of a View.</p>\n<p>对视图中某个原生元素的包装器。</p>\n\n    <p no-translate=\"\"><a href=\"api/core/ElementRef#description\">查看\"说明\"...</a></p>\n  </section>\n<section &#x22;security&#x22;=\"\">\n  <div><h2 id=\"security-risk\">安全风险<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ElementRef#security-risk\"><i class=\"material-icons\">link</i></a></h2></div>\n  <p>Permitting direct access to the DOM can make your application more vulnerable to\nXSS attacks. Carefully review any use of <code><a href=\"api/core/ElementRef\" class=\"code-anchor\">ElementRef</a></code> in your code. For more detail, see the\n<a href=\"https://g.co/ng/security\">Security Guide</a>.</p>\n<p>允许直接访问 DOM 会导致你的应用在 XSS 攻击前面更加脆弱。要仔细评审对 <code><a href=\"api/core/ElementRef\" class=\"code-anchor\">ElementRef</a></code>\n的代码。欲知详情，参见<a href=\"http://g.co/ng/security\">安全</a>。</p>\n\n</section><section class=\"class-overview\">\n<code-example language=\"ts\" hidecopy=\"true\">\nclass <a href=\"api/core/ElementRef\" class=\"code-anchor\">ElementRef</a>&#x3C;T = any> {\n  <a class=\"code-anchor\" href=\"api/core/ElementRef#constructor()\"><span class=\"member-name\">constructor</span>(nativeElement: T)</a>\n  <a class=\"code-anchor\" href=\"api/core/ElementRef#nativeElement\"><span class=\"member-name\">nativeElement</span>: T</a>\n}\n</code-example>\n\n</section>\n\n  \n<section class=\"description\">\n  <h2 id=\"description\">说明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ElementRef#description\"><i class=\"material-icons\">link</i></a></h2>\n  <p>An <code><a href=\"api/core/ElementRef\" class=\"code-anchor\">ElementRef</a></code> is backed by a render-specific element. In the browser, this is usually a DOM\nelement.</p>\n<p><code><a href=\"api/core/ElementRef\" class=\"code-anchor\">ElementRef</a></code> 的背后是一个可渲染的具体元素。在浏览器中，它通常是一个 DOM 元素。</p>\n</section>\n  \n<h2 id=\"constructor\">构造函数<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ElementRef#constructor\"><i class=\"material-icons\">link</i></a></h2>\n<a id=\"constructor()\"></a>\n<table class=\"is-full-width method-table constructor\">\n  <tbody>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">constructor</span>(nativeElement: T)</code-example>\n\n  <h6 class=\"no-anchor\" id=\"参数\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table constructor-overload-parameters\">\n  <tbody>\n    <tr class=\"constructor-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>nativeElement</code>\n      </td>\n      <td class=\"param-type\"><code>T</code></td>\n      <td class=\"param-description\">\n      </td>\n    </tr>\n  </tbody>\n</table>\n</div>\n      </td>\n    </tr>\n  </tbody>\n</table>\n<section class=\"instance-properties\">\n  <a name=\"properties\"></a>\n  <h2 id=\"instance-properties\">属性<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ElementRef#instance-properties\"><i class=\"material-icons\">link</i></a></h2>\n  <table class=\"is-full-width list-table property-table\">\n    <thead>\n      <tr>\n        <th>属性</th>\n        <th>说明</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr class=\"instance-properties\">\n        <td>\n          <a id=\"nativeElement\"></a>\n          <code class=\"\"><span class=\"member-name\">nativeElement</span>: T</code>\n        </td>\n        <td>\n          <div no-translate=\"\"><p>The underlying native element or <code>null</code> if direct access to native elements is not supported\n(e.g. when the application runs in a web worker).</p>\n<p>背后的原生元素，如果不支持直接访问原生元素，则为 <code>null</code>（比如：在 Web Worker\n环境下运行此应用的时候）。</p></div>\n          <div class=\"callout is-critical\">\n  <header>Use with caution</header>\n  <header>当心！</header>\n  <p>\n   Use this API as the last resort when direct access to DOM is needed. Use templating and\n   data-binding provided by Angular instead. Alternatively you can take a look at <a href=\"api/core/Renderer2\"><code>Renderer2</code></a> which provides API that can safely be used even when direct access to native\nelements is not supported.\n  </p>\n  <p>当需要直接访问 DOM 时，请将此 API 作为最后的手段。改用 Angular\n提供的模板和数据绑定。或者，你可以看一下 <a href=\"api/core/Renderer2\"><code>Renderer2</code></a>\n，它提供了即使不支持直接访问本机元素也可以安全使用的 API。\n  </p>\n  <p>\n   当需要直接访问 DOM 时，请把本 API 作为最后选择。优先使用 Angular\n提供的模板和数据绑定机制。或者你还可以看看 <a href=\"api/core/Renderer2\"><code>Renderer2</code></a>，它提供了可安全使用的 API ——\n即使环境没有提供直接访问原生元素的功能。\n  </p>\n  <p>\n   Relying on direct DOM access creates tight coupling between your application and rendering\n   layers which will make it impossible to separate the two and deploy your application into a\n   web worker.\n  </p>\n  <p>\n    依赖直接 DOM\n访问会在你的应用程序和渲染层之间创建紧耦合，这将导致无法将两者分开并将你的应用程序部署到 Web\nWorker 中。\n  </p>\n  <p>\n    如果依赖直接访问 DOM\n的方式，就可能在应用和渲染层之间产生紧耦合。这将导致无法分开两者，也就无法将应用发布到 Web\nWorker 中。\n  </p>\n</div>\n\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</section>\n</div>\n</article>\n\n<!-- links to this doc:\n - api/core\n - api/core/ComponentRef\n - api/core/ContentChild\n - api/core/ContentChildren\n - api/core/TemplateRef\n - api/core/ViewChild\n - api/core/ViewChildren\n - api/core/ViewContainerRef\n - api/core/testing/ComponentFixture\n - api/upgrade/static/UpgradeComponent\n - api/upgrade/static/testing/createAngularJSTestingModule\n - api/upgrade/static/testing/createAngularTestingModule\n - guide/attribute-directives\n - guide/dependency-injection-in-action\n - guide/glossary\n - guide/migration-dynamic-flag\n - guide/security\n - guide/static-query-migration\n - guide/styleguide\n - guide/testing-attribute-directives\n - guide/testing-components-scenarios\n - guide/upgrade\n-->\n<!-- links from this doc:\n - /api\n - api/core\n - api/core/ElementRef#constructor\n - api/core/ElementRef#constructor()\n - api/core/ElementRef#description\n - api/core/ElementRef#elementref\n - api/core/ElementRef#instance-properties\n - api/core/ElementRef#nativeElement\n - api/core/ElementRef#security-risk\n - api/core/Renderer2\n - http://g.co/ng/security\n - https://g.co/ng/security\n - https://github.com/angular/angular-cn/edit/cn/packages/core/src/linker/element_ref.ts?message=docs(core)%3A%20请简述你的修改...#L54-L140\n - https://github.com/angular/angular-cn/tree/15.0.1/docs/PUBLIC_API.md#final-classes\n - https://github.com/angular/angular-cn/tree/15.0.1/packages/core/src/linker/element_ref.ts#L54-L140\n-->"
}