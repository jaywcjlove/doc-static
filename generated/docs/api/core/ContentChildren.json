{
  "id": "api/core/ContentChildren",
  "title": "ContentChildren",
  "contents": "\n\n<article>\n  <div class=\"breadcrumb-container\">\n    <div class=\"breadcrumb\">\n      <script type=\"application/ld+json\">\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          \"itemListElement\": [\n            { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.cn//api\", \"name\": \"API\" } },\n            { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.cn/api/core\", \"name\": \"@angular/core\" } },\n            { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.cn/api/core/ContentChildren\", \"name\": \"ContentChildren\" } }\n          ]\n        }\n      </script>\n        <a href=\"/api\">API</a> > <a href=\"api/core\">@angular/core</a>\n    </div>\n    <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular-cn/edit/aio/packages/core/src/metadata/di.ts?message=docs(core)%3A%20请简述你的修改...#L227-L236\" aria-label=\"提供编辑建议\" title=\"提供编辑建议\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/angular/angular-cn/tree/12.1.0-next.1/packages/core/src/metadata/di.ts#L227-L236\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n  </div>\n  \n  <header class=\"api-header\">\n    <h1 id=\"contentchildren\">ContentChildren<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ContentChildren#contentchildren\"><i class=\"material-icons\">link</i></a></h1>\n    \n    <label class=\"api-type-label decorator\">decorator</label>\n    \n    \n    \n  </header>\n  \n  <aio-toc class=\"embedded\"></aio-toc>\n\n  <div class=\"api-body\">\n    \n  <section class=\"short-description\">\n    <p translation-result=\"on\">用于配置内容查询的参数装饰器。</p><p translation-origin=\"off\">Parameter decorator that configures a content query.</p>\n\n\n    <p no-translate=\"\"><a href=\"api/core/ContentChildren#description\">查看\"说明\"...</a></p>\n  </section>\n  \n\n  \n\n  \n\n\n\n  \n\n  \n\n<section class=\"description\">\n  <h2 id=\"description\">说明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ContentChildren#description\"><i class=\"material-icons\">link</i></a></h2>\n  <p translation-result=\"on\">用于从内容 DOM 中获取元素或指令的 <code><a href=\"api/core/QueryList\" class=\"code-anchor\">QueryList</a></code>。每当添加、删除或移动子元素时，此查询列表都会更新，并且其可观察对象 changes 都会发出新值。</p><p translation-origin=\"off\">Use to get the <code><a href=\"api/core/QueryList\" class=\"code-anchor\">QueryList</a></code> of elements or directives from the content DOM.\nAny time a child element is added, removed, or moved, the query list will be\nupdated, and the changes observable of the query list will emit a new value.</p>\n\n<p translation-result=\"on\">在调用 <code>ngAfterContentInit</code> 回调之前设置的内容查询。</p><p translation-origin=\"off\">Content queries are set before the <code>ngAfterContentInit</code> callback is called.</p>\n\n<p translation-result=\"on\">不检索其他组件模板中的元素或指令，因为组件模板对其祖先来说始终是黑匣子。</p><p translation-origin=\"off\">Does not retrieve elements or directives that are in other components' templates,\nsince a component's template is always a black box to its ancestors.</p>\n\n<p translation-result=\"on\"><strong>元数据属性</strong>：</p><p translation-origin=\"off\"><strong>Metadata Properties</strong>:</p>\n\n<ul>\n<li>\n<p translation-result=\"on\"><strong>selector</strong> - 要查询的指令类型或名称。</p><p translation-origin=\"off\"><strong>selector</strong> - The directive type or the name used for querying.</p>\n\n</li>\n<li>\n<p translation-result=\"on\">  <strong>后代</strong> - 包含所有后代时为 true，否则仅包括直接子代。</p><p translation-origin=\"off\"><strong>descendants</strong> - If <code>true</code> include all descendants of the element. If <code>false</code> then only\nquery direct children of the element.</p>\n\n</li>\n<li>\n<p><strong>emitDistinctChangesOnly</strong> - The <code> <a href=\"api/core/QueryList\" class=\"code-anchor\">QueryList</a>#changes</code> observable will emit new values only\nif the QueryList result has changed. When <code>false</code> the <code>changes</code> observable might emit even\nif the QueryList has not changed.\n<strong> Note: *</strong> This config option is <strong>deprecated</strong>, it will be permanently set to <code>true</code> and\nremoved in future versions of Angular.</p>\n</li>\n<li>\n<p translation-result=\"on\"><strong>read</strong> - 用于从查询到的元素中读取不同的令牌。</p><p translation-origin=\"off\"><strong>read</strong> - Used to read a different token from the queried elements.</p>\n\n</li>\n</ul>\n\n  <p>Further information available in the <a href=\"api/core/ContentChildren#usage-notes\">Usage Notes</a>...</p>\n</section>\n\n\n\n<section class=\"decorator-options\">\n  <h2 id=\"options\">选项<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ContentChildren#options\"><i class=\"material-icons\">link</i></a></h2>\n  \n</section>\n\n  \n<section class=\"usage-notes\">\n  <h2 id=\"usage-notes\">使用说明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ContentChildren#usage-notes\"><i class=\"material-icons\">link</i></a></h2>\n  <p translation-result=\"on\">这里是如何使用 <code><a href=\"api/core/ContentChildren\" class=\"code-anchor\">ContentChildren</a></code> 装饰器的简单演示。</p><p translation-origin=\"off\">Here is a simple demonstration of how the <code><a href=\"api/core/ContentChildren\" class=\"code-anchor\">ContentChildren</a></code> decorator can be used.</p>\n\n<code-example path=\"core/di/ts/contentChildren/content_children_howto.ts\" region=\"HowTo\">\nimport {<a href=\"api/core/AfterContentInit\" class=\"code-anchor\">AfterContentInit</a>, <a href=\"api/core/ContentChildren\" class=\"code-anchor\">ContentChildren</a>, <a href=\"api/core/Directive\" class=\"code-anchor\">Directive</a>, <a href=\"api/core/QueryList\" class=\"code-anchor\">QueryList</a>} from '@angular/core';\n\n@<a href=\"api/core/Directive\" class=\"code-anchor\">Directive</a>({selector: 'child-directive'})\nclass ChildDirective {\n}\n\n@<a href=\"api/core/Directive\" class=\"code-anchor\">Directive</a>({selector: 'someDir'})\nclass SomeDir implements <a href=\"api/core/AfterContentInit\" class=\"code-anchor\">AfterContentInit</a> {\n  @<a href=\"api/core/ContentChildren\" class=\"code-anchor\">ContentChildren</a>(ChildDirective) contentChildren!: <a href=\"api/core/QueryList\" class=\"code-anchor\">QueryList</a>&#x3C;ChildDirective>;\n\n  ngAfterContentInit() {\n    // contentChildren is set\n  }\n}\n\n</code-example>\n<h3 id=\"tab-pane-example\">Tab-pane example<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ContentChildren#tab-pane-example\"><i class=\"material-icons\">link</i></a></h3>\n<p>Here is a slightly more realistic example that shows how <code><a href=\"api/core/ContentChildren\" class=\"code-anchor\">ContentChildren</a></code> decorators\ncan be used to implement a tab pane component.</p>\n<code-example path=\"core/di/ts/contentChildren/content_children_example.ts\" region=\"Component\">\nimport {<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>, <a href=\"api/core/ContentChildren\" class=\"code-anchor\">ContentChildren</a>, <a href=\"api/core/Directive\" class=\"code-anchor\">Directive</a>, <a href=\"api/core/Input\" class=\"code-anchor\">Input</a>, <a href=\"api/core/QueryList\" class=\"code-anchor\">QueryList</a>} from '@angular/core';\n\n@<a href=\"api/core/Directive\" class=\"code-anchor\">Directive</a>({selector: 'pane'})\nexport class Pane {\n  @<a href=\"api/core/Input\" class=\"code-anchor\">Input</a>() id!: string;\n}\n\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'tab',\n  template: `\n    &#x3C;div class=\"top-level\">Top level panes: {{serializedPanes}}&#x3C;/div>\n    &#x3C;div class=\"nested\">Arbitrary nested panes: {{serializedNestedPanes}}&#x3C;/div>\n  `\n})\nexport class Tab {\n  @<a href=\"api/core/ContentChildren\" class=\"code-anchor\">ContentChildren</a>(Pane) topLevelPanes!: <a href=\"api/core/QueryList\" class=\"code-anchor\">QueryList</a>&#x3C;Pane>;\n  @<a href=\"api/core/ContentChildren\" class=\"code-anchor\">ContentChildren</a>(Pane, {descendants: true}) arbitraryNestedPanes!: <a href=\"api/core/QueryList\" class=\"code-anchor\">QueryList</a>&#x3C;Pane>;\n\n  get serializedPanes(): string {\n    return this.topLevelPanes ? this.topLevelPanes.map(p => p.id).join(', ') : '';\n  }\n  get serializedNestedPanes(): string {\n    return this.arbitraryNestedPanes ? this.arbitraryNestedPanes.map(p => p.id).join(', ') : '';\n  }\n}\n\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'example-app',\n  template: `\n    &#x3C;tab>\n      &#x3C;pane id=\"1\">&#x3C;/pane>\n      &#x3C;pane id=\"2\">&#x3C;/pane>\n      &#x3C;pane id=\"3\" *<a href=\"api/common/NgIf\" class=\"code-anchor\">ngIf</a>=\"shouldShow\">\n        &#x3C;tab>\n          &#x3C;pane id=\"3_1\">&#x3C;/pane>\n          &#x3C;pane id=\"3_2\">&#x3C;/pane>\n        &#x3C;/tab>\n      &#x3C;/pane>\n    &#x3C;/tab>\n\n    &#x3C;button (click)=\"show()\">Show 3&#x3C;/button>\n  `,\n})\nexport class ContentChildrenComp {\n  shouldShow = false;\n\n  show() {\n    this.shouldShow = true;\n  }\n}\n\n</code-example>\n\n</section>\n\n\n\n  </div>\n</article>\n\n<!-- links to this doc:\n - api/core\n - api/core/Directive\n - api/core/Query\n - api/core/QueryList\n - guide/cheatsheet\n - guide/content-projection\n - guide/dependency-injection-navtree\n - guide/ivy-compatibility\n - guide/ivy-compatibility-examples\n - guide/lifecycle-hooks\n - guide/lightweight-injection-tokens\n - guide/migration-dynamic-flag\n - guide/migration-undecorated-classes\n - guide/static-query-migration\n-->\n<!-- links from this doc:\n - /api\n - api/common/NgIf\n - api/core\n - api/core/AfterContentInit\n - api/core/Component\n - api/core/ContentChildren#contentchildren\n - api/core/ContentChildren#description\n - api/core/ContentChildren#options\n - api/core/ContentChildren#tab-pane-example\n - api/core/ContentChildren#usage-notes\n - api/core/Directive\n - api/core/Input\n - api/core/QueryList\n - https://github.com/angular/angular-cn/edit/aio/packages/core/src/metadata/di.ts?message=docs(core)%3A%20请简述你的修改...#L227-L236\n - https://github.com/angular/angular-cn/tree/12.1.0-next.1/packages/core/src/metadata/di.ts#L227-L236\n-->"
}