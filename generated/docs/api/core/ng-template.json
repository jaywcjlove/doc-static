{
  "id": "api/core/ng-template",
  "title": "<ng-template>",
  "contents": "<article>\n  <div class=\"breadcrumb-container\">\n    <div class=\"breadcrumb\">\n      <script type=\"application/ld+json\">\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          \"itemListElement\": [\n            { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.cn//api\", \"name\": \"API\" } },\n            { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.cn/api/core\", \"name\": \"@angular/core\" } },\n            { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.cn/api/core/ng-template\", \"name\": \"<ng-template>\" } }\n          ]\n        }\n      </script>\n        <a href=\"/api\">API</a> > <a href=\"api/core\">@angular/core</a>\n    </div>\n    <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular-cn/edit/cn/aio/content/special-elements/core/ng-template.md?message=docs(core)%3A%20请简述你的修改...\" aria-label=\"提供编辑建议\" title=\"提供编辑建议\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/angular/angular-cn/tree/15.0.1/aio/content/special-elements/core/ng-template.md\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n  </div>\n  <header class=\"api-header\">\n    <h1 id=\"ng-template\">&#x3C;ng-template><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ng-template#ng-template\"><i class=\"material-icons\">link</i></a></h1>\n    <label class=\"api-type-label element\">element</label>\n  </header>\n  <aio-toc class=\"embedded\"></aio-toc>\n\n  <div class=\"api-body\">\n  <section class=\"short-description\">\n    <p>Angular's <code><a href=\"api/core/ng-template\" class=\"code-anchor\">&#x3C;ng-template></a></code> element defines a template that is not rendered by default.</p>\n\n    <p no-translate=\"\"><a href=\"api/core/ng-template#description\">查看\"说明\"...</a></p>\n  </section>\n\n\n\n<section class=\"description\">\n  <h2 id=\"description\">说明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ng-template#description\"><i class=\"material-icons\">link</i></a></h2>\n  <p>With <code><a href=\"api/core/ng-template\" class=\"code-anchor\">&#x3C;ng-template></a></code>, you can define template content that is only being rendered by Angular when you, whether directly or indirectly, specifically instruct it to do so, allowing you to have full control over how and when the content is displayed.</p>\n<div class=\"alter is-helpful\">\n<p>  Note that if you wrap content inside an <code><a href=\"api/core/ng-template\" class=\"code-anchor\">&#x3C;ng-template></a></code> without instructing Angular to render it, such content will not appear on a page. For example, see the following HTML code, when handling it Angular won't render the middle \"Hip!\" in the phrase \"Hip! Hip! Hooray!\" because of the surrounding <code><a href=\"api/core/ng-template\" class=\"code-anchor\">&#x3C;ng-template></a></code>.</p>\n<code-example language=\"html\">\n  &#x3C;p>Hip!&#x3C;/p>\n  &#x3C;ng-template>\n    &#x3C;p>Hip!&#x3C;/p>\n  &#x3C;/ng-template>\n  &#x3C;p>Hooray!&#x3C;/p>\n</code-example>\n</div>\n  <p>Further information is available in the <a href=\"api/core/ng-template#usage-notes\">Usage Notes...</a></p>\n</section>\n\n<section class=\"usage-notes\">\n  <h2 id=\"usage-notes\">使用说明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ng-template#usage-notes\"><i class=\"material-icons\">link</i></a></h2>\n  <h3 id=\"structural-directives\">Structural Directives<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ng-template#structural-directives\"><i class=\"material-icons\">link</i></a></h3>\n<p>One of the main uses for <code><a href=\"api/core/ng-template\" class=\"code-anchor\">&#x3C;ng-template></a></code> is to hold template content that will be used by <a href=\"guide/structural-directives\">Structural directives</a>. Those directives can add and remove copies of the template content based on their own logic.</p>\n<p>When using the <a href=\"guide/structural-directives#structural-directive-shorthand\">structural directive shorthand</a>, Angular creates an <code><a href=\"api/core/ng-template\" class=\"code-anchor\">&#x3C;ng-template></a></code> element behind the scenes.</p>\n<h3 id=\"templateref\">TemplateRef<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ng-template#templateref\"><i class=\"material-icons\">link</i></a></h3>\n<p><code><a href=\"api/core/ng-template\" class=\"code-anchor\">&#x3C;ng-template></a></code> elements are represented as instances of the <code><a href=\"api/core/TemplateRef\" class=\"code-anchor\">TemplateRef</a></code> class.</p>\n<p>To add copies of the template to the DOM, pass this object to the <code><a href=\"api/core/ViewContainerRef\" class=\"code-anchor\">ViewContainerRef</a></code> method <code>createEmbeddedView()</code>.</p>\n<h3 id=\"template-variables\">Template Variables<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ng-template#template-variables\"><i class=\"material-icons\">link</i></a></h3>\n<p><code><a href=\"api/core/ng-template\" class=\"code-anchor\">&#x3C;ng-template></a></code> elements can be referenced in templates using <a href=\"guide/template-reference-variables#how-angular-assigns-values-to-template-variables\">standard template variables</a>.</p>\n<p><em>This is how <code><a href=\"api/core/ng-template\" class=\"code-anchor\">&#x3C;ng-template></a></code> elements are used as <code><a href=\"api/common/NgIf\" class=\"code-anchor\">ngIf</a></code> else clauses.</em></p>\n<p>Such template variables can be used in conjunction with <code><a href=\"api/common/NgTemplateOutlet\" class=\"code-anchor\">ngTemplateOutlet</a></code> directives to render the content defined inside <code><a href=\"api/core/ng-template\" class=\"code-anchor\">&#x3C;ng-template></a></code> tags.</p>\n<h3 id=\"querying\">Querying<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ng-template#querying\"><i class=\"material-icons\">link</i></a></h3>\n<p>A <a href=\"api/core/Query\">Query</a> (such as <code><a href=\"api/core/ViewChild\" class=\"code-anchor\">ViewChild</a></code>) can find the <code><a href=\"api/core/TemplateRef\" class=\"code-anchor\">TemplateRef</a></code> associated to an <code><a href=\"api/core/ng-template\" class=\"code-anchor\">&#x3C;ng-template></a></code> element so that it can be used programmatically; for instance, to pass it to the <code><a href=\"api/core/ViewContainerRef\" class=\"code-anchor\">ViewContainerRef</a></code> method <code>createEmbeddedView()</code>.</p>\n<h3 id=\"context\">Context<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ng-template#context\"><i class=\"material-icons\">link</i></a></h3>\n<p>Inside the <code><a href=\"api/core/ng-template\" class=\"code-anchor\">&#x3C;ng-template></a></code> tags you can reference variables present in the surrounding outer template.\nAdditionally, a context object can be associated with <code><a href=\"api/core/ng-template\" class=\"code-anchor\">&#x3C;ng-template></a></code> elements.\nSuch an object contains variables that can be accessed from within the template contents via template (<code>let</code> and <code>as</code>) declarations.</p>\n\n</section></div>\n</article>\n\n<!-- links to this doc:\n - api/common/NgFor\n - api/common/NgForOf\n - api/common/NgIf\n - api/core\n - api/core/TemplateRef\n - api/core/ViewContainerRef\n - api/core/ng-container\n - guide/angular-compiler-options\n - guide/binding-overview\n - guide/built-in-directives\n - guide/content-projection\n - guide/deprecations\n - guide/dynamic-component-loader\n - guide/structural-directives\n - guide/template-reference-variables\n - guide/template-typecheck\n - guide/understanding-template-expr-overview\n-->\n<!-- links from this doc:\n - /api\n - api/common/NgIf\n - api/common/NgTemplateOutlet\n - api/core\n - api/core/Query\n - api/core/TemplateRef\n - api/core/ViewChild\n - api/core/ViewContainerRef\n - api/core/ng-template#context\n - api/core/ng-template#description\n - api/core/ng-template#ng-template\n - api/core/ng-template#querying\n - api/core/ng-template#structural-directives\n - api/core/ng-template#template-variables\n - api/core/ng-template#templateref\n - api/core/ng-template#usage-notes\n - guide/structural-directives\n - guide/structural-directives#structural-directive-shorthand\n - guide/template-reference-variables#how-angular-assigns-values-to-template-variables\n - https://github.com/angular/angular-cn/edit/cn/aio/content/special-elements/core/ng-template.md?message=docs(core)%3A%20请简述你的修改...\n - https://github.com/angular/angular-cn/tree/15.0.1/aio/content/special-elements/core/ng-template.md\n-->"
}