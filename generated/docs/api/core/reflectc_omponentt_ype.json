{
  "id": "api/core/reflectComponentType",
  "title": "reflectComponentType",
  "contents": "<article>\n  <div class=\"breadcrumb-container\">\n    <div class=\"breadcrumb\">\n      <script type=\"application/ld+json\">\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          \"itemListElement\": [\n            { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.cn//api\", \"name\": \"API\" } },\n            { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.cn/api/core\", \"name\": \"@angular/core\" } },\n            { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.cn/api/core/reflectComponentType\", \"name\": \"reflectComponentType\" } }\n          ]\n        }\n      </script>\n        <a href=\"/api\">API</a> > <a href=\"api/core\">@angular/core</a>\n    </div>\n    <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular-cn/edit/cn/packages/core/src/render3/component.ts?message=docs(core)%3A%20请简述你的修改...#L172-L248\" aria-label=\"提供编辑建议\" title=\"提供编辑建议\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/angular/angular-cn/tree/15.0.1/packages/core/src/render3/component.ts#L172-L248\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n  </div>\n  <header class=\"api-header\">\n    <h1 id=\"reflectcomponenttype\">reflectComponentType<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/reflectComponentType#reflectcomponenttype\"><i class=\"material-icons\">link</i></a></h1>\n    <label class=\"api-type-label function\">function</label>\n  </header>\n  <aio-toc class=\"embedded\"></aio-toc>\n\n  <div class=\"api-body\">\n  <section class=\"short-description\">\n    <p>Creates an object that allows to retrieve component metadata.</p>\n<p>创建一个允许检索组件元数据的对象。</p>\n\n  </section>\n\n  <div class=\"overload-info\">\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> <span class=\"member-name\"><a href=\"api/core/reflectComponentType\" class=\"code-anchor\">reflectComponentType</a></span>&#x3C;C>(component: <a href=\"api/core/Type\" class=\"code-anchor\">Type</a>&#x3C;C>): <a href=\"api/core/ComponentMirror\" class=\"code-anchor\">ComponentMirror</a>&#x3C;C> | null</code-example>\n\n  <h6 class=\"no-anchor\" id=\"参数\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>component</code>\n      </td>\n      <td class=\"param-type\"><code><a href=\"api/core/Type\" class=\"code-anchor\">Type</a>&#x3C;C></code></td>\n      <td class=\"param-description\">\n        <p>Component class reference.</p>\n<p>组件类引用。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值\">返回值</h6>\n  <p><code><a href=\"api/core/ComponentMirror\" class=\"code-anchor\">ComponentMirror</a>&#x3C;C> | null</code>: An object that allows to retrieve component metadata.</p>\n<p>允许检索组件元数据的对象。</p>\n\n</div>\n\n\n\n\n\n<section class=\"usage-notes\">\n  <h2 id=\"usage-notes\">使用说明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/reflectComponentType#usage-notes\"><i class=\"material-icons\">link</i></a></h2>\n  <p>The example below demonstrates how to use the function and how the fields\nof the returned object map to the component metadata.</p>\n<p>下面的示例演示了如何使用该函数，以及返回对象的字段如何映射到组件元数据。</p>\n<code-example language=\"typescript\">\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  standalone: true,\n  selector: 'foo-component',\n  template: `\n    &#x3C;ng-content>&#x3C;/ng-content>\n    &#x3C;ng-content select=\"content-selector-a\">&#x3C;/ng-content>\n  `,\n})\nclass FooComponent {\n  @<a href=\"api/core/Input\" class=\"code-anchor\">Input</a>('inputName') inputPropName: string;\n  @<a href=\"api/core/Output\" class=\"code-anchor\">Output</a>('outputName') outputPropName = new <a href=\"api/core/EventEmitter\" class=\"code-anchor\">EventEmitter</a>&#x3C;void>();\n}\n\nconst mirror = <a href=\"api/core/reflectComponentType\" class=\"code-anchor\">reflectComponentType</a>(FooComponent);\nexpect(mirror.type).toBe(FooComponent);\nexpect(mirror.selector).toBe('foo-component');\nexpect(mirror.isStandalone).toBe(true);\nexpect(mirror.inputs).toEqual([{propName: 'inputName', templateName: 'inputPropName'}]);\nexpect(mirror.outputs).toEqual([{propName: 'outputName', templateName: 'outputPropName'}]);\nexpect(mirror.ngContentSelectors).toEqual([\n  '*',                 // first `&#x3C;ng-content>` in a template, the selector defaults to `*`\n  'content-selector-a' // second `&#x3C;ng-content>` in a template\n]);\n</code-example>\n\n</section></div>\n</article>\n\n<!-- links to this doc:\n - api/core\n - api/core/ComponentMirror\n-->\n<!-- links from this doc:\n - /api\n - api/core\n - api/core/Component\n - api/core/ComponentMirror\n - api/core/EventEmitter\n - api/core/Input\n - api/core/Output\n - api/core/Type\n - api/core/reflectComponentType#reflectcomponenttype\n - api/core/reflectComponentType#usage-notes\n - https://github.com/angular/angular-cn/edit/cn/packages/core/src/render3/component.ts?message=docs(core)%3A%20请简述你的修改...#L172-L248\n - https://github.com/angular/angular-cn/tree/15.0.1/packages/core/src/render3/component.ts#L172-L248\n-->"
}