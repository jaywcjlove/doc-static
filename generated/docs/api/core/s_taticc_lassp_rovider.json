{
  "id": "api/core/StaticClassProvider",
  "title": "StaticClassProvider",
  "contents": "<article>\n  <div class=\"breadcrumb-container\">\n    <div class=\"breadcrumb\">\n      <script type=\"application/ld+json\">\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          \"itemListElement\": [\n            { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.cn//api\", \"name\": \"API\" } },\n            { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.cn/api/core\", \"name\": \"@angular/core\" } },\n            { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.cn/api/core/StaticClassProvider\", \"name\": \"StaticClassProvider\" } }\n          ]\n        }\n      </script>\n        <a href=\"/api\">API</a> > <a href=\"api/core\">@angular/core</a>\n    </div>\n    <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular-cn/edit/cn/packages/core/src/di/interface/provider.ts?message=docs(core)%3A%20请简述你的修改...#L99-L141\" aria-label=\"提供编辑建议\" title=\"提供编辑建议\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/angular/angular-cn/tree/15.0.1/packages/core/src/di/interface/provider.ts#L99-L141\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n  </div>\n  <header class=\"api-header\">\n    <h1 id=\"staticclassprovider\">StaticClassProvider<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/StaticClassProvider#staticclassprovider\"><i class=\"material-icons\">link</i></a></h1>\n    <label class=\"api-type-label interface\">interface</label>\n  </header>\n  <aio-toc class=\"embedded\"></aio-toc>\n\n  <div class=\"api-body\">\n  <section class=\"short-description\">\n    <p>Configures the <code><a href=\"api/core/Injector\" class=\"code-anchor\">Injector</a></code> to return an instance of <code>useClass</code> for a token.</p>\n<p>配置 <code><a href=\"api/core/Injector\" class=\"code-anchor\">Injector</a></code> 以返回 <code>useClass</code> 的令牌实例。</p>\n\n  </section><section class=\"interface-overview\">\n<code-example language=\"ts\" hidecopy=\"true\">\ninterface <a href=\"api/core/StaticClassProvider\" class=\"code-anchor\">StaticClassProvider</a> extends <a href=\"api/core/StaticClassSansProvider\" class=\"code-anchor\">StaticClassSansProvider</a> {\n  <a class=\"code-anchor\" href=\"api/core/StaticClassProvider#provide\"><span class=\"member-name\">provide</span>: any</a>\n  <a class=\"code-anchor\" href=\"api/core/StaticClassProvider#multi\"><span class=\"member-name\">multi</span>?: boolean</a>\n\n  // 继承自 <a class=\"code-anchor\" href=\"api/core/StaticClassSansProvider\">core/StaticClassSansProvider</a>\n  <a class=\"code-anchor\" href=\"api/core/StaticClassSansProvider#useClass\"><span class=\"member-name\">useClass</span>: Type&#x3C;any></a>\n  <a class=\"code-anchor\" href=\"api/core/StaticClassSansProvider#deps\"><span class=\"member-name\">deps</span>: any[]</a>\n}\n</code-example>\n\n\n</section>\n\n<section class=\"see-also\">\n  <h2 id=\"see-also\">参见<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/StaticClassProvider#see-also\"><i class=\"material-icons\">link</i></a></h2>\n  <ul>\n    <li><p><a href=\"guide/dependency-injection\">\"Dependency Injection Guide\"</a>.</p>\n<p><a href=\"guide/dependency-injection\">“依赖注入指南”</a> 。</p></li>\n  </ul>\n</section>\n  \n  \n<section class=\"instance-properties\">\n  <a name=\"properties\"></a>\n  <h2 id=\"instance-properties\">属性<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/StaticClassProvider#instance-properties\"><i class=\"material-icons\">link</i></a></h2>\n  <table class=\"is-full-width list-table property-table\">\n    <thead>\n      <tr>\n        <th>属性</th>\n        <th>说明</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr class=\"instance-property\">\n        <td>\n          <a id=\"provide\"></a>\n          <code class=\"\"><span class=\"member-name\">provide</span>: any</code>\n        </td>\n        <td>\n          <div no-translate=\"\"><p>An injection token. Typically an instance of <code><a href=\"api/core/Type\" class=\"code-anchor\">Type</a></code> or <code><a href=\"api/core/InjectionToken\" class=\"code-anchor\">InjectionToken</a></code>, but can be <code>any</code>.</p>\n<p>注入令牌。通常是 <code><a href=\"api/core/Type\" class=\"code-anchor\">Type</a></code> 或 <code><a href=\"api/core/InjectionToken\" class=\"code-anchor\">InjectionToken</a></code> 的实例，但也可以是 <code>any</code> 实例。</p></div>\n          \n        </td>\n      </tr>\n      <tr class=\"instance-property\">\n        <td>\n          <a id=\"multi\"></a>\n          <code class=\"\"><span class=\"member-name\">multi</span>?: boolean</code>\n        </td>\n        <td>\n          <div no-translate=\"\"><p>When true, injector returns an array of instances. This is useful to allow multiple\nproviders spread across many files to provide configuration information to a common token.</p>\n<p>如果为\ntrue，则注入器返回实例数组。这在允许多个提供者散布在多个文件中，以向某个公共令牌提供配置信息时很有用。</p></div>\n          \n        </td>\n      </tr>\n    </tbody>\n  </table>\n</section>\n  \n\n<section class=\"usage-notes\">\n  <h2 id=\"usage-notes\">使用说明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/StaticClassProvider#usage-notes\"><i class=\"material-icons\">link</i></a></h2>\n  <code-example path=\"core/di/ts/provider_spec.ts\" region=\"StaticClassProvider\">\nabstract class Shape {\n  name!: string;\n}\n\nclass Square extends Shape {\n  override name = 'square';\n}\n\nconst injector =\n    Injector.create({providers: [{provide: Shape, useClass: Square, deps: []}]});\n\nconst shape: Shape = injector.get(Shape);\nexpect(shape.name).toEqual('square');\nexpect(shape instanceof Square).toBe(true);\n\n</code-example>\n<p>Note that following two providers are not equal:</p>\n<code-example path=\"core/di/ts/provider_spec.ts\" region=\"StaticClassProviderDifference\">\nclass Greeting {\n  salutation = 'Hello';\n}\n\nclass FormalGreeting extends Greeting {\n  override salutation = 'Greetings';\n}\n\nconst injector = Injector.create({\n  providers: [\n    {provide: FormalGreeting, useClass: FormalGreeting, deps: []},\n    {provide: Greeting, useClass: FormalGreeting, deps: []}\n  ]\n});\n\n// The injector returns different instances.\n// See: {provide: ?, useExisting: ?} if you want the same instance.\nexpect(injector.get(FormalGreeting)).not.toBe(injector.get(Greeting));\n\n</code-example>\n<h3 id=\"multi-value-example\">Multi-value example<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/StaticClassProvider#multi-value-example\"><i class=\"material-icons\">link</i></a></h3>\n<code-example path=\"core/di/ts/provider_spec.ts\" region=\"MultiProviderAspect\">\nconst locale = new <a href=\"api/core/InjectionToken\" class=\"code-anchor\">InjectionToken</a>&#x3C;string[]>('locale');\nconst injector = Injector.create({\n  providers: [\n    {provide: locale, multi: true, useValue: 'en'},\n    {provide: locale, multi: true, useValue: 'sk'},\n  ]\n});\n\nconst locales: string[] = injector.get(locale);\nexpect(locales).toEqual(['en', 'sk']);\n\n</code-example>\n\n</section></div>\n</article>\n\n<!-- links to this doc:\n - api/core\n - api/core/StaticClassSansProvider\n - api/core/StaticProvider\n-->\n<!-- links from this doc:\n - /api\n - api/core\n - api/core/InjectionToken\n - api/core/Injector\n - api/core/StaticClassProvider#instance-properties\n - api/core/StaticClassProvider#multi\n - api/core/StaticClassProvider#multi-value-example\n - api/core/StaticClassProvider#provide\n - api/core/StaticClassProvider#see-also\n - api/core/StaticClassProvider#staticclassprovider\n - api/core/StaticClassProvider#usage-notes\n - api/core/StaticClassSansProvider\n - api/core/StaticClassSansProvider#deps\n - api/core/StaticClassSansProvider#useClass\n - api/core/Type\n - guide/dependency-injection\n - https://github.com/angular/angular-cn/edit/cn/packages/core/src/di/interface/provider.ts?message=docs(core)%3A%20请简述你的修改...#L99-L141\n - https://github.com/angular/angular-cn/tree/15.0.1/packages/core/src/di/interface/provider.ts#L99-L141\n-->"
}