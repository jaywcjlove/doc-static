{
  "id": "api/core/ReflectiveInjector",
  "title": "ReflectiveInjector",
  "contents": "<article>\n  <div class=\"breadcrumb-container\">\n    <div class=\"breadcrumb\">\n      <script type=\"application/ld+json\">\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          \"itemListElement\": [\n            { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.cn//api\", \"name\": \"API\" } },\n            { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.cn/api/core\", \"name\": \"@angular/core\" } },\n            { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.cn/api/core/ReflectiveInjector\", \"name\": \"ReflectiveInjector\" } }\n          ]\n        }\n      </script>\n        <a href=\"/api\">API</a> > <a href=\"api/core\">@angular/core</a>\n    </div>\n    <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular-cn/edit/cn/packages/core/src/di/reflective_injector.ts?message=docs(core)%3A%20请简述你的修改...#L20-L338\" aria-label=\"提供编辑建议\" title=\"提供编辑建议\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/angular/angular-cn/tree/15.0.1/packages/core/src/di/reflective_injector.ts#L20-L338\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n  </div>\n  <header class=\"api-header\">\n    <h1 id=\"reflectiveinjector\">ReflectiveInjector<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ReflectiveInjector#reflectiveinjector\"><i class=\"material-icons\">link</i></a></h1>\n    <label class=\"api-type-label class\">class</label>\n    <label class=\"api-status-label deprecated\">已弃用</label>\n  </header>\n  <aio-toc class=\"embedded\"></aio-toc>\n\n  <div class=\"api-body\">\n  <section class=\"short-description\">\n    <p>A ReflectiveDependency injection container used for instantiating objects and resolving\ndependencies.</p>\n<p>一个 ReflectiveDependency 注入容器，用于实例化对象和解析依赖关系。</p>\n\n    <p no-translate=\"\"><a href=\"api/core/ReflectiveInjector#description\">查看\"说明\"...</a></p>\n  </section>\n<section class=\"deprecated\">\n  <p><strong>已弃用:</strong> from v5 - slow and brings in a lot of code, Use <code>Injector.create</code> instead.</p>\n<p>从 v5 开始 - 速度慢，并且引入了大量代码，请改用 <code>Injector.create</code> 。</p>\n\n</section><section class=\"class-overview\">\n<code-example language=\"ts\" hidecopy=\"true\">\nabstract class <a href=\"api/core/ReflectiveInjector\" class=\"code-anchor\">ReflectiveInjector</a> implements <a href=\"api/core/Injector\" class=\"code-anchor\">Injector</a> {\n  <a class=\"code-anchor\" href=\"api/core/ReflectiveInjector#resolve\">static <span class=\"member-name\">resolve</span>(providers: Provider[]): ResolvedReflectiveProvider[]</a>\n  <a class=\"code-anchor\" href=\"api/core/ReflectiveInjector#resolveAndCreate\">static <span class=\"member-name\">resolveAndCreate</span>(providers: Provider[], parent?: Injector): ReflectiveInjector</a>\n  <a class=\"code-anchor\" href=\"api/core/ReflectiveInjector#fromResolvedProviders\">static <span class=\"member-name\">fromResolvedProviders</span>(providers: ResolvedReflectiveProvider[], parent?: Injector): ReflectiveInjector</a>\n  <a class=\"code-anchor\" href=\"api/core/ReflectiveInjector#parent\">abstract <span class=\"member-name\">parent</span>: Injector | null</a>\n  <a class=\"code-anchor\" href=\"api/core/ReflectiveInjector#resolveAndCreateChild\">abstract <span class=\"member-name\">resolveAndCreateChild</span>(providers: Provider[]): ReflectiveInjector</a>\n  <a class=\"code-anchor\" href=\"api/core/ReflectiveInjector#createChildFromResolved\">abstract <span class=\"member-name\">createChildFromResolved</span>(providers: ResolvedReflectiveProvider[]): ReflectiveInjector</a>\n  <a class=\"code-anchor\" href=\"api/core/ReflectiveInjector#resolveAndInstantiate\">abstract <span class=\"member-name\">resolveAndInstantiate</span>(provider: Provider): any</a>\n  <a class=\"code-anchor\" href=\"api/core/ReflectiveInjector#instantiateResolved\">abstract <span class=\"member-name\">instantiateResolved</span>(provider: ResolvedReflectiveProvider): any</a>\n  <a class=\"code-anchor\" href=\"api/core/ReflectiveInjector#get\">abstract <span class=\"member-name\">get</span>(token: any, notFoundValue?: any): any</a>\n}\n</code-example>\n\n</section>\n\n  \n<section class=\"description\">\n  <h2 id=\"description\">说明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ReflectiveInjector#description\"><i class=\"material-icons\">link</i></a></h2>\n  <p>An <code><a href=\"api/core/Injector\" class=\"code-anchor\">Injector</a></code> is a replacement for a <code>new</code> operator, which can automatically resolve the\nconstructor dependencies.</p>\n<p><code><a href=\"api/core/Injector\" class=\"code-anchor\">Injector</a></code> 替代了 <code>new</code> 操作符，该操作符可以自动解析构造函数的依赖关系。</p>\n<p>In typical use, application code asks for the dependencies in the constructor and they are\nresolved by the <code><a href=\"api/core/Injector\" class=\"code-anchor\">Injector</a></code>.</p>\n<p>在典型的用法中，应用程序代码会在构造函数中要求依赖项，并由 <code><a href=\"api/core/Injector\" class=\"code-anchor\">Injector</a></code> 进行解析。</p>\n  <p>Further information is available in the <a href=\"api/core/ReflectiveInjector#usage-notes\">Usage Notes...</a></p>\n</section>\n  \n<section class=\"static-methods\">\n  <a name=\"methods\"></a>\n  <h2 id=\"static-methods\">静态方法<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ReflectiveInjector#static-methods\"><i class=\"material-icons\">link</i></a></h2>\n  <a id=\"resolve\"></a>\n<table class=\"is-full-width method-table static-methods\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"resolve\">resolve()<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ReflectiveInjector#resolve\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular-cn/edit/cn/packages/core/src/di/reflective_injector.ts?message=docs(core)%3A%20请简述你的修改...#L77-L118\" aria-label=\"提供编辑建议\" title=\"提供编辑建议\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/angular/angular-cn/tree/15.0.1/packages/core/src/di/reflective_injector.ts#L77-L118\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p>Turns an array of provider definitions into an array of resolved providers.</p>\n<p>将一组提供者定义转换为一组已解析的提供者。</p>\n</td>\n    </tr>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><a href=\"api/upgrade/static\" class=\"code-anchor\">static</a> <span class=\"member-name\">resolve</span>(providers: <a href=\"api/core/Provider\" class=\"code-anchor\">Provider</a>[]): <a href=\"api/core/ResolvedReflectiveProvider\" class=\"code-anchor\">ResolvedReflectiveProvider</a>[]</code-example>\n\n  <h6 class=\"no-anchor\" id=\"参数\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table static-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"static-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>providers</code>\n      </td>\n      <td class=\"param-type\"><code><a href=\"api/core/Provider\" class=\"code-anchor\">Provider</a>[]</code></td>\n      <td class=\"param-description\">\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值\">返回值</h6>\n  <p><code><a href=\"api/core/ResolvedReflectiveProvider\" class=\"code-anchor\">ResolvedReflectiveProvider</a>[]</code></p>\n\n</div>\n      </td>\n    </tr>\n    <tr>\n      <td class=\"description\">\n        <p>A resolution is a process of flattening multiple nested arrays and converting individual\nproviders into an array of <code><a href=\"api/core/ResolvedReflectiveProvider\" class=\"code-anchor\">ResolvedReflectiveProvider</a></code>s.</p>\n<p>解析是展平多个嵌套数组并将其各个提供者转换为 <code><a href=\"api/core/ResolvedReflectiveProvider\" class=\"code-anchor\">ResolvedReflectiveProvider</a></code> 数组的过程。</p>\n\n      </td>\n    </tr>\n    <tr>\n      <td class=\"usage-notes\">\n        <h4 id=\"resolve-usage-notes\">使用说明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ReflectiveInjector#resolve-usage-notes\"><i class=\"material-icons\">link</i></a></h4>\n        <h5 id=\"example\">Example<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ReflectiveInjector#example\"><i class=\"material-icons\">link</i></a></h5>\n<h5 id=\"例子\">例子<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ReflectiveInjector#例子\"><i class=\"material-icons\">link</i></a></h5>\n<code-example language=\"typescript\">\n@<a href=\"api/core/Injectable\" class=\"code-anchor\">Injectable</a> ()\nclass Engine {\n}\n@<a href=\"api/core/Injectable\" class=\"code-anchor\">Injectable</a> ()\nclass Car {\n  constructor(public engine:Engine) {}\n}\n\nvar providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n\nexpect(providers.length).toEqual(2);\n\nexpect(providers[0] instanceof <a href=\"api/core/ResolvedReflectiveProvider\" class=\"code-anchor\">ResolvedReflectiveProvider</a>).toBe(true);\nexpect(providers[0].key.displayName).toBe(\"Car\");\nexpect(providers[0].dependencies.length).toEqual(1);\nexpect(providers[0].factory).toBeDefined();\n\nexpect(providers[1].key.displayName).toBe(\"Engine\");\n});\n</code-example>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <a id=\"resolveAndCreate\"></a>\n<table class=\"is-full-width method-table static-methods\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"resolveandcreate\">resolveAndCreate()<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ReflectiveInjector#resolveandcreate\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular-cn/edit/cn/packages/core/src/di/reflective_injector.ts?message=docs(core)%3A%20请简述你的修改...#L119-L153\" aria-label=\"提供编辑建议\" title=\"提供编辑建议\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/angular/angular-cn/tree/15.0.1/packages/core/src/di/reflective_injector.ts#L119-L153\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p>Resolves an array of providers and creates an injector from those providers.</p>\n<p>解析供应商数组，并从这些供应商创建注入器。</p>\n</td>\n    </tr>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><a href=\"api/upgrade/static\" class=\"code-anchor\">static</a> <span class=\"member-name\">resolveAndCreate</span>(providers: <a href=\"api/core/Provider\" class=\"code-anchor\">Provider</a>[], parent?: <a href=\"api/core/Injector\" class=\"code-anchor\">Injector</a>): <a href=\"api/core/ReflectiveInjector\" class=\"code-anchor\">ReflectiveInjector</a></code-example>\n\n  <h6 class=\"no-anchor\" id=\"参数-1\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table static-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"static-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>providers</code>\n      </td>\n      <td class=\"param-type\"><code><a href=\"api/core/Provider\" class=\"code-anchor\">Provider</a>[]</code></td>\n      <td class=\"param-description\">\n      </td>\n    </tr>\n    <tr class=\"static-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>parent</code>\n      </td>\n      <td class=\"param-type\"><code><a href=\"api/core/Injector\" class=\"code-anchor\">Injector</a></code></td>\n      <td class=\"param-description\">\n        <p>可选值。默认值为 <code>undefined</code>。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-1\">返回值</h6>\n  <p><code><a href=\"api/core/ReflectiveInjector\" class=\"code-anchor\">ReflectiveInjector</a></code></p>\n\n</div>\n      </td>\n    </tr>\n    <tr>\n      <td class=\"description\">\n        <p>The passed-in providers can be an array of <code><a href=\"api/core/Type\" class=\"code-anchor\">Type</a></code>, <code><a href=\"api/core/Provider\" class=\"code-anchor\">Provider</a></code>,\nor a recursive array of more providers.</p>\n<p>传入的提供者可以是 <code><a href=\"api/core/Type\" class=\"code-anchor\">Type</a></code>、<code><a href=\"api/core/Provider\" class=\"code-anchor\">Provider</a></code> 或更多提供者的递归数组。</p>\n\n      </td>\n    </tr>\n    <tr>\n      <td class=\"usage-notes\">\n        <h4 id=\"resolveAndCreate-usage-notes\">使用说明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ReflectiveInjector#resolveAndCreate-usage-notes\"><i class=\"material-icons\">link</i></a></h4>\n        <h5 id=\"example-1\">Example<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ReflectiveInjector#example-1\"><i class=\"material-icons\">link</i></a></h5>\n<h5 id=\"例子-1\">例子<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ReflectiveInjector#例子-1\"><i class=\"material-icons\">link</i></a></h5>\n<code-example language=\"typescript\">\n@<a href=\"api/core/Injectable\" class=\"code-anchor\">Injectable</a> ()\nclass Engine {\n}\n@<a href=\"api/core/Injectable\" class=\"code-anchor\">Injectable</a> ()\nclass Car {\n  constructor(public engine:Engine) {}\n}\n\nvar injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\nexpect(injector.get(Car) instanceof Car).toBe(true);\n</code-example>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <a id=\"fromResolvedProviders\"></a>\n<table class=\"is-full-width method-table static-methods\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"fromresolvedproviders\">fromResolvedProviders()<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ReflectiveInjector#fromresolvedproviders\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular-cn/edit/cn/packages/core/src/di/reflective_injector.ts?message=docs(core)%3A%20请简述你的修改...#L154-L188\" aria-label=\"提供编辑建议\" title=\"提供编辑建议\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/angular/angular-cn/tree/15.0.1/packages/core/src/di/reflective_injector.ts#L154-L188\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p>Creates an injector from previously resolved providers.</p>\n<p>从先前解析的提供者创建注入器。</p>\n</td>\n    </tr>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><a href=\"api/upgrade/static\" class=\"code-anchor\">static</a> <span class=\"member-name\">fromResolvedProviders</span>(providers: <a href=\"api/core/ResolvedReflectiveProvider\" class=\"code-anchor\">ResolvedReflectiveProvider</a>[], parent?: <a href=\"api/core/Injector\" class=\"code-anchor\">Injector</a>): <a href=\"api/core/ReflectiveInjector\" class=\"code-anchor\">ReflectiveInjector</a></code-example>\n\n  <h6 class=\"no-anchor\" id=\"参数-2\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table static-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"static-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>providers</code>\n      </td>\n      <td class=\"param-type\"><code><a href=\"api/core/ResolvedReflectiveProvider\" class=\"code-anchor\">ResolvedReflectiveProvider</a>[]</code></td>\n      <td class=\"param-description\">\n      </td>\n    </tr>\n    <tr class=\"static-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>parent</code>\n      </td>\n      <td class=\"param-type\"><code><a href=\"api/core/Injector\" class=\"code-anchor\">Injector</a></code></td>\n      <td class=\"param-description\">\n        <p>可选值。默认值为 <code>undefined</code>。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-2\">返回值</h6>\n  <p><code><a href=\"api/core/ReflectiveInjector\" class=\"code-anchor\">ReflectiveInjector</a></code></p>\n\n</div>\n      </td>\n    </tr>\n    <tr>\n      <td class=\"description\">\n        <p>This API is the recommended way to construct injectors in performance-sensitive parts.</p>\n<p>建议使用此 API 在对性能敏感的部分构建注入器。</p>\n\n      </td>\n    </tr>\n    <tr>\n      <td class=\"usage-notes\">\n        <h4 id=\"fromResolvedProviders-usage-notes\">使用说明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ReflectiveInjector#fromResolvedProviders-usage-notes\"><i class=\"material-icons\">link</i></a></h4>\n        <h5 id=\"example-2\">Example<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ReflectiveInjector#example-2\"><i class=\"material-icons\">link</i></a></h5>\n<h5 id=\"例子-2\">例子<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ReflectiveInjector#例子-2\"><i class=\"material-icons\">link</i></a></h5>\n<code-example language=\"typescript\">\n@<a href=\"api/core/Injectable\" class=\"code-anchor\">Injectable</a> ()\nclass Engine {\n}\n@<a href=\"api/core/Injectable\" class=\"code-anchor\">Injectable</a> ()\nclass Car {\n  constructor(public engine:Engine) {}\n}\n\nvar providers = ReflectiveInjector.resolve([Car, Engine]);\nvar injector = ReflectiveInjector.fromResolvedProviders(providers);\nexpect(injector.get(Car) instanceof Car).toBe(true);\n</code-example>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n</section>\n<section class=\"instance-properties\">\n  <a name=\"properties\"></a>\n  <h2 id=\"instance-properties\">属性<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ReflectiveInjector#instance-properties\"><i class=\"material-icons\">link</i></a></h2>\n  <table class=\"is-full-width list-table property-table\">\n    <thead>\n      <tr>\n        <th>属性</th>\n        <th>说明</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr class=\"instance-properties\">\n        <td>\n          <a id=\"parent\"></a>\n          <code class=\"\">abstract <span class=\"member-name\">parent</span>: <a href=\"api/core/Injector\" class=\"code-anchor\">Injector</a> | null</code>\n        </td>\n        <td>\n          <span class=\"read-only-property\">只读</span>\n          <div no-translate=\"\"><p>Parent of this injector.</p>\n<p>此注入器的父代。</p></div>\n          <!-- TODO: Add a link to the section of the user guide talking about hierarchical injection.\n-->\n\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</section>\n<section class=\"instance-methods\">\n  <a name=\"methods\"></a>\n  <h2 id=\"instance-methods\">方法<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ReflectiveInjector#instance-methods\"><i class=\"material-icons\">link</i></a></h2>\n  <a id=\"resolveAndCreateChild\"></a>\n<table class=\"is-full-width method-table instance-methods\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"resolveandcreatechild\">resolveAndCreateChild()<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ReflectiveInjector#resolveandcreatechild\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular-cn/edit/cn/packages/core/src/di/reflective_injector.ts?message=docs(core)%3A%20请简述你的修改...#L200-L232\" aria-label=\"提供编辑建议\" title=\"提供编辑建议\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/angular/angular-cn/tree/15.0.1/packages/core/src/di/reflective_injector.ts#L200-L232\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p>Resolves an array of providers and creates a child injector from those providers.</p>\n<p>解析一组提供者，并从这些提供者创建子注入器。</p>\n</td>\n    </tr>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">abstract <span class=\"member-name\">resolveAndCreateChild</span>(providers: <a href=\"api/core/Provider\" class=\"code-anchor\">Provider</a>[]): <a href=\"api/core/ReflectiveInjector\" class=\"code-anchor\">ReflectiveInjector</a></code-example>\n\n  <h6 class=\"no-anchor\" id=\"参数-3\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>providers</code>\n      </td>\n      <td class=\"param-type\"><code><a href=\"api/core/Provider\" class=\"code-anchor\">Provider</a>[]</code></td>\n      <td class=\"param-description\">\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-3\">返回值</h6>\n  <p><code><a href=\"api/core/ReflectiveInjector\" class=\"code-anchor\">ReflectiveInjector</a></code></p>\n\n</div>\n      </td>\n    </tr>\n    <tr>\n      <td class=\"description\">\n        <!-- TODO: Add a link to the section of the user guide talking about hierarchical injection.\n-->\n<p>The passed-in providers can be an array of <code><a href=\"api/core/Type\" class=\"code-anchor\">Type</a></code>, <code><a href=\"api/core/Provider\" class=\"code-anchor\">Provider</a></code>,\nor a recursive array of more providers.</p>\n<p>传入的提供者可以是 <code><a href=\"api/core/Type\" class=\"code-anchor\">Type</a></code>、<code><a href=\"api/core/Provider\" class=\"code-anchor\">Provider</a></code> 或更多提供者的递归数组。</p>\n\n      </td>\n    </tr>\n    <tr>\n      <td class=\"usage-notes\">\n        <h4 id=\"resolveAndCreateChild-usage-notes\">使用说明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ReflectiveInjector#resolveAndCreateChild-usage-notes\"><i class=\"material-icons\">link</i></a></h4>\n        <h5 id=\"example-3\">Example<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ReflectiveInjector#example-3\"><i class=\"material-icons\">link</i></a></h5>\n<h5 id=\"例子-3\">例子<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ReflectiveInjector#例子-3\"><i class=\"material-icons\">link</i></a></h5>\n<code-example language=\"typescript\">\nclass ParentProvider {}\nclass ChildProvider {}\n\nvar parent = ReflectiveInjector.resolveAndCreate([ParentProvider]);\nvar child = parent.resolveAndCreateChild([ChildProvider]);\n\nexpect(child.get(ParentProvider) instanceof ParentProvider).toBe(true);\nexpect(child.get(ChildProvider) instanceof ChildProvider).toBe(true);\nexpect(child.get(ParentProvider)).toBe(parent.get(ParentProvider));\n</code-example>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <a id=\"createChildFromResolved\"></a>\n<table class=\"is-full-width method-table instance-methods\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"createchildfromresolved\">createChildFromResolved()<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ReflectiveInjector#createchildfromresolved\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular-cn/edit/cn/packages/core/src/di/reflective_injector.ts?message=docs(core)%3A%20请简述你的修改...#L233-L267\" aria-label=\"提供编辑建议\" title=\"提供编辑建议\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/angular/angular-cn/tree/15.0.1/packages/core/src/di/reflective_injector.ts#L233-L267\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p>Creates a child injector from previously resolved providers.</p>\n<p>从先前解析的提供者中创建子注入器。</p>\n</td>\n    </tr>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">abstract <span class=\"member-name\">createChildFromResolved</span>(providers: <a href=\"api/core/ResolvedReflectiveProvider\" class=\"code-anchor\">ResolvedReflectiveProvider</a>[]): <a href=\"api/core/ReflectiveInjector\" class=\"code-anchor\">ReflectiveInjector</a></code-example>\n\n  <h6 class=\"no-anchor\" id=\"参数-4\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>providers</code>\n      </td>\n      <td class=\"param-type\"><code><a href=\"api/core/ResolvedReflectiveProvider\" class=\"code-anchor\">ResolvedReflectiveProvider</a>[]</code></td>\n      <td class=\"param-description\">\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-4\">返回值</h6>\n  <p><code><a href=\"api/core/ReflectiveInjector\" class=\"code-anchor\">ReflectiveInjector</a></code></p>\n\n</div>\n      </td>\n    </tr>\n    <tr>\n      <td class=\"description\">\n        <!-- TODO: Add a link to the section of the user guide talking about hierarchical injection.\n-->\n<p>This API is the recommended way to construct injectors in performance-sensitive parts.</p>\n<p>建议使用此 API 在对性能敏感的部分构造注入器。</p>\n\n      </td>\n    </tr>\n    <tr>\n      <td class=\"usage-notes\">\n        <h4 id=\"createChildFromResolved-usage-notes\">使用说明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ReflectiveInjector#createChildFromResolved-usage-notes\"><i class=\"material-icons\">link</i></a></h4>\n        <h5 id=\"example-4\">Example<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ReflectiveInjector#example-4\"><i class=\"material-icons\">link</i></a></h5>\n<h5 id=\"例子-4\">例子<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ReflectiveInjector#例子-4\"><i class=\"material-icons\">link</i></a></h5>\n<code-example language=\"typescript\">\nclass ParentProvider {}\nclass ChildProvider {}\n\nvar parentProviders = ReflectiveInjector.resolve([ParentProvider]);\nvar childProviders = ReflectiveInjector.resolve([ChildProvider]);\n\nvar parent = ReflectiveInjector.fromResolvedProviders(parentProviders);\nvar child = parent.createChildFromResolved(childProviders);\n\nexpect(child.get(ParentProvider) instanceof ParentProvider).toBe(true);\nexpect(child.get(ChildProvider) instanceof ChildProvider).toBe(true);\nexpect(child.get(ParentProvider)).toBe(parent.get(ParentProvider));\n</code-example>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <a id=\"resolveAndInstantiate\"></a>\n<table class=\"is-full-width method-table instance-methods\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"resolveandinstantiate\">resolveAndInstantiate()<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ReflectiveInjector#resolveandinstantiate\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular-cn/edit/cn/packages/core/src/di/reflective_injector.ts?message=docs(core)%3A%20请简述你的修改...#L268-L301\" aria-label=\"提供编辑建议\" title=\"提供编辑建议\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/angular/angular-cn/tree/15.0.1/packages/core/src/di/reflective_injector.ts#L268-L301\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p>Resolves a provider and instantiates an object in the context of the injector.</p>\n<p>解析提供者并在注入器的上下文中实例化对象。</p>\n</td>\n    </tr>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">abstract <span class=\"member-name\">resolveAndInstantiate</span>(provider: <a href=\"api/core/Provider\" class=\"code-anchor\">Provider</a>): any</code-example>\n\n  <h6 class=\"no-anchor\" id=\"参数-5\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>provider</code>\n      </td>\n      <td class=\"param-type\"><code><a href=\"api/core/Provider\" class=\"code-anchor\">Provider</a></code></td>\n      <td class=\"param-description\">\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-5\">返回值</h6>\n  <p><code>any</code></p>\n\n</div>\n      </td>\n    </tr>\n    <tr>\n      <td class=\"description\">\n        <p>The created object does not get cached by the injector.</p>\n<p>注入器不会缓存创建的对象。</p>\n\n      </td>\n    </tr>\n    <tr>\n      <td class=\"usage-notes\">\n        <h4 id=\"resolveAndInstantiate-usage-notes\">使用说明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ReflectiveInjector#resolveAndInstantiate-usage-notes\"><i class=\"material-icons\">link</i></a></h4>\n        <h5 id=\"example-5\">Example<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ReflectiveInjector#example-5\"><i class=\"material-icons\">link</i></a></h5>\n<h5 id=\"例子-5\">例子<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ReflectiveInjector#例子-5\"><i class=\"material-icons\">link</i></a></h5>\n<code-example language=\"typescript\">\n@<a href=\"api/core/Injectable\" class=\"code-anchor\">Injectable</a> ()\nclass Engine {\n}\n@<a href=\"api/core/Injectable\" class=\"code-anchor\">Injectable</a> ()\nclass Car {\n  constructor(public engine:Engine) {}\n}\n\nvar injector = ReflectiveInjector.resolveAndCreate([Engine]);\n\nvar car = injector.resolveAndInstantiate(Car);\nexpect(car.engine).toBe(injector.get(Engine));\nexpect(car).not.toBe(injector.resolveAndInstantiate(Car));\n</code-example>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <a id=\"instantiateResolved\"></a>\n<table class=\"is-full-width method-table instance-methods\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"instantiateresolved\">instantiateResolved()<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ReflectiveInjector#instantiateresolved\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular-cn/edit/cn/packages/core/src/di/reflective_injector.ts?message=docs(core)%3A%20请简述你的修改...#L302-L335\" aria-label=\"提供编辑建议\" title=\"提供编辑建议\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/angular/angular-cn/tree/15.0.1/packages/core/src/di/reflective_injector.ts#L302-L335\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p>Instantiates an object using a resolved provider in the context of the injector.</p>\n<p>在注入器的上下文中使用解析的提供者实例化对象。</p>\n</td>\n    </tr>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">abstract <span class=\"member-name\">instantiateResolved</span>(provider: <a href=\"api/core/ResolvedReflectiveProvider\" class=\"code-anchor\">ResolvedReflectiveProvider</a>): any</code-example>\n\n  <h6 class=\"no-anchor\" id=\"参数-6\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>provider</code>\n      </td>\n      <td class=\"param-type\"><code><a href=\"api/core/ResolvedReflectiveProvider\" class=\"code-anchor\">ResolvedReflectiveProvider</a></code></td>\n      <td class=\"param-description\">\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-6\">返回值</h6>\n  <p><code>any</code></p>\n\n</div>\n      </td>\n    </tr>\n    <tr>\n      <td class=\"description\">\n        <p>The created object does not get cached by the injector.</p>\n<p>注入器不会缓存创建的对象。</p>\n\n      </td>\n    </tr>\n    <tr>\n      <td class=\"usage-notes\">\n        <h4 id=\"instantiateResolved-usage-notes\">使用说明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ReflectiveInjector#instantiateResolved-usage-notes\"><i class=\"material-icons\">link</i></a></h4>\n        <h5 id=\"example-6\">Example<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ReflectiveInjector#example-6\"><i class=\"material-icons\">link</i></a></h5>\n<h5 id=\"例子-6\">例子<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ReflectiveInjector#例子-6\"><i class=\"material-icons\">link</i></a></h5>\n<code-example language=\"typescript\">\n@<a href=\"api/core/Injectable\" class=\"code-anchor\">Injectable</a> ()\nclass Engine {\n}\n@<a href=\"api/core/Injectable\" class=\"code-anchor\">Injectable</a> ()\nclass Car {\n  constructor(public engine:Engine) {}\n}\n\nvar injector = ReflectiveInjector.resolveAndCreate([Engine]);\nvar carProvider = ReflectiveInjector.resolve([Car])[0];\nvar car = injector.instantiateResolved(carProvider);\nexpect(car.engine).toBe(injector.get(Engine));\nexpect(car).not.toBe(injector.instantiateResolved(carProvider));\n</code-example>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <a id=\"get\"></a>\n<table class=\"is-full-width method-table instance-methods\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"get\">get()<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ReflectiveInjector#get\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular-cn/edit/cn/packages/core/src/di/reflective_injector.ts?message=docs(core)%3A%20请简述你的修改...#L336-L337\" aria-label=\"提供编辑建议\" title=\"提供编辑建议\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/angular/angular-cn/tree/15.0.1/packages/core/src/di/reflective_injector.ts#L336-L337\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">abstract <span class=\"member-name\">get</span>(token: any, notFoundValue?: any): any</code-example>\n\n  <h6 class=\"no-anchor\" id=\"参数-7\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>token</code>\n      </td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>notFoundValue</code>\n      </td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n        <p>可选值。默认值为 <code>undefined</code>。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-7\">返回值</h6>\n  <p><code>any</code></p>\n\n</div>\n      </td>\n    </tr>\n  </tbody>\n</table>\n</section>\n\n<section class=\"usage-notes\">\n  <h2 id=\"usage-notes\">使用说明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ReflectiveInjector#usage-notes\"><i class=\"material-icons\">link</i></a></h2>\n  <h3 id=\"example-7\">Example<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ReflectiveInjector#example-7\"><i class=\"material-icons\">link</i></a></h3>\n<h3 id=\"例子-7\">例子<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ReflectiveInjector#例子-7\"><i class=\"material-icons\">link</i></a></h3>\n<p>The following example creates an <code><a href=\"api/core/Injector\" class=\"code-anchor\">Injector</a></code> configured to create <code>Engine</code> and <code>Car</code>.</p>\n<p>以下示例创建一个配置为创建 <code>Engine</code> 和 <code>Car</code> 的 <code><a href=\"api/core/Injector\" class=\"code-anchor\">Injector</a></code>。</p>\n<code-example language=\"typescript\">\n@<a href=\"api/core/Injectable\" class=\"code-anchor\">Injectable</a> ()\nclass Engine {\n}\n@<a href=\"api/core/Injectable\" class=\"code-anchor\">Injectable</a> ()\nclass Car {\n  constructor(public engine:Engine) {}\n}\n\nvar injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\nvar car = injector.get(Car);\nexpect(car instanceof Car).toBe(true);\nexpect(car.engine instanceof Engine).toBe(true);\n</code-example>\n<p>Notice, we don't use the <code>new</code> operator because we explicitly want to have the <code><a href=\"api/core/Injector\" class=\"code-anchor\">Injector</a></code>\nresolve all of the object's dependencies automatically.</p>\n<p>请注意，我们不使用 <code>new</code> 运算符，因为我们显式希望让 <code><a href=\"api/core/Injector\" class=\"code-anchor\">Injector</a></code> 自动解析所有对象的依赖项。</p>\n<p>TODO: delete in v14.</p>\n<p>TODO：在 v14 中删除。</p>\n\n</section></div>\n</article>\n\n<!-- links to this doc:\n - api/core\n - api/core/Injector\n - api/core/ReflectiveKey\n - guide/deprecations\n-->\n<!-- links from this doc:\n - /api\n - api/core\n - api/core/Injectable\n - api/core/Injector\n - api/core/Provider\n - api/core/ReflectiveInjector#createChildFromResolved\n - api/core/ReflectiveInjector#createChildFromResolved-usage-notes\n - api/core/ReflectiveInjector#createchildfromresolved\n - api/core/ReflectiveInjector#description\n - api/core/ReflectiveInjector#example\n - api/core/ReflectiveInjector#example-1\n - api/core/ReflectiveInjector#example-2\n - api/core/ReflectiveInjector#example-3\n - api/core/ReflectiveInjector#example-4\n - api/core/ReflectiveInjector#example-5\n - api/core/ReflectiveInjector#example-6\n - api/core/ReflectiveInjector#example-7\n - api/core/ReflectiveInjector#fromResolvedProviders\n - api/core/ReflectiveInjector#fromResolvedProviders-usage-notes\n - api/core/ReflectiveInjector#fromresolvedproviders\n - api/core/ReflectiveInjector#get\n - api/core/ReflectiveInjector#instance-methods\n - api/core/ReflectiveInjector#instance-properties\n - api/core/ReflectiveInjector#instantiateResolved\n - api/core/ReflectiveInjector#instantiateResolved-usage-notes\n - api/core/ReflectiveInjector#instantiateresolved\n - api/core/ReflectiveInjector#parent\n - api/core/ReflectiveInjector#reflectiveinjector\n - api/core/ReflectiveInjector#resolve\n - api/core/ReflectiveInjector#resolve-usage-notes\n - api/core/ReflectiveInjector#resolveAndCreate\n - api/core/ReflectiveInjector#resolveAndCreate-usage-notes\n - api/core/ReflectiveInjector#resolveAndCreateChild\n - api/core/ReflectiveInjector#resolveAndCreateChild-usage-notes\n - api/core/ReflectiveInjector#resolveAndInstantiate\n - api/core/ReflectiveInjector#resolveAndInstantiate-usage-notes\n - api/core/ReflectiveInjector#resolveandcreate\n - api/core/ReflectiveInjector#resolveandcreatechild\n - api/core/ReflectiveInjector#resolveandinstantiate\n - api/core/ReflectiveInjector#static-methods\n - api/core/ReflectiveInjector#usage-notes\n - api/core/ReflectiveInjector#例子\n - api/core/ReflectiveInjector#例子-1\n - api/core/ReflectiveInjector#例子-2\n - api/core/ReflectiveInjector#例子-3\n - api/core/ReflectiveInjector#例子-4\n - api/core/ReflectiveInjector#例子-5\n - api/core/ReflectiveInjector#例子-6\n - api/core/ReflectiveInjector#例子-7\n - api/core/ResolvedReflectiveProvider\n - api/core/Type\n - api/upgrade/static\n - https://github.com/angular/angular-cn/edit/cn/packages/core/src/di/reflective_injector.ts?message=docs(core)%3A%20请简述你的修改...#L119-L153\n - https://github.com/angular/angular-cn/edit/cn/packages/core/src/di/reflective_injector.ts?message=docs(core)%3A%20请简述你的修改...#L154-L188\n - https://github.com/angular/angular-cn/edit/cn/packages/core/src/di/reflective_injector.ts?message=docs(core)%3A%20请简述你的修改...#L20-L338\n - https://github.com/angular/angular-cn/edit/cn/packages/core/src/di/reflective_injector.ts?message=docs(core)%3A%20请简述你的修改...#L200-L232\n - https://github.com/angular/angular-cn/edit/cn/packages/core/src/di/reflective_injector.ts?message=docs(core)%3A%20请简述你的修改...#L233-L267\n - https://github.com/angular/angular-cn/edit/cn/packages/core/src/di/reflective_injector.ts?message=docs(core)%3A%20请简述你的修改...#L268-L301\n - https://github.com/angular/angular-cn/edit/cn/packages/core/src/di/reflective_injector.ts?message=docs(core)%3A%20请简述你的修改...#L302-L335\n - https://github.com/angular/angular-cn/edit/cn/packages/core/src/di/reflective_injector.ts?message=docs(core)%3A%20请简述你的修改...#L336-L337\n - https://github.com/angular/angular-cn/edit/cn/packages/core/src/di/reflective_injector.ts?message=docs(core)%3A%20请简述你的修改...#L77-L118\n - https://github.com/angular/angular-cn/tree/15.0.1/packages/core/src/di/reflective_injector.ts#L119-L153\n - https://github.com/angular/angular-cn/tree/15.0.1/packages/core/src/di/reflective_injector.ts#L154-L188\n - https://github.com/angular/angular-cn/tree/15.0.1/packages/core/src/di/reflective_injector.ts#L20-L338\n - https://github.com/angular/angular-cn/tree/15.0.1/packages/core/src/di/reflective_injector.ts#L200-L232\n - https://github.com/angular/angular-cn/tree/15.0.1/packages/core/src/di/reflective_injector.ts#L233-L267\n - https://github.com/angular/angular-cn/tree/15.0.1/packages/core/src/di/reflective_injector.ts#L268-L301\n - https://github.com/angular/angular-cn/tree/15.0.1/packages/core/src/di/reflective_injector.ts#L302-L335\n - https://github.com/angular/angular-cn/tree/15.0.1/packages/core/src/di/reflective_injector.ts#L336-L337\n - https://github.com/angular/angular-cn/tree/15.0.1/packages/core/src/di/reflective_injector.ts#L77-L118\n-->"
}