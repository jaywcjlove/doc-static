{
  "id": "api/core/Directive",
  "title": "Directive",
  "contents": "<article>\n  <div class=\"breadcrumb-container\">\n    <div class=\"breadcrumb\">\n      <script type=\"application/ld+json\">\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          \"itemListElement\": [\n            { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.cn//api\", \"name\": \"API\" } },\n            { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.cn/api/core\", \"name\": \"@angular/core\" } },\n            { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.cn/api/core/Directive\", \"name\": \"Directive\" } }\n          ]\n        }\n      </script>\n        <a href=\"/api\">API</a> > <a href=\"api/core\">@angular/core</a>\n    </div>\n    <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular-cn/edit/cn/packages/core/src/metadata/directives.ts?message=docs(core)%3A%20请简述你的修改...#L510-L511\" aria-label=\"提供编辑建议\" title=\"提供编辑建议\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/angular/angular-cn/tree/15.0.1/packages/core/src/metadata/directives.ts#L510-L511\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n  </div>\n  <header class=\"api-header\">\n    <h1 id=\"directive\">Directive<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/Directive#directive\"><i class=\"material-icons\">link</i></a></h1>\n    <label class=\"api-type-label decorator\">decorator</label>\n  </header>\n  <aio-toc class=\"embedded\"></aio-toc>\n\n  <div class=\"api-body\">\n  <section class=\"short-description\">\n    <p>Decorator that marks a class as an Angular directive.\nYou can define your own directives to attach custom behavior to elements in the DOM.</p>\n<p>将类标记为 Angular 指令的装饰器。你可以定义自己的指令，以将自定义行为附加到 DOM 中的元素。</p>\n\n    <p no-translate=\"\"><a href=\"api/core/Directive#description\">查看\"说明\"...</a></p>\n  </section>\n<section class=\"decorator-overview\">\n  <table class=\"is-full-width list-table option-overview\">\n  <thead>\n    <tr><th>选项</th><th>说明</th></tr>\n  </thead>\n  <tbody>\n    <tr class=\"option\">\n      <td>\n        <a class=\"code-anchor\" href=\"api/core/Directive#selector\">\n          <code>selector?</code>\n        </a>\n      </td>\n      <td>\n\n        <p>The CSS selector that identifies this directive in a template\nand triggers instantiation of the directive.</p>\n<p>这个 CSS 选择器用于在模板中标记出该指令，并触发该指令的实例化。</p>\n\n      </td>\n    </tr>\n    <tr class=\"option\">\n      <td>\n        <a class=\"code-anchor\" href=\"api/core/Directive#inputs\">\n          <code>inputs?</code>\n        </a>\n      </td>\n      <td>\n\n        <p>Enumerates the set of data-bound input properties for a directive</p>\n<p>列举某个指令的一组可供数据绑定的输入属性</p>\n\n      </td>\n    </tr>\n    <tr class=\"option\">\n      <td>\n        <a class=\"code-anchor\" href=\"api/core/Directive#outputs\">\n          <code>outputs?</code>\n        </a>\n      </td>\n      <td>\n\n        <p>Enumerates the set of event-bound output properties.</p>\n<p>列举一组可供事件绑定的输出属性。</p>\n\n      </td>\n    </tr>\n    <tr class=\"option\">\n      <td>\n        <a class=\"code-anchor\" href=\"api/core/Directive#providers\">\n          <code>providers?</code>\n        </a>\n      </td>\n      <td>\n\n        <p>Configures the <a href=\"guide/glossary#injector\">injector</a> of this\ndirective or component with a <a href=\"guide/glossary#di-token\">token</a>\nthat maps to a <a href=\"guide/glossary#provider\">provider</a> of a dependency.</p>\n<p>一组依赖注入令牌，它允许 DI 系统为这个指令或组件提供依赖。</p>\n\n      </td>\n    </tr>\n    <tr class=\"option\">\n      <td>\n        <a class=\"code-anchor\" href=\"api/core/Directive#exportAs\">\n          <code>exportAs?</code>\n        </a>\n      </td>\n      <td>\n\n        <p>Defines the name that can be used in the template to assign this directive to a variable.</p>\n<p>定义一个名字，用于在模板中把该指令赋值给一个变量。</p>\n\n      </td>\n    </tr>\n    <tr class=\"option\">\n      <td>\n        <a class=\"code-anchor\" href=\"api/core/Directive#queries\">\n          <code>queries?</code>\n        </a>\n      </td>\n      <td>\n\n        <p>Configures the queries that will be injected into the directive.</p>\n<p>配置一些查询，它们将被注入到该指令中。</p>\n\n      </td>\n    </tr>\n    <tr class=\"option\">\n      <td>\n        <a class=\"code-anchor\" href=\"api/core/Directive#host\">\n          <code>host?</code>\n        </a>\n      </td>\n      <td>\n\n        <p>Maps class properties to host element bindings for properties,\nattributes, and events, using a set of key-value pairs.</p>\n<p>使用一组键-值对，把类的属性映射到宿主元素的绑定（Property、Attribute 和事件）。</p>\n\n      </td>\n    </tr>\n    <tr class=\"option\">\n      <td>\n        <a class=\"code-anchor\" href=\"api/core/Directive#jit\">\n          <code>jit?</code>\n        </a>\n      </td>\n      <td>\n\n        <p>When present, this directive/component is ignored by the AOT compiler.\nIt remains in distributed code, and the JIT compiler attempts to compile it\nat run time, in the browser.\nTo ensure the correct behavior, the app must import <code>@angular/compiler</code>.</p>\n<p>如果存在，则该指令/组件将被 AOT 编译器忽略。它会保留在发布代码中，并且 JIT\n编译器会尝试在运行时在浏览器中对其进行编译。为了确保其行为正确，该应用程序必须导入\n<code>@angular/compiler</code> 。</p>\n\n      </td>\n    </tr>\n    <tr class=\"option\">\n      <td>\n        <a class=\"code-anchor\" href=\"api/core/Directive#standalone\">\n          <code>standalone?</code>\n        </a>\n      </td>\n      <td>\n        <label class=\"api-status-label dev-preview\" title=\"This API is in Developer Preview\">\n          <a href=\"guide/releases#developer-preview\">developer preview</a>\n        </label>\n        \n\n        <p>Angular directives marked as <code>standalone</code> do not need to be declared in an NgModule. Such\ndirectives don't depend on any \"intermediate context\" of an NgModule (ex. configured\nproviders).</p>\n<p>标记为 <code>standalone</code> 的 Angular 指令不需要在 NgModule 中声明。此类指令不依赖于 NgModule\n的任何“中间上下文”（例如配置的提供程序）。</p>\n\n      </td>\n    </tr>\n    <tr class=\"option\">\n      <td>\n        <a class=\"code-anchor\" href=\"api/core/Directive#hostDirectives\">\n          <code>hostDirectives?</code>\n        </a>\n      </td>\n      <td>\n\n        <p>Standalone directives that should be applied to the host whenever the directive is matched.\nBy default, none of the inputs or outputs of the host directives will be available on the host,\nunless they are specified in the <code>inputs</code> or <code>outputs</code> properties.</p>\n<p>指令匹配时应该应用于宿主的独立指令。默认情况下，host\n指令的任何输入或输出在宿主上都不可用，除非它们在 <code>inputs</code> 或 <code>outputs</code> 属性中指定。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  \n  <div class=\"descendants decorator\">\n    <h2 id=\"子类\">子类<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/Directive#子类\"><i class=\"material-icons\">link</i></a></h2>\n    \n<ul>\n  <li>\n    <code><a href=\"api/core/Component\" class=\"code-anchor\">Component</a></code>\n    \n  </li>\n</ul>\n  </div>\n</section>\n\n<section class=\"description\">\n  <h2 id=\"description\">说明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/Directive#description\"><i class=\"material-icons\">link</i></a></h2>\n  <p>The options provide configuration metadata that determines\nhow the directive should be processed, instantiated and used at\nruntime.</p>\n<p>把一个类标记为 Angular 指令。你可以定义自己的指令来为 DOM 中的元素添加自定义行为。\n该选项提供配置元数据，用于决定该指令在运行期间要如何处理、实例化和使用。</p>\n<p>Directive classes, like component classes, can implement\n<a href=\"guide/lifecycle-hooks\">life-cycle hooks</a> to influence their configuration and behavior.</p>\n<p>像组件类一样，指令类也可以实现<a href=\"guide/lifecycle-hooks\">生命周期钩子</a>，以影响它们的配置和行为。</p>\n  <p>Further information is available in the <a href=\"api/core/Directive#usage-notes\">Usage Notes...</a></p>\n</section>\n\n<section class=\"decorator-options\">\n  <h2 id=\"options\">选项<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/Directive#options\"><i class=\"material-icons\">link</i></a></h2>\n  \n  <a id=\"selector\"></a>\n  <table class=\"is-full-width option-table\">\n    <thead>\n      <tr>\n        <th>\n          <div class=\"with-github-links\">\n            <h3 id=\"selector\">selector<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/Directive#selector\"><i class=\"material-icons\">link</i></a></h3>\n            <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular-cn/edit/cn/packages/core/src/metadata/directives.ts?message=docs(core)%3A%20请简述你的修改...#L168-L221\" aria-label=\"提供编辑建议\" title=\"提供编辑建议\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/angular/angular-cn/tree/15.0.1/packages/core/src/metadata/directives.ts#L168-L221\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n          </div>\n        </th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td>\n          <p>The CSS selector that identifies this directive in a template\nand triggers instantiation of the directive.</p>\n<p>这个 CSS 选择器用于在模板中标记出该指令，并触发该指令的实例化。</p>\n\n        </td>\n      </tr>\n      <tr>\n        <td>\n          <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">\n            selector?: string\n          </code-example>\n        </td>\n      </tr>\n      <tr>\n        <td>\n          <p>Declare as one of the following:</p>\n<p>可使用下列形式之一：</p>\n<ul>\n<li>\n<p><code>element-name</code>: Select by element name.</p>\n<p><code>element-name</code>：根据元素名选取。</p>\n</li>\n<li>\n<p><code>.class</code>: Select by class name.</p>\n<p><code>.class</code>：根据类名选取。</p>\n</li>\n<li>\n<p><code>[attribute]</code>: Select by attribute name.</p>\n<p><code>[attribute]</code>：根据属性名选取。</p>\n</li>\n<li>\n<p><code>[attribute=value]</code>: Select by attribute name and value.</p>\n<p><code>[attribute=value]</code>：根据属性名和属性值选取。</p>\n</li>\n<li>\n<p><code>:not(sub_selector)</code>: Select only if the element does not match the <code>sub_selector</code>.</p>\n<p><code>:not(sub_selector)</code>：只有当元素不匹配子选择器 <code>sub_selector</code> 的时候才选取。</p>\n</li>\n<li>\n<p><code>selector1, selector2</code>: Select if either <code>selector1</code> or <code>selector2</code> matches.</p>\n<p><code>selector1, selector2</code>：无论 <code>selector1</code> 还是 <code>selector2</code> 匹配时都选取。</p>\n</li>\n</ul>\n<p>Angular only allows directives to apply on CSS selectors that do not cross\nelement boundaries.</p>\n<p>Angular 的指令只允许那些不跨元素边界的 CSS 选择器。</p>\n<p>For the following template HTML, a directive with an <code>input[type=text]</code> selector,\nwould be instantiated only on the <code>&#x3C;input type=\"text\"></code> element.</p>\n<p>对于下列模板 HTML，带有 <code>input[type=text]</code> 选择器的指令只会在 <code>&#x3C;input type=\"text\"></code>\n元素上实例化。</p>\n<code-example language=\"html\">\n&#x3C;form>\n  &#x3C;input type=\"text\">\n  &#x3C;input type=\"radio\">\n&#x3C;form>\n</code-example>\n\n          \n        </td>\n      </tr>\n    </tbody>\n  </table>\n  \n  <a id=\"inputs\"></a>\n  <table class=\"is-full-width option-table\">\n    <thead>\n      <tr>\n        <th>\n          <div class=\"with-github-links\">\n            <h3 id=\"inputs\">inputs<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/Directive#inputs\"><i class=\"material-icons\">link</i></a></h3>\n            <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular-cn/edit/cn/packages/core/src/metadata/directives.ts?message=docs(core)%3A%20请简述你的修改...#L222-L269\" aria-label=\"提供编辑建议\" title=\"提供编辑建议\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/angular/angular-cn/tree/15.0.1/packages/core/src/metadata/directives.ts#L222-L269\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n          </div>\n        </th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td>\n          <p>Enumerates the set of data-bound input properties for a directive</p>\n<p>列举某个指令的一组可供数据绑定的输入属性</p>\n\n        </td>\n      </tr>\n      <tr>\n        <td>\n          <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">\n            inputs?: string[]\n          </code-example>\n        </td>\n      </tr>\n      <tr>\n        <td>\n          <p>Angular automatically updates input properties during change detection.\nThe <code>inputs</code> property defines a set of <code>directiveProperty</code> to <code>bindingProperty</code>\nconfiguration:</p>\n<p>Angular 会在变更检测期间自动更新输入属性。\n<code>inputs</code> 属性定义了一组从 <code>directiveProperty</code> 指向 <code>bindingProperty</code> 的配置项：</p>\n<ul>\n<li>\n<p><code>directiveProperty</code> specifies the component property where the value is written.</p>\n<p><code>directiveProperty</code> 用于指定要写入值的指令内属性。</p>\n</li>\n<li>\n<p><code>bindingProperty</code> specifies the DOM property where the value is read from.</p>\n<p><code>bindingProperty</code> 用于指定要从中读取值的 DOM 属性。</p>\n</li>\n</ul>\n<p>When <code>bindingProperty</code> is not provided, it is assumed to be equal to <code>directiveProperty</code>.</p>\n<p>当没有提供 <code>bindingProperty</code> 时，就假设它和 <code>directiveProperty</code> 一样。</p>\n\n          \n          <p>The following example creates a component with two data-bound properties.</p>\n<p>下面的例子创建了一个带有两个可绑定属性的组件。</p>\n<code-example language=\"typescript\">\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'bank-account',\n  inputs: ['bankName', 'id: account-id'],\n  template: `\n    Bank Name: {{bankName}}\n    Account Id: {{id}}\n  `\n})\nclass BankAccount {\n  bankName: string;\n  id: string;\n}\n</code-example>\n\n          \n        </td>\n      </tr>\n    </tbody>\n  </table>\n  \n  <a id=\"outputs\"></a>\n  <table class=\"is-full-width option-table\">\n    <thead>\n      <tr>\n        <th>\n          <div class=\"with-github-links\">\n            <h3 id=\"outputs\">outputs<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/Directive#outputs\"><i class=\"material-icons\">link</i></a></h3>\n            <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular-cn/edit/cn/packages/core/src/metadata/directives.ts?message=docs(core)%3A%20请简述你的修改...#L270-L322\" aria-label=\"提供编辑建议\" title=\"提供编辑建议\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/angular/angular-cn/tree/15.0.1/packages/core/src/metadata/directives.ts#L270-L322\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n          </div>\n        </th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td>\n          <p>Enumerates the set of event-bound output properties.</p>\n<p>列举一组可供事件绑定的输出属性。</p>\n\n        </td>\n      </tr>\n      <tr>\n        <td>\n          <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">\n            outputs?: string[]\n          </code-example>\n        </td>\n      </tr>\n      <tr>\n        <td>\n          <p>When an output property emits an event, an event handler attached to that event\nin the template is invoked.</p>\n<p>当输出属性发出一个事件时，就会调用模板中附加到它的一个事件处理器。</p>\n<p>The <code>outputs</code> property defines a set of <code>directiveProperty</code> to <code>bindingProperty</code>\nconfiguration:</p>\n<p><code>outputs</code> 属性定义了一组从 <code>directiveProperty</code> 指向 <code>bindingProperty</code> 的配置项：</p>\n<ul>\n<li>\n<p><code>directiveProperty</code> specifies the component property that emits events.</p>\n<p><code>directiveProperty</code> 用于指定要发出事件的指令属性。</p>\n</li>\n<li>\n<p><code>bindingProperty</code> specifies the DOM property the event handler is attached to.</p>\n<p><code>bindingProperty</code> 用于指定要附加事件处理器的 DOM 属性。</p>\n</li>\n</ul>\n\n          \n          <code-example language=\"typescript\">\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'child-dir',\n  outputs: [ 'bankNameChange' ]\n  template: `&#x3C;input (input)=\"bankNameChange.emit($event.target.value)\" />`\n})\nclass ChildDir {\n bankNameChange: <a href=\"api/core/EventEmitter\" class=\"code-anchor\">EventEmitter</a>&#x3C;string> = new <a href=\"api/core/EventEmitter\" class=\"code-anchor\">EventEmitter</a>&#x3C;string>();\n}\n\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'main',\n  template: `\n    {{ bankName }} &#x3C;child-dir (bankNameChange)=\"onBankNameChange($event)\">&#x3C;/child-dir>\n  `\n})\nclass MainComponent {\n bankName: string;\n\n  onBankNameChange(bankName: string) {\n    this.bankName = bankName;\n  }\n}\n</code-example>\n\n          \n        </td>\n      </tr>\n    </tbody>\n  </table>\n  \n  <a id=\"providers\"></a>\n  <table class=\"is-full-width option-table\">\n    <thead>\n      <tr>\n        <th>\n          <div class=\"with-github-links\">\n            <h3 id=\"providers\">providers<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/Directive#providers\"><i class=\"material-icons\">link</i></a></h3>\n            <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular-cn/edit/cn/packages/core/src/metadata/directives.ts?message=docs(core)%3A%20请简述你的修改...#L323-L331\" aria-label=\"提供编辑建议\" title=\"提供编辑建议\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/angular/angular-cn/tree/15.0.1/packages/core/src/metadata/directives.ts#L323-L331\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n          </div>\n        </th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td>\n          <p>Configures the <a href=\"guide/glossary#injector\">injector</a> of this\ndirective or component with a <a href=\"guide/glossary#di-token\">token</a>\nthat maps to a <a href=\"guide/glossary#provider\">provider</a> of a dependency.</p>\n<p>一组依赖注入令牌，它允许 DI 系统为这个指令或组件提供依赖。</p>\n\n        </td>\n      </tr>\n      <tr>\n        <td>\n          <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">\n            providers?: <a href=\"api/core/Provider\" class=\"code-anchor\">Provider</a>[]\n          </code-example>\n        </td>\n      </tr>\n      <tr>\n        <td>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n  \n  <a id=\"exportAs\"></a>\n  <table class=\"is-full-width option-table\">\n    <thead>\n      <tr>\n        <th>\n          <div class=\"with-github-links\">\n            <h3 id=\"exportas\">exportAs<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/Directive#exportas\"><i class=\"material-icons\">link</i></a></h3>\n            <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular-cn/edit/cn/packages/core/src/metadata/directives.ts?message=docs(core)%3A%20请简述你的修改...#L332-L357\" aria-label=\"提供编辑建议\" title=\"提供编辑建议\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/angular/angular-cn/tree/15.0.1/packages/core/src/metadata/directives.ts#L332-L357\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n          </div>\n        </th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td>\n          <p>Defines the name that can be used in the template to assign this directive to a variable.</p>\n<p>定义一个名字，用于在模板中把该指令赋值给一个变量。</p>\n\n        </td>\n      </tr>\n      <tr>\n        <td>\n          <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">\n            exportAs?: string\n          </code-example>\n        </td>\n      </tr>\n      <tr>\n        <td>\n          <code-example language=\"ts\">\n@<a href=\"api/core/Directive\" class=\"code-anchor\">Directive</a>({\n  selector: 'child-dir',\n  exportAs: 'child'\n})\nclass ChildDir {\n}\n\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'main',\n  template: `&#x3C;child-dir #c=\"child\">&#x3C;/child-dir>`\n})\nclass MainComponent {\n}\n</code-example>\n\n          \n        </td>\n      </tr>\n    </tbody>\n  </table>\n  \n  <a id=\"queries\"></a>\n  <table class=\"is-full-width option-table\">\n    <thead>\n      <tr>\n        <th>\n          <div class=\"with-github-links\">\n            <h3 id=\"queries\">queries<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/Directive#queries\"><i class=\"material-icons\">link</i></a></h3>\n            <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular-cn/edit/cn/packages/core/src/metadata/directives.ts?message=docs(core)%3A%20请简述你的修改...#L358-L401\" aria-label=\"提供编辑建议\" title=\"提供编辑建议\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/angular/angular-cn/tree/15.0.1/packages/core/src/metadata/directives.ts#L358-L401\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n          </div>\n        </th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td>\n          <p>Configures the queries that will be injected into the directive.</p>\n<p>配置一些查询，它们将被注入到该指令中。</p>\n\n        </td>\n      </tr>\n      <tr>\n        <td>\n          <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">\n            queries?: {\n    [key: string]: any;\n}\n          </code-example>\n        </td>\n      </tr>\n      <tr>\n        <td>\n          <p>Content queries are set before the <code>ngAfterContentInit</code> callback is called.\nView queries are set before the <code>ngAfterViewInit</code> callback is called.</p>\n<p>内容查询会在调用 <code>ngAfterContentInit</code> 回调之前设置好。</p>\n\n          \n          <p>The following example shows how queries are defined\nand when their results are available in lifecycle hooks:</p>\n<p>下面的范例展示了如何定义这些查询以及到生命周期钩子中的哪个步骤才会有结果：</p>\n<code-example language=\"ts\">\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'someDir',\n  queries: {\n    contentChildren: new <a href=\"api/core/ContentChildren\" class=\"code-anchor\">ContentChildren</a>(ChildDirective),\n    viewChildren: new <a href=\"api/core/ViewChildren\" class=\"code-anchor\">ViewChildren</a>(ChildDirective)\n  },\n  template: '&#x3C;child-directive>&#x3C;/child-directive>'\n})\nclass SomeDir {\n  contentChildren: <a href=\"api/core/QueryList\" class=\"code-anchor\">QueryList</a>&#x3C;ChildDirective>,\n  viewChildren: <a href=\"api/core/QueryList\" class=\"code-anchor\">QueryList</a>&#x3C;ChildDirective>\n\n  ngAfterContentInit() {\n    // contentChildren is set\n  }\n\n  ngAfterViewInit() {\n    // viewChildren is set\n  }\n}\n</code-example>\n\n          \n        </td>\n      </tr>\n    </tbody>\n  </table>\n  \n  <a id=\"host\"></a>\n  <table class=\"is-full-width option-table\">\n    <thead>\n      <tr>\n        <th>\n          <div class=\"with-github-links\">\n            <h3 id=\"host\">host<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/Directive#host\"><i class=\"material-icons\">link</i></a></h3>\n            <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular-cn/edit/cn/packages/core/src/metadata/directives.ts?message=docs(core)%3A%20请简述你的修改...#L402-L445\" aria-label=\"提供编辑建议\" title=\"提供编辑建议\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/angular/angular-cn/tree/15.0.1/packages/core/src/metadata/directives.ts#L402-L445\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n          </div>\n        </th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td>\n          <p>Maps class properties to host element bindings for properties,\nattributes, and events, using a set of key-value pairs.</p>\n<p>使用一组键-值对，把类的属性映射到宿主元素的绑定（Property、Attribute 和事件）。</p>\n\n        </td>\n      </tr>\n      <tr>\n        <td>\n          <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">\n            host?: {\n    [key: string]: string;\n}\n          </code-example>\n        </td>\n      </tr>\n      <tr>\n        <td>\n          <p>Angular automatically checks host property bindings during change detection.\nIf a binding changes, Angular updates the directive's host element.</p>\n<p>Angular 在变更检测期间会自动检查宿主 Property 绑定。\n如果绑定的值发生了变化，Angular 就会更新该指令的宿主元素。</p>\n<p>When the key is a property of the host element, the property value is\nthe propagated to the specified DOM property.</p>\n<p>当 key 是宿主元素的 Property 时，这个 Property 值就会传播到指定的 DOM 属性。</p>\n<p>When the key is a static attribute in the DOM, the attribute value\nis propagated to the specified property in the host element.</p>\n<p>当 key 是 DOM 中的静态 Attribute 时，这个 Attribute 值就会传播到宿主元素上指定的 Property 去。</p>\n<p>For event handling:</p>\n<p>对于事件处理：</p>\n<ul>\n<li>\n<p>The key is the DOM event that the directive listens to.\nTo listen to global events, add the target to the event name.\nThe target can be <code>window</code>, <code>document</code> or <code>body</code>.</p>\n<p>它的 key 就是该指令想要监听的 DOM 事件。\n要想监听全局事件，请把要监听的目标添加到事件名的前面。\n这个目标可以是 <code>window</code>、<code>document</code> 或 <code>body</code>。</p>\n</li>\n<li>\n<p>The value is the statement to execute when the event occurs. If the\nstatement evaluates to <code>false</code>, then <code>preventDefault</code> is applied on the DOM\nevent. A handler method can refer to the <code>$event</code> local variable.</p>\n<p>它的 value 就是当该事件发生时要执行的语句。如果该语句返回 <code>false</code>，那么就会调用这个 DOM\n事件的 <code>preventDefault</code> 函数。 这个语句中可以引用局部变量 <code>$event</code> 来获取事件数据。</p>\n</li>\n</ul>\n\n          \n        </td>\n      </tr>\n    </tbody>\n  </table>\n  \n  <a id=\"jit\"></a>\n  <table class=\"is-full-width option-table\">\n    <thead>\n      <tr>\n        <th>\n          <div class=\"with-github-links\">\n            <h3 id=\"jit\">jit<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/Directive#jit\"><i class=\"material-icons\">link</i></a></h3>\n            <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular-cn/edit/cn/packages/core/src/metadata/directives.ts?message=docs(core)%3A%20请简述你的修改...#L446-L458\" aria-label=\"提供编辑建议\" title=\"提供编辑建议\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/angular/angular-cn/tree/15.0.1/packages/core/src/metadata/directives.ts#L446-L458\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n          </div>\n        </th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td>\n          <p>When present, this directive/component is ignored by the AOT compiler.\nIt remains in distributed code, and the JIT compiler attempts to compile it\nat run time, in the browser.\nTo ensure the correct behavior, the app must import <code>@angular/compiler</code>.</p>\n<p>如果存在，则该指令/组件将被 AOT 编译器忽略。它会保留在发布代码中，并且 JIT\n编译器会尝试在运行时在浏览器中对其进行编译。为了确保其行为正确，该应用程序必须导入\n<code>@angular/compiler</code> 。</p>\n\n        </td>\n      </tr>\n      <tr>\n        <td>\n          <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">\n            jit?: true\n          </code-example>\n        </td>\n      </tr>\n      <tr>\n        <td>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n  \n  <a id=\"standalone\"></a>\n  <table class=\"is-full-width option-table\">\n    <thead>\n      <tr>\n        <th>\n          <div class=\"with-github-links\">\n            <h3 id=\"standalone\">standalone<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/Directive#standalone\"><i class=\"material-icons\">link</i></a></h3>\n            <label class=\"api-status-label dev-preview\" title=\"This API is in Developer Preview\">\n              <a href=\"guide/releases#developer-preview\">developer\n                preview</a>\n            </label>\n            \n            <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular-cn/edit/cn/packages/core/src/metadata/directives.ts?message=docs(core)%3A%20请简述你的修改...#L459-L475\" aria-label=\"提供编辑建议\" title=\"提供编辑建议\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/angular/angular-cn/tree/15.0.1/packages/core/src/metadata/directives.ts#L459-L475\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n          </div>\n        </th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td>\n          <p>Angular directives marked as <code>standalone</code> do not need to be declared in an NgModule. Such\ndirectives don't depend on any \"intermediate context\" of an NgModule (ex. configured\nproviders).</p>\n<p>标记为 <code>standalone</code> 的 Angular 指令不需要在 NgModule 中声明。此类指令不依赖于 NgModule\n的任何“中间上下文”（例如配置的提供程序）。</p>\n\n        </td>\n      </tr>\n      <tr>\n        <td>\n          <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">\n            standalone?: boolean\n          </code-example>\n        </td>\n      </tr>\n      <tr>\n        <td>\n          <p>More information about standalone components, directives, and pipes can be found in <a href=\"guide/standalone-components\">this\nguide</a>.</p>\n<p>有关独立组件、指令和管道的更多信息，请参阅<a href=\"guide/standalone-components\">本指南</a>。</p>\n\n          \n        </td>\n      </tr>\n    </tbody>\n  </table>\n  \n  <a id=\"hostDirectives\"></a>\n  <table class=\"is-full-width option-table\">\n    <thead>\n      <tr>\n        <th>\n          <div class=\"with-github-links\">\n            <h3 id=\"hostdirectives\">hostDirectives<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/Directive#hostdirectives\"><i class=\"material-icons\">link</i></a></h3>\n            <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular-cn/edit/cn/packages/core/src/metadata/directives.ts?message=docs(core)%3A%20请简述你的修改...#L476-L499\" aria-label=\"提供编辑建议\" title=\"提供编辑建议\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/angular/angular-cn/tree/15.0.1/packages/core/src/metadata/directives.ts#L476-L499\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n          </div>\n        </th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td>\n          <p>Standalone directives that should be applied to the host whenever the directive is matched.\nBy default, none of the inputs or outputs of the host directives will be available on the host,\nunless they are specified in the <code>inputs</code> or <code>outputs</code> properties.</p>\n<p>指令匹配时应该应用于宿主的独立指令。默认情况下，host\n指令的任何输入或输出在宿主上都不可用，除非它们在 <code>inputs</code> 或 <code>outputs</code> 属性中指定。</p>\n\n        </td>\n      </tr>\n      <tr>\n        <td>\n          <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">\n            hostDirectives?: (<a href=\"api/core/Type\" class=\"code-anchor\">Type</a>&#x3C;unknown> | {\n    directive: <a href=\"api/core/Type\" class=\"code-anchor\">Type</a>&#x3C;unknown>;\n    inputs?: string[];\n    outputs?: string[];\n})[]\n          </code-example>\n        </td>\n      </tr>\n      <tr>\n        <td>\n          <p>You can additionally alias inputs and outputs by putting a colon and the alias after the\noriginal input or output name. For example, if a directive applied via <code>hostDirectives</code>\ndefines an input named <code>menuDisabled</code>, you can alias this to <code>disabled</code> by adding\n<code>'menuDisabled: disabled'</code> as an entry to <code>inputs</code>.</p>\n<p>你可以通过在原始输入或输出名称后面放一个冒号和别名来为输入和输出额外别名。例如，如果通过\n<code>hostDirectives</code> 应用的指令定义了一个名为 <code>menuDisabled</code> 的 <code>inputs</code> ，你可以通过将\n<code>'menuDisabled: disabled'</code> <code>disabled</code> 条目添加到 sources 来将其别名为 enabled 。</p>\n\n          \n        </td>\n      </tr>\n    </tbody>\n  </table>\n  \n</section>\n\n<section class=\"usage-notes\">\n  <h2 id=\"usage-notes\">使用说明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/Directive#usage-notes\"><i class=\"material-icons\">link</i></a></h2>\n  <p>To define a directive, mark the class with the decorator and provide metadata.</p>\n<p>要想定义一个指令，请为该类加上此装饰器，并提供元数据。</p>\n<code-example language=\"ts\">\nimport {<a href=\"api/core/Directive\" class=\"code-anchor\">Directive</a>} from '@angular/core';\n\n@<a href=\"api/core/Directive\" class=\"code-anchor\">Directive</a>({\n  selector: 'my-directive',\n})\nexport class MyDirective {\n...\n}\n</code-example>\n<h3 id=\"declaring-directives\">Declaring directives<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/Directive#declaring-directives\"><i class=\"material-icons\">link</i></a></h3>\n<h3 id=\"声明指令\">声明指令<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/Directive#声明指令\"><i class=\"material-icons\">link</i></a></h3>\n<p>In order to make a directive available to other components in your application, you should do\none of the following:</p>\n<p>为了使指令可用于你应用程序中的其他组件，你应该执行以下操作之一：</p>\n<ul>\n<li>\n<p>either mark the directive as <a href=\"guide/standalone-components\">standalone</a>,</p>\n<p>要么将指令标记为<a href=\"guide/standalone-components\">Standalone</a> ，</p>\n</li>\n<li>\n<p>or declare it in an NgModule by adding it to the <code>declarations</code> and <code>exports</code> fields.</p>\n<p>或者通过将其添加到 <code>declarations</code> 和 <code>exports</code> 字段来在 NgModule 中声明它。</p>\n</li>\n</ul>\n<p><strong> Marking a directive as standalone </strong></p>\n<p><strong>将指令标记为独立</strong></p>\n<p>You can add the <code>standalone: true</code> flag to the Directive decorator metadata to declare it as\n<a href=\"guide/standalone-components\">standalone</a>:</p>\n<p>你可以将 <code>standalone: true</code> 标志添加到 Directive\n装饰器元数据中，以将其声明为<a href=\"guide/standalone-components\">Standalone</a> ：</p>\n<code-example language=\"ts\">\n@<a href=\"api/core/Directive\" class=\"code-anchor\">Directive</a>({\n  standalone: true,\n  selector: 'my-directive',\n})\nclass MyDirective {}\n</code-example>\n<p>When marking a directive as standalone, please make sure that the directive is not already\ndeclared in an NgModule.</p>\n<p>将指令标记为独立时，请确保该指令尚未在 NgModule 中声明。</p>\n<p><strong> Declaring a directive in an NgModule </strong></p>\n<p><strong>在 NgModule 中声明指令</strong></p>\n<p>Another approach is to declare a directive in an NgModule:</p>\n<p>另一种方法是在 NgModule 中声明一个指令：</p>\n<code-example language=\"ts\">\n@<a href=\"api/core/Directive\" class=\"code-anchor\">Directive</a>({\n  selector: 'my-directive',\n})\nclass MyDirective {}\n\n@<a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a>({\n  declarations: [MyDirective, SomeComponent],\n  exports: [MyDirective], // making it available outside of this module\n})\nclass SomeNgModule {}\n</code-example>\n<p>When declaring a directive in an NgModule, please make sure that:</p>\n<p>在 NgModule 中声明指令时，请确保：</p>\n<ul>\n<li>\n<p>the directive is declared in exactly one NgModule.</p>\n<p>该指令正好在一个 NgModule 中声明。</p>\n</li>\n<li>\n<p>the directive is not standalone.</p>\n<p>该指令不是独立的。</p>\n</li>\n<li>\n<p>you do not re-declare a directive imported from another module.</p>\n<p>你不会重新声明从另一个模块导入的指令。</p>\n</li>\n<li>\n<p>the directive is included into the <code>exports</code> field as well if you want this directive to be\naccessible for components outside of the NgModule.</p>\n<p>如果你希望 <code>exports</code> 之外的组件可以访问此指令，则该指令也包含在 export 字段中。</p>\n</li>\n</ul>\n\n</section></div>\n</article>\n\n<!-- links to this doc:\n - api/core\n - api/core/Attribute\n - api/core/Component\n - api/core/ContentChild\n - api/core/ContentChildren\n - api/core/Host\n - api/core/HostBinding\n - api/core/HostListener\n - api/core/Injectable\n - api/core/ViewChild\n - api/core/ViewChildren\n - api/core/ViewContainerRef\n - api/core/testing/TestBed\n - api/forms/AsyncValidator\n - api/forms/NG_ASYNC_VALIDATORS\n - api/forms/NG_VALIDATORS\n - api/forms/Validator\n - api/upgrade/static/UpgradeComponent\n - api/upgrade/static/testing/createAngularJSTestingModule\n - api/upgrade/static/testing/createAngularTestingModule\n - errors/NG0910\n - errors/NG1001\n - errors/NG8003\n - guide/architecture-components\n - guide/attribute-directives\n - guide/bootstrapping\n - guide/cheatsheet\n - guide/content-projection\n - guide/dependency-injection-in-action\n - guide/directive-composition-api\n - guide/dynamic-component-loader\n - guide/elements\n - guide/form-validation\n - guide/forms\n - guide/glossary\n - guide/hierarchical-dependency-injection\n - guide/lifecycle-hooks\n - guide/migration-injectable\n - guide/migration-undecorated-classes\n - guide/npm-packages\n - guide/standalone-components\n - guide/structural-directives\n - guide/styleguide\n - guide/testing-attribute-directives\n - guide/testing-components-scenarios\n - guide/testing-utility-apis\n - guide/update-to-version-15\n - guide/upgrade\n-->\n<!-- links from this doc:\n - /api\n - api/core\n - api/core/Component\n - api/core/ContentChildren\n - api/core/Directive#declaring-directives\n - api/core/Directive#description\n - api/core/Directive#directive\n - api/core/Directive#exportAs\n - api/core/Directive#exportas\n - api/core/Directive#host\n - api/core/Directive#hostDirectives\n - api/core/Directive#hostdirectives\n - api/core/Directive#inputs\n - api/core/Directive#jit\n - api/core/Directive#options\n - api/core/Directive#outputs\n - api/core/Directive#providers\n - api/core/Directive#queries\n - api/core/Directive#selector\n - api/core/Directive#standalone\n - api/core/Directive#usage-notes\n - api/core/Directive#声明指令\n - api/core/Directive#子类\n - api/core/EventEmitter\n - api/core/NgModule\n - api/core/Provider\n - api/core/QueryList\n - api/core/Type\n - api/core/ViewChildren\n - guide/glossary#di-token\n - guide/glossary#injector\n - guide/glossary#provider\n - guide/lifecycle-hooks\n - guide/releases#developer-preview\n - guide/standalone-components\n - https://github.com/angular/angular-cn/edit/cn/packages/core/src/metadata/directives.ts?message=docs(core)%3A%20请简述你的修改...#L168-L221\n - https://github.com/angular/angular-cn/edit/cn/packages/core/src/metadata/directives.ts?message=docs(core)%3A%20请简述你的修改...#L222-L269\n - https://github.com/angular/angular-cn/edit/cn/packages/core/src/metadata/directives.ts?message=docs(core)%3A%20请简述你的修改...#L270-L322\n - https://github.com/angular/angular-cn/edit/cn/packages/core/src/metadata/directives.ts?message=docs(core)%3A%20请简述你的修改...#L323-L331\n - https://github.com/angular/angular-cn/edit/cn/packages/core/src/metadata/directives.ts?message=docs(core)%3A%20请简述你的修改...#L332-L357\n - https://github.com/angular/angular-cn/edit/cn/packages/core/src/metadata/directives.ts?message=docs(core)%3A%20请简述你的修改...#L358-L401\n - https://github.com/angular/angular-cn/edit/cn/packages/core/src/metadata/directives.ts?message=docs(core)%3A%20请简述你的修改...#L402-L445\n - https://github.com/angular/angular-cn/edit/cn/packages/core/src/metadata/directives.ts?message=docs(core)%3A%20请简述你的修改...#L446-L458\n - https://github.com/angular/angular-cn/edit/cn/packages/core/src/metadata/directives.ts?message=docs(core)%3A%20请简述你的修改...#L459-L475\n - https://github.com/angular/angular-cn/edit/cn/packages/core/src/metadata/directives.ts?message=docs(core)%3A%20请简述你的修改...#L476-L499\n - https://github.com/angular/angular-cn/edit/cn/packages/core/src/metadata/directives.ts?message=docs(core)%3A%20请简述你的修改...#L510-L511\n - https://github.com/angular/angular-cn/tree/15.0.1/packages/core/src/metadata/directives.ts#L168-L221\n - https://github.com/angular/angular-cn/tree/15.0.1/packages/core/src/metadata/directives.ts#L222-L269\n - https://github.com/angular/angular-cn/tree/15.0.1/packages/core/src/metadata/directives.ts#L270-L322\n - https://github.com/angular/angular-cn/tree/15.0.1/packages/core/src/metadata/directives.ts#L323-L331\n - https://github.com/angular/angular-cn/tree/15.0.1/packages/core/src/metadata/directives.ts#L332-L357\n - https://github.com/angular/angular-cn/tree/15.0.1/packages/core/src/metadata/directives.ts#L358-L401\n - https://github.com/angular/angular-cn/tree/15.0.1/packages/core/src/metadata/directives.ts#L402-L445\n - https://github.com/angular/angular-cn/tree/15.0.1/packages/core/src/metadata/directives.ts#L446-L458\n - https://github.com/angular/angular-cn/tree/15.0.1/packages/core/src/metadata/directives.ts#L459-L475\n - https://github.com/angular/angular-cn/tree/15.0.1/packages/core/src/metadata/directives.ts#L476-L499\n - https://github.com/angular/angular-cn/tree/15.0.1/packages/core/src/metadata/directives.ts#L510-L511\n-->"
}