{
  "id": "api/core/testing/tick",
  "title": "tick",
  "contents": "<article>\n  <div class=\"breadcrumb-container\">\n    <div class=\"breadcrumb\">\n      <script type=\"application/ld+json\">\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          \"itemListElement\": [\n            { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.cn//api\", \"name\": \"API\" } },\n            { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.cn/api/core\", \"name\": \"@angular/core\" } },\n            { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.cn/api/core/testing\", \"name\": \"@angular/core/testing\" } },\n            { \"@type\": \"ListItem\", \"position\": 4, \"item\": { \"@id\": \"https://angular.cn/api/core/testing/tick\", \"name\": \"tick\" } }\n          ]\n        }\n      </script>\n        <a href=\"/api\">API</a> > <a href=\"api/core\">@angular/core</a> > <a href=\"api/core/testing\">@angular/core/testing</a>\n    </div>\n    <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular-cn/edit/cn/packages/core/testing/src/fake_async.ts?message=docs(core)%3A%20请简述你的修改...#L74-L165\" aria-label=\"提供编辑建议\" title=\"提供编辑建议\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/angular/angular-cn/tree/15.0.1/packages/core/testing/src/fake_async.ts#L74-L165\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n  </div>\n  <header class=\"api-header\">\n    <h1 id=\"tick\">tick<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/testing/tick#tick\"><i class=\"material-icons\">link</i></a></h1>\n    <label class=\"api-type-label function\">function</label>\n  </header>\n  <aio-toc class=\"embedded\"></aio-toc>\n\n  <div class=\"api-body\">\n  <section class=\"short-description\">\n    <p>Simulates the asynchronous passage of time for the timers in the <code><a href=\"api/core/testing/fakeAsync\" class=\"code-anchor\">fakeAsync</a></code> zone.</p>\n<p>为 fakeAsync Zone 中的计时器模拟异步时间流逝。</p>\n\n    <p no-translate=\"\"><a href=\"api/core/testing/tick#description\">查看\"说明\"...</a></p>\n  </section>\n\n  <div class=\"overload-info\">\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> <span class=\"member-name\"><a href=\"api/core/testing/tick\" class=\"code-anchor\">tick</a></span>(millis: number = 0, tickOptions: { processNewMacroTasksSynchronously: boolean; } = {\n    processNewMacroTasksSynchronously: true\n}): void</code-example>\n\n  <h6 class=\"no-anchor\" id=\"参数\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>millis</code>\n      </td>\n      <td class=\"param-type\"><code>number</code></td>\n      <td class=\"param-description\">\n        <p>The number of milliseconds to advance the virtual timer.</p>\n<p>使虚拟计时器提前的毫秒数。</p>\n\n        <p>可选值。默认值为 <code>0</code>。</p>\n\n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>tickOptions</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p>The options to pass to the <code><a href=\"api/core/testing/tick\" class=\"code-anchor\">tick</a>()</code> function.</p>\n<p>要传递给 <code><a href=\"api/core/testing/tick\" class=\"code-anchor\">tick</a>()</code> 函数的选项。</p>\n\n        <p>可选值。默认值为 <code>{     processNewMacroTasksSynchronously: true }</code>。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值\">返回值</h6>\n  <p><code>void</code></p>\n\n</div>\n\n\n\n<section class=\"description\">\n  <h2 id=\"description\">说明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/testing/tick#description\"><i class=\"material-icons\">link</i></a></h2>\n  <p>The microtasks queue is drained at the very start of this function and after any timer callback\nhas been executed.</p>\n<p>在此函数开始时以及执行任何计时器回调之后，微任务队列就会耗尽。</p>\n  <p>Further information is available in the <a href=\"api/core/testing/tick#usage-notes\">Usage Notes...</a></p>\n</section>\n\n\n<section class=\"usage-notes\">\n  <h2 id=\"usage-notes\">使用说明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/testing/tick#usage-notes\"><i class=\"material-icons\">link</i></a></h2>\n  <p>The <code><a href=\"api/core/testing/tick\" class=\"code-anchor\">tick</a>()</code> option is a flag called <code>processNewMacroTasksSynchronously</code>,\nwhich determines whether or not to invoke new macroTasks.</p>\n<p><code><a href=\"api/core/testing/tick\" class=\"code-anchor\">tick</a>()</code> 选项是一个名为 <code>processNewMacroTasksSynchronously</code> 的标志，它确定是否调用新的\nMacroTasks。</p>\n<p>If you provide a <code>tickOptions</code> object, but do not specify a\n<code>processNewMacroTasksSynchronously</code> property (<code><a href=\"api/core/testing/tick\" class=\"code-anchor\">tick</a>(100, {})</code>),\nthen <code>processNewMacroTasksSynchronously</code> defaults to true.</p>\n<p>如果你提供了 <code>tickOptions</code> 对象，但未指定 <code>processNewMacroTasksSynchronously</code> 属性 (\n<code><a href=\"api/core/testing/tick\" class=\"code-anchor\">tick</a>(100, {})</code> )，则 <code>processNewMacroTasksSynchronously</code> 默认为 true。</p>\n<p>If you omit the <code>tickOptions</code> parameter (<code><a href=\"api/core/testing/tick\" class=\"code-anchor\">tick</a>(100))</code>), then\n<code>tickOptions</code> defaults to <code>{processNewMacroTasksSynchronously: true}</code>.</p>\n<p>如果你省略了 <code>tickOptions</code> 参数 ( <code><a href=\"api/core/testing/tick\" class=\"code-anchor\">tick</a>(100))</code> ) ，则 <code>tickOptions</code> 默认为\n<code>{processNewMacroTasksSynchronously: true}</code> 。</p>\n<h3 id=\"example\">Example<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/testing/tick#example\"><i class=\"material-icons\">link</i></a></h3>\n<h3 id=\"例子\">例子<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/testing/tick#例子\"><i class=\"material-icons\">link</i></a></h3>\n<code-example path=\"core/testing/ts/fake_async.ts\" region=\"basic\">\ndescribe('this test', () => {\n  it('looks async but is synchronous', &#x3C;any><a href=\"api/core/testing/fakeAsync\" class=\"code-anchor\">fakeAsync</a>((): void => {\n       let flag = false;\n       setTimeout(() => {\n         flag = true;\n       }, 100);\n       expect(flag).toBe(false);\n       <a href=\"api/core/testing/tick\" class=\"code-anchor\">tick</a>(50);\n       expect(flag).toBe(false);\n       <a href=\"api/core/testing/tick\" class=\"code-anchor\">tick</a>(50);\n       expect(flag).toBe(true);\n     }));\n});\n\n</code-example>\n<p>The following example includes a nested timeout (new macroTask), and\nthe <code>tickOptions</code> parameter is allowed to default. In this case,\n<code>processNewMacroTasksSynchronously</code> defaults to true, and the nested\nfunction is executed on each tick.</p>\n<code-example>\nit ('test with nested setTimeout', <a href=\"api/core/testing/fakeAsync\" class=\"code-anchor\">fakeAsync</a>(() => {\n  let nestedTimeoutInvoked = false;\n  function funcWithNestedTimeout() {\n    setTimeout(() => {\n      nestedTimeoutInvoked = true;\n    });\n  };\n  setTimeout(funcWithNestedTimeout);\n  <a href=\"api/core/testing/tick\" class=\"code-anchor\">tick</a>();\n  expect(nestedTimeoutInvoked).toBe(true);\n}));\n</code-example>\n<p>In the following case, <code>processNewMacroTasksSynchronously</code> is explicitly\nset to false, so the nested timeout function is not invoked.</p>\n<code-example>\nit ('test with nested setTimeout', <a href=\"api/core/testing/fakeAsync\" class=\"code-anchor\">fakeAsync</a>(() => {\n  let nestedTimeoutInvoked = false;\n  function funcWithNestedTimeout() {\n    setTimeout(() => {\n      nestedTimeoutInvoked = true;\n    });\n  };\n  setTimeout(funcWithNestedTimeout);\n  <a href=\"api/core/testing/tick\" class=\"code-anchor\">tick</a>(0, {processNewMacroTasksSynchronously: false});\n  expect(nestedTimeoutInvoked).toBe(false);\n}));\n</code-example>\n\n</section></div>\n</article>\n\n<!-- links to this doc:\n - api/core/ApplicationRef\n - api/core/testing\n - api/core/testing/fakeAsync\n - guide/component-interaction\n - guide/forms-overview\n - guide/lifecycle-hooks\n - guide/testing-components-scenarios\n - guide/testing-utility-apis\n-->\n<!-- links from this doc:\n - /api\n - api/core\n - api/core/testing\n - api/core/testing/fakeAsync\n - api/core/testing/tick#description\n - api/core/testing/tick#example\n - api/core/testing/tick#tick\n - api/core/testing/tick#usage-notes\n - api/core/testing/tick#例子\n - https://github.com/angular/angular-cn/edit/cn/packages/core/testing/src/fake_async.ts?message=docs(core)%3A%20请简述你的修改...#L74-L165\n - https://github.com/angular/angular-cn/tree/15.0.1/packages/core/testing/src/fake_async.ts#L74-L165\n-->"
}