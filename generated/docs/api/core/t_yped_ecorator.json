{
  "id": "api/core/TypeDecorator",
  "title": "TypeDecorator",
  "contents": "<article>\n  <div class=\"breadcrumb-container\">\n    <div class=\"breadcrumb\">\n      <script type=\"application/ld+json\">\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          \"itemListElement\": [\n            { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.cn//api\", \"name\": \"API\" } },\n            { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.cn/api/core\", \"name\": \"@angular/core\" } },\n            { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.cn/api/core/TypeDecorator\", \"name\": \"TypeDecorator\" } }\n          ]\n        }\n      </script>\n        <a href=\"/api\">API</a> > <a href=\"api/core\">@angular/core</a>\n    </div>\n    <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular-cn/edit/cn/packages/core/src/util/decorators.ts?message=docs(core)%3A%20请简述你的修改...#L12-L42\" aria-label=\"提供编辑建议\" title=\"提供编辑建议\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/angular/angular-cn/tree/15.0.1/packages/core/src/util/decorators.ts#L12-L42\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n  </div>\n  <header class=\"api-header\">\n    <h1 id=\"typedecorator\">TypeDecorator<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/TypeDecorator#typedecorator\"><i class=\"material-icons\">link</i></a></h1>\n    <label class=\"api-type-label interface\">interface</label>\n  </header>\n  <aio-toc class=\"embedded\"></aio-toc>\n\n  <div class=\"api-body\">\n  <section class=\"short-description\">\n    <p>An interface implemented by all Angular type decorators, which allows them to be used as\ndecorators as well as Angular syntax.</p>\n<p>由所有 Angular 类型装饰器实现的接口，该接口允许将它们用作装饰器以及 Angular 语法。</p>\n\n    <p no-translate=\"\"><a href=\"api/core/TypeDecorator#description\">查看\"说明\"...</a></p>\n  </section><section class=\"interface-overview\">\n<code-example language=\"ts\" hidecopy=\"true\">\ninterface <a href=\"api/core/TypeDecorator\" class=\"code-anchor\">TypeDecorator</a> {\n  <a class=\"code-anchor\" href=\"api/core/TypeDecorator#call\"><span class=\"member-name\"></span>&#x3C;T extends Type&#x3C;any>>(type: T): T</a>\n}\n</code-example>\n\n\n</section>\n\n  \n<section class=\"description\">\n  <h2 id=\"description\">说明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/TypeDecorator#description\"><i class=\"material-icons\">link</i></a></h2>\n  <code-example>\n@ng .Component({...})\nclass MyClass {...}\n</code-example>\n</section>\n  \n  \n<section class=\"instance-methods\">\n  <a name=\"methods\"></a>\n  <h2 id=\"instance-methods\">方法<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/TypeDecorator#instance-methods\"><i class=\"material-icons\">link</i></a></h2>\n  <a id=\"call\"></a>\n<table class=\"is-full-width method-table instance-method\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"调用签名\"><i>调用签名</i><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/TypeDecorator#调用签名\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular-cn/edit/cn/packages/core/src/util/decorators.ts?message=docs(core)%3A%20请简述你的修改...#L29-L35\" aria-label=\"提供编辑建议\" title=\"提供编辑建议\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/angular/angular-cn/tree/15.0.1/packages/core/src/util/decorators.ts#L29-L35\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p>Invoke as decorator.</p>\n<p>作为装饰器调用。</p>\n</td>\n    </tr>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\"></span>&#x3C;T extends <a href=\"api/core/Type\" class=\"code-anchor\">Type</a>&#x3C;any>>(type: T): T</code-example>\n\n  <h6 class=\"no-anchor\" id=\"参数\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>type</code>\n      </td>\n      <td class=\"param-type\"><code>T</code></td>\n      <td class=\"param-description\">\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值\">返回值</h6>\n  <p><code>T</code></p>\n\n</div>\n      </td>\n    </tr>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\"></span>(target: Object, propertyKey?: string | symbol, parameterIndex?: number): void</code-example>\n\n  <h6 class=\"no-anchor\" id=\"参数-1\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>target</code>\n      </td>\n      <td class=\"param-type\"><code>Object</code></td>\n      <td class=\"param-description\">\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>propertyKey</code>\n      </td>\n      <td class=\"param-type\"><code>string | symbol</code></td>\n      <td class=\"param-description\">\n        <p>可选值。默认值为 <code>undefined</code>。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>parameterIndex</code>\n      </td>\n      <td class=\"param-type\"><code>number</code></td>\n      <td class=\"param-description\">\n        <p>可选值。默认值为 <code>undefined</code>。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-1\">返回值</h6>\n  <p><code>void</code></p>\n\n</div>\n      </td>\n    </tr>\n  </tbody>\n</table>\n</section>\n</div>\n</article>\n\n<!-- links to this doc:\n - api/core\n-->\n<!-- links from this doc:\n - /api\n - api/core\n - api/core/Type\n - api/core/TypeDecorator#call\n - api/core/TypeDecorator#description\n - api/core/TypeDecorator#instance-methods\n - api/core/TypeDecorator#typedecorator\n - api/core/TypeDecorator#调用签名\n - https://github.com/angular/angular-cn/edit/cn/packages/core/src/util/decorators.ts?message=docs(core)%3A%20请简述你的修改...#L12-L42\n - https://github.com/angular/angular-cn/edit/cn/packages/core/src/util/decorators.ts?message=docs(core)%3A%20请简述你的修改...#L29-L35\n - https://github.com/angular/angular-cn/tree/15.0.1/packages/core/src/util/decorators.ts#L12-L42\n - https://github.com/angular/angular-cn/tree/15.0.1/packages/core/src/util/decorators.ts#L29-L35\n-->"
}