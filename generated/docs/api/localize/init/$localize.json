{
  "id": "api/localize/init/$localize",
  "title": "$localize",
  "contents": "<article>\n  <div class=\"breadcrumb-container\">\n    <div class=\"breadcrumb\">\n      <script type=\"application/ld+json\">\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          \"itemListElement\": [\n            { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.cn//api\", \"name\": \"API\" } },\n            { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.cn/api/localize\", \"name\": \"@angular/localize\" } },\n            { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.cn/api/localize/init\", \"name\": \"@angular/localize/init\" } },\n            { \"@type\": \"ListItem\", \"position\": 4, \"item\": { \"@id\": \"https://angular.cn/api/localize/init/$localize\", \"name\": \"$localize\" } }\n          ]\n        }\n      </script>\n        <a href=\"/api\">API</a> > <a href=\"api/localize\">@angular/localize</a> > <a href=\"api/localize/init\">@angular/localize/init</a>\n    </div>\n    <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular-cn/edit/cn/packages/localize/src/localize/src/localize.ts?message=docs(localize)%3A%20请简述你的修改...#L217-L229\" aria-label=\"提供编辑建议\" title=\"提供编辑建议\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/angular/angular-cn/tree/15.0.1/packages/localize/src/localize/src/localize.ts#L217-L229\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n  </div>\n  <header class=\"api-header\">\n    <h1 id=\"localize\">$localize<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/localize/init/$localize#localize\"><i class=\"material-icons\">link</i></a></h1>\n    <label class=\"api-type-label global\">global</label>\n    <label class=\"api-type-label const\">const</label>\n  </header>\n  <aio-toc class=\"embedded\"></aio-toc>\n\n  <div class=\"api-body\">\n  <section class=\"short-description\">\n    <p>Tag a template literal string for localization.</p>\n<p>标记模板文字字符串以进行本地化。</p>\n\n    <p no-translate=\"\"><a href=\"api/localize/init/$localize#description\">查看\"说明\"...</a></p>\n  </section>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">\n  const $localize: LocalizeFn;\n  </code-example>\n\n  \n<section class=\"description\">\n  <h2 id=\"description\">说明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/localize/init/$localize#description\"><i class=\"material-icons\">link</i></a></h2>\n  <p>For example:</p>\n<p>例如：</p>\n<code-example language=\"ts\">\n$localize `some string to localize`\n</code-example>\n<p><strong>Providing meaning, description and id</strong></p>\n<p><strong>提供含义、描述和 id</strong></p>\n<p>You can optionally specify one or more of <code>meaning</code>, <code>description</code> and <code>id</code> for a localized\nstring by pre-pending it with a colon delimited block of the form:</p>\n<p>你可以选择为本地化字符串指定 <code>meaning</code>、<code>description</code> 和 <code>id</code>\n中的一个或多个，方法是在其前面使用以下形式的冒号分隔块：</p>\n<code-example language=\"ts\">\n$localize`:meaning|description@@id:source message text`;\n\n$localize`:meaning|:source message text`;\n$localize`:description:source message text`;\n$localize`:@@id:source message text`;\n</code-example>\n<p>This format is the same as that used for <code>i18n</code> markers in Angular templates. See the\n<a href=\"guide/i18n-common-prepare#mark-text-in-component-template\">Angular i18n guide</a>.</p>\n<p>此格式与 Angular 模板中用于 <code>i18n</code> 标记的格式相同。请参阅<a href=\"guide/i18n-common-prepare#mark-text-in-component-template\">Angular i18n\n指南</a>。</p>\n<p><strong>Naming placeholders</strong></p>\n<p><strong>命名占位符</strong></p>\n<p>If the template literal string contains expressions, then the expressions will be automatically\nassociated with placeholder names for you.</p>\n<p>如果模板文字字符串包含表达式，那么这些表达式将自动为你与占位符名称相关联。</p>\n<p>For example:</p>\n<p>例如：</p>\n<code-example language=\"ts\">\n$localize `Hi ${name}! There are ${items.length} items.`;\n</code-example>\n<p>will generate a message-source of <code>Hi {$PH}! There are {$PH_1} items</code>.</p>\n<p>将生成 <code>Hi {$PH}! There are {$PH_1} items</code> 。</p>\n<p>The recommended practice is to name the placeholder associated with each expression though.</p>\n<p>推荐的实践是命名与每个表达式关联的占位符。</p>\n<p>Do this by providing the placeholder name wrapped in <code>:</code> characters directly after the\nexpression. These placeholder names are stripped out of the rendered localized string.</p>\n<p>通过在表达式之后直接提供用 <code>:</code>\n字符包装的占位符名称来实现。这些占位符名称会从呈现的本地化字符串中删除。</p>\n<p>For example, to name the <code>items.length</code> expression placeholder <code>itemCount</code> you write:</p>\n<p>例如，要命名 <code>items.length</code> 表达式占位符 <code>itemCount</code> ，你可以这样写：</p>\n<code-example language=\"ts\">\n$localize `There are ${items.length}:itemCount: items`;\n</code-example>\n<p><strong>Escaping colon markers</strong></p>\n<p><strong>转义冒号标记</strong></p>\n<p>If you need to use a <code>:</code> character directly at the start of a tagged string that has no\nmetadata block, or directly after a substitution expression that has no name you must escape\nthe <code>:</code> by preceding it with a backslash:</p>\n<p>如果你需要直接在没有元数据块的标记字符串的开头使用 <code>:</code> 字符，或直接在没有名称的替换表达式之后使用\n: ，你必须在 <code>:</code> 之前使用反斜杠来转译：</p>\n<p>For example:</p>\n<p>例如：</p>\n<code-example language=\"ts\">\n// message has a metadata block so no need to escape colon\n$localize `:some description::this message starts with a colon (:)`;\n// no metadata block so the colon must be escaped\n$localize `\\:this message starts with a colon (:)`;\n</code-example>\n<code-example language=\"ts\">\n// named substitution so no need to escape colon\n$localize `${label}:label:: ${}`\n// anonymous substitution so colon must be escaped\n$localize `${label}\\: ${}`\n</code-example>\n<p><strong>Processing localized strings:</strong></p>\n<p><strong>处理本地化字符串：</strong></p>\n<p>There are three scenarios:</p>\n<p>有三种情况：</p>\n<ul>\n<li>\n<p><strong>compile-time inlining</strong>: the <code><a href=\"api/localize/init/$localize\" class=\"code-anchor\">$localize</a></code> tag is transformed at compile time by a\ntranspiler, removing the tag and replacing the template literal string with a translated\nliteral string from a collection of translations provided to the transpilation tool.</p>\n<p>  <strong>编译时内联</strong>： <code><a href=\"api/localize/init/$localize\" class=\"code-anchor\">$localize</a></code>\n标签在编译时由转译器转换，删除标签并使用提供给转译工具的翻译集合中的翻译后的文字字符串替换模板文字字符串。</p>\n</li>\n<li>\n<p><strong>run-time evaluation</strong>: the <code><a href=\"api/localize/init/$localize\" class=\"code-anchor\">$localize</a></code> tag is a run-time function that replaces and\nreorders the parts (static strings and expressions) of the template literal string with strings\nfrom a collection of translations loaded at run-time.</p>\n<p>  <strong>运行时估算</strong>： <code><a href=\"api/localize/init/$localize\" class=\"code-anchor\">$localize</a></code>\n标签是一个运行时函数，它会使用运行时加载的翻译集合中的字符串替换模板文字字符串的部分（静态字符串和表达式）并重新排序。</p>\n</li>\n<li>\n<p><strong>pass-through evaluation</strong>: the <code><a href=\"api/localize/init/$localize\" class=\"code-anchor\">$localize</a></code> tag is a run-time function that simply evaluates\nthe original template literal string without applying any translations to the parts. This\nversion is used during development or where there is no need to translate the localized\ntemplate literals.</p>\n<p>  <strong>传递估算</strong>： <code><a href=\"api/localize/init/$localize\" class=\"code-anchor\">$localize</a></code>\n标签是一个运行时函数，它只是估算原始模板文字字符串，而不对各个部分应用任何翻译。此版本在开发期间或无需翻译本地化模板文字的地方使用。</p>\n</li>\n</ul>\n</section>\n</div>\n</article>\n\n<!-- links to this doc:\n - api/localize\n - api/localize/clearTranslations\n - api/localize/init\n - api/localize/loadTranslations\n - guide/angular-compiler-options\n - guide/i18n-common-merge\n - guide/i18n-common-prepare\n - guide/i18n-common-translation-files\n - guide/i18n-optional-manage-marked-text\n - guide/migration-legacy-message-id\n - guide/migration-localize\n-->\n<!-- links from this doc:\n - /api\n - api/localize\n - api/localize/init\n - api/localize/init/$localize#description\n - api/localize/init/$localize#localize\n - guide/i18n-common-prepare#mark-text-in-component-template\n - https://github.com/angular/angular-cn/edit/cn/packages/localize/src/localize/src/localize.ts?message=docs(localize)%3A%20请简述你的修改...#L217-L229\n - https://github.com/angular/angular-cn/tree/15.0.1/packages/localize/src/localize/src/localize.ts#L217-L229\n-->"
}