{
  "id": "api/forms/FormGroup",
  "title": "FormGroup",
  "contents": "<article>\n  <div class=\"breadcrumb-container\">\n    <div class=\"breadcrumb\">\n      <script type=\"application/ld+json\">\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          \"itemListElement\": [\n            { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.cn//api\", \"name\": \"API\" } },\n            { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.cn/api/forms\", \"name\": \"@angular/forms\" } },\n            { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.cn/api/forms/FormGroup\", \"name\": \"FormGroup\" } }\n          ]\n        }\n      </script>\n        <a href=\"/api\">API</a> > <a href=\"api/forms\">@angular/forms</a>\n    </div>\n    <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular-cn/edit/cn/packages/forms/src/model/form_group.ts?message=docs(forms)%3A%20请简述你的修改...#L64-L785\" aria-label=\"提供编辑建议\" title=\"提供编辑建议\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/angular/angular-cn/tree/15.0.1/packages/forms/src/model/form_group.ts#L64-L785\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n  </div>\n  <header class=\"api-header\">\n    <h1 id=\"formgroup\">FormGroup<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormGroup#formgroup\"><i class=\"material-icons\">link</i></a></h1>\n    <label class=\"api-type-label class\">class</label>\n    <label class=\"github-links api-status-label final\" title=\"This class should not be extended.\">\n      <a href=\"https://github.com/angular/angular-cn/tree/15.0.1/docs/PUBLIC_API.md#final-classes\">final</a>\n    </label>\n  </header>\n  <aio-toc class=\"embedded\"></aio-toc>\n\n  <div class=\"api-body\">\n  <section class=\"short-description\">\n    <p>Tracks the value and validity state of a group of <code><a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a></code> instances.</p>\n<p>跟踪一组 <code><a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a></code> 实例的值和有效状态。</p>\n\n    <p no-translate=\"\"><a href=\"api/forms/FormGroup#description\">查看\"说明\"...</a></p>\n  </section><section class=\"class-overview\">\n<code-example language=\"ts\" hidecopy=\"true\">\nclass <a href=\"api/forms/FormGroup\" class=\"code-anchor\">FormGroup</a>&#x3C;TControl extends {\n    [K in keyof TControl]: <a href=\"api/forms/AbstractControl\" class=\"code-anchor\">AbstractControl</a>&#x3C;any>;\n} = any> extends <a href=\"api/forms/AbstractControl\" class=\"code-anchor\">AbstractControl</a>&#x3C;ɵTypedOrUntyped&#x3C;TControl, ɵFormGroupValue&#x3C;TControl>, any>, ɵTypedOrUntyped&#x3C;TControl, ɵFormGroupRawValue&#x3C;TControl>, any>> {\n  <a class=\"code-anchor\" href=\"api/forms/FormGroup#constructor()\"><span class=\"member-name\">constructor</span>(controls: TControl, validatorOrOpts?: ValidatorFn | AbstractControlOptions | ValidatorFn[], asyncValidator?: AsyncValidatorFn | AsyncValidatorFn[])</a>\n  <a class=\"code-anchor\" href=\"api/forms/FormGroup#controls\"><span class=\"member-name\">controls</span>: ɵTypedOrUntyped&#x3C;TControl, TControl, {...}</a>\n  <a class=\"code-anchor\" href=\"api/forms/FormGroup#registerControl\"><span class=\"member-name\">registerControl</span>&#x3C;K extends string &#x26; keyof TControl>(name: K, control: TControl[K]): TControl[K]</a>\n  <a class=\"code-anchor\" href=\"api/forms/FormGroup#addControl\"><span class=\"member-name\">addControl</span>&#x3C;K extends string &#x26; keyof TControl>(name: K, control: Required&#x3C;TControl>[K], options: { emitEvent?: boolean; } = {}): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/FormGroup#removeControl\"><span class=\"member-name\">removeControl</span>(name: string, options: { emitEvent?: boolean; } = {}): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/FormGroup#setControl\"><span class=\"member-name\">setControl</span>&#x3C;K extends string &#x26; keyof TControl>(name: K, control: TControl[K], options: { emitEvent?: boolean; } = {}): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/FormGroup#contains\"><span class=\"member-name\">contains</span>&#x3C;K extends string &#x26; keyof TControl>(controlName: K): boolean</a>\n  <a class=\"code-anchor\" href=\"api/forms/FormGroup#setValue\"><span class=\"member-name\">setValue</span>(value: ɵIsAny&#x3C;TControl, { [key: string]: any; }, { [K in keyof TControl]: ɵRawValue&#x3C;TControl[K]>; }>, options: { onlySelf?: boolean; emitEvent?: boolean; } = {}): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/FormGroup#patchValue\"><span class=\"member-name\">patchValue</span>(value: ɵIsAny&#x3C;TControl, { [key: string]: any; }, Partial&#x3C;{ [K in keyof TControl]: ɵValue&#x3C;TControl[K]>; }>>, options: { onlySelf?: boolean; emitEvent?: boolean; } = {}): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/FormGroup#reset\"><span class=\"member-name\">reset</span>(value: ɵIsAny&#x3C;TControl, any, ɵIsAny&#x3C;TControl, { [key: string]: any; }, Partial&#x3C;{ [K in keyof TControl]: ɵValue&#x3C;TControl[K]>; }>>> = {} as unknown as ɵFormGroupValue&#x3C;TControl>, options: { onlySelf?: boolean; emitEvent?: boolean; } = {}): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/FormGroup#getRawValue\"><span class=\"member-name\">getRawValue</span>(): ɵTypedOrUntyped&#x3C;TControl, ɵFormGroupRawValue&#x3C;TControl>, any></a>\n\n  // 继承自 <a class=\"code-anchor\" href=\"api/forms/AbstractControl\">forms/AbstractControl</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#constructor()\"><span class=\"member-name\">constructor</span>(validators: ValidatorFn | ValidatorFn[], asyncValidators: AsyncValidatorFn | AsyncValidatorFn[])</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#value\"><span class=\"member-name\">value</span>: TValue</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#validator\"><span class=\"member-name\">validator</span>: ValidatorFn | null</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#asyncValidator\"><span class=\"member-name\">asyncValidator</span>: AsyncValidatorFn | null</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#parent\"><span class=\"member-name\">parent</span>: FormGroup | FormArray | null</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#status\"><span class=\"member-name\">status</span>: FormControlStatus</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#valid\"><span class=\"member-name\">valid</span>: boolean</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#invalid\"><span class=\"member-name\">invalid</span>: boolean</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#pending\"><span class=\"member-name\">pending</span>: boolean</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#disabled\"><span class=\"member-name\">disabled</span>: boolean</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#enabled\"><span class=\"member-name\">enabled</span>: boolean</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#errors\"><span class=\"member-name\">errors</span>: ValidationErrors | null</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#pristine\"><span class=\"member-name\">pristine</span>: boolean</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#dirty\"><span class=\"member-name\">dirty</span>: boolean</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#touched\"><span class=\"member-name\">touched</span>: boolean</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#untouched\"><span class=\"member-name\">untouched</span>: boolean</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#valueChanges\"><span class=\"member-name\">valueChanges</span>: Observable&#x3C;TValue></a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#statusChanges\"><span class=\"member-name\">statusChanges</span>: Observable&#x3C;FormControlStatus></a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#updateOn\"><span class=\"member-name\">updateOn</span>: FormHooks</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#root\"><span class=\"member-name\">root</span>: AbstractControl</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#setValidators\"><span class=\"member-name\">setValidators</span>(validators: ValidatorFn | ValidatorFn[]): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#setAsyncValidators\"><span class=\"member-name\">setAsyncValidators</span>(validators: AsyncValidatorFn | AsyncValidatorFn[]): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#addValidators\"><span class=\"member-name\">addValidators</span>(validators: ValidatorFn | ValidatorFn[]): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#addAsyncValidators\"><span class=\"member-name\">addAsyncValidators</span>(validators: AsyncValidatorFn | AsyncValidatorFn[]): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#removeValidators\"><span class=\"member-name\">removeValidators</span>(validators: ValidatorFn | ValidatorFn[]): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#removeAsyncValidators\"><span class=\"member-name\">removeAsyncValidators</span>(validators: AsyncValidatorFn | AsyncValidatorFn[]): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#hasValidator\"><span class=\"member-name\">hasValidator</span>(validator: ValidatorFn): boolean</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#hasAsyncValidator\"><span class=\"member-name\">hasAsyncValidator</span>(validator: AsyncValidatorFn): boolean</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#clearValidators\"><span class=\"member-name\">clearValidators</span>(): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#clearAsyncValidators\"><span class=\"member-name\">clearAsyncValidators</span>(): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#markAsTouched\"><span class=\"member-name\">markAsTouched</span>(opts: { onlySelf?: boolean; } = {}): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#markAllAsTouched\"><span class=\"member-name\">markAllAsTouched</span>(): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#markAsUntouched\"><span class=\"member-name\">markAsUntouched</span>(opts: { onlySelf?: boolean; } = {}): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#markAsDirty\"><span class=\"member-name\">markAsDirty</span>(opts: { onlySelf?: boolean; } = {}): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#markAsPristine\"><span class=\"member-name\">markAsPristine</span>(opts: { onlySelf?: boolean; } = {}): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#markAsPending\"><span class=\"member-name\">markAsPending</span>(opts: { onlySelf?: boolean; emitEvent?: boolean; } = {}): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#disable\"><span class=\"member-name\">disable</span>(opts: { onlySelf?: boolean; emitEvent?: boolean; } = {}): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#enable\"><span class=\"member-name\">enable</span>(opts: { onlySelf?: boolean; emitEvent?: boolean; } = {}): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#setParent\"><span class=\"member-name\">setParent</span>(parent: FormGroup&#x3C;any> | FormArray&#x3C;any>): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#setValue\">abstract <span class=\"member-name\">setValue</span>(value: TRawValue, options?: Object): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#patchValue\">abstract <span class=\"member-name\">patchValue</span>(value: TValue, options?: Object): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#reset\">abstract <span class=\"member-name\">reset</span>(value?: TValue, options?: Object): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#getRawValue\"><span class=\"member-name\">getRawValue</span>(): any</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#updateValueAndValidity\"><span class=\"member-name\">updateValueAndValidity</span>(opts: { onlySelf?: boolean; emitEvent?: boolean; } = {}): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#setErrors\"><span class=\"member-name\">setErrors</span>(errors: ValidationErrors, opts: { emitEvent?: boolean; } = {}): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#get\"><span class=\"member-name\">get</span>&#x3C;P extends string | ((string | number)[])>(path: P): AbstractControl&#x3C;ɵGetProperty&#x3C;TRawValue, P>> | null</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#getError\"><span class=\"member-name\">getError</span>(errorCode: string, path?: string | (string | number)[]): any</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#hasError\"><span class=\"member-name\">hasError</span>(errorCode: string, path?: string | (string | number)[]): boolean</a>\n}\n</code-example>\n\n  <div class=\"descendants class\">\n    <h2 id=\"子类\">子类<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormGroup#子类\"><i class=\"material-icons\">link</i></a></h2>\n    \n<ul>\n  <li>\n    <code><a href=\"api/forms/FormRecord\" class=\"code-anchor\">FormRecord</a></code>\n    \n  </li>\n</ul>\n  </div>\n</section>\n\n  \n<section class=\"description\">\n  <h2 id=\"description\">说明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormGroup#description\"><i class=\"material-icons\">link</i></a></h2>\n  <p>A <code><a href=\"api/forms/FormGroup\" class=\"code-anchor\">FormGroup</a></code> aggregates the values of each child <code><a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a></code> into one object,\nwith each control name as the key.  It calculates its status by reducing the status values\nof its children. For example, if one of the controls in a group is invalid, the entire\ngroup becomes invalid.</p>\n<p><code><a href=\"api/forms/FormGroup\" class=\"code-anchor\">FormGroup</a></code> 每个子 <code><a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a></code>\n的值聚合到一个对象中，以每个控件名称作为键。它通过减少其子项的状态值来计算其状态。例如，如果组中的某个控件无效，则整个组都将变得无效。</p>\n<p><code><a href=\"api/forms/FormGroup\" class=\"code-anchor\">FormGroup</a></code> is one of the four fundamental building blocks used to define forms in Angular,\nalong with <code><a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a></code>, <code><a href=\"api/forms/FormArray\" class=\"code-anchor\">FormArray</a></code>, and <code><a href=\"api/forms/FormRecord\" class=\"code-anchor\">FormRecord</a></code>.</p>\n<p><code><a href=\"api/forms/FormGroup\" class=\"code-anchor\">FormGroup</a></code> 是用于在 Angular 中定义表单的四个基本构建块之一，与 <code><a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a></code>、<code><a href=\"api/forms/FormArray\" class=\"code-anchor\">FormArray</a></code> 和\n<code><a href=\"api/forms/FormRecord\" class=\"code-anchor\">FormRecord</a></code> 。</p>\n<p>When instantiating a <code><a href=\"api/forms/FormGroup\" class=\"code-anchor\">FormGroup</a></code>, pass in a collection of child controls as the first\nargument. The key for each child registers the name for the control.</p>\n<p>实例化 <code><a href=\"api/forms/FormGroup\" class=\"code-anchor\">FormGroup</a></code> 时，请传入子控件的集合作为第一个参数。每个子项的键都会注册控件的名称。</p>\n<p><code><a href=\"api/forms/FormGroup\" class=\"code-anchor\">FormGroup</a></code> is intended for use cases where the keys are known ahead of time.\nIf you need to dynamically add and remove controls, use <a href=\"api/forms/FormRecord\"><code>FormRecord</code></a> instead.</p>\n<p><code><a href=\"api/forms/FormGroup\" class=\"code-anchor\">FormGroup</a></code> 旨在用于提前已知键的用例。如果需要动态添加和删除控件，请改用 <a href=\"api/forms/FormRecord\"><code>FormRecord</code></a> 。</p>\n<p><code><a href=\"api/forms/FormGroup\" class=\"code-anchor\">FormGroup</a></code> accepts an optional type parameter <code>TControl</code>, which is an object type with inner\ncontrol types as values.</p>\n<p><code><a href=\"api/forms/FormGroup\" class=\"code-anchor\">FormGroup</a></code> 接受一个可选的类型参数 <code>TControl</code> ，它是一种以内部控件类型作为值的对象类型。</p>\n  <p>Further information is available in the <a href=\"api/forms/FormGroup#usage-notes\">Usage Notes...</a></p>\n</section>\n  \n<h2 id=\"constructor\">构造函数<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormGroup#constructor\"><i class=\"material-icons\">link</i></a></h2>\n<a id=\"constructor()\"></a>\n<table class=\"is-full-width method-table constructor\">\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p>Creates a new <code><a href=\"api/forms/FormGroup\" class=\"code-anchor\">FormGroup</a></code> instance.</p>\n<p>创建一个新的 <code><a href=\"api/forms/FormGroup\" class=\"code-anchor\">FormGroup</a></code> 实例。</p>\n\n        <p class=\"final-message\">\n          This class is \"final\" and should not be extended.\n          See the <a href=\"https://github.com/angular/angular-cn/tree/15.0.1/docs/PUBLIC_API.md#final-classes\">public API notes</a>.\n        </p>\n        </td>\n    </tr>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">constructor</span>(controls: TControl, validatorOrOpts?: <a href=\"api/forms/ValidatorFn\" class=\"code-anchor\">ValidatorFn</a> | <a href=\"api/forms/AbstractControlOptions\" class=\"code-anchor\">AbstractControlOptions</a> | <a href=\"api/forms/ValidatorFn\" class=\"code-anchor\">ValidatorFn</a>[], asyncValidator?: <a href=\"api/forms/AsyncValidatorFn\" class=\"code-anchor\">AsyncValidatorFn</a> | <a href=\"api/forms/AsyncValidatorFn\" class=\"code-anchor\">AsyncValidatorFn</a>[])</code-example>\n\n  <h6 class=\"no-anchor\" id=\"参数\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table constructor-overload-parameters\">\n  <tbody>\n    <tr class=\"constructor-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>controls</code>\n      </td>\n      <td class=\"param-type\"><code>TControl</code></td>\n      <td class=\"param-description\">\n        <p>A collection of child controls. The key for each child is the name\nunder which it is registered.</p>\n<p>子控件的集合。每个子项的键是它注册的名称。</p>\n\n      </td>\n    </tr>\n    <tr class=\"constructor-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>validatorOrOpts</code>\n      </td>\n      <td class=\"param-type\"><code><a href=\"api/forms/ValidatorFn\" class=\"code-anchor\">ValidatorFn</a> | <a href=\"api/forms/AbstractControlOptions\" class=\"code-anchor\">AbstractControlOptions</a> | <a href=\"api/forms/ValidatorFn\" class=\"code-anchor\">ValidatorFn</a>[]</code></td>\n      <td class=\"param-description\">\n        <p>A synchronous validator function, or an array of\nsuch functions, or an <code><a href=\"api/forms/AbstractControlOptions\" class=\"code-anchor\">AbstractControlOptions</a></code> object that contains validation functions\nand a validation trigger.</p>\n<p>同步验证器函数，或此类函数的数组，或包含验证函数和验证触发器的 <code><a href=\"api/forms/AbstractControlOptions\" class=\"code-anchor\">AbstractControlOptions</a></code> 对象。</p>\n\n        <p>可选值。默认值为 <code>undefined</code>。</p>\n\n      </td>\n    </tr>\n    <tr class=\"constructor-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>asyncValidator</code>\n      </td>\n      <td class=\"param-type\"><code><a href=\"api/forms/AsyncValidatorFn\" class=\"code-anchor\">AsyncValidatorFn</a> | <a href=\"api/forms/AsyncValidatorFn\" class=\"code-anchor\">AsyncValidatorFn</a>[]</code></td>\n      <td class=\"param-description\">\n        <p>A single async validator or array of async validator functions</p>\n<p>单个异步验证器或异步验证器函数数组</p>\n\n        <p>可选值。默认值为 <code>undefined</code>。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n</div>\n      </td>\n    </tr>\n  </tbody>\n</table>\n<section class=\"instance-properties\">\n  <a name=\"properties\"></a>\n  <h2 id=\"instance-properties\">属性<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormGroup#instance-properties\"><i class=\"material-icons\">link</i></a></h2>\n  <table class=\"is-full-width list-table property-table\">\n    <thead>\n      <tr>\n        <th>属性</th>\n        <th>说明</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr class=\"instance-properties\">\n        <td>\n          <a id=\"controls\"></a>\n          <code class=\"\"><span class=\"member-name\">controls</span>: ɵTypedOrUntyped&#x3C;TControl, TControl, {\n    [key: string]: <a href=\"api/forms/AbstractControl\" class=\"code-anchor\">AbstractControl</a>&#x3C;any>;\n}></code>\n        </td>\n        <td>\n          \n        </td>\n      </tr>\n    </tbody>\n  </table>\n</section>\n<section class=\"instance-methods\">\n  <a name=\"methods\"></a>\n  <h2 id=\"instance-methods\">方法<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormGroup#instance-methods\"><i class=\"material-icons\">link</i></a></h2>\n  <a id=\"registerControl\"></a>\n<table class=\"is-full-width method-table instance-methods\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"registercontrol\">registerControl()<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormGroup#registercontrol\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular-cn/edit/cn/packages/forms/src/model/form_group.ts?message=docs(forms)%3A%20请简述你的修改...#L288-L295\" aria-label=\"提供编辑建议\" title=\"提供编辑建议\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/angular/angular-cn/tree/15.0.1/packages/forms/src/model/form_group.ts#L288-L295\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p>Registers a control with the group's list of controls. In a strongly-typed group, the control\nmust be in the group's type (possibly as an optional key).</p>\n<p>使用组的控件列表注册控件。在强类型组中，控件必须是组的类型（可能作为可选键）。</p>\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">registerControl</span>&#x3C;K extends string &#x26; keyof TControl>(name: K, control: TControl[K]): TControl[K]</code-example>\n\n  <h6 class=\"no-anchor\" id=\"参数-1\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>name</code>\n      </td>\n      <td class=\"param-type\"><code>K</code></td>\n      <td class=\"param-description\">\n        <p>The control name to register in the collection</p>\n<p>要在集合中注册的控件名称</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>control</code>\n      </td>\n      <td class=\"param-type\"><code>TControl[K]</code></td>\n      <td class=\"param-description\">\n        <p>Provides the control for the given name</p>\n<p>提供给定名称的控件</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值\">返回值</h6>\n  <p><code>TControl[K]</code></p>\n\n</div>\n      </td>\n    </tr>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">registerControl</span>(name: string, control: <a href=\"api/forms/AbstractControl\" class=\"code-anchor\">AbstractControl</a>&#x3C;any, any>): <a href=\"api/forms/AbstractControl\" class=\"code-anchor\">AbstractControl</a>&#x3C;any></code-example>\n\n  <h6 class=\"no-anchor\" id=\"参数-2\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>name</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>control</code>\n      </td>\n      <td class=\"param-type\"><code><a href=\"api/forms/AbstractControl\" class=\"code-anchor\">AbstractControl</a>&#x3C;any, any></code></td>\n      <td class=\"param-description\">\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-1\">返回值</h6>\n  <p><code><a href=\"api/forms/AbstractControl\" class=\"code-anchor\">AbstractControl</a>&#x3C;any></code></p>\n\n</div>\n      </td>\n    </tr>\n    <tr>\n      <td class=\"description\">\n        <p>This method does not update the value or validity of the control.\nUse <a href=\"api/forms/FormGroup#addControl\">addControl</a> instead.</p>\n<p>此方法不会更新控件的值或有效性。改用 <a href=\"api/forms/FormGroup#addControl\">addControl</a> 。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <a id=\"addControl\"></a>\n<table class=\"is-full-width method-table instance-methods\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"addcontrol\">addControl()<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormGroup#addcontrol\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular-cn/edit/cn/packages/forms/src/model/form_group.ts?message=docs(forms)%3A%20请简述你的修改...#L335-L342\" aria-label=\"提供编辑建议\" title=\"提供编辑建议\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/angular/angular-cn/tree/15.0.1/packages/forms/src/model/form_group.ts#L335-L342\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p>Add a control to this group. In a strongly-typed group, the control must be in the group's type\n(possibly as an optional key).</p>\n<p>向此组添加控件。在强类型组中，控件必须是组的类型（可能作为可选键）。</p>\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">addControl</span>(name: string, control: <a href=\"api/forms/AbstractControl\" class=\"code-anchor\">AbstractControl</a>&#x3C;any, any>, options?: { emitEvent?: boolean; }): void</code-example>\n\n  <h6 class=\"no-anchor\" id=\"参数-3\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>name</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p>The control name to add to the collection</p>\n<p>要添加到集合的控件名称</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>control</code>\n      </td>\n      <td class=\"param-type\"><code><a href=\"api/forms/AbstractControl\" class=\"code-anchor\">AbstractControl</a>&#x3C;any, any></code></td>\n      <td class=\"param-description\">\n        <p>Provides the control for the given name</p>\n<p>提供给定名称的控件</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p>Specifies whether this FormGroup instance should emit events after a new\ncontrol is added.</p>\n<p>指定此 FormGroup 实例是否应在添加新控件后发出事件。</p>\n<ul>\n<li>\n<p><code>emitEvent</code>: When true or not supplied (the default), both the <code>statusChanges</code> and\n<code>valueChanges</code> observables emit events with the latest status and value when the control is\nadded. When false, no events are emitted.</p>\n<p><code>emitEvent</code> ：当 true 或未提供（默认）时，<code>statusChanges</code> 和 <code>valueChanges</code>\n可观察对象在添加控件时会发出具有最新状态和值的事件。当 false 时，不会发出事件。</p>\n</li>\n</ul>\n\n        <p>可选值。默认值为 <code>undefined</code>。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-2\">返回值</h6>\n  <p><code>void</code></p>\n\n</div>\n      </td>\n    </tr>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">addControl</span>&#x3C;K extends string &#x26; keyof TControl>(name: K, control: Required&#x3C;TControl>[K], options?: { emitEvent?: boolean; }): void</code-example>\n\n  <h6 class=\"no-anchor\" id=\"参数-4\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>name</code>\n      </td>\n      <td class=\"param-type\"><code>K</code></td>\n      <td class=\"param-description\">\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>control</code>\n      </td>\n      <td class=\"param-type\"><code>Required&#x3C;TControl>[K]</code></td>\n      <td class=\"param-description\">\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p>可选值。默认值为 <code>undefined</code>。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-3\">返回值</h6>\n  <p><code>void</code></p>\n\n</div>\n      </td>\n    </tr>\n    <tr>\n      <td class=\"description\">\n        <p>If a control with a given name already exists, it would <em>not</em> be replaced with a new one.\nIf you want to replace an existing control, use the <a href=\"api/forms/FormGroup#setControl\">setControl</a>\nmethod instead. This method also updates the value and validity of the control.</p>\n<p>如果已存在具有给定名称的控件，<em>则不</em>会将其替换为新名称。如果要替换现有控件，请改用 <a href=\"api/forms/FormGroup#setControl\">setControl</a> 方法。此方法还会更新控件的值和有效性。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <a id=\"removeControl\"></a>\n<table class=\"is-full-width method-table instance-methods\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"removecontrol\">removeControl()<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormGroup#removecontrol\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular-cn/edit/cn/packages/forms/src/model/form_group.ts?message=docs(forms)%3A%20请简述你的修改...#L350-L383\" aria-label=\"提供编辑建议\" title=\"提供编辑建议\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/angular/angular-cn/tree/15.0.1/packages/forms/src/model/form_group.ts#L350-L383\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p>Remove a control from this group. In a strongly-typed group, required controls cannot be\nremoved.</p>\n<p>从此组中删除控件。在强类型组中，无法删除所需的控件。</p>\n</td>\n    </tr>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">removeControl</span>(name: string, options?: { emitEvent?: boolean; }): void</code-example>\n\n  <h6 class=\"no-anchor\" id=\"参数-5\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>name</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p>可选值。默认值为 <code>undefined</code>。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-4\">返回值</h6>\n  <p><code>void</code></p>\n\n</div>\n      </td>\n    </tr>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">removeControl</span>&#x3C;S extends string>(name: ɵOptionalKeys&#x3C;TControl> &#x26; S, options?: { emitEvent?: boolean; }): void</code-example>\n\n  <h6 class=\"no-anchor\" id=\"参数-6\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>name</code>\n      </td>\n      <td class=\"param-type\"><code>ɵOptionalKeys&#x3C;TControl> &#x26; S</code></td>\n      <td class=\"param-description\">\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p>可选值。默认值为 <code>undefined</code>。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-5\">返回值</h6>\n  <p><code>void</code></p>\n\n</div>\n      </td>\n    </tr>\n    <tr>\n      <td class=\"description\">\n        <p>This method also updates the value and validity of the control.</p>\n<p>此方法还会更新控件的值和有效性。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <a id=\"setControl\"></a>\n<table class=\"is-full-width method-table instance-methods\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"setcontrol\">setControl()<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormGroup#setcontrol\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular-cn/edit/cn/packages/forms/src/model/form_group.ts?message=docs(forms)%3A%20请简述你的修改...#L420-L429\" aria-label=\"提供编辑建议\" title=\"提供编辑建议\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/angular/angular-cn/tree/15.0.1/packages/forms/src/model/form_group.ts#L420-L429\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p>Replace an existing control. In a strongly-typed group, the control must be in the group's type\n(possibly as an optional key).</p>\n<p>替换现有的控件。在强类型组中，控件必须是组的类型（可能作为可选键）。</p>\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">setControl</span>&#x3C;K extends string &#x26; keyof TControl>(name: K, control: TControl[K], options?: { emitEvent?: boolean; }): void</code-example>\n\n  <h6 class=\"no-anchor\" id=\"参数-7\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>name</code>\n      </td>\n      <td class=\"param-type\"><code>K</code></td>\n      <td class=\"param-description\">\n        <p>The control name to replace in the collection</p>\n<p>集合中要替换的控件名称</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>control</code>\n      </td>\n      <td class=\"param-type\"><code>TControl[K]</code></td>\n      <td class=\"param-description\">\n        <p>Provides the control for the given name</p>\n<p>提供给定名称的控件</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p>Specifies whether this FormGroup instance should emit events after an\nexisting control is replaced.</p>\n<p>指定此 FormGroup 实例是否应在替换现有控件后发出事件。</p>\n<ul>\n<li>\n<p><code>emitEvent</code>: When true or not supplied (the default), both the <code>statusChanges</code> and\n<code>valueChanges</code> observables emit events with the latest status and value when the control is\nreplaced with a new one. When false, no events are emitted.</p>\n<p><code>emitEvent</code> ：当为 true 或不提供（默认）时，当控件被替换为新控件时，<code>statusChanges</code> 和\n<code>valueChanges</code> 可观察对象都会发出具有最新状态和值的事件。当 false 时，不会发出事件。</p>\n</li>\n</ul>\n\n        <p>可选值。默认值为 <code>undefined</code>。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-6\">返回值</h6>\n  <p><code>void</code></p>\n\n</div>\n      </td>\n    </tr>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">setControl</span>(name: string, control: <a href=\"api/forms/AbstractControl\" class=\"code-anchor\">AbstractControl</a>&#x3C;any, any>, options?: { emitEvent?: boolean; }): void</code-example>\n\n  <h6 class=\"no-anchor\" id=\"参数-8\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>name</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>control</code>\n      </td>\n      <td class=\"param-type\"><code><a href=\"api/forms/AbstractControl\" class=\"code-anchor\">AbstractControl</a>&#x3C;any, any></code></td>\n      <td class=\"param-description\">\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p>可选值。默认值为 <code>undefined</code>。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-7\">返回值</h6>\n  <p><code>void</code></p>\n\n</div>\n      </td>\n    </tr>\n    <tr>\n      <td class=\"description\">\n        <p>If a control with a given name does not exist in this <code><a href=\"api/forms/FormGroup\" class=\"code-anchor\">FormGroup</a></code>, it will be added.</p>\n<p>如果此 <code><a href=\"api/forms/FormGroup\" class=\"code-anchor\">FormGroup</a></code> 中不存在具有给定名称的控件，则将添加它。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <a id=\"contains\"></a>\n<table class=\"is-full-width method-table instance-methods\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"contains\">contains()<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormGroup#contains\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular-cn/edit/cn/packages/forms/src/model/form_group.ts?message=docs(forms)%3A%20请简述你的修改...#L454-L457\" aria-label=\"提供编辑建议\" title=\"提供编辑建议\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/angular/angular-cn/tree/15.0.1/packages/forms/src/model/form_group.ts#L454-L457\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p>Check whether there is an enabled control with the given name in the group.</p>\n<p>检查组中是否存在具有给定名称的启用控件。</p>\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">contains</span>&#x3C;K extends string>(controlName: K): boolean</code-example>\n\n  <h6 class=\"no-anchor\" id=\"参数-9\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>controlName</code>\n      </td>\n      <td class=\"param-type\"><code>K</code></td>\n      <td class=\"param-description\">\n        <p>The control name to check for existence in the collection</p>\n<p>要检查集合中是否存在的控件名称</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-8\">返回值</h6>\n  <p><code>boolean</code>: false for disabled controls, true otherwise.</p>\n<p>禁用的控件为 false ，否则为 true 。</p>\n\n</div>\n      </td>\n    </tr>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">contains</span>(controlName: string): boolean</code-example>\n\n  <h6 class=\"no-anchor\" id=\"参数-10\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>controlName</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-9\">返回值</h6>\n  <p><code>boolean</code></p>\n\n</div>\n      </td>\n    </tr>\n    <tr>\n      <td class=\"description\">\n        <p>Reports false for disabled controls. If you'd like to check for existence in the group\nonly, use <a href=\"api/forms/AbstractControl#get\">get</a> instead.</p>\n<p>为禁用的控件报告 false 。如果你只想检查组中是否存在，请改用 <a href=\"api/forms/AbstractControl#get\">get</a> 。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <a id=\"setValue\"></a>\n<table class=\"is-full-width method-table instance-methods\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"setvalue\">setValue()<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormGroup#setvalue\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular-cn/edit/cn/packages/forms/src/model/form_group.ts?message=docs(forms)%3A%20请简述你的修改...#L458-L522\" aria-label=\"提供编辑建议\" title=\"提供编辑建议\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/angular/angular-cn/tree/15.0.1/packages/forms/src/model/form_group.ts#L458-L522\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p>Sets the value of the <code><a href=\"api/forms/FormGroup\" class=\"code-anchor\">FormGroup</a></code>. It accepts an object that matches\nthe structure of the group, with control names as keys.</p>\n<p>设置 <code><a href=\"api/forms/FormGroup\" class=\"code-anchor\">FormGroup</a></code> 的值。它接受一个与组结构匹配的对象，以控件名称作为键。</p>\n</td>\n    </tr>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">setValue</span>(value: ɵIsAny&#x3C;TControl, { [key: string]: any; }, { [K in keyof TControl]: ɵRawValue&#x3C;TControl[K]>; }>, options: { onlySelf?: boolean; emitEvent?: boolean; } = {}): void</code-example>\n\n  <h6 class=\"no-anchor\" id=\"参数-11\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>value</code>\n      </td>\n      <td class=\"param-type\"><code>ɵIsAny&#x3C;TControl, { [key: string]: any; }, { [K in keyof TControl]: ɵRawValue&#x3C;TControl[K]>; }></code></td>\n      <td class=\"param-description\">\n        <p>The new value for the control that matches the structure of the group.</p>\n<p>与组结构匹配的控件的新值。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p>Configuration options that determine how the control propagates changes\nand emits events after the value changes.\nThe configuration options are passed to the <a href=\"api/forms/AbstractControl#updateValueAndValidity\">updateValueAndValidity</a> method.</p>\n<p>确定控件如何传播更改并在值更改后发出事件的配置选项。配置选项会传递给 <a href=\"api/forms/AbstractControl#updateValueAndValidity\">updateValueAndValidity</a> 方法。</p>\n<ul>\n<li>\n<p><code>onlySelf</code>: When true, each change only affects this control, and not its parent. Default is\nfalse.</p>\n<p><code>onlySelf</code> ：当为 true 时，每次更改只影响此控件，而不影响其父控件。默认为 false。</p>\n</li>\n<li>\n<p><code>emitEvent</code>: When true or not supplied (the default), both the <code>statusChanges</code> and\n<code>valueChanges</code>\nobservables emit events with the latest status and value when the control value is updated.\nWhen false, no events are emitted.</p>\n<p><code>emitEvent</code> ：当为 true 或不提供（默认）时，<code>statusChanges</code> 和 <code>valueChanges</code>\n可观察对象会在更新控件值时发出具有最新状态和值的事件。当 false 时，不会发出事件。</p>\n</li>\n</ul>\n\n        <p>可选值。默认值为 <code>{}</code>。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-10\">返回值</h6>\n  <p><code>void</code></p>\n\n  <h6 class=\"no-anchor\" id=\"异常\">异常</h6>\n  <p><code>错误</code> When strict checks fail, such as setting the value of a control\nthat doesn't exist or if you exclude a value of a control that does exist.</p>\n<p>当严格检查失败时，例如设置不存在的控件的值或者排除确实存在的控件的值。</p>\n\n</div>\n      </td>\n    </tr>\n    <tr>\n      <td class=\"usage-notes\">\n        <h4 id=\"setValue-usage-notes\">使用说明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormGroup#setValue-usage-notes\"><i class=\"material-icons\">link</i></a></h4>\n        <h5 id=\"set-the-complete-value-for-the-form-group\">Set the complete value for the form group<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormGroup#set-the-complete-value-for-the-form-group\"><i class=\"material-icons\">link</i></a></h5>\n<h5 id=\"设置表单组的完整值\">设置表单组的完整值<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormGroup#设置表单组的完整值\"><i class=\"material-icons\">link</i></a></h5>\n<code-example>\nconst form = new <a href=\"api/forms/FormGroup\" class=\"code-anchor\">FormGroup</a>({\n  first: new <a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a>(),\n  last: new <a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a>()\n});\n\nconsole.log(form.value);   // {first: null, last: null}\n\nform.setValue({first: 'Nancy', last: 'Drew'});\nconsole.log(form.value);   // {first: 'Nancy', last: 'Drew'}\n</code-example>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <a id=\"patchValue\"></a>\n<table class=\"is-full-width method-table instance-methods\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"patchvalue\">patchValue()<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormGroup#patchvalue\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular-cn/edit/cn/packages/forms/src/model/form_group.ts?message=docs(forms)%3A%20请简述你的修改...#L523-L596\" aria-label=\"提供编辑建议\" title=\"提供编辑建议\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/angular/angular-cn/tree/15.0.1/packages/forms/src/model/form_group.ts#L523-L596\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p>Patches the value of the <code><a href=\"api/forms/FormGroup\" class=\"code-anchor\">FormGroup</a></code>. It accepts an object with control\nnames as keys, and does its best to match the values to the correct controls\nin the group.</p>\n<p>修补 <code><a href=\"api/forms/FormGroup\" class=\"code-anchor\">FormGroup</a></code> 的值。它接受以控件名称作为键的对象，并尽力将值与组中的正确控件进行匹配。</p>\n</td>\n    </tr>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">patchValue</span>(value: ɵIsAny&#x3C;TControl, { [key: string]: any; }, Partial&#x3C;{ [K in keyof TControl]: ɵValue&#x3C;TControl[K]>; }>>, options: { onlySelf?: boolean; emitEvent?: boolean; } = {}): void</code-example>\n\n  <h6 class=\"no-anchor\" id=\"参数-12\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>value</code>\n      </td>\n      <td class=\"param-type\"><code>ɵIsAny&#x3C;TControl, { [key: string]: any; }, Partial&#x3C;{ [K in keyof TControl]: ɵValue&#x3C;TControl[K]>; }>></code></td>\n      <td class=\"param-description\">\n        <p>The object that matches the structure of the group.</p>\n<p>与组结构匹配的对象。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p>Configuration options that determine how the control propagates changes and\nemits events after the value is patched.</p>\n<p>一些配置选项，用于确定控件在修补值后如何传播更改和发出事件。</p>\n<ul>\n<li>\n<p><code>onlySelf</code>: When true, each change only affects this control and not its parent. Default is\ntrue.</p>\n<p><code>onlySelf</code> ：当为 true 时，每次更改都只影响此控件，而不影响其父级。默认为 true。</p>\n</li>\n<li>\n<p><code>emitEvent</code>: When true or not supplied (the default), both the <code>statusChanges</code> and\n<code>valueChanges</code> observables emit events with the latest status and value when the control\nvalue is updated. When false, no events are emitted. The configuration options are passed to\nthe <a href=\"api/forms/AbstractControl#updateValueAndValidity\">updateValueAndValidity</a> method.</p>\n<p><code>emitEvent</code> ：当为 true 或不提供（默认）时，<code>statusChanges</code> 和 <code>valueChanges</code>\n可观察对象会在更新控件值时发出具有最新状态和值的事件。当 false\n时，不会发出事件。配置选项会传递给 <a href=\"api/forms/AbstractControl#updateValueAndValidity\">updateValueAndValidity</a> 方法。</p>\n</li>\n</ul>\n\n        <p>可选值。默认值为 <code>{}</code>。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-11\">返回值</h6>\n  <p><code>void</code></p>\n\n</div>\n      </td>\n    </tr>\n    <tr>\n      <td class=\"description\">\n        <p>It accepts both super-sets and sub-sets of the group without throwing an error.</p>\n<p>它接受组的超集和子集，而不会抛出错误。</p>\n\n      </td>\n    </tr>\n    <tr>\n      <td class=\"usage-notes\">\n        <h4 id=\"patchValue-usage-notes\">使用说明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormGroup#patchValue-usage-notes\"><i class=\"material-icons\">link</i></a></h4>\n        <h5 id=\"patch-the-value-for-a-form-group\">Patch the value for a form group<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormGroup#patch-the-value-for-a-form-group\"><i class=\"material-icons\">link</i></a></h5>\n<h5 id=\"修补表单组的值\">修补表单组的值<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormGroup#修补表单组的值\"><i class=\"material-icons\">link</i></a></h5>\n<code-example>\nconst form = new <a href=\"api/forms/FormGroup\" class=\"code-anchor\">FormGroup</a>({\n   first: new <a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a>(),\n   last: new <a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a>()\n});\nconsole.log(form.value);   // {first: null, last: null}\n\nform.patchValue({first: 'Nancy'});\nconsole.log(form.value);   // {first: 'Nancy', last: null}\n</code-example>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <a id=\"reset\"></a>\n<table class=\"is-full-width method-table instance-methods\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"reset\">reset()<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormGroup#reset\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular-cn/edit/cn/packages/forms/src/model/form_group.ts?message=docs(forms)%3A%20请简述你的修改...#L597-L686\" aria-label=\"提供编辑建议\" title=\"提供编辑建议\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/angular/angular-cn/tree/15.0.1/packages/forms/src/model/form_group.ts#L597-L686\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p>Resets the <code><a href=\"api/forms/FormGroup\" class=\"code-anchor\">FormGroup</a></code>, marks all descendants <code>pristine</code> and <code>untouched</code> and sets\nthe value of all descendants to their default values, or null if no defaults were provided.</p>\n<p>重置 <code><a href=\"api/forms/FormGroup\" class=\"code-anchor\">FormGroup</a></code> ，将所有后代标记为 <code>pristine</code> 和 <code>untouched</code>\n，并将所有后代的值设置为默认值，如果没有提供默认值，则为 null 。</p>\n</td>\n    </tr>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">reset</span>(value: ɵIsAny&#x3C;TControl, any, ɵIsAny&#x3C;TControl, { [key: string]: any; }, Partial&#x3C;{ [K in keyof TControl]: ɵValue&#x3C;TControl[K]>; }>>> = {} as unknown as ɵFormGroupValue&#x3C;TControl>, options: { onlySelf?: boolean; emitEvent?: boolean; } = {}): void</code-example>\n\n  <h6 class=\"no-anchor\" id=\"参数-13\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>value</code>\n      </td>\n      <td class=\"param-type\"><code>ɵIsAny&#x3C;TControl, any, ɵIsAny&#x3C;TControl, { [key: string]: any; }, Partial&#x3C;{ [K in keyof TControl]: ɵValue&#x3C;TControl[K]>; }>>></code></td>\n      <td class=\"param-description\">\n        <p>Resets the control with an initial value,\nor an object that defines the initial value and disabled state.</p>\n<p>使用初始值或定义初始值和禁用状态的对象重置控件。</p>\n\n        <p>可选值。默认值为 <code>{} as unknown as ɵFormGroupValue&#x3C;TControl></code>。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p>Configuration options that determine how the control propagates changes\nand emits events when the group is reset.</p>\n<p>配置选项，确定控件在重置组时如何传播更改和发出事件。</p>\n<ul>\n<li>\n<p><code>onlySelf</code>: When true, each change only affects this control, and not its parent. Default is\nfalse.</p>\n<p><code>onlySelf</code> ：当为 true 时，每次更改只影响此控件，而不影响其父控件。默认为 false。</p>\n</li>\n<li>\n<p><code>emitEvent</code>: When true or not supplied (the default), both the <code>statusChanges</code> and\n<code>valueChanges</code>\nobservables emit events with the latest status and value when the control is reset.\nWhen false, no events are emitted.\nThe configuration options are passed to the <a href=\"api/forms/AbstractControl#updateValueAndValidity\">updateValueAndValidity</a> method.</p>\n<p><code>emitEvent</code> ：当 true 或未提供（默认）时，<code>statusChanges</code> 和 <code>valueChanges</code>\n可观察对象会在控件重置时发出具有最新状态和值的事件。当 false\n时，不会发出事件。配置选项会传递给 <a href=\"api/forms/AbstractControl#updateValueAndValidity\">updateValueAndValidity</a> 方法。</p>\n</li>\n</ul>\n\n        <p>可选值。默认值为 <code>{}</code>。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-12\">返回值</h6>\n  <p><code>void</code></p>\n\n</div>\n      </td>\n    </tr>\n    <tr>\n      <td class=\"description\">\n        <p>You reset to a specific form state by passing in a map of states\nthat matches the structure of your form, with control names as keys. The state\nis a standalone value or a form state object with both a value and a disabled\nstatus.</p>\n<p>你通过传入与表单结构匹配的状态映射表（以控件名称作为键）来重置为特定的表单状态。状态是独立值或具有值和禁用状态的表单状态对象。</p>\n\n      </td>\n    </tr>\n    <tr>\n      <td class=\"usage-notes\">\n        <h4 id=\"reset-usage-notes\">使用说明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormGroup#reset-usage-notes\"><i class=\"material-icons\">link</i></a></h4>\n        <h5 id=\"reset-the-form-group-values\">Reset the form group values<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormGroup#reset-the-form-group-values\"><i class=\"material-icons\">link</i></a></h5>\n<h5 id=\"重置表单组的值\">重置表单组的值<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormGroup#重置表单组的值\"><i class=\"material-icons\">link</i></a></h5>\n<code-example language=\"ts\">\nconst form = new <a href=\"api/forms/FormGroup\" class=\"code-anchor\">FormGroup</a>({\n  first: new <a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a>('first name'),\n  last: new <a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a>('last name')\n});\n\nconsole.log(form.value);  // {first: 'first name', last: 'last name'}\n\nform.reset({ first: 'name', last: 'last name' });\n\nconsole.log(form.value);  // {first: 'name', last: 'last name'}\n</code-example>\n<h5 id=\"reset-the-form-group-values-and-disabled-status\">Reset the form group values and disabled status<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormGroup#reset-the-form-group-values-and-disabled-status\"><i class=\"material-icons\">link</i></a></h5>\n<h5 id=\"重置表单组的值和禁用状态\">重置表单组的值和禁用状态<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormGroup#重置表单组的值和禁用状态\"><i class=\"material-icons\">link</i></a></h5>\n<code-example>\nconst form = new <a href=\"api/forms/FormGroup\" class=\"code-anchor\">FormGroup</a>({\n  first: new <a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a>('first name'),\n  last: new <a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a>('last name')\n});\n\nform.reset({\n  first: {value: 'name', disabled: true},\n  last: 'last'\n});\n\nconsole.log(form.value);  // {last: 'last'}\nconsole.log(form.get('first').status);  // 'DISABLED'\n</code-example>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <a id=\"getRawValue\"></a>\n<table class=\"is-full-width method-table instance-methods\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"getrawvalue\">getRawValue()<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormGroup#getrawvalue\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular-cn/edit/cn/packages/forms/src/model/form_group.ts?message=docs(forms)%3A%20请简述你的修改...#L687-L703\" aria-label=\"提供编辑建议\" title=\"提供编辑建议\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/angular/angular-cn/tree/15.0.1/packages/forms/src/model/form_group.ts#L687-L703\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p>The aggregate value of the <code><a href=\"api/forms/FormGroup\" class=\"code-anchor\">FormGroup</a></code>, including any disabled controls.</p>\n<p><code><a href=\"api/forms/FormGroup\" class=\"code-anchor\">FormGroup</a></code> 的聚合值，包括任何禁用的控件。</p>\n</td>\n    </tr>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">getRawValue</span>(): ɵTypedOrUntyped&#x3C;TControl, ɵFormGroupRawValue&#x3C;TControl>, any></code-example>\n\n  <h6 class=\"no-anchor\" id=\"参数-14\">参数</h6>\n  <p>没有参数。</p>\n  <h6 class=\"no-anchor\" id=\"返回值-13\">返回值</h6>\n  <p><code>ɵTypedOrUntyped&#x3C;TControl, ɵFormGroupRawValue&#x3C;TControl>, any></code></p>\n\n</div>\n      </td>\n    </tr>\n    <tr>\n      <td class=\"description\">\n        <p>Retrieves all values regardless of disabled status.</p>\n<p>无论禁用状态如何，都检索所有值。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n</section>\n\n<section class=\"usage-notes\">\n  <h2 id=\"usage-notes\">使用说明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormGroup#usage-notes\"><i class=\"material-icons\">link</i></a></h2>\n  <h3 id=\"create-a-form-group-with-2-controls\">Create a form group with 2 controls<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormGroup#create-a-form-group-with-2-controls\"><i class=\"material-icons\">link</i></a></h3>\n<h3 id=\"创建带有-2-个控件的表单组\">创建带有 2 个控件的表单组<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormGroup#创建带有-2-个控件的表单组\"><i class=\"material-icons\">link</i></a></h3>\n<code-example>\nconst form = new <a href=\"api/forms/FormGroup\" class=\"code-anchor\">FormGroup</a>({\n  first: new <a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a>('Nancy', Validators.minLength(2)),\n  last: new <a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a>('Drew'),\n});\n\nconsole.log(form.value);   // {first: 'Nancy', last; 'Drew'}\nconsole.log(form.status);  // 'VALID'\n</code-example>\n<h3 id=\"the-type-argument-and-optional-controls\">The type argument, and optional controls<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormGroup#the-type-argument-and-optional-controls\"><i class=\"material-icons\">link</i></a></h3>\n<h3 id=\"类型参数和可选控件\">类型参数和可选控件<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormGroup#类型参数和可选控件\"><i class=\"material-icons\">link</i></a></h3>\n<p><code><a href=\"api/forms/FormGroup\" class=\"code-anchor\">FormGroup</a></code> accepts one generic argument, which is an object containing its inner controls.\nThis type will usually be inferred automatically, but you can always specify it explicitly if you\nwish.</p>\n<p><code><a href=\"api/forms/FormGroup\" class=\"code-anchor\">FormGroup</a></code>\n接受一个通用参数，该参数是一个包含其内部控件的对象。这种类型通常会被自动推断，但如果你愿意，你始终可以显式指定它。</p>\n<p>If you have controls that are optional (i.e. they can be removed, you can use the <code>?</code> in the\ntype):</p>\n<p>如果你有可选的控件（即它们可以被删除，你可以在类型中使用 <code>?</code>）：</p>\n<code-example>\nconst form = new <a href=\"api/forms/FormGroup\" class=\"code-anchor\">FormGroup</a>&#x3C;{\n  first: <a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a>&#x3C;string|null>,\n  middle?: <a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a>&#x3C;string|null>, // Middle name is optional.\n  last: <a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a>&#x3C;string|null>,\n}>({\n  first: new <a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a>('Nancy'),\n  last: new <a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a>('Drew'),\n});\n</code-example>\n<h3 id=\"create-a-form-group-with-a-group-level-validator\">Create a form group with a group-level validator<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormGroup#create-a-form-group-with-a-group-level-validator\"><i class=\"material-icons\">link</i></a></h3>\n<h3 id=\"创建使用组级验证器的表单组\">创建使用组级验证器的表单组<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormGroup#创建使用组级验证器的表单组\"><i class=\"material-icons\">link</i></a></h3>\n<p>You include group-level validators as the second arg, or group-level async\nvalidators as the third arg. These come in handy when you want to perform validation\nthat considers the value of more than one child control.</p>\n<p>你将组级验证器作为第二个 arg 包含在内，或将组级异步验证器作为第三个 arg\n包含在内。当你要执行考虑多个子控件的值的验证时，它们会派上用场。</p>\n<code-example>\nconst form = new <a href=\"api/forms/FormGroup\" class=\"code-anchor\">FormGroup</a>({\n  password: new <a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a>('', Validators.minLength(2)),\n  passwordConfirm: new <a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a>('', Validators.minLength(2)),\n}, passwordMatchValidator);\n\nfunction passwordMatchValidator(g: <a href=\"api/forms/FormGroup\" class=\"code-anchor\">FormGroup</a>) {\n   return g.get('password').value === g.get('passwordConfirm').value\n      ? null : {'mismatch': true};\n}\n</code-example>\n<p>Like <code><a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a></code> instances, you choose to pass in\nvalidators and async validators as part of an options object.</p>\n<p>与 <code><a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a></code> 实例一样，你选择作为 options 对象的一部分传入验证器和异步验证器。</p>\n<code-example>\nconst form = new <a href=\"api/forms/FormGroup\" class=\"code-anchor\">FormGroup</a>({\n  password: new <a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a>('')\n  passwordConfirm: new <a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a>('')\n}, { validators: passwordMatchValidator, asyncValidators: otherValidator });\n</code-example>\n<h3 id=\"set-the-updateon-property-for-all-controls-in-a-form-group\">Set the updateOn property for all controls in a form group<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormGroup#set-the-updateon-property-for-all-controls-in-a-form-group\"><i class=\"material-icons\">link</i></a></h3>\n<h3 id=\"为表单组中的所有控件设置-updateon-属性\">为表单组中的所有控件设置 updateOn 属性<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormGroup#为表单组中的所有控件设置-updateon-属性\"><i class=\"material-icons\">link</i></a></h3>\n<p>The options object is used to set a default value for each child\ncontrol's <code>updateOn</code> property. If you set <code>updateOn</code> to <code>'blur'</code> at the\ngroup level, all child controls default to 'blur', unless the child\nhas explicitly specified a different <code>updateOn</code> value.</p>\n<p>options 对象用于为每个子控件的 <code>updateOn</code> 属性设置默认值。如果你在组级别将 <code>updateOn</code> 设置为\n<code>'blur'</code> ，则所有子控件都默认为 'blur'，除非子项显式指定不同的 <code>updateOn</code> 值。</p>\n<code-example language=\"ts\">\nconst c = new <a href=\"api/forms/FormGroup\" class=\"code-anchor\">FormGroup</a>({\n  one: new <a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a>()\n}, { updateOn: 'blur' });\n</code-example>\n<h3 id=\"using-a-formgroup-with-optional-controls\">Using a FormGroup with optional controls<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormGroup#using-a-formgroup-with-optional-controls\"><i class=\"material-icons\">link</i></a></h3>\n<h3 id=\"使用带有可选控件的-formgroup\">使用带有可选控件的 FormGroup<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormGroup#使用带有可选控件的-formgroup\"><i class=\"material-icons\">link</i></a></h3>\n<p>It is possible to have optional controls in a FormGroup. An optional control can be removed later\nusing <code>removeControl</code>, and can be omitted when calling <code>reset</code>. Optional controls must be\ndeclared optional in the group's type.</p>\n<p>FormGroup 中可以有可选控件。可选控件可以在以后使用 <code>removeControl</code> 删除，并且在调用 <code>reset</code>\n时可以省略。可选控件必须在组的类型中声明为 optional。</p>\n<code-example language=\"ts\">\nconst c = new <a href=\"api/forms/FormGroup\" class=\"code-anchor\">FormGroup</a>&#x3C;{one?: <a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a>&#x3C;string>}>({\n  one: new <a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a>('')\n});\n</code-example>\n<p>Notice that <code>c.value.one</code> has type <code>string|null|undefined</code>. This is because calling <code>c.reset({})</code>\nwithout providing the optional key <code>one</code> will cause it to become <code>null</code>.</p>\n<p>请注意，<code>c.value.one</code> 的类型为 <code>string|null|undefined</code> 。这是因为在不提供可选键 <code>one</code>\n的情况下调用 <code>c.reset({})</code> 将导致它变为 <code>null</code> 。</p>\n\n</section></div>\n</article>\n\n<!-- links to this doc:\n - api/forms\n - api/forms/AbstractControl\n - api/forms/AbstractControlDirective\n - api/forms/AbstractFormGroupDirective\n - api/forms/Form\n - api/forms/FormArray\n - api/forms/FormArrayName\n - api/forms/FormBuilder\n - api/forms/FormControl\n - api/forms/FormControlName\n - api/forms/FormGroupDirective\n - api/forms/FormGroupName\n - api/forms/FormRecord\n - api/forms/FormsModule\n - api/forms/NgForm\n - api/forms/NgModelGroup\n - api/forms/NonNullableFormBuilder\n - api/forms/RadioControlValueAccessor\n - api/forms/ReactiveFormsModule\n - api/forms/SelectControlValueAccessor\n - api/forms/UntypedFormGroup\n - api/forms/isFormGroup\n - guide/deprecations\n - guide/dynamic-form\n - guide/form-validation\n - guide/forms\n - guide/forms-overview\n - guide/glossary\n - guide/observables-in-angular\n - guide/reactive-forms\n - guide/typed-forms\n - guide/update-to-version-14\n-->\n<!-- links from this doc:\n - /api\n - api/forms\n - api/forms/AbstractControl\n - api/forms/AbstractControl#addAsyncValidators\n - api/forms/AbstractControl#addValidators\n - api/forms/AbstractControl#asyncValidator\n - api/forms/AbstractControl#clearAsyncValidators\n - api/forms/AbstractControl#clearValidators\n - api/forms/AbstractControl#constructor()\n - api/forms/AbstractControl#dirty\n - api/forms/AbstractControl#disable\n - api/forms/AbstractControl#disabled\n - api/forms/AbstractControl#enable\n - api/forms/AbstractControl#enabled\n - api/forms/AbstractControl#errors\n - api/forms/AbstractControl#get\n - api/forms/AbstractControl#getError\n - api/forms/AbstractControl#getRawValue\n - api/forms/AbstractControl#hasAsyncValidator\n - api/forms/AbstractControl#hasError\n - api/forms/AbstractControl#hasValidator\n - api/forms/AbstractControl#invalid\n - api/forms/AbstractControl#markAllAsTouched\n - api/forms/AbstractControl#markAsDirty\n - api/forms/AbstractControl#markAsPending\n - api/forms/AbstractControl#markAsPristine\n - api/forms/AbstractControl#markAsTouched\n - api/forms/AbstractControl#markAsUntouched\n - api/forms/AbstractControl#parent\n - api/forms/AbstractControl#patchValue\n - api/forms/AbstractControl#pending\n - api/forms/AbstractControl#pristine\n - api/forms/AbstractControl#removeAsyncValidators\n - api/forms/AbstractControl#removeValidators\n - api/forms/AbstractControl#reset\n - api/forms/AbstractControl#root\n - api/forms/AbstractControl#setAsyncValidators\n - api/forms/AbstractControl#setErrors\n - api/forms/AbstractControl#setParent\n - api/forms/AbstractControl#setValidators\n - api/forms/AbstractControl#setValue\n - api/forms/AbstractControl#status\n - api/forms/AbstractControl#statusChanges\n - api/forms/AbstractControl#touched\n - api/forms/AbstractControl#untouched\n - api/forms/AbstractControl#updateOn\n - api/forms/AbstractControl#updateValueAndValidity\n - api/forms/AbstractControl#valid\n - api/forms/AbstractControl#validator\n - api/forms/AbstractControl#value\n - api/forms/AbstractControl#valueChanges\n - api/forms/AbstractControlOptions\n - api/forms/AsyncValidatorFn\n - api/forms/FormArray\n - api/forms/FormControl\n - api/forms/FormGroup#addControl\n - api/forms/FormGroup#addcontrol\n - api/forms/FormGroup#constructor\n - api/forms/FormGroup#constructor()\n - api/forms/FormGroup#contains\n - api/forms/FormGroup#controls\n - api/forms/FormGroup#create-a-form-group-with-2-controls\n - api/forms/FormGroup#create-a-form-group-with-a-group-level-validator\n - api/forms/FormGroup#description\n - api/forms/FormGroup#formgroup\n - api/forms/FormGroup#getRawValue\n - api/forms/FormGroup#getrawvalue\n - api/forms/FormGroup#instance-methods\n - api/forms/FormGroup#instance-properties\n - api/forms/FormGroup#patch-the-value-for-a-form-group\n - api/forms/FormGroup#patchValue\n - api/forms/FormGroup#patchValue-usage-notes\n - api/forms/FormGroup#patchvalue\n - api/forms/FormGroup#registerControl\n - api/forms/FormGroup#registercontrol\n - api/forms/FormGroup#removeControl\n - api/forms/FormGroup#removecontrol\n - api/forms/FormGroup#reset\n - api/forms/FormGroup#reset-the-form-group-values\n - api/forms/FormGroup#reset-the-form-group-values-and-disabled-status\n - api/forms/FormGroup#reset-usage-notes\n - api/forms/FormGroup#set-the-complete-value-for-the-form-group\n - api/forms/FormGroup#set-the-updateon-property-for-all-controls-in-a-form-group\n - api/forms/FormGroup#setControl\n - api/forms/FormGroup#setValue\n - api/forms/FormGroup#setValue-usage-notes\n - api/forms/FormGroup#setcontrol\n - api/forms/FormGroup#setvalue\n - api/forms/FormGroup#the-type-argument-and-optional-controls\n - api/forms/FormGroup#usage-notes\n - api/forms/FormGroup#using-a-formgroup-with-optional-controls\n - api/forms/FormGroup#为表单组中的所有控件设置-updateon-属性\n - api/forms/FormGroup#使用带有可选控件的-formgroup\n - api/forms/FormGroup#修补表单组的值\n - api/forms/FormGroup#创建使用组级验证器的表单组\n - api/forms/FormGroup#创建带有-2-个控件的表单组\n - api/forms/FormGroup#子类\n - api/forms/FormGroup#类型参数和可选控件\n - api/forms/FormGroup#设置表单组的完整值\n - api/forms/FormGroup#重置表单组的值\n - api/forms/FormGroup#重置表单组的值和禁用状态\n - api/forms/FormRecord\n - api/forms/ValidatorFn\n - https://github.com/angular/angular-cn/edit/cn/packages/forms/src/model/form_group.ts?message=docs(forms)%3A%20请简述你的修改...#L288-L295\n - https://github.com/angular/angular-cn/edit/cn/packages/forms/src/model/form_group.ts?message=docs(forms)%3A%20请简述你的修改...#L335-L342\n - https://github.com/angular/angular-cn/edit/cn/packages/forms/src/model/form_group.ts?message=docs(forms)%3A%20请简述你的修改...#L350-L383\n - https://github.com/angular/angular-cn/edit/cn/packages/forms/src/model/form_group.ts?message=docs(forms)%3A%20请简述你的修改...#L420-L429\n - https://github.com/angular/angular-cn/edit/cn/packages/forms/src/model/form_group.ts?message=docs(forms)%3A%20请简述你的修改...#L454-L457\n - https://github.com/angular/angular-cn/edit/cn/packages/forms/src/model/form_group.ts?message=docs(forms)%3A%20请简述你的修改...#L458-L522\n - https://github.com/angular/angular-cn/edit/cn/packages/forms/src/model/form_group.ts?message=docs(forms)%3A%20请简述你的修改...#L523-L596\n - https://github.com/angular/angular-cn/edit/cn/packages/forms/src/model/form_group.ts?message=docs(forms)%3A%20请简述你的修改...#L597-L686\n - https://github.com/angular/angular-cn/edit/cn/packages/forms/src/model/form_group.ts?message=docs(forms)%3A%20请简述你的修改...#L64-L785\n - https://github.com/angular/angular-cn/edit/cn/packages/forms/src/model/form_group.ts?message=docs(forms)%3A%20请简述你的修改...#L687-L703\n - https://github.com/angular/angular-cn/tree/15.0.1/docs/PUBLIC_API.md#final-classes\n - https://github.com/angular/angular-cn/tree/15.0.1/packages/forms/src/model/form_group.ts#L288-L295\n - https://github.com/angular/angular-cn/tree/15.0.1/packages/forms/src/model/form_group.ts#L335-L342\n - https://github.com/angular/angular-cn/tree/15.0.1/packages/forms/src/model/form_group.ts#L350-L383\n - https://github.com/angular/angular-cn/tree/15.0.1/packages/forms/src/model/form_group.ts#L420-L429\n - https://github.com/angular/angular-cn/tree/15.0.1/packages/forms/src/model/form_group.ts#L454-L457\n - https://github.com/angular/angular-cn/tree/15.0.1/packages/forms/src/model/form_group.ts#L458-L522\n - https://github.com/angular/angular-cn/tree/15.0.1/packages/forms/src/model/form_group.ts#L523-L596\n - https://github.com/angular/angular-cn/tree/15.0.1/packages/forms/src/model/form_group.ts#L597-L686\n - https://github.com/angular/angular-cn/tree/15.0.1/packages/forms/src/model/form_group.ts#L64-L785\n - https://github.com/angular/angular-cn/tree/15.0.1/packages/forms/src/model/form_group.ts#L687-L703\n-->"
}