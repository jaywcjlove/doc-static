{
  "id": "api/forms/FormBuilder",
  "title": "FormBuilder",
  "contents": "<article>\n  <div class=\"breadcrumb-container\">\n    <div class=\"breadcrumb\">\n      <script type=\"application/ld+json\">\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          \"itemListElement\": [\n            { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.cn//api\", \"name\": \"API\" } },\n            { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.cn/api/forms\", \"name\": \"@angular/forms\" } },\n            { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.cn/api/forms/FormBuilder\", \"name\": \"FormBuilder\" } }\n          ]\n        }\n      </script>\n        <a href=\"/api\">API</a> > <a href=\"api/forms\">@angular/forms</a>\n    </div>\n    <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular-cn/edit/cn/packages/forms/src/form_builder.ts?message=docs(forms)%3A%20请简述你的修改...#L111-L491\" aria-label=\"提供编辑建议\" title=\"提供编辑建议\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/angular/angular-cn/tree/15.0.1/packages/forms/src/form_builder.ts#L111-L491\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n  </div>\n  <header class=\"api-header\">\n    <h1 id=\"formbuilder\">FormBuilder<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormBuilder#formbuilder\"><i class=\"material-icons\">link</i></a></h1>\n    <label class=\"api-type-label class\">class</label>\n    <label class=\"github-links api-status-label final\" title=\"This class should not be extended.\">\n      <a href=\"https://github.com/angular/angular-cn/tree/15.0.1/docs/PUBLIC_API.md#final-classes\">final</a>\n    </label>\n  </header>\n  <aio-toc class=\"embedded\"></aio-toc>\n\n  <div class=\"api-body\">\n  <section class=\"short-description\">\n    <p>Creates an <code><a href=\"api/forms/AbstractControl\" class=\"code-anchor\">AbstractControl</a></code> from a user-specified configuration.</p>\n<p>使用用户指定的配置创建 <code><a href=\"api/forms/AbstractControl\" class=\"code-anchor\">AbstractControl</a></code>。</p>\n\n    <p no-translate=\"\"><a href=\"api/forms/FormBuilder#description\">查看\"说明\"...</a></p>\n  </section><section class=\"class-overview\">\n<code-example language=\"ts\" hidecopy=\"true\">\nclass <a href=\"api/forms/FormBuilder\" class=\"code-anchor\">FormBuilder</a> {\n  <a class=\"code-anchor\" href=\"api/forms/FormBuilder#nonNullable\"><span class=\"member-name\">nonNullable</span>: NonNullableFormBuilder</a>\n  <a class=\"code-anchor\" href=\"api/forms/FormBuilder#group\"><span class=\"member-name\">group</span>(controls: { [key: string]: any; }, options: AbstractControlOptions | { [key: string]: any; } = null): FormGroup</a>\n  <a class=\"code-anchor\" href=\"api/forms/FormBuilder#record\"><span class=\"member-name\">record</span>&#x3C;T>(controls: { [key: string]: T; }, options: AbstractControlOptions = null): FormRecord&#x3C;ɵElement&#x3C;T, null>></a>\n  <a class=\"code-anchor\" href=\"api/forms/FormBuilder#control\"><span class=\"member-name\">control</span>&#x3C;T>(formState: T | FormControlState&#x3C;T>, validatorOrOpts?: ValidatorFn | FormControlOptions | ValidatorFn[], asyncValidator?: AsyncValidatorFn | AsyncValidatorFn[]): FormControl</a>\n  <a class=\"code-anchor\" href=\"api/forms/FormBuilder#array\"><span class=\"member-name\">array</span>&#x3C;T>(controls: T[], validatorOrOpts?: ValidatorFn | AbstractControlOptions | ValidatorFn[], asyncValidator?: AsyncValidatorFn | AsyncValidatorFn[]): FormArray&#x3C;ɵElement&#x3C;T, null>></a>\n}\n</code-example>\n\n  <div class=\"descendants class\">\n    <h2 id=\"子类\">子类<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormBuilder#子类\"><i class=\"material-icons\">link</i></a></h2>\n    \n<ul>\n  <li>\n    <code><a href=\"api/forms/UntypedFormBuilder\" class=\"code-anchor\">UntypedFormBuilder</a></code>\n    \n  </li>\n</ul>\n  </div>\n</section>\n\n<section class=\"see-also\">\n  <h2 id=\"see-also\">参见<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormBuilder#see-also\"><i class=\"material-icons\">link</i></a></h2>\n  <ul>\n    <li><p><a href=\"guide/reactive-forms\">Reactive Forms Guide</a></p>\n<p><a href=\"/guide/reactive-forms\">响应式表单</a></p></li>\n  </ul>\n</section>\n<h2 id=\"提供于\">提供于<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormBuilder#提供于\"><i class=\"material-icons\">link</i></a></h2>\n<ul>\n  <li>\n    <a href=\"api/forms/ReactiveFormsModule\">\n      <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box\">ReactiveFormsModule</code-example>\n    </a>\n  </li>\n</ul>\n  \n<section class=\"description\">\n  <h2 id=\"description\">说明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormBuilder#description\"><i class=\"material-icons\">link</i></a></h2>\n  <p>The <code><a href=\"api/forms/FormBuilder\" class=\"code-anchor\">FormBuilder</a></code> provides syntactic sugar that shortens creating instances of a\n<code><a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a></code>, <code><a href=\"api/forms/FormGroup\" class=\"code-anchor\">FormGroup</a></code>, or <code><a href=\"api/forms/FormArray\" class=\"code-anchor\">FormArray</a></code>. It reduces the amount of boilerplate needed to\nbuild complex forms.</p>\n<p><code><a href=\"api/forms/FormBuilder\" class=\"code-anchor\">FormBuilder</a></code> 提供了一个语法糖，以简化 <code><a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a></code>、<code><a href=\"api/forms/FormGroup\" class=\"code-anchor\">FormGroup</a></code> 或 <code><a href=\"api/forms/FormArray\" class=\"code-anchor\">FormArray</a></code> 实例的创建过程。\n它会减少构建复杂表单时所需的样板代码的数量。</p>\n</section>\n  \n<section class=\"instance-properties\">\n  <a name=\"properties\"></a>\n  <h2 id=\"instance-properties\">属性<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormBuilder#instance-properties\"><i class=\"material-icons\">link</i></a></h2>\n  <table class=\"is-full-width list-table property-table\">\n    <thead>\n      <tr>\n        <th>属性</th>\n        <th>说明</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr class=\"instance-properties\">\n        <td>\n          <a id=\"nonNullable\"></a>\n          <code class=\"\"><span class=\"member-name\">nonNullable</span>: <a href=\"api/forms/NonNullableFormBuilder\" class=\"code-anchor\">NonNullableFormBuilder</a></code>\n        </td>\n        <td>\n          <span class=\"read-only-property\">只读</span>\n          <div no-translate=\"\"><p>Returns a FormBuilder in which automatically constructed</p>\n<p>返回一个 FormBuilder ，在其中自动构造</p></div>\n          \n          <p>参见:</p>\n          <ul>\n            <li><p>FormControl} elements\nhave <code>{nonNullable: true}</code> and are non-nullable.</p>\n<p>FormControl} 元素具有 <code>{nonNullable: true}</code> 并且不可为 null。</p>\n<p><strong>Constructing non-nullable controls</strong></p>\n<p><strong>构建不可为空的控件</strong></p>\n<p>When constructing a control, it will be non-nullable, and will reset to its initial value.</p>\n<p>构造控件时，它将是不可为空的，并将重置为其初始值。</p>\n<code-example language=\"ts\">\nlet nnfb = new <a href=\"api/forms/FormBuilder\" class=\"code-anchor\">FormBuilder</a>().nonNullable;\nlet name = nnfb.control('Alex'); // <a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a>&#x3C;string>\nname.reset();\nconsole.log(name); // 'Alex'\n</code-example>\n<p><strong>Constructing non-nullable groups or arrays</strong></p>\n<p><strong>构造不可为空的组或数组</strong></p>\n<p>When constructing a group or array, all automatically created inner controls will be\nnon-nullable, and will reset to their initial values.</p>\n<p>构造组或数组时，所有自动创建的内部控件都将不可为空，并将重置为它们的初始值。</p>\n<code-example language=\"ts\">\nlet nnfb = new <a href=\"api/forms/FormBuilder\" class=\"code-anchor\">FormBuilder</a>().nonNullable;\nlet name = nnfb.group({who: 'Alex'}); // <a href=\"api/forms/FormGroup\" class=\"code-anchor\">FormGroup</a>&#x3C;{who: <a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a>&#x3C;string>}>\nname.reset();\nconsole.log(name); // {who: 'Alex'}\n</code-example>\n<p><strong>Constructing <em>nullable</em> fields on groups or arrays</strong></p>\n<p><strong>在组或数组上构造可以为<em>空</em>的字段</strong></p>\n<p>It is still possible to have a nullable field. In particular, any <code><a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a></code> which is\n<em>already</em> constructed will not be altered. For example:</p>\n<p>仍然可以有一个可以为 null 的字段。特别是，任何<em>已经</em>构建的 <code><a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a></code> 都不会被更改。例如：</p>\n<code-example language=\"ts\">\nlet nnfb = new <a href=\"api/forms/FormBuilder\" class=\"code-anchor\">FormBuilder</a>().nonNullable;\n// <a href=\"api/forms/FormGroup\" class=\"code-anchor\">FormGroup</a>&#x3C;{who: <a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a>&#x3C;string|null>}>\nlet name = nnfb.group({who: new <a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a>('Alex')});\nname.reset(); console.log(name); // {who: null}\n</code-example>\n<p>Because the inner control is constructed explicitly by the caller, the builder has\nno control over how it is created, and cannot exclude the <code>null</code>.</p>\n<p>因为内部控件是由调用者显式构造的，所以构建器无法控制它的创建方式，并且不能排除 <code>null</code> 。</p>\n</li>\n          </ul>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</section>\n<section class=\"instance-methods\">\n  <a name=\"methods\"></a>\n  <h2 id=\"instance-methods\">方法<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormBuilder#instance-methods\"><i class=\"material-icons\">link</i></a></h2>\n  <a id=\"group\"></a>\n<table class=\"is-full-width method-table instance-methods\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"group\">group()<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormBuilder#group\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular-cn/edit/cn/packages/forms/src/form_builder.ts?message=docs(forms)%3A%20请简述你的修改...#L286-L301\" aria-label=\"提供编辑建议\" title=\"提供编辑建议\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/angular/angular-cn/tree/15.0.1/packages/forms/src/form_builder.ts#L286-L301\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p>Constructs a new <code><a href=\"api/forms/FormGroup\" class=\"code-anchor\">FormGroup</a></code> instance. Accepts a single generic argument, which is an object\ncontaining all the keys and corresponding inner control types.</p>\n<p>构造一个新的 <code><a href=\"api/forms/FormGroup\" class=\"code-anchor\">FormGroup</a></code> 实例。接受单个泛型参数，该参数是包含所有键和对应的内部控件类型的对象。</p>\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">group</span>&#x3C;T extends {}>(controls: T, options?: <a href=\"api/forms/AbstractControlOptions\" class=\"code-anchor\">AbstractControlOptions</a>): <a href=\"api/forms/FormGroup\" class=\"code-anchor\">FormGroup</a>&#x3C;{\n    [K in keyof T]: ɵElement&#x3C;T[K], null>;\n}></code-example>\n\n  <h6 class=\"no-anchor\" id=\"参数\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>controls</code>\n      </td>\n      <td class=\"param-type\"><code>T</code></td>\n      <td class=\"param-description\">\n        <p>A collection of child controls. The key for each child is the name\nunder which it is registered.</p>\n<p>一组子控件。每个 key 就是注册进来的控件的名字。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code><a href=\"api/forms/AbstractControlOptions\" class=\"code-anchor\">AbstractControlOptions</a></code></td>\n      <td class=\"param-description\">\n        <p>Configuration options object for the <code><a href=\"api/forms/FormGroup\" class=\"code-anchor\">FormGroup</a></code>. The object should have the\n<code><a href=\"api/forms/AbstractControlOptions\" class=\"code-anchor\">AbstractControlOptions</a></code> type and might contain the following fields:</p>\n<p><code><a href=\"api/forms/FormGroup\" class=\"code-anchor\">FormGroup</a></code> 的配置选项对象。该对象应该具有 <code><a href=\"api/forms/AbstractControlOptions\" class=\"code-anchor\">AbstractControlOptions</a></code> 类型，并可能包含以下字段：</p>\n<ul>\n<li>\n<p><code>validators</code>: A synchronous validator function, or an array of validator functions.</p>\n<p><code>validators</code> ：同步验证器函数或验证器函数数组。</p>\n</li>\n<li>\n<p><code>asyncValidators</code>: A single async validator or array of async validator functions.</p>\n<p><code>asyncValidators</code> ：单个异步验证器或异步验证器函数数组。</p>\n</li>\n<li>\n<p><code>updateOn</code>: The event upon which the control should be updated (options: 'change' | 'blur'\n| submit').</p>\n<p><code>updateOn</code> ：应该更新控件的事件（选项： 'change' | 'blur' | submit'）。</p>\n</li>\n</ul>\n\n        <p>可选值。默认值为 <code>undefined</code>。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值\">返回值</h6>\n  <p><code><a href=\"api/forms/FormGroup\" class=\"code-anchor\">FormGroup</a>&#x3C;{     [K in keyof T]: ɵElement&#x3C;T[K], null>; }></code></p>\n\n</div>\n      </td>\n    </tr>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p>Constructs a new <code><a href=\"api/forms/FormGroup\" class=\"code-anchor\">FormGroup</a></code> instance.</p>\n<p>构造一个新的 <code><a href=\"api/forms/FormGroup\" class=\"code-anchor\">FormGroup</a></code> 实例。</p>\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading deprecated-api-item\"><span class=\"member-name\">group</span>(controls: { [key: string]: any; }, options: { [key: string]: any; }): <a href=\"api/forms/FormGroup\" class=\"code-anchor\">FormGroup</a></code-example>\n  <div class=\"deprecated\">\n    <p><strong>Deprecated</strong> This API is not typesafe and can result in issues with Closure Compiler renaming.\nUse the <code><a href=\"api/forms/FormBuilder\" class=\"code-anchor\">FormBuilder</a>#group</code> overload with <code><a href=\"api/forms/AbstractControlOptions\" class=\"code-anchor\">AbstractControlOptions</a></code> instead.\nNote that <code><a href=\"api/forms/AbstractControlOptions\" class=\"code-anchor\">AbstractControlOptions</a></code> expects <code>validators</code> and <code>asyncValidators</code> to be valid\nvalidators. If you have custom validators, make sure their validation function parameter is\n<code><a href=\"api/forms/AbstractControl\" class=\"code-anchor\">AbstractControl</a></code> and not a sub-class, such as <code><a href=\"api/forms/FormGroup\" class=\"code-anchor\">FormGroup</a></code>. These functions will be called\nwith an object of type <code><a href=\"api/forms/AbstractControl\" class=\"code-anchor\">AbstractControl</a></code> and that cannot be automatically downcast to a\nsubclass, so TypeScript sees this as an error. For example, change the <code>(group: <a href=\"api/forms/FormGroup\" class=\"code-anchor\">FormGroup</a>) => <a href=\"api/forms/ValidationErrors\" class=\"code-anchor\">ValidationErrors</a>|null</code> signature to be <code>(group: <a href=\"api/forms/AbstractControl\" class=\"code-anchor\">AbstractControl</a>) => <a href=\"api/forms/ValidationErrors\" class=\"code-anchor\">ValidationErrors</a>|null</code>.</p>\n<p>此 api 不是类型安全的，可能会导致 Closure Compiler 重命名时出现问题。应该改用\n<code><a href=\"api/forms/FormBuilder\" class=\"code-anchor\">FormBuilder</a>#group</code> 的接受 <code><a href=\"api/forms/AbstractControlOptions\" class=\"code-anchor\">AbstractControlOptions</a></code> 的重载形式。</p>\n\n  </div>\n\n  <h6 class=\"no-anchor\" id=\"参数-1\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>controls</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p>A record of child controls. The key for each child is the name\nunder which the control is registered.</p>\n<p>子控件的集合。每个子控件的键就是其注册名称。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p>Configuration options object for the <code><a href=\"api/forms/FormGroup\" class=\"code-anchor\">FormGroup</a></code>. The legacy configuration\nobject consists of:</p>\n<p><code><a href=\"api/forms/FormGroup\" class=\"code-anchor\">FormGroup</a></code> 配置选项对象。旧的配置对象包括：</p>\n<ul>\n<li>\n<p><code>validator</code>: A synchronous validator function, or an array of validator functions.</p>\n<p><code>validator</code>：一个同步验证器函数或其数组。</p>\n</li>\n<li>\n<p><code>asyncValidator</code>: A single async validator or array of async validator functions\nNote: the legacy format is deprecated and might be removed in one of the next major versions\nof Angular.</p>\n<p><code>asyncValidator</code> ：单个异步验证器或异步验证器函数数组。注意：不推荐使用旧格式，并且会在\nAngular 的后面的某个主要版本中将其删除。</p>\n</li>\n</ul>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-1\">返回值</h6>\n  <p><code><a href=\"api/forms/FormGroup\" class=\"code-anchor\">FormGroup</a></code></p>\n\n</div>\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <a id=\"record\"></a>\n<table class=\"is-full-width method-table instance-methods\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"record\">record()<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormBuilder#record\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular-cn/edit/cn/packages/forms/src/form_builder.ts?message=docs(forms)%3A%20请简述你的修改...#L302-L340\" aria-label=\"提供编辑建议\" title=\"提供编辑建议\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/angular/angular-cn/tree/15.0.1/packages/forms/src/form_builder.ts#L302-L340\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p>Constructs a new <code><a href=\"api/forms/FormRecord\" class=\"code-anchor\">FormRecord</a></code> instance. Accepts a single generic argument, which is an object\ncontaining all the keys and corresponding inner control types.</p>\n<p>构造一个新的 <code><a href=\"api/forms/FormRecord\" class=\"code-anchor\">FormRecord</a></code> 实例。接受单个泛型参数，该参数是包含所有键和对应的内部控件类型的对象。</p>\n</td>\n    </tr>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">record</span>&#x3C;T>(controls: { [key: string]: T; }, options: <a href=\"api/forms/AbstractControlOptions\" class=\"code-anchor\">AbstractControlOptions</a> = null): <a href=\"api/forms/FormRecord\" class=\"code-anchor\">FormRecord</a>&#x3C;ɵElement&#x3C;T, null>></code-example>\n\n  <h6 class=\"no-anchor\" id=\"参数-2\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>controls</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p>A collection of child controls. The key for each child is the name\nunder which it is registered.</p>\n<p>子控件的集合。每个子项的键是它注册的名称。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code><a href=\"api/forms/AbstractControlOptions\" class=\"code-anchor\">AbstractControlOptions</a></code></td>\n      <td class=\"param-description\">\n        <p>Configuration options object for the <code><a href=\"api/forms/FormRecord\" class=\"code-anchor\">FormRecord</a></code>. The object should have the\n<code><a href=\"api/forms/AbstractControlOptions\" class=\"code-anchor\">AbstractControlOptions</a></code> type and might contain the following fields:</p>\n<p><code><a href=\"api/forms/FormRecord\" class=\"code-anchor\">FormRecord</a></code> 的配置选项对象。该对象应该具有 <code><a href=\"api/forms/AbstractControlOptions\" class=\"code-anchor\">AbstractControlOptions</a></code> 类型，并可能包含以下字段：</p>\n<ul>\n<li>\n<p><code>validators</code>: A synchronous validator function, or an array of validator functions.</p>\n<p><code>validators</code> ：同步验证器函数或验证器函数数组。</p>\n</li>\n<li>\n<p><code>asyncValidators</code>: A single async validator or array of async validator functions.</p>\n<p><code>asyncValidators</code> ：单个异步验证器或异步验证器函数数组。</p>\n</li>\n<li>\n<p><code>updateOn</code>: The event upon which the control should be updated (options: 'change' | 'blur'\n| submit').</p>\n<p><code>updateOn</code> ：应该更新控件的事件（选项： 'change' | 'blur' | submit'）。</p>\n</li>\n</ul>\n\n        <p>可选值。默认值为 <code>null</code>。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-2\">返回值</h6>\n  <p><code><a href=\"api/forms/FormRecord\" class=\"code-anchor\">FormRecord</a>&#x3C;ɵElement&#x3C;T, null>></code></p>\n\n</div>\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <a id=\"control\"></a>\n<table class=\"is-full-width method-table instance-methods\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"control\">control()<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormBuilder#control\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular-cn/edit/cn/packages/forms/src/form_builder.ts?message=docs(forms)%3A%20请简述你的修改...#L373-L430\" aria-label=\"提供编辑建议\" title=\"提供编辑建议\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/angular/angular-cn/tree/15.0.1/packages/forms/src/form_builder.ts#L373-L430\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p>Constructs a new <code><a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a></code> with the given state, validators and options. Sets\n<code>{nonNullable: true}</code> in the options to get a non-nullable control. Otherwise, the\ncontrol will be nullable. Accepts a single generic argument, which is the type  of the\ncontrol's value.</p>\n<p>构建一个新的 <code><a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a></code> 实例。</p>\n</td>\n    </tr>\n    <tr>\n      <td>\n        <details class=\"overloads\">\n          <summary>\n            <h4 class=\"no-anchor\" id=\"4-个重载形式\">4 个重载形式...</h4>\n            <span class=\"actions\">\n              <span class=\"action-expand\">显示所有</span>\n              <span class=\"action-collapse\">隐藏所有</span>\n              <i class=\"material-icons expand\">expand_more</i>\n            </span>\n          </summary>\n          <div class=\"details-content\">\n            <h5 class=\"no-anchor\" id=\"overload-1\">Overload #1</h5>\n            <div class=\"overload-info\">\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading deprecated-api-item\"><span class=\"member-name\">control</span>&#x3C;T>(formState: T | <a href=\"api/forms/FormControlState\" class=\"code-anchor\">FormControlState</a>&#x3C;T>, opts: <a href=\"api/forms/FormControlOptions\" class=\"code-anchor\">FormControlOptions</a> &#x26; { initialValueIsDefault: true; }): <a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a>&#x3C;T></code-example>\n  <div class=\"deprecated\">\n    <p><strong>Deprecated</strong> Use <code>nonNullable</code> instead.</p>\n<p>改用 <code>nonNullable</code> 。</p>\n\n  </div>\n\n  <h6 class=\"no-anchor\" id=\"参数-3\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>formState</code>\n      </td>\n      <td class=\"param-type\"><code>T | <a href=\"api/forms/FormControlState\" class=\"code-anchor\">FormControlState</a>&#x3C;T></code></td>\n      <td class=\"param-description\">\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>opts</code>\n      </td>\n      <td class=\"param-type\"><code><a href=\"api/forms/FormControlOptions\" class=\"code-anchor\">FormControlOptions</a> &#x26; { initialValueIsDefault: true; }</code></td>\n      <td class=\"param-description\">\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-3\">返回值</h6>\n  <p><code><a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a>&#x3C;T></code></p>\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"overload-2\">Overload #2</h5>\n            <div class=\"overload-info\">\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">control</span>&#x3C;T>(formState: T | <a href=\"api/forms/FormControlState\" class=\"code-anchor\">FormControlState</a>&#x3C;T>, opts: <a href=\"api/forms/FormControlOptions\" class=\"code-anchor\">FormControlOptions</a> &#x26; { nonNullable: true; }): <a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a>&#x3C;T></code-example>\n\n  <h6 class=\"no-anchor\" id=\"参数-4\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>formState</code>\n      </td>\n      <td class=\"param-type\"><code>T | <a href=\"api/forms/FormControlState\" class=\"code-anchor\">FormControlState</a>&#x3C;T></code></td>\n      <td class=\"param-description\">\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>opts</code>\n      </td>\n      <td class=\"param-type\"><code><a href=\"api/forms/FormControlOptions\" class=\"code-anchor\">FormControlOptions</a> &#x26; { nonNullable: true; }</code></td>\n      <td class=\"param-description\">\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-4\">返回值</h6>\n  <p><code><a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a>&#x3C;T></code></p>\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"overload-3\">Overload #3</h5>\n            <div class=\"overload-info\">\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading deprecated-api-item\"><span class=\"member-name\">control</span>&#x3C;T>(formState: T | <a href=\"api/forms/FormControlState\" class=\"code-anchor\">FormControlState</a>&#x3C;T>, opts: <a href=\"api/forms/FormControlOptions\" class=\"code-anchor\">FormControlOptions</a>, asyncValidator: <a href=\"api/forms/AsyncValidatorFn\" class=\"code-anchor\">AsyncValidatorFn</a> | <a href=\"api/forms/AsyncValidatorFn\" class=\"code-anchor\">AsyncValidatorFn</a>[]): <a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a>&#x3C;T | null></code-example>\n  <div class=\"deprecated\">\n    <p><strong>Deprecated</strong> When passing an <code>options</code> argument, the <code>asyncValidator</code> argument has no effect.</p>\n<p>传递 <code>options</code> 参数时，<code>asyncValidator</code> 参数无效。</p>\n\n  </div>\n\n  <h6 class=\"no-anchor\" id=\"参数-5\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>formState</code>\n      </td>\n      <td class=\"param-type\"><code>T | <a href=\"api/forms/FormControlState\" class=\"code-anchor\">FormControlState</a>&#x3C;T></code></td>\n      <td class=\"param-description\">\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>opts</code>\n      </td>\n      <td class=\"param-type\"><code><a href=\"api/forms/FormControlOptions\" class=\"code-anchor\">FormControlOptions</a></code></td>\n      <td class=\"param-description\">\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>asyncValidator</code>\n      </td>\n      <td class=\"param-type\"><code><a href=\"api/forms/AsyncValidatorFn\" class=\"code-anchor\">AsyncValidatorFn</a> | <a href=\"api/forms/AsyncValidatorFn\" class=\"code-anchor\">AsyncValidatorFn</a>[]</code></td>\n      <td class=\"param-description\">\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-5\">返回值</h6>\n  <p><code><a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a>&#x3C;T | null></code></p>\n\n</div>\n            <hr class=\"hr-margin\">\n            <h5 class=\"no-anchor\" id=\"overload-4\">Overload #4</h5>\n            <div class=\"overload-info\">\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">control</span>&#x3C;T>(formState: T | <a href=\"api/forms/FormControlState\" class=\"code-anchor\">FormControlState</a>&#x3C;T>, validatorOrOpts?: <a href=\"api/forms/ValidatorFn\" class=\"code-anchor\">ValidatorFn</a> | <a href=\"api/forms/FormControlOptions\" class=\"code-anchor\">FormControlOptions</a> | <a href=\"api/forms/ValidatorFn\" class=\"code-anchor\">ValidatorFn</a>[], asyncValidator?: <a href=\"api/forms/AsyncValidatorFn\" class=\"code-anchor\">AsyncValidatorFn</a> | <a href=\"api/forms/AsyncValidatorFn\" class=\"code-anchor\">AsyncValidatorFn</a>[]): <a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a>&#x3C;T | null></code-example>\n\n  <h6 class=\"no-anchor\" id=\"参数-6\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>formState</code>\n      </td>\n      <td class=\"param-type\"><code>T | <a href=\"api/forms/FormControlState\" class=\"code-anchor\">FormControlState</a>&#x3C;T></code></td>\n      <td class=\"param-description\">\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>validatorOrOpts</code>\n      </td>\n      <td class=\"param-type\"><code><a href=\"api/forms/ValidatorFn\" class=\"code-anchor\">ValidatorFn</a> | <a href=\"api/forms/FormControlOptions\" class=\"code-anchor\">FormControlOptions</a> | <a href=\"api/forms/ValidatorFn\" class=\"code-anchor\">ValidatorFn</a>[]</code></td>\n      <td class=\"param-description\">\n        <p>可选值。默认值为 <code>undefined</code>。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>asyncValidator</code>\n      </td>\n      <td class=\"param-type\"><code><a href=\"api/forms/AsyncValidatorFn\" class=\"code-anchor\">AsyncValidatorFn</a> | <a href=\"api/forms/AsyncValidatorFn\" class=\"code-anchor\">AsyncValidatorFn</a>[]</code></td>\n      <td class=\"param-description\">\n        <p>可选值。默认值为 <code>undefined</code>。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-6\">返回值</h6>\n  <p><code><a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a>&#x3C;T | null></code></p>\n\n</div>\n          </div>\n        </details>\n      </td>\n    </tr>\n    <tr>\n      <td class=\"usage-notes\">\n        <h4 id=\"control-usage-notes\">使用说明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormBuilder#control-usage-notes\"><i class=\"material-icons\">link</i></a></h4>\n        <h5 id=\"initialize-a-control-as-disabled\">Initialize a control as disabled<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormBuilder#initialize-a-control-as-disabled\"><i class=\"material-icons\">link</i></a></h5>\n<h5 id=\"把控件初始化为禁用状态\">把控件初始化为禁用状态<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormBuilder#把控件初始化为禁用状态\"><i class=\"material-icons\">link</i></a></h5>\n<p>The following example returns a control with an initial value in a disabled state.</p>\n<p>下面的例子返回一个带有初始值并已禁用的控件。</p>\n<code-example path=\"forms/ts/formBuilder/form_builder_example.ts\" region=\"disabled-control\">\nimport {<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>, <a href=\"api/core/Inject\" class=\"code-anchor\">Inject</a>} from '@angular/core';\nimport {<a href=\"api/forms/FormBuilder\" class=\"code-anchor\">FormBuilder</a>, <a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a>, <a href=\"api/forms/FormGroup\" class=\"code-anchor\">FormGroup</a>, <a href=\"api/forms/Validators\" class=\"code-anchor\">Validators</a>} from '@angular/forms';\n/* . . . */\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'app-disabled-form-control',\n  template: `\n    &#x3C;input [formControl]=\"control\" placeholder=\"First\">\n  `\n})\nexport class DisabledFormControlComponent {\n  control: <a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a>;\n\n  constructor(private fb: <a href=\"api/forms/FormBuilder\" class=\"code-anchor\">FormBuilder</a>) {\n    this.control = fb.control({value: 'my val', disabled: true});\n  }\n}\n\n</code-example>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <a id=\"array\"></a>\n<table class=\"is-full-width method-table instance-methods\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"array\">array()<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormBuilder#array\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular-cn/edit/cn/packages/forms/src/form_builder.ts?message=docs(forms)%3A%20请简述你的修改...#L431-L461\" aria-label=\"提供编辑建议\" title=\"提供编辑建议\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/angular/angular-cn/tree/15.0.1/packages/forms/src/form_builder.ts#L431-L461\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p>Constructs a new <code><a href=\"api/forms/FormArray\" class=\"code-anchor\">FormArray</a></code> from the given array of configurations,\nvalidators and options. Accepts a single generic argument, which is the type of each control\ninside the array.</p>\n<p>构造一个新的 <code><a href=\"api/forms/FormArray\" class=\"code-anchor\">FormArray</a></code> 实例。</p>\n</td>\n    </tr>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">array</span>&#x3C;T>(controls: T[], validatorOrOpts?: <a href=\"api/forms/ValidatorFn\" class=\"code-anchor\">ValidatorFn</a> | <a href=\"api/forms/AbstractControlOptions\" class=\"code-anchor\">AbstractControlOptions</a> | <a href=\"api/forms/ValidatorFn\" class=\"code-anchor\">ValidatorFn</a>[], asyncValidator?: <a href=\"api/forms/AsyncValidatorFn\" class=\"code-anchor\">AsyncValidatorFn</a> | <a href=\"api/forms/AsyncValidatorFn\" class=\"code-anchor\">AsyncValidatorFn</a>[]): <a href=\"api/forms/FormArray\" class=\"code-anchor\">FormArray</a>&#x3C;ɵElement&#x3C;T, null>></code-example>\n\n  <h6 class=\"no-anchor\" id=\"参数-7\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>controls</code>\n      </td>\n      <td class=\"param-type\"><code>T[]</code></td>\n      <td class=\"param-description\">\n        <p>An array of child controls or control configs. Each child control is given an\nindex when it is registered.</p>\n<p>一个子控件数组。每个子控件的 key 都是它在数组中的索引。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>validatorOrOpts</code>\n      </td>\n      <td class=\"param-type\"><code><a href=\"api/forms/ValidatorFn\" class=\"code-anchor\">ValidatorFn</a> | <a href=\"api/forms/AbstractControlOptions\" class=\"code-anchor\">AbstractControlOptions</a> | <a href=\"api/forms/ValidatorFn\" class=\"code-anchor\">ValidatorFn</a>[]</code></td>\n      <td class=\"param-description\">\n        <p>A synchronous validator function, or an array of such functions, or an\n<code><a href=\"api/forms/AbstractControlOptions\" class=\"code-anchor\">AbstractControlOptions</a></code> object that contains\nvalidation functions and a validation trigger.</p>\n<p>一个同步验证器函数或其数组，或者一个包含验证器函数和验证触发器的 <code><a href=\"api/forms/AbstractControlOptions\" class=\"code-anchor\">AbstractControlOptions</a></code>\n对象。</p>\n\n        <p>可选值。默认值为 <code>undefined</code>。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>asyncValidator</code>\n      </td>\n      <td class=\"param-type\"><code><a href=\"api/forms/AsyncValidatorFn\" class=\"code-anchor\">AsyncValidatorFn</a> | <a href=\"api/forms/AsyncValidatorFn\" class=\"code-anchor\">AsyncValidatorFn</a>[]</code></td>\n      <td class=\"param-description\">\n        <p>A single async validator or array of async validator functions.</p>\n<p>一个异步验证器函数或其数组。</p>\n\n        <p>可选值。默认值为 <code>undefined</code>。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-7\">返回值</h6>\n  <p><code><a href=\"api/forms/FormArray\" class=\"code-anchor\">FormArray</a>&#x3C;ɵElement&#x3C;T, null>></code></p>\n\n</div>\n      </td>\n    </tr>\n  </tbody>\n</table>\n</section>\n</div>\n</article>\n\n<!-- links to this doc:\n - api/forms\n - api/forms/NonNullableFormBuilder\n - api/forms/ReactiveFormsModule\n - api/forms/UntypedFormBuilder\n - guide/deprecations\n - guide/glossary\n - guide/reactive-forms\n - guide/typed-forms\n - start/start-forms\n-->\n<!-- links from this doc:\n - /api\n - /guide/reactive-forms\n - api/core/Component\n - api/core/Inject\n - api/forms\n - api/forms/AbstractControl\n - api/forms/AbstractControlOptions\n - api/forms/AsyncValidatorFn\n - api/forms/FormArray\n - api/forms/FormBuilder#array\n - api/forms/FormBuilder#control\n - api/forms/FormBuilder#control-usage-notes\n - api/forms/FormBuilder#description\n - api/forms/FormBuilder#formbuilder\n - api/forms/FormBuilder#group\n - api/forms/FormBuilder#initialize-a-control-as-disabled\n - api/forms/FormBuilder#instance-methods\n - api/forms/FormBuilder#instance-properties\n - api/forms/FormBuilder#nonNullable\n - api/forms/FormBuilder#record\n - api/forms/FormBuilder#see-also\n - api/forms/FormBuilder#子类\n - api/forms/FormBuilder#把控件初始化为禁用状态\n - api/forms/FormBuilder#提供于\n - api/forms/FormControl\n - api/forms/FormControlOptions\n - api/forms/FormControlState\n - api/forms/FormGroup\n - api/forms/FormRecord\n - api/forms/NonNullableFormBuilder\n - api/forms/ReactiveFormsModule\n - api/forms/UntypedFormBuilder\n - api/forms/ValidationErrors\n - api/forms/ValidatorFn\n - api/forms/Validators\n - guide/reactive-forms\n - https://github.com/angular/angular-cn/edit/cn/packages/forms/src/form_builder.ts?message=docs(forms)%3A%20请简述你的修改...#L111-L491\n - https://github.com/angular/angular-cn/edit/cn/packages/forms/src/form_builder.ts?message=docs(forms)%3A%20请简述你的修改...#L286-L301\n - https://github.com/angular/angular-cn/edit/cn/packages/forms/src/form_builder.ts?message=docs(forms)%3A%20请简述你的修改...#L302-L340\n - https://github.com/angular/angular-cn/edit/cn/packages/forms/src/form_builder.ts?message=docs(forms)%3A%20请简述你的修改...#L373-L430\n - https://github.com/angular/angular-cn/edit/cn/packages/forms/src/form_builder.ts?message=docs(forms)%3A%20请简述你的修改...#L431-L461\n - https://github.com/angular/angular-cn/tree/15.0.1/docs/PUBLIC_API.md#final-classes\n - https://github.com/angular/angular-cn/tree/15.0.1/packages/forms/src/form_builder.ts#L111-L491\n - https://github.com/angular/angular-cn/tree/15.0.1/packages/forms/src/form_builder.ts#L286-L301\n - https://github.com/angular/angular-cn/tree/15.0.1/packages/forms/src/form_builder.ts#L302-L340\n - https://github.com/angular/angular-cn/tree/15.0.1/packages/forms/src/form_builder.ts#L373-L430\n - https://github.com/angular/angular-cn/tree/15.0.1/packages/forms/src/form_builder.ts#L431-L461\n-->"
}