{
  "id": "api/forms/FormArray",
  "title": "FormArray",
  "contents": "<article>\n  <div class=\"breadcrumb-container\">\n    <div class=\"breadcrumb\">\n      <script type=\"application/ld+json\">\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          \"itemListElement\": [\n            { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.cn//api\", \"name\": \"API\" } },\n            { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.cn/api/forms\", \"name\": \"@angular/forms\" } },\n            { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.cn/api/forms/FormArray\", \"name\": \"FormArray\" } }\n          ]\n        }\n      </script>\n        <a href=\"/api\">API</a> > <a href=\"api/forms\">@angular/forms</a>\n    </div>\n    <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular-cn/edit/cn/packages/forms/src/model/form_array.ts?message=docs(forms)%3A%20请简述你的修改...#L42-L703\" aria-label=\"提供编辑建议\" title=\"提供编辑建议\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/angular/angular-cn/tree/15.0.1/packages/forms/src/model/form_array.ts#L42-L703\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n  </div>\n  <header class=\"api-header\">\n    <h1 id=\"formarray\">FormArray<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormArray#formarray\"><i class=\"material-icons\">link</i></a></h1>\n    <label class=\"api-type-label class\">class</label>\n    <label class=\"github-links api-status-label final\" title=\"This class should not be extended.\">\n      <a href=\"https://github.com/angular/angular-cn/tree/15.0.1/docs/PUBLIC_API.md#final-classes\">final</a>\n    </label>\n  </header>\n  <aio-toc class=\"embedded\"></aio-toc>\n\n  <div class=\"api-body\">\n  <section class=\"short-description\">\n    <p>Tracks the value and validity state of an array of <code><a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a></code>,\n<code><a href=\"api/forms/FormGroup\" class=\"code-anchor\">FormGroup</a></code> or <code><a href=\"api/forms/FormArray\" class=\"code-anchor\">FormArray</a></code> instances.</p>\n<p>跟踪 <code><a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a></code>、<code><a href=\"api/forms/FormGroup\" class=\"code-anchor\">FormGroup</a></code> 或 <code><a href=\"api/forms/FormArray\" class=\"code-anchor\">FormArray</a></code> 实例的数组的值和有效状态。</p>\n\n    <p no-translate=\"\"><a href=\"api/forms/FormArray#description\">查看\"说明\"...</a></p>\n  </section><section class=\"class-overview\">\n<code-example language=\"ts\" hidecopy=\"true\">\nclass <a href=\"api/forms/FormArray\" class=\"code-anchor\">FormArray</a>&#x3C;TControl extends <a href=\"api/forms/AbstractControl\" class=\"code-anchor\">AbstractControl</a>&#x3C;any> = any> extends <a href=\"api/forms/AbstractControl\" class=\"code-anchor\">AbstractControl</a>&#x3C;ɵTypedOrUntyped&#x3C;TControl, ɵFormArrayValue&#x3C;TControl>, any>, ɵTypedOrUntyped&#x3C;TControl, ɵFormArrayRawValue&#x3C;TControl>, any>> {\n  <a class=\"code-anchor\" href=\"api/forms/FormArray#constructor()\"><span class=\"member-name\">constructor</span>(controls: TControl[], validatorOrOpts?: ValidatorFn | AbstractControlOptions | ValidatorFn[], asyncValidator?: AsyncValidatorFn | AsyncValidatorFn[])</a>\n  <a class=\"code-anchor\" href=\"api/forms/FormArray#controls\"><span class=\"member-name\">controls</span>: ɵTypedOrUntyped&#x3C;TControl, Array&#x3C;TControl>, Array&#x3C;AbstractControl&#x3C;any>>></a>\n  <a class=\"code-anchor\" href=\"api/forms/FormArray#length\"><span class=\"member-name\">length</span>: number</a>\n  <a class=\"code-anchor\" href=\"api/forms/FormArray#at\"><span class=\"member-name\">at</span>(index: number): ɵTypedOrUntyped&#x3C;TControl, TControl, AbstractControl&#x3C;any>></a>\n  <a class=\"code-anchor\" href=\"api/forms/FormArray#push\"><span class=\"member-name\">push</span>(control: TControl, options: { emitEvent?: boolean; } = {}): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/FormArray#insert\"><span class=\"member-name\">insert</span>(index: number, control: TControl, options: { emitEvent?: boolean; } = {}): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/FormArray#removeAt\"><span class=\"member-name\">removeAt</span>(index: number, options: { emitEvent?: boolean; } = {}): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/FormArray#setControl\"><span class=\"member-name\">setControl</span>(index: number, control: TControl, options: { emitEvent?: boolean; } = {}): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/FormArray#setValue\"><span class=\"member-name\">setValue</span>(value: ɵIsAny&#x3C;TControl, any[], ɵRawValue&#x3C;TControl>[]>, options: { onlySelf?: boolean; emitEvent?: boolean; } = {}): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/FormArray#patchValue\"><span class=\"member-name\">patchValue</span>(value: ɵIsAny&#x3C;TControl, any[], ɵValue&#x3C;TControl>[]>, options: { onlySelf?: boolean; emitEvent?: boolean; } = {}): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/FormArray#reset\"><span class=\"member-name\">reset</span>(value: ɵIsAny&#x3C;TControl, any, ɵIsAny&#x3C;TControl, any[], ɵValue&#x3C;TControl>[]>> = [], options: { onlySelf?: boolean; emitEvent?: boolean; } = {}): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/FormArray#getRawValue\"><span class=\"member-name\">getRawValue</span>(): ɵFormArrayRawValue&#x3C;TControl></a>\n  <a class=\"code-anchor\" href=\"api/forms/FormArray#clear\"><span class=\"member-name\">clear</span>(options: { emitEvent?: boolean; } = {}): void</a>\n\n  // 继承自 <a class=\"code-anchor\" href=\"api/forms/AbstractControl\">forms/AbstractControl</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#constructor()\"><span class=\"member-name\">constructor</span>(validators: ValidatorFn | ValidatorFn[], asyncValidators: AsyncValidatorFn | AsyncValidatorFn[])</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#value\"><span class=\"member-name\">value</span>: TValue</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#validator\"><span class=\"member-name\">validator</span>: ValidatorFn | null</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#asyncValidator\"><span class=\"member-name\">asyncValidator</span>: AsyncValidatorFn | null</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#parent\"><span class=\"member-name\">parent</span>: FormGroup | FormArray | null</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#status\"><span class=\"member-name\">status</span>: FormControlStatus</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#valid\"><span class=\"member-name\">valid</span>: boolean</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#invalid\"><span class=\"member-name\">invalid</span>: boolean</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#pending\"><span class=\"member-name\">pending</span>: boolean</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#disabled\"><span class=\"member-name\">disabled</span>: boolean</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#enabled\"><span class=\"member-name\">enabled</span>: boolean</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#errors\"><span class=\"member-name\">errors</span>: ValidationErrors | null</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#pristine\"><span class=\"member-name\">pristine</span>: boolean</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#dirty\"><span class=\"member-name\">dirty</span>: boolean</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#touched\"><span class=\"member-name\">touched</span>: boolean</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#untouched\"><span class=\"member-name\">untouched</span>: boolean</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#valueChanges\"><span class=\"member-name\">valueChanges</span>: Observable&#x3C;TValue></a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#statusChanges\"><span class=\"member-name\">statusChanges</span>: Observable&#x3C;FormControlStatus></a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#updateOn\"><span class=\"member-name\">updateOn</span>: FormHooks</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#root\"><span class=\"member-name\">root</span>: AbstractControl</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#setValidators\"><span class=\"member-name\">setValidators</span>(validators: ValidatorFn | ValidatorFn[]): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#setAsyncValidators\"><span class=\"member-name\">setAsyncValidators</span>(validators: AsyncValidatorFn | AsyncValidatorFn[]): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#addValidators\"><span class=\"member-name\">addValidators</span>(validators: ValidatorFn | ValidatorFn[]): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#addAsyncValidators\"><span class=\"member-name\">addAsyncValidators</span>(validators: AsyncValidatorFn | AsyncValidatorFn[]): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#removeValidators\"><span class=\"member-name\">removeValidators</span>(validators: ValidatorFn | ValidatorFn[]): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#removeAsyncValidators\"><span class=\"member-name\">removeAsyncValidators</span>(validators: AsyncValidatorFn | AsyncValidatorFn[]): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#hasValidator\"><span class=\"member-name\">hasValidator</span>(validator: ValidatorFn): boolean</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#hasAsyncValidator\"><span class=\"member-name\">hasAsyncValidator</span>(validator: AsyncValidatorFn): boolean</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#clearValidators\"><span class=\"member-name\">clearValidators</span>(): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#clearAsyncValidators\"><span class=\"member-name\">clearAsyncValidators</span>(): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#markAsTouched\"><span class=\"member-name\">markAsTouched</span>(opts: { onlySelf?: boolean; } = {}): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#markAllAsTouched\"><span class=\"member-name\">markAllAsTouched</span>(): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#markAsUntouched\"><span class=\"member-name\">markAsUntouched</span>(opts: { onlySelf?: boolean; } = {}): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#markAsDirty\"><span class=\"member-name\">markAsDirty</span>(opts: { onlySelf?: boolean; } = {}): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#markAsPristine\"><span class=\"member-name\">markAsPristine</span>(opts: { onlySelf?: boolean; } = {}): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#markAsPending\"><span class=\"member-name\">markAsPending</span>(opts: { onlySelf?: boolean; emitEvent?: boolean; } = {}): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#disable\"><span class=\"member-name\">disable</span>(opts: { onlySelf?: boolean; emitEvent?: boolean; } = {}): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#enable\"><span class=\"member-name\">enable</span>(opts: { onlySelf?: boolean; emitEvent?: boolean; } = {}): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#setParent\"><span class=\"member-name\">setParent</span>(parent: FormGroup&#x3C;any> | FormArray&#x3C;any>): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#setValue\">abstract <span class=\"member-name\">setValue</span>(value: TRawValue, options?: Object): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#patchValue\">abstract <span class=\"member-name\">patchValue</span>(value: TValue, options?: Object): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#reset\">abstract <span class=\"member-name\">reset</span>(value?: TValue, options?: Object): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#getRawValue\"><span class=\"member-name\">getRawValue</span>(): any</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#updateValueAndValidity\"><span class=\"member-name\">updateValueAndValidity</span>(opts: { onlySelf?: boolean; emitEvent?: boolean; } = {}): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#setErrors\"><span class=\"member-name\">setErrors</span>(errors: ValidationErrors, opts: { emitEvent?: boolean; } = {}): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#get\"><span class=\"member-name\">get</span>&#x3C;P extends string | ((string | number)[])>(path: P): AbstractControl&#x3C;ɵGetProperty&#x3C;TRawValue, P>> | null</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#getError\"><span class=\"member-name\">getError</span>(errorCode: string, path?: string | (string | number)[]): any</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#hasError\"><span class=\"member-name\">hasError</span>(errorCode: string, path?: string | (string | number)[]): boolean</a>\n}\n</code-example>\n\n</section>\n\n  \n<section class=\"description\">\n  <h2 id=\"description\">说明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormArray#description\"><i class=\"material-icons\">link</i></a></h2>\n  <p>A <code><a href=\"api/forms/FormArray\" class=\"code-anchor\">FormArray</a></code> aggregates the values of each child <code><a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a></code> into an array.\nIt calculates its status by reducing the status values of its children. For example, if one of\nthe controls in a <code><a href=\"api/forms/FormArray\" class=\"code-anchor\">FormArray</a></code> is invalid, the entire array becomes invalid.</p>\n<p><code><a href=\"api/forms/FormArray\" class=\"code-anchor\">FormArray</a></code> 每个子 <code><a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a></code>\n的值聚合到一个数组中。它通过减少其子项的状态值来计算其状态。例如，如果 <code><a href=\"api/forms/FormArray\" class=\"code-anchor\">FormArray</a></code>\n中的控件之一无效，则整个数组将变得无效。</p>\n<p><code><a href=\"api/forms/FormArray\" class=\"code-anchor\">FormArray</a></code> accepts one generic argument, which is the type of the controls inside.\nIf you need a heterogenous array, use <a href=\"api/forms/UntypedFormArray\"><code>UntypedFormArray</code></a>.</p>\n<p><code><a href=\"api/forms/FormArray\" class=\"code-anchor\">FormArray</a></code> 接受一个通用参数，即内部控件的类型。如果需要异构数组，请使用 <a href=\"api/forms/UntypedFormArray\"><code>UntypedFormArray</code></a>\n。</p>\n<p><code><a href=\"api/forms/FormArray\" class=\"code-anchor\">FormArray</a></code> is one of the four fundamental building blocks used to define forms in Angular,\nalong with <code><a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a></code>, <code><a href=\"api/forms/FormGroup\" class=\"code-anchor\">FormGroup</a></code>, and <code><a href=\"api/forms/FormRecord\" class=\"code-anchor\">FormRecord</a></code>.</p>\n<p><code><a href=\"api/forms/FormArray\" class=\"code-anchor\">FormArray</a></code> 是用于在 Angular 中定义表单的四个基本构建块之一，与 <code><a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a></code>、<code><a href=\"api/forms/FormGroup\" class=\"code-anchor\">FormGroup</a></code> 和\n<code><a href=\"api/forms/FormRecord\" class=\"code-anchor\">FormRecord</a></code> 。</p>\n  <p>Further information is available in the <a href=\"api/forms/FormArray#usage-notes\">Usage Notes...</a></p>\n</section>\n  \n<h2 id=\"constructor\">构造函数<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormArray#constructor\"><i class=\"material-icons\">link</i></a></h2>\n<a id=\"constructor()\"></a>\n<table class=\"is-full-width method-table constructor\">\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p>Creates a new <code><a href=\"api/forms/FormArray\" class=\"code-anchor\">FormArray</a></code> instance.</p>\n<p>创建一个新的 <code><a href=\"api/forms/FormArray\" class=\"code-anchor\">FormArray</a></code> 实例。</p>\n\n        <p class=\"final-message\">\n          This class is \"final\" and should not be extended.\n          See the <a href=\"https://github.com/angular/angular-cn/tree/15.0.1/docs/PUBLIC_API.md#final-classes\">public API notes</a>.\n        </p>\n        </td>\n    </tr>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">constructor</span>(controls: TControl[], validatorOrOpts?: <a href=\"api/forms/ValidatorFn\" class=\"code-anchor\">ValidatorFn</a> | <a href=\"api/forms/AbstractControlOptions\" class=\"code-anchor\">AbstractControlOptions</a> | <a href=\"api/forms/ValidatorFn\" class=\"code-anchor\">ValidatorFn</a>[], asyncValidator?: <a href=\"api/forms/AsyncValidatorFn\" class=\"code-anchor\">AsyncValidatorFn</a> | <a href=\"api/forms/AsyncValidatorFn\" class=\"code-anchor\">AsyncValidatorFn</a>[])</code-example>\n\n  <h6 class=\"no-anchor\" id=\"参数\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table constructor-overload-parameters\">\n  <tbody>\n    <tr class=\"constructor-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>controls</code>\n      </td>\n      <td class=\"param-type\"><code>TControl[]</code></td>\n      <td class=\"param-description\">\n        <p>An array of child controls. Each child control is given an index\nwhere it is registered.</p>\n<p>子控件的数组。每个子控件都会被赋予一个注册它的索引。</p>\n\n      </td>\n    </tr>\n    <tr class=\"constructor-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>validatorOrOpts</code>\n      </td>\n      <td class=\"param-type\"><code><a href=\"api/forms/ValidatorFn\" class=\"code-anchor\">ValidatorFn</a> | <a href=\"api/forms/AbstractControlOptions\" class=\"code-anchor\">AbstractControlOptions</a> | <a href=\"api/forms/ValidatorFn\" class=\"code-anchor\">ValidatorFn</a>[]</code></td>\n      <td class=\"param-description\">\n        <p>A synchronous validator function, or an array of\nsuch functions, or an <code><a href=\"api/forms/AbstractControlOptions\" class=\"code-anchor\">AbstractControlOptions</a></code> object that contains validation functions\nand a validation trigger.</p>\n<p>同步验证器函数，或此类函数的数组，或包含验证函数和验证触发器的 <code><a href=\"api/forms/AbstractControlOptions\" class=\"code-anchor\">AbstractControlOptions</a></code> 对象。</p>\n\n        <p>可选值。默认值为 <code>undefined</code>。</p>\n\n      </td>\n    </tr>\n    <tr class=\"constructor-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>asyncValidator</code>\n      </td>\n      <td class=\"param-type\"><code><a href=\"api/forms/AsyncValidatorFn\" class=\"code-anchor\">AsyncValidatorFn</a> | <a href=\"api/forms/AsyncValidatorFn\" class=\"code-anchor\">AsyncValidatorFn</a>[]</code></td>\n      <td class=\"param-description\">\n        <p>A single async validator or array of async validator functions</p>\n<p>单个异步验证器或异步验证器函数数组</p>\n\n        <p>可选值。默认值为 <code>undefined</code>。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n</div>\n      </td>\n    </tr>\n  </tbody>\n</table>\n<section class=\"instance-properties\">\n  <a name=\"properties\"></a>\n  <h2 id=\"instance-properties\">属性<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormArray#instance-properties\"><i class=\"material-icons\">link</i></a></h2>\n  <table class=\"is-full-width list-table property-table\">\n    <thead>\n      <tr>\n        <th>属性</th>\n        <th>说明</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr class=\"instance-properties\">\n        <td>\n          <a id=\"controls\"></a>\n          <code class=\"\"><span class=\"member-name\">controls</span>: ɵTypedOrUntyped&#x3C;TControl, Array&#x3C;TControl>, Array&#x3C;<a href=\"api/forms/AbstractControl\" class=\"code-anchor\">AbstractControl</a>&#x3C;any>>></code>\n        </td>\n        <td>\n          \n        </td>\n      </tr>\n      <tr class=\"instance-properties\">\n        <td>\n          <a id=\"length\"></a>\n          <code class=\"\"><span class=\"member-name\">length</span>: number</code>\n        </td>\n        <td>\n          <span class=\"read-only-property\">只读</span>\n          <div no-translate=\"\"><p>Length of the control array.</p>\n<p>控件数组的长度。</p></div>\n          \n        </td>\n      </tr>\n    </tbody>\n  </table>\n</section>\n<section class=\"instance-methods\">\n  <a name=\"methods\"></a>\n  <h2 id=\"instance-methods\">方法<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormArray#instance-methods\"><i class=\"material-icons\">link</i></a></h2>\n  <a id=\"at\"></a>\n<table class=\"is-full-width method-table instance-methods\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"at\">at()<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormArray#at\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular-cn/edit/cn/packages/forms/src/model/form_array.ts?message=docs(forms)%3A%20请简述你的修改...#L185-L201\" aria-label=\"提供编辑建议\" title=\"提供编辑建议\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/angular/angular-cn/tree/15.0.1/packages/forms/src/model/form_array.ts#L185-L201\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p>Get the <code><a href=\"api/forms/AbstractControl\" class=\"code-anchor\">AbstractControl</a></code> at the given <code>index</code> in the array.</p>\n<p>获取数组中给定 <code>index</code> 处的 <code><a href=\"api/forms/AbstractControl\" class=\"code-anchor\">AbstractControl</a></code> 。</p>\n</td>\n    </tr>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">at</span>(index: number): ɵTypedOrUntyped&#x3C;TControl, TControl, <a href=\"api/forms/AbstractControl\" class=\"code-anchor\">AbstractControl</a>&#x3C;any>></code-example>\n\n  <h6 class=\"no-anchor\" id=\"参数-1\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>index</code>\n      </td>\n      <td class=\"param-type\"><code>number</code></td>\n      <td class=\"param-description\">\n        <p>Index in the array to retrieve the control. If <code>index</code> is negative, it will wrap\naround from the back, and if index is greatly negative (less than <code>-length</code>), the result is\nundefined. This behavior is the same as <code>Array.at(index)</code>.</p>\n<p>要检索控件的数组中的索引。如果 <code>index</code> 为负数，它将从后面回绕，如果 index 为大大负数（小于\n<code>-length</code>），则结果是未定义的。此行为与 <code>Array.at(index)</code> 相同。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值\">返回值</h6>\n  <p><code>ɵTypedOrUntyped&#x3C;TControl, TControl, <a href=\"api/forms/AbstractControl\" class=\"code-anchor\">AbstractControl</a>&#x3C;any>></code></p>\n\n</div>\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <a id=\"push\"></a>\n<table class=\"is-full-width method-table instance-methods\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"push\">push()<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormArray#push\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular-cn/edit/cn/packages/forms/src/model/form_array.ts?message=docs(forms)%3A%20请简述你的修改...#L202-L229\" aria-label=\"提供编辑建议\" title=\"提供编辑建议\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/angular/angular-cn/tree/15.0.1/packages/forms/src/model/form_array.ts#L202-L229\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p>Insert a new <code><a href=\"api/forms/AbstractControl\" class=\"code-anchor\">AbstractControl</a></code> at the end of the array.</p>\n<p>在数组的末尾插入一个新的 <code><a href=\"api/forms/AbstractControl\" class=\"code-anchor\">AbstractControl</a></code> 。</p>\n</td>\n    </tr>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">push</span>(control: TControl, options: { emitEvent?: boolean; } = {}): void</code-example>\n\n  <h6 class=\"no-anchor\" id=\"参数-2\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>control</code>\n      </td>\n      <td class=\"param-type\"><code>TControl</code></td>\n      <td class=\"param-description\">\n        <p>Form control to be inserted</p>\n<p>要插入的表单控件</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p>Specifies whether this FormArray instance should emit events after a new\ncontrol is added.</p>\n<p>指定此 FormArray 实例是否应在添加新控件后发出事件。</p>\n<ul>\n<li>\n<p><code>emitEvent</code>: When true or not supplied (the default), both the <code>statusChanges</code> and\n<code>valueChanges</code> observables emit events with the latest status and value when the control is\ninserted. When false, no events are emitted.</p>\n<p><code>emitEvent</code> ：当 true 或不提供（默认）时，<code>statusChanges</code> 和 <code>valueChanges</code>\n可观察对象在插入控件时会发出具有最新状态和值的事件。当 false 时，不会发出事件。</p>\n</li>\n</ul>\n\n        <p>可选值。默认值为 <code>{}</code>。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-1\">返回值</h6>\n  <p><code>void</code></p>\n\n</div>\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <a id=\"insert\"></a>\n<table class=\"is-full-width method-table instance-methods\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"insert\">insert()<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormArray#insert\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular-cn/edit/cn/packages/forms/src/model/form_array.ts?message=docs(forms)%3A%20请简述你的修改...#L230-L263\" aria-label=\"提供编辑建议\" title=\"提供编辑建议\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/angular/angular-cn/tree/15.0.1/packages/forms/src/model/form_array.ts#L230-L263\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p>Insert a new <code><a href=\"api/forms/AbstractControl\" class=\"code-anchor\">AbstractControl</a></code> at the given <code>index</code> in the array.</p>\n<p>在数组中的给定 <code>index</code> 处插入新的 <code><a href=\"api/forms/AbstractControl\" class=\"code-anchor\">AbstractControl</a></code> 。</p>\n</td>\n    </tr>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">insert</span>(index: number, control: TControl, options: { emitEvent?: boolean; } = {}): void</code-example>\n\n  <h6 class=\"no-anchor\" id=\"参数-3\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>index</code>\n      </td>\n      <td class=\"param-type\"><code>number</code></td>\n      <td class=\"param-description\">\n        <p>Index in the array to insert the control. If <code>index</code> is negative, wraps around\nfrom the back. If <code>index</code> is greatly negative (less than <code>-length</code>), prepends to the array.\nThis behavior is the same as <code>Array.splice(index, 0, control)</code>.</p>\n<p>要插入控件的数组中的索引。如果 <code>index</code> 为负数，则从后面环绕。如果 <code>index</code> 为很大的负数（小于\n<code>-length</code>），则添加到数组。此行为与 <code>Array.splice(index, 0, control)</code> 相同。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>control</code>\n      </td>\n      <td class=\"param-type\"><code>TControl</code></td>\n      <td class=\"param-description\">\n        <p>Form control to be inserted</p>\n<p>要插入的表单控件</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p>Specifies whether this FormArray instance should emit events after a new\ncontrol is inserted.</p>\n<p>指定此 FormArray 实例是否应在插入新控件后发出事件。</p>\n<ul>\n<li>\n<p><code>emitEvent</code>: When true or not supplied (the default), both the <code>statusChanges</code> and\n<code>valueChanges</code> observables emit events with the latest status and value when the control is\ninserted. When false, no events are emitted.</p>\n<p><code>emitEvent</code> ：当 true 或不提供（默认）时，<code>statusChanges</code> 和 <code>valueChanges</code>\n可观察对象在插入控件时会发出具有最新状态和值的事件。当 false 时，不会发出事件。</p>\n</li>\n</ul>\n\n        <p>可选值。默认值为 <code>{}</code>。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-2\">返回值</h6>\n  <p><code>void</code></p>\n\n</div>\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <a id=\"removeAt\"></a>\n<table class=\"is-full-width method-table instance-methods\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"removeat\">removeAt()<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormArray#removeat\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular-cn/edit/cn/packages/forms/src/model/form_array.ts?message=docs(forms)%3A%20请简述你的修改...#L264-L298\" aria-label=\"提供编辑建议\" title=\"提供编辑建议\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/angular/angular-cn/tree/15.0.1/packages/forms/src/model/form_array.ts#L264-L298\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p>Remove the control at the given <code>index</code> in the array.</p>\n<p>删除数组中给定 <code>index</code> 处的控件。</p>\n</td>\n    </tr>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">removeAt</span>(index: number, options: { emitEvent?: boolean; } = {}): void</code-example>\n\n  <h6 class=\"no-anchor\" id=\"参数-4\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>index</code>\n      </td>\n      <td class=\"param-type\"><code>number</code></td>\n      <td class=\"param-description\">\n        <p>Index in the array to remove the control.  If <code>index</code> is negative, wraps around\nfrom the back. If <code>index</code> is greatly negative (less than <code>-length</code>), removes the first\nelement. This behavior is the same as <code>Array.splice(index, 1)</code>.</p>\n<p>要删除控件的数组中的索引。如果 <code>index</code> 为负数，则从后面环绕。如果 <code>index</code> 为大大负数（小于\n<code>-length</code>），则删除第一个元素。此行为与 <code>Array.splice(index, 1)</code> 相同。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p>Specifies whether this FormArray instance should emit events after a\ncontrol is removed.</p>\n<p>指定此 FormArray 实例是否应在删除控件后发出事件。</p>\n<ul>\n<li>\n<p><code>emitEvent</code>: When true or not supplied (the default), both the <code>statusChanges</code> and\n<code>valueChanges</code> observables emit events with the latest status and value when the control is\nremoved. When false, no events are emitted.</p>\n<p><code>emitEvent</code> ：当为 true 或不提供（默认）时，<code>statusChanges</code> 和 <code>valueChanges</code>\n可观察对象会在删除控件时发出具有最新状态和值的事件。当 false 时，不会发出事件。</p>\n</li>\n</ul>\n\n        <p>可选值。默认值为 <code>{}</code>。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-3\">返回值</h6>\n  <p><code>void</code></p>\n\n</div>\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <a id=\"setControl\"></a>\n<table class=\"is-full-width method-table instance-methods\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"setcontrol\">setControl()<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormArray#setcontrol\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular-cn/edit/cn/packages/forms/src/model/form_array.ts?message=docs(forms)%3A%20请简述你的修改...#L299-L343\" aria-label=\"提供编辑建议\" title=\"提供编辑建议\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/angular/angular-cn/tree/15.0.1/packages/forms/src/model/form_array.ts#L299-L343\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p>Replace an existing control.</p>\n<p>替换现有的控件。</p>\n</td>\n    </tr>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">setControl</span>(index: number, control: TControl, options: { emitEvent?: boolean; } = {}): void</code-example>\n\n  <h6 class=\"no-anchor\" id=\"参数-5\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>index</code>\n      </td>\n      <td class=\"param-type\"><code>number</code></td>\n      <td class=\"param-description\">\n        <p>Index in the array to replace the control. If <code>index</code> is negative, wraps around\nfrom the back. If <code>index</code> is greatly negative (less than <code>-length</code>), replaces the first\nelement. This behavior is the same as <code>Array.splice(index, 1, control)</code>.</p>\n<p>要替换控件的数组中的索引。如果 <code>index</code> 为负数，则从后面环绕。如果 <code>index</code> 为很大的负数（小于\n<code>-length</code>），则替换第一个元素。此行为与 <code>Array.splice(index, 1, control)</code> 相同。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>control</code>\n      </td>\n      <td class=\"param-type\"><code>TControl</code></td>\n      <td class=\"param-description\">\n        <p>The <code><a href=\"api/forms/AbstractControl\" class=\"code-anchor\">AbstractControl</a></code> control to replace the existing control</p>\n<p>替换现有控件的 <code><a href=\"api/forms/AbstractControl\" class=\"code-anchor\">AbstractControl</a></code> 控件</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p>Specifies whether this FormArray instance should emit events after an\nexisting control is replaced with a new one.</p>\n<p>指定在将现有控件替换为新控件后此 FormArray 实例是否应发出事件。</p>\n<ul>\n<li>\n<p><code>emitEvent</code>: When true or not supplied (the default), both the <code>statusChanges</code> and\n<code>valueChanges</code> observables emit events with the latest status and value when the control is\nreplaced with a new one. When false, no events are emitted.</p>\n<p><code>emitEvent</code> ：当为 true 或不提供（默认）时，当控件被替换为新控件时，<code>statusChanges</code> 和\n<code>valueChanges</code> 可观察对象都会发出具有最新状态和值的事件。当 false 时，不会发出事件。</p>\n</li>\n</ul>\n\n        <p>可选值。默认值为 <code>{}</code>。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-4\">返回值</h6>\n  <p><code>void</code></p>\n\n</div>\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <a id=\"setValue\"></a>\n<table class=\"is-full-width method-table instance-methods\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"setvalue\">setValue()<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormArray#setvalue\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular-cn/edit/cn/packages/forms/src/model/form_array.ts?message=docs(forms)%3A%20请简述你的修改...#L354-L419\" aria-label=\"提供编辑建议\" title=\"提供编辑建议\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/angular/angular-cn/tree/15.0.1/packages/forms/src/model/form_array.ts#L354-L419\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p>Sets the value of the <code><a href=\"api/forms/FormArray\" class=\"code-anchor\">FormArray</a></code>. It accepts an array that matches\nthe structure of the control.</p>\n<p>设置 <code><a href=\"api/forms/FormArray\" class=\"code-anchor\">FormArray</a></code> 的值。它接受与控件结构匹配的数组。</p>\n</td>\n    </tr>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">setValue</span>(value: ɵIsAny&#x3C;TControl, any[], ɵRawValue&#x3C;TControl>[]>, options: { onlySelf?: boolean; emitEvent?: boolean; } = {}): void</code-example>\n\n  <h6 class=\"no-anchor\" id=\"参数-6\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>value</code>\n      </td>\n      <td class=\"param-type\"><code>ɵIsAny&#x3C;TControl, any[], ɵRawValue&#x3C;TControl>[]></code></td>\n      <td class=\"param-description\">\n        <p>Array of values for the controls</p>\n<p>控件的值数组</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p>Configure options that determine how the control propagates changes and\nemits events after the value changes</p>\n<p>配置用于确定控件如何传播更改并在值更改后发出事件的选项</p>\n<ul>\n<li>\n<p><code>onlySelf</code>: When true, each change only affects this control, and not its parent. Default\nis false.</p>\n<p><code>onlySelf</code> ：当为 true 时，每次更改只影响此控件，而不影响其父控件。默认为 false。</p>\n</li>\n<li>\n<p><code>emitEvent</code>: When true or not supplied (the default), both the <code>statusChanges</code> and\n<code>valueChanges</code>\nobservables emit events with the latest status and value when the control value is updated.\nWhen false, no events are emitted.\nThe configuration options are passed to the <a href=\"api/forms/AbstractControl#updateValueAndValidity\">updateValueAndValidity</a> method.</p>\n<p><code>emitEvent</code> ：当 true 或未提供（默认）时，<code>statusChanges</code> 和 <code>valueChanges</code>\n可观察对象会在更新控件值时发出具有最新状态和值的事件。当 false\n时，不会发出事件。配置选项会传递给 <a href=\"api/forms/AbstractControl#updateValueAndValidity\">updateValueAndValidity</a> 方法。</p>\n</li>\n</ul>\n\n        <p>可选值。默认值为 <code>{}</code>。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-5\">返回值</h6>\n  <p><code>void</code></p>\n\n</div>\n      </td>\n    </tr>\n    <tr>\n      <td class=\"description\">\n        <p>This method performs strict checks, and throws an error if you try\nto set the value of a control that doesn't exist or if you exclude the\nvalue of a control.</p>\n<p>此方法会执行严格检查，如果你尝试设置不存在的控件的值或者排除控件的值，则会抛出错误。</p>\n\n      </td>\n    </tr>\n    <tr>\n      <td class=\"usage-notes\">\n        <h4 id=\"setValue-usage-notes\">使用说明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormArray#setValue-usage-notes\"><i class=\"material-icons\">link</i></a></h4>\n        <h5 id=\"set-the-values-for-the-controls-in-the-form-array\">Set the values for the controls in the form array<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormArray#set-the-values-for-the-controls-in-the-form-array\"><i class=\"material-icons\">link</i></a></h5>\n<h5 id=\"在表单数组中设置控件的值\">在表单数组中设置控件的值<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormArray#在表单数组中设置控件的值\"><i class=\"material-icons\">link</i></a></h5>\n<code-example>\nconst arr = new <a href=\"api/forms/FormArray\" class=\"code-anchor\">FormArray</a>([\n  new <a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a>(),\n  new <a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a>()\n]);\nconsole.log(arr.value);   // [null, null]\n\narr.setValue(['Nancy', 'Drew']);\nconsole.log(arr.value);   // ['Nancy', 'Drew']\n</code-example>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <a id=\"patchValue\"></a>\n<table class=\"is-full-width method-table instance-methods\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"patchvalue\">patchValue()<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormArray#patchvalue\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular-cn/edit/cn/packages/forms/src/model/form_array.ts?message=docs(forms)%3A%20请简述你的修改...#L420-L488\" aria-label=\"提供编辑建议\" title=\"提供编辑建议\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/angular/angular-cn/tree/15.0.1/packages/forms/src/model/form_array.ts#L420-L488\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p>Patches the value of the <code><a href=\"api/forms/FormArray\" class=\"code-anchor\">FormArray</a></code>. It accepts an array that matches the\nstructure of the control, and does its best to match the values to the correct\ncontrols in the group.</p>\n<p>修补 <code><a href=\"api/forms/FormArray\" class=\"code-anchor\">FormArray</a></code> 的值。它接受与控件结构匹配的数组，并尽力将值与组中的正确控件匹配。</p>\n</td>\n    </tr>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">patchValue</span>(value: ɵIsAny&#x3C;TControl, any[], ɵValue&#x3C;TControl>[]>, options: { onlySelf?: boolean; emitEvent?: boolean; } = {}): void</code-example>\n\n  <h6 class=\"no-anchor\" id=\"参数-7\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>value</code>\n      </td>\n      <td class=\"param-type\"><code>ɵIsAny&#x3C;TControl, any[], ɵValue&#x3C;TControl>[]></code></td>\n      <td class=\"param-description\">\n        <p>Array of latest values for the controls</p>\n<p>控件的最新值数组</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p>Configure options that determine how the control propagates changes and\nemits events after the value changes</p>\n<p>配置用于确定控件如何传播更改并在值更改后发出事件的选项</p>\n<ul>\n<li>\n<p><code>onlySelf</code>: When true, each change only affects this control, and not its parent. Default\nis false.</p>\n<p><code>onlySelf</code> ：当为 true 时，每次更改只影响此控件，而不影响其父控件。默认为 false。</p>\n</li>\n<li>\n<p><code>emitEvent</code>: When true or not supplied (the default), both the <code>statusChanges</code> and\n<code>valueChanges</code> observables emit events with the latest status and value when the control\nvalue is updated. When false, no events are emitted. The configuration options are passed to\nthe <a href=\"api/forms/AbstractControl#updateValueAndValidity\">updateValueAndValidity</a> method.</p>\n<p><code>emitEvent</code> ：当为 true 或不提供（默认）时，<code>statusChanges</code> 和 <code>valueChanges</code>\n可观察对象会在更新控件值时发出具有最新状态和值的事件。当 false\n时，不会发出事件。配置选项会传递给 <a href=\"api/forms/AbstractControl#updateValueAndValidity\">updateValueAndValidity</a> 方法。</p>\n</li>\n</ul>\n\n        <p>可选值。默认值为 <code>{}</code>。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-6\">返回值</h6>\n  <p><code>void</code></p>\n\n</div>\n      </td>\n    </tr>\n    <tr>\n      <td class=\"description\">\n        <p>It accepts both super-sets and sub-sets of the array without throwing an error.</p>\n<p>它接受数组的超集和子集，而不会抛出错误。</p>\n\n      </td>\n    </tr>\n    <tr>\n      <td class=\"usage-notes\">\n        <h4 id=\"patchValue-usage-notes\">使用说明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormArray#patchValue-usage-notes\"><i class=\"material-icons\">link</i></a></h4>\n        <h5 id=\"patch-the-values-for-controls-in-a-form-array\">Patch the values for controls in a form array<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormArray#patch-the-values-for-controls-in-a-form-array\"><i class=\"material-icons\">link</i></a></h5>\n<h5 id=\"修补表单数组中控件的值\">修补表单数组中控件的值<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormArray#修补表单数组中控件的值\"><i class=\"material-icons\">link</i></a></h5>\n<code-example>\nconst arr = new <a href=\"api/forms/FormArray\" class=\"code-anchor\">FormArray</a>([\n   new <a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a>(),\n   new <a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a>()\n]);\nconsole.log(arr.value);   // [null, null]\n\narr.patchValue(['Nancy']);\nconsole.log(arr.value);   // ['Nancy', null]\n</code-example>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <a id=\"reset\"></a>\n<table class=\"is-full-width method-table instance-methods\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"reset\">reset()<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormArray#reset\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular-cn/edit/cn/packages/forms/src/model/form_array.ts?message=docs(forms)%3A%20请简述你的修改...#L489-L568\" aria-label=\"提供编辑建议\" title=\"提供编辑建议\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/angular/angular-cn/tree/15.0.1/packages/forms/src/model/form_array.ts#L489-L568\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p>Resets the <code><a href=\"api/forms/FormArray\" class=\"code-anchor\">FormArray</a></code> and all descendants are marked <code>pristine</code> and <code>untouched</code>, and the\nvalue of all descendants to null or null maps.</p>\n<p>重置 <code><a href=\"api/forms/FormArray\" class=\"code-anchor\">FormArray</a></code> ，并把所有后代标记为 <code>pristine</code> 和 <code>untouched</code> ，并将所有后代的值映射为 null\n或 null 。</p>\n</td>\n    </tr>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">reset</span>(value: ɵIsAny&#x3C;TControl, any, ɵIsAny&#x3C;TControl, any[], ɵValue&#x3C;TControl>[]>> = [], options: { onlySelf?: boolean; emitEvent?: boolean; } = {}): void</code-example>\n\n  <h6 class=\"no-anchor\" id=\"参数-8\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>value</code>\n      </td>\n      <td class=\"param-type\"><code>ɵIsAny&#x3C;TControl, any, ɵIsAny&#x3C;TControl, any[], ɵValue&#x3C;TControl>[]>></code></td>\n      <td class=\"param-description\">\n        <p>Array of values for the controls</p>\n<p>控件的值数组</p>\n\n        <p>可选值。默认值为 <code>[]</code>。</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p>Configure options that determine how the control propagates changes and\nemits events after the value changes</p>\n<p>配置用于确定控件如何传播更改并在值更改后发出事件的选项</p>\n<ul>\n<li>\n<p><code>onlySelf</code>: When true, each change only affects this control, and not its parent. Default\nis false.</p>\n<p><code>onlySelf</code> ：当为 true 时，每次更改只影响此控件，而不影响其父控件。默认为 false。</p>\n</li>\n<li>\n<p><code>emitEvent</code>: When true or not supplied (the default), both the <code>statusChanges</code> and\n<code>valueChanges</code>\nobservables emit events with the latest status and value when the control is reset.\nWhen false, no events are emitted.\nThe configuration options are passed to the <a href=\"api/forms/AbstractControl#updateValueAndValidity\">updateValueAndValidity</a> method.</p>\n<p><code>emitEvent</code> ：当 true 或未提供（默认）时，<code>statusChanges</code> 和 <code>valueChanges</code>\n可观察对象会在控件重置时发出具有最新状态和值的事件。当 false\n时，不会发出事件。配置选项会传递给 <a href=\"api/forms/AbstractControl#updateValueAndValidity\">updateValueAndValidity</a> 方法。</p>\n</li>\n</ul>\n\n        <p>可选值。默认值为 <code>{}</code>。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-7\">返回值</h6>\n  <p><code>void</code></p>\n\n</div>\n      </td>\n    </tr>\n    <tr>\n      <td class=\"description\">\n        <p>You reset to a specific form state by passing in an array of states\nthat matches the structure of the control. The state is a standalone value\nor a form state object with both a value and a disabled status.</p>\n<p>你通过传入与控件结构匹配的状态数组来重置为特定的表单状态。状态是独立值或具有值和禁用状态的表单状态对象。</p>\n\n      </td>\n    </tr>\n    <tr>\n      <td class=\"usage-notes\">\n        <h4 id=\"reset-usage-notes\">使用说明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormArray#reset-usage-notes\"><i class=\"material-icons\">link</i></a></h4>\n        <h5 id=\"reset-the-values-in-a-form-array\">Reset the values in a form array<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormArray#reset-the-values-in-a-form-array\"><i class=\"material-icons\">link</i></a></h5>\n<h5 id=\"重置表单数组中的值\">重置表单数组中的值<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormArray#重置表单数组中的值\"><i class=\"material-icons\">link</i></a></h5>\n<code-example language=\"ts\">\nconst arr = new <a href=\"api/forms/FormArray\" class=\"code-anchor\">FormArray</a>([\n   new <a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a>(),\n   new <a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a>()\n]);\narr.reset(['name', 'last name']);\n\nconsole.log(arr.value);  // ['name', 'last name']\n</code-example>\n<h5 id=\"reset-the-values-in-a-form-array-and-the-disabled-status-for-the-first-control\">Reset the values in a form array and the disabled status for the first control<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormArray#reset-the-values-in-a-form-array-and-the-disabled-status-for-the-first-control\"><i class=\"material-icons\">link</i></a></h5>\n<h5 id=\"重置表单数组中的值和第一个控件的禁用状态\">重置表单数组中的值和第一个控件的禁用状态<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormArray#重置表单数组中的值和第一个控件的禁用状态\"><i class=\"material-icons\">link</i></a></h5>\n<code-example>\narr.reset([\n  {value: 'name', disabled: true},\n  'last'\n]);\n\nconsole.log(arr.value);  // ['last']\nconsole.log(arr.at(0).status);  // 'DISABLED'\n</code-example>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <a id=\"getRawValue\"></a>\n<table class=\"is-full-width method-table instance-methods\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"getrawvalue\">getRawValue()<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormArray#getrawvalue\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular-cn/edit/cn/packages/forms/src/model/form_array.ts?message=docs(forms)%3A%20请简述你的修改...#L569-L582\" aria-label=\"提供编辑建议\" title=\"提供编辑建议\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/angular/angular-cn/tree/15.0.1/packages/forms/src/model/form_array.ts#L569-L582\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p>The aggregate value of the array, including any disabled controls.</p>\n<p>数组的聚合值，包括任何禁用的控件。</p>\n</td>\n    </tr>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">getRawValue</span>(): ɵFormArrayRawValue&#x3C;TControl></code-example>\n\n  <h6 class=\"no-anchor\" id=\"参数-9\">参数</h6>\n  <p>没有参数。</p>\n  <h6 class=\"no-anchor\" id=\"返回值-8\">返回值</h6>\n  <p><code>ɵFormArrayRawValue&#x3C;TControl></code></p>\n\n</div>\n      </td>\n    </tr>\n    <tr>\n      <td class=\"description\">\n        <p>Reports all values regardless of disabled status.</p>\n<p>无论禁用状态如何，都会报告所有值。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <a id=\"clear\"></a>\n<table class=\"is-full-width method-table instance-methods\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"clear\">clear()<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormArray#clear\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular-cn/edit/cn/packages/forms/src/model/form_array.ts?message=docs(forms)%3A%20请简述你的修改...#L583-L639\" aria-label=\"提供编辑建议\" title=\"提供编辑建议\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/angular/angular-cn/tree/15.0.1/packages/forms/src/model/form_array.ts#L583-L639\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p>Remove all controls in the <code><a href=\"api/forms/FormArray\" class=\"code-anchor\">FormArray</a></code>.</p>\n<p>删除 <code><a href=\"api/forms/FormArray\" class=\"code-anchor\">FormArray</a></code> 中的所有控件。</p>\n</td>\n    </tr>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">clear</span>(options: { emitEvent?: boolean; } = {}): void</code-example>\n\n  <h6 class=\"no-anchor\" id=\"参数-10\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p>Specifies whether this FormArray instance should emit events after all\ncontrols are removed.</p>\n<p>指定此 FormArray 实例是否应在删除所有控件后发出事件。</p>\n<ul>\n<li>\n<p><code>emitEvent</code>: When true or not supplied (the default), both the <code>statusChanges</code> and\n<code>valueChanges</code> observables emit events with the latest status and value when all controls\nin this FormArray instance are removed. When false, no events are emitted.</p>\n<p><code>emitEvent</code> ：当为 true 或未提供（默认）时，当删除此 FormArray 实例中的所有控件时，\n<code>statusChanges</code> 和 <code>valueChanges</code> 可观察对象都会发出具有最新状态和值的事件。当 false\n时，不会发出事件。</p>\n</li>\n</ul>\n\n        <p>可选值。默认值为 <code>{}</code>。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值-9\">返回值</h6>\n  <p><code>void</code></p>\n\n</div>\n      </td>\n    </tr>\n    <tr>\n      <td class=\"usage-notes\">\n        <h4 id=\"clear-usage-notes\">使用说明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormArray#clear-usage-notes\"><i class=\"material-icons\">link</i></a></h4>\n        <h5 id=\"remove-all-elements-from-a-formarray\">Remove all elements from a FormArray<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormArray#remove-all-elements-from-a-formarray\"><i class=\"material-icons\">link</i></a></h5>\n<h5 id=\"从-formarray-中删除所有元素\">从 FormArray 中删除所有元素<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormArray#从-formarray-中删除所有元素\"><i class=\"material-icons\">link</i></a></h5>\n<code-example language=\"ts\">\nconst arr = new <a href=\"api/forms/FormArray\" class=\"code-anchor\">FormArray</a>([\n   new <a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a>(),\n   new <a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a>()\n]);\nconsole.log(arr.length);  // 2\n\narr.clear();\nconsole.log(arr.length);  // 0\n</code-example>\n<p>It's a simpler and more efficient alternative to removing all elements one by one:</p>\n<p>这是一种比一个一个删除所有元素更简单、更高效的替代方案：</p>\n<code-example language=\"ts\">\nconst arr = new <a href=\"api/forms/FormArray\" class=\"code-anchor\">FormArray</a>([\n   new <a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a>(),\n   new <a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a>()\n]);\n\nwhile (arr.length) {\n   arr.removeAt(0);\n}\n</code-example>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n</section>\n\n<section class=\"usage-notes\">\n  <h2 id=\"usage-notes\">使用说明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormArray#usage-notes\"><i class=\"material-icons\">link</i></a></h2>\n  <h3 id=\"create-an-array-of-form-controls\">Create an array of form controls<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormArray#create-an-array-of-form-controls\"><i class=\"material-icons\">link</i></a></h3>\n<h3 id=\"创建一个表单控件数组\">创建一个表单控件数组<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormArray#创建一个表单控件数组\"><i class=\"material-icons\">link</i></a></h3>\n<code-example>\nconst arr = new <a href=\"api/forms/FormArray\" class=\"code-anchor\">FormArray</a>([\n  new <a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a>('Nancy', Validators.minLength(2)),\n  new <a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a>('Drew'),\n]);\n\nconsole.log(arr.value);   // ['Nancy', 'Drew']\nconsole.log(arr.status);  // 'VALID'\n</code-example>\n<h3 id=\"create-a-form-array-with-array-level-validators\">Create a form array with array-level validators<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormArray#create-a-form-array-with-array-level-validators\"><i class=\"material-icons\">link</i></a></h3>\n<h3 id=\"创建带有数组级验证器的表单数组\">创建带有数组级验证器的表单数组<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormArray#创建带有数组级验证器的表单数组\"><i class=\"material-icons\">link</i></a></h3>\n<p>You include array-level validators and async validators. These come in handy\nwhen you want to perform validation that considers the value of more than one child\ncontrol.</p>\n<p>你包括数组级验证器和异步验证器。当你要执行考虑多个子控件的值的验证时，它们会派上用场。</p>\n<p>The two types of validators are passed in separately as the second and third arg\nrespectively, or together as part of an options object.</p>\n<p>这两种类型的验证器分别作为第二个和第三个 arg 单独传入，或作为 options 对象的一部分一起传入。</p>\n<code-example>\nconst arr = new <a href=\"api/forms/FormArray\" class=\"code-anchor\">FormArray</a>([\n  new <a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a>('Nancy'),\n  new <a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a>('Drew')\n], {validators: myValidator, asyncValidators: myAsyncValidator});\n</code-example>\n<h3 id=\"set-the-updateon-property-for-all-controls-in-a-form-array\">Set the updateOn property for all controls in a form array<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormArray#set-the-updateon-property-for-all-controls-in-a-form-array\"><i class=\"material-icons\">link</i></a></h3>\n<h3 id=\"为表单数组中的所有控件设置-updateon-属性\">为表单数组中的所有控件设置 updateOn 属性<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormArray#为表单数组中的所有控件设置-updateon-属性\"><i class=\"material-icons\">link</i></a></h3>\n<p>The options object is used to set a default value for each child\ncontrol's <code>updateOn</code> property. If you set <code>updateOn</code> to <code>'blur'</code> at the\narray level, all child controls default to 'blur', unless the child\nhas explicitly specified a different <code>updateOn</code> value.</p>\n<p>options 对象用于为每个子控件的 <code>updateOn</code> 属性设置默认值。如果你在数组级别将 <code>updateOn</code> 设置为\n<code>'blur'</code> ，则所有子控件默认为 'blur'，除非子项显式指定不同的 <code>updateOn</code> 值。</p>\n<code-example language=\"ts\">\nconst arr = new <a href=\"api/forms/FormArray\" class=\"code-anchor\">FormArray</a>([\n   new <a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a>()\n], {updateOn: 'blur'});\n</code-example>\n<h3 id=\"adding-or-removing-controls-from-a-form-array\">Adding or removing controls from a form array<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormArray#adding-or-removing-controls-from-a-form-array\"><i class=\"material-icons\">link</i></a></h3>\n<h3 id=\"在表单数组中添加或删除控件\">在表单数组中添加或删除控件<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormArray#在表单数组中添加或删除控件\"><i class=\"material-icons\">link</i></a></h3>\n<p>To change the controls in the array, use the <code>push</code>, <code>insert</code>, <code>removeAt</code> or <code>clear</code> methods\nin <code><a href=\"api/forms/FormArray\" class=\"code-anchor\">FormArray</a></code> itself. These methods ensure the controls are properly tracked in the\nform's hierarchy. Do not modify the array of <code><a href=\"api/forms/AbstractControl\" class=\"code-anchor\">AbstractControl</a></code>s used to instantiate\nthe <code><a href=\"api/forms/FormArray\" class=\"code-anchor\">FormArray</a></code> directly, as that result in strange and unexpected behavior such\nas broken change detection.</p>\n<p>要更改数组中的控件，请使用 <code><a href=\"api/forms/FormArray\" class=\"code-anchor\">FormArray</a></code> 本身中的 <code>push</code>、<code>insert</code>、<code>removeAt</code> 或 <code>clear</code>\n方法。这些方法可确保在表单的层次结构中正确跟踪控件。不要修改用于直接实例化 <code><a href=\"api/forms/FormArray\" class=\"code-anchor\">FormArray</a></code> 的\n<code><a href=\"api/forms/AbstractControl\" class=\"code-anchor\">AbstractControl</a></code> 数组，因为这会导致奇怪和意外的行为，例如破损的变更检测。</p>\n\n</section></div>\n</article>\n\n<!-- links to this doc:\n - api/forms\n - api/forms/AbstractControl\n - api/forms/FormArrayName\n - api/forms/FormBuilder\n - api/forms/FormControl\n - api/forms/FormControlName\n - api/forms/FormGroup\n - api/forms/FormGroupDirective\n - api/forms/FormGroupName\n - api/forms/NonNullableFormBuilder\n - api/forms/RadioControlValueAccessor\n - api/forms/ReactiveFormsModule\n - api/forms/UntypedFormArray\n - api/forms/isFormArray\n - guide/dynamic-form\n - guide/forms-overview\n - guide/glossary\n - guide/reactive-forms\n - guide/typed-forms\n - guide/update-to-version-14\n-->\n<!-- links from this doc:\n - /api\n - api/forms\n - api/forms/AbstractControl\n - api/forms/AbstractControl#addAsyncValidators\n - api/forms/AbstractControl#addValidators\n - api/forms/AbstractControl#asyncValidator\n - api/forms/AbstractControl#clearAsyncValidators\n - api/forms/AbstractControl#clearValidators\n - api/forms/AbstractControl#constructor()\n - api/forms/AbstractControl#dirty\n - api/forms/AbstractControl#disable\n - api/forms/AbstractControl#disabled\n - api/forms/AbstractControl#enable\n - api/forms/AbstractControl#enabled\n - api/forms/AbstractControl#errors\n - api/forms/AbstractControl#get\n - api/forms/AbstractControl#getError\n - api/forms/AbstractControl#getRawValue\n - api/forms/AbstractControl#hasAsyncValidator\n - api/forms/AbstractControl#hasError\n - api/forms/AbstractControl#hasValidator\n - api/forms/AbstractControl#invalid\n - api/forms/AbstractControl#markAllAsTouched\n - api/forms/AbstractControl#markAsDirty\n - api/forms/AbstractControl#markAsPending\n - api/forms/AbstractControl#markAsPristine\n - api/forms/AbstractControl#markAsTouched\n - api/forms/AbstractControl#markAsUntouched\n - api/forms/AbstractControl#parent\n - api/forms/AbstractControl#patchValue\n - api/forms/AbstractControl#pending\n - api/forms/AbstractControl#pristine\n - api/forms/AbstractControl#removeAsyncValidators\n - api/forms/AbstractControl#removeValidators\n - api/forms/AbstractControl#reset\n - api/forms/AbstractControl#root\n - api/forms/AbstractControl#setAsyncValidators\n - api/forms/AbstractControl#setErrors\n - api/forms/AbstractControl#setParent\n - api/forms/AbstractControl#setValidators\n - api/forms/AbstractControl#setValue\n - api/forms/AbstractControl#status\n - api/forms/AbstractControl#statusChanges\n - api/forms/AbstractControl#touched\n - api/forms/AbstractControl#untouched\n - api/forms/AbstractControl#updateOn\n - api/forms/AbstractControl#updateValueAndValidity\n - api/forms/AbstractControl#valid\n - api/forms/AbstractControl#validator\n - api/forms/AbstractControl#value\n - api/forms/AbstractControl#valueChanges\n - api/forms/AbstractControlOptions\n - api/forms/AsyncValidatorFn\n - api/forms/FormArray#adding-or-removing-controls-from-a-form-array\n - api/forms/FormArray#at\n - api/forms/FormArray#clear\n - api/forms/FormArray#clear-usage-notes\n - api/forms/FormArray#constructor\n - api/forms/FormArray#constructor()\n - api/forms/FormArray#controls\n - api/forms/FormArray#create-a-form-array-with-array-level-validators\n - api/forms/FormArray#create-an-array-of-form-controls\n - api/forms/FormArray#description\n - api/forms/FormArray#formarray\n - api/forms/FormArray#getRawValue\n - api/forms/FormArray#getrawvalue\n - api/forms/FormArray#insert\n - api/forms/FormArray#instance-methods\n - api/forms/FormArray#instance-properties\n - api/forms/FormArray#length\n - api/forms/FormArray#patch-the-values-for-controls-in-a-form-array\n - api/forms/FormArray#patchValue\n - api/forms/FormArray#patchValue-usage-notes\n - api/forms/FormArray#patchvalue\n - api/forms/FormArray#push\n - api/forms/FormArray#remove-all-elements-from-a-formarray\n - api/forms/FormArray#removeAt\n - api/forms/FormArray#removeat\n - api/forms/FormArray#reset\n - api/forms/FormArray#reset-the-values-in-a-form-array\n - api/forms/FormArray#reset-the-values-in-a-form-array-and-the-disabled-status-for-the-first-control\n - api/forms/FormArray#reset-usage-notes\n - api/forms/FormArray#set-the-updateon-property-for-all-controls-in-a-form-array\n - api/forms/FormArray#set-the-values-for-the-controls-in-the-form-array\n - api/forms/FormArray#setControl\n - api/forms/FormArray#setValue\n - api/forms/FormArray#setValue-usage-notes\n - api/forms/FormArray#setcontrol\n - api/forms/FormArray#setvalue\n - api/forms/FormArray#usage-notes\n - api/forms/FormArray#为表单数组中的所有控件设置-updateon-属性\n - api/forms/FormArray#从-formarray-中删除所有元素\n - api/forms/FormArray#修补表单数组中控件的值\n - api/forms/FormArray#创建一个表单控件数组\n - api/forms/FormArray#创建带有数组级验证器的表单数组\n - api/forms/FormArray#在表单数组中添加或删除控件\n - api/forms/FormArray#在表单数组中设置控件的值\n - api/forms/FormArray#重置表单数组中的值\n - api/forms/FormArray#重置表单数组中的值和第一个控件的禁用状态\n - api/forms/FormControl\n - api/forms/FormGroup\n - api/forms/FormRecord\n - api/forms/UntypedFormArray\n - api/forms/ValidatorFn\n - https://github.com/angular/angular-cn/edit/cn/packages/forms/src/model/form_array.ts?message=docs(forms)%3A%20请简述你的修改...#L185-L201\n - https://github.com/angular/angular-cn/edit/cn/packages/forms/src/model/form_array.ts?message=docs(forms)%3A%20请简述你的修改...#L202-L229\n - https://github.com/angular/angular-cn/edit/cn/packages/forms/src/model/form_array.ts?message=docs(forms)%3A%20请简述你的修改...#L230-L263\n - https://github.com/angular/angular-cn/edit/cn/packages/forms/src/model/form_array.ts?message=docs(forms)%3A%20请简述你的修改...#L264-L298\n - https://github.com/angular/angular-cn/edit/cn/packages/forms/src/model/form_array.ts?message=docs(forms)%3A%20请简述你的修改...#L299-L343\n - https://github.com/angular/angular-cn/edit/cn/packages/forms/src/model/form_array.ts?message=docs(forms)%3A%20请简述你的修改...#L354-L419\n - https://github.com/angular/angular-cn/edit/cn/packages/forms/src/model/form_array.ts?message=docs(forms)%3A%20请简述你的修改...#L42-L703\n - https://github.com/angular/angular-cn/edit/cn/packages/forms/src/model/form_array.ts?message=docs(forms)%3A%20请简述你的修改...#L420-L488\n - https://github.com/angular/angular-cn/edit/cn/packages/forms/src/model/form_array.ts?message=docs(forms)%3A%20请简述你的修改...#L489-L568\n - https://github.com/angular/angular-cn/edit/cn/packages/forms/src/model/form_array.ts?message=docs(forms)%3A%20请简述你的修改...#L569-L582\n - https://github.com/angular/angular-cn/edit/cn/packages/forms/src/model/form_array.ts?message=docs(forms)%3A%20请简述你的修改...#L583-L639\n - https://github.com/angular/angular-cn/tree/15.0.1/docs/PUBLIC_API.md#final-classes\n - https://github.com/angular/angular-cn/tree/15.0.1/packages/forms/src/model/form_array.ts#L185-L201\n - https://github.com/angular/angular-cn/tree/15.0.1/packages/forms/src/model/form_array.ts#L202-L229\n - https://github.com/angular/angular-cn/tree/15.0.1/packages/forms/src/model/form_array.ts#L230-L263\n - https://github.com/angular/angular-cn/tree/15.0.1/packages/forms/src/model/form_array.ts#L264-L298\n - https://github.com/angular/angular-cn/tree/15.0.1/packages/forms/src/model/form_array.ts#L299-L343\n - https://github.com/angular/angular-cn/tree/15.0.1/packages/forms/src/model/form_array.ts#L354-L419\n - https://github.com/angular/angular-cn/tree/15.0.1/packages/forms/src/model/form_array.ts#L42-L703\n - https://github.com/angular/angular-cn/tree/15.0.1/packages/forms/src/model/form_array.ts#L420-L488\n - https://github.com/angular/angular-cn/tree/15.0.1/packages/forms/src/model/form_array.ts#L489-L568\n - https://github.com/angular/angular-cn/tree/15.0.1/packages/forms/src/model/form_array.ts#L569-L582\n - https://github.com/angular/angular-cn/tree/15.0.1/packages/forms/src/model/form_array.ts#L583-L639\n-->"
}