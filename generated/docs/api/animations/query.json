{
  "id": "api/animations/query",
  "title": "query",
  "contents": "<article>\n  <div class=\"breadcrumb-container\">\n    <div class=\"breadcrumb\">\n      <script type=\"application/ld+json\">\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          \"itemListElement\": [\n            { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.cn//api\", \"name\": \"API\" } },\n            { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.cn/api/animations\", \"name\": \"@angular/animations\" } },\n            { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.cn/api/animations/query\", \"name\": \"query\" } }\n          ]\n        }\n      </script>\n        <a href=\"/api\">API</a> > <a href=\"api/animations\">@angular/animations</a>\n    </div>\n    <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular-cn/edit/cn/packages/animations/src/animation_metadata.ts?message=docs(animations)%3A%20请简述你的修改...#L1662-L1840\" aria-label=\"提供编辑建议\" title=\"提供编辑建议\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/angular/angular-cn/tree/15.0.1/packages/animations/src/animation_metadata.ts#L1662-L1840\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n  </div>\n  <header class=\"api-header\">\n    <h1 id=\"query\">query<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/animations/query#query\"><i class=\"material-icons\">link</i></a></h1>\n    <label class=\"api-type-label function\">function</label>\n  </header>\n  <aio-toc class=\"embedded\"></aio-toc>\n\n  <div class=\"api-body\">\n  <section class=\"short-description\">\n    <p>Finds one or more inner elements within the current element that is\nbeing animated within a sequence. Use with <code><a href=\"api/animations/animate\" class=\"code-anchor\">animate</a>()</code>.</p>\n<p>在动画序列中正在播放的元素中查找一个或多个内部元素。和 <code><a href=\"api/animations/animateChild\" class=\"code-anchor\">animateChild</a>()</code> 一起使用。</p>\n\n  </section>\n\n  <div class=\"overload-info\">\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> <span class=\"member-name\"><a href=\"api/animations/query\" class=\"code-anchor\">query</a></span>(selector: string, <a href=\"api/animations/animation\" class=\"code-anchor\">animation</a>: <a href=\"api/animations/AnimationMetadata\" class=\"code-anchor\">AnimationMetadata</a> | <a href=\"api/animations/AnimationMetadata\" class=\"code-anchor\">AnimationMetadata</a>[], options: <a href=\"api/animations/AnimationQueryOptions\" class=\"code-anchor\">AnimationQueryOptions</a> = null): <a href=\"api/animations/AnimationQueryMetadata\" class=\"code-anchor\">AnimationQueryMetadata</a></code-example>\n\n  <h6 class=\"no-anchor\" id=\"参数\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>selector</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p>The element to query, or a set of elements that contain Angular-specific\ncharacteristics, specified with one or more of the following tokens.</p>\n<p>要查询的元素或包含特定于 Angular 的特性的一组元素，使用以下一个或多个标记指定。</p>\n<ul>\n<li>\n<p><code><a href=\"api/animations/query\" class=\"code-anchor\">query</a>(\":enter\")</code> or <code><a href=\"api/animations/query\" class=\"code-anchor\">query</a>(\":leave\")</code> : Query for newly inserted/removed elements (not\nall elements can be queried via these tokens, see\n<a href=\"api/animations/query#entering-and-leaving-elements\">Entering and Leaving Elements</a>)</p>\n<p><code><a href=\"api/animations/query\" class=\"code-anchor\">query</a>(\":enter\")</code> 或 <code><a href=\"api/animations/query\" class=\"code-anchor\">query</a>(\":leave\")</code>\n：查询新插入/删除的元素（并非所有元素都可以通过这些标记查询，请参阅<a href=\"api/animations/query#entering-and-leaving-elements\">进入和离开元素</a>）</p>\n</li>\n<li>\n<p><code><a href=\"api/animations/query\" class=\"code-anchor\">query</a>(\":animating\")</code> : Query all currently animating elements.</p>\n<p><code><a href=\"api/animations/query\" class=\"code-anchor\">query</a>(\":animating\")</code>：查询所有正在播放动画的元素。</p>\n</li>\n<li>\n<p><code><a href=\"api/animations/query\" class=\"code-anchor\">query</a>(\"@triggerName\")</code> : Query elements that contain an animation trigger.</p>\n<p><code><a href=\"api/animations/query\" class=\"code-anchor\">query</a>(\"@triggerName\")</code>：查询包含指定动画触发器的元素。</p>\n</li>\n<li>\n<p><code><a href=\"api/animations/query\" class=\"code-anchor\">query</a>(\"@*\")</code> : Query all elements that contain an animation triggers.</p>\n<p><code><a href=\"api/animations/query\" class=\"code-anchor\">query</a>(\"@*\")</code>：查询所有包含任意动画触发器的元素。</p>\n</li>\n<li>\n<p><code><a href=\"api/animations/query\" class=\"code-anchor\">query</a>(\":self\")</code> : Include the current element into the animation sequence.</p>\n<p><code><a href=\"api/animations/query\" class=\"code-anchor\">query</a>(\":self\")</code>：把当前元素包含到动画序列中。</p>\n</li>\n</ul>\n\n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code><a href=\"api/animations/animation\" class=\"code-anchor\">animation</a></code>\n      </td>\n      <td class=\"param-type\"><code><a href=\"api/animations/AnimationMetadata\" class=\"code-anchor\">AnimationMetadata</a> | <a href=\"api/animations/AnimationMetadata\" class=\"code-anchor\">AnimationMetadata</a>[]</code></td>\n      <td class=\"param-description\">\n        <p>One or more animation steps to apply to the queried element or elements.\nAn array is treated as an animation sequence.</p>\n<p>要应用到所查询到的单个或一组元素上的一个或多个动画步骤。\n该数组会被视为一个动画序列。</p>\n\n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code><a href=\"api/animations/AnimationQueryOptions\" class=\"code-anchor\">AnimationQueryOptions</a></code></td>\n      <td class=\"param-description\">\n        <p>An options object. Use the 'limit' field to limit the total number of\nitems to collect.</p>\n<p>一个配置对象。使用 <code>limit</code> 字段来限制要收集的条目的数量上限。</p>\n\n        <p>可选值。默认值为 <code>null</code>。</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"返回值\">返回值</h6>\n  <p><code><a href=\"api/animations/AnimationQueryMetadata\" class=\"code-anchor\">AnimationQueryMetadata</a></code>: An object that encapsulates the query data.</p>\n<p>一个封装了查询数据的对象。</p>\n\n</div>\n\n\n\n\n\n<section class=\"usage-notes\">\n  <h2 id=\"usage-notes\">使用说明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/animations/query#usage-notes\"><i class=\"material-icons\">link</i></a></h2>\n  <h3 id=\"multiple-tokens\">Multiple Tokens<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/animations/query#multiple-tokens\"><i class=\"material-icons\">link</i></a></h3>\n<h3 id=\"多重标记\">多重标记<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/animations/query#多重标记\"><i class=\"material-icons\">link</i></a></h3>\n<p>Tokens can be merged into a combined query selector string. For example:</p>\n<p>多个标记可以合并成复合查询选择器。比如：</p>\n<code-example language=\"typescript\">\n <a href=\"api/animations/query\" class=\"code-anchor\">query</a>(':self, .record:enter, .record:leave, @subTrigger', [...])\n</code-example>\n<p>The <code><a href=\"api/animations/query\" class=\"code-anchor\">query</a>()</code> function collects multiple elements and works internally by using\n<code>element.querySelectorAll</code>. Use the <code>limit</code> field of an options object to limit\nthe total number of items to be collected. For example:</p>\n<p><code><a href=\"api/animations/query\" class=\"code-anchor\">query</a>()</code> 函数会收集多个元素，其内部是用 <code>element.querySelectorAll</code> 实现的。\n用配置对象中的 <code>limit</code> 字段可以限制要收集的总数。比如：</p>\n<code-example language=\"js\">\n<a href=\"api/animations/query\" class=\"code-anchor\">query</a>('div', [\n  <a href=\"api/animations/animate\" class=\"code-anchor\">animate</a>(...),\n  <a href=\"api/animations/animate\" class=\"code-anchor\">animate</a>(...)\n], { limit: 1 })\n</code-example>\n<p>By default, throws an error when zero items are found. Set the\n<code>optional</code> flag to ignore this error. For example:</p>\n<p>默认情况下，当没有找到条目时就会抛出错误。设置 <code>optional</code> 标志可以忽略此错误。比如：</p>\n<code-example language=\"js\">\n<a href=\"api/animations/query\" class=\"code-anchor\">query</a>('.some-element-that-may-not-be-there', [\n  <a href=\"api/animations/animate\" class=\"code-anchor\">animate</a>(...),\n  <a href=\"api/animations/animate\" class=\"code-anchor\">animate</a>(...)\n], { optional: true })\n</code-example>\n<h3 id=\"entering-and-leaving-elements\">Entering and Leaving Elements<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/animations/query#entering-and-leaving-elements\"><i class=\"material-icons\">link</i></a></h3>\n<h3 id=\"进入和离开元素\">进入和离开元素<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/animations/query#进入和离开元素\"><i class=\"material-icons\">link</i></a></h3>\n<p>Not all elements can be queried via the <code>:enter</code> and <code>:leave</code> tokens, the only ones\nthat can are those that Angular assumes can enter/leave based on their own logic\n(if their insertion/removal is simply a consequence of that of their parent they\nshould be queried via a different token in their parent's <code>:enter</code>/<code>:leave</code> transitions).</p>\n<p>并非所有元素都可以通过 <code>:enter</code> 和 <code>:leave</code> 标记查询，唯一可以是 Angular\n假定可以根据自己的逻辑进入/离开的元素（如果它们的插入/删除只是它们父级的结果，他们应该通过其父级的\n<code>:enter</code> / <code>:leave</code> 转换中的不同标记来查询）。</p>\n<p>The only elements Angular assumes can enter/leave based on their own logic (thus the only\nones that can be queried via the <code>:enter</code> and <code>:leave</code> tokens) are:</p>\n<p>Angular 假定可以根据自己的逻辑进入/离开的唯一元素（因此可以通过 <code>:enter</code> 和 <code>:leave</code>\n标记查询的唯一元素）是：</p>\n<ul>\n<li>\n<p>Those inserted dynamically (via <code><a href=\"api/core/ViewContainerRef\" class=\"code-anchor\">ViewContainerRef</a></code>)</p>\n<p>动态插入的（通过 <code><a href=\"api/core/ViewContainerRef\" class=\"code-anchor\">ViewContainerRef</a></code> ）</p>\n</li>\n<li>\n<p>Those that have a structural directive (which, under the hood, are a subset of the above ones)</p>\n<p>那些具有结构指令的（在引擎盖下是上述指令的子集）</p>\n</li>\n</ul>\n<div class=\"alert is-helpful\">\n<p> Note that elements will be successfully queried via <code>:enter</code>/<code>:leave</code> even if their\ninsertion/removal is not done manually via <code><a href=\"api/core/ViewContainerRef\" class=\"code-anchor\">ViewContainerRef</a></code>or caused by their structural\ndirective (e.g. they enter/exit alongside their parent).</p>\n</div>\n<div class=\"alert is-important\">\n<p> There is an exception to what previously mentioned, besides elements entering/leaving based on\ntheir own logic, elements with an animation trigger can always be queried via <code>:leave</code> when\ntheir parent is also leaving.</p>\n</div>\n<h3 id=\"usage-example\">Usage Example<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/animations/query#usage-example\"><i class=\"material-icons\">link</i></a></h3>\n<h3 id=\"使用范例\">使用范例<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/animations/query#使用范例\"><i class=\"material-icons\">link</i></a></h3>\n<p>The following example queries for inner elements and animates them\nindividually using <code><a href=\"api/animations/animate\" class=\"code-anchor\">animate</a>()</code>.</p>\n<p>下面的例子查询内部元素，并用 <code><a href=\"api/animations/animateChild\" class=\"code-anchor\">animateChild</a>()</code> 来独立控制它们的动画。</p>\n<code-example language=\"typescript\">\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'inner',\n  template: `\n    &#x3C;div [@queryAnimation]=\"exp\">\n      &#x3C;h1><a href=\"api/platform-browser/Title\" class=\"code-anchor\">Title</a>&#x3C;/h1>\n      &#x3C;div class=\"content\">\n        Blah blah blah\n      &#x3C;/div>\n    &#x3C;/div>\n  `,\n  animations: [\n   <a href=\"api/animations/trigger\" class=\"code-anchor\">trigger</a>('queryAnimation', [\n     <a href=\"api/animations/transition\" class=\"code-anchor\">transition</a>('* => goAnimate', [\n       // hide the inner elements\n       <a href=\"api/animations/query\" class=\"code-anchor\">query</a>('h1', <a href=\"api/animations/style\" class=\"code-anchor\">style</a>({ opacity: 0 })),\n       <a href=\"api/animations/query\" class=\"code-anchor\">query</a>('.content', <a href=\"api/animations/style\" class=\"code-anchor\">style</a>({ opacity: 0 })),\n\n       // <a href=\"api/animations/animate\" class=\"code-anchor\">animate</a> the inner elements in, one by one\n       <a href=\"api/animations/query\" class=\"code-anchor\">query</a>('h1', <a href=\"api/animations/animate\" class=\"code-anchor\">animate</a>(1000, <a href=\"api/animations/style\" class=\"code-anchor\">style</a>({ opacity: 1 }))),\n       <a href=\"api/animations/query\" class=\"code-anchor\">query</a>('.content', <a href=\"api/animations/animate\" class=\"code-anchor\">animate</a>(1000, <a href=\"api/animations/style\" class=\"code-anchor\">style</a>({ opacity: 1 }))),\n     ])\n   ])\n ]\n})\nclass Cmp {\n  exp = '';\n\n  goAnimate() {\n    this.exp = 'goAnimate';\n  }\n}\n</code-example>\n\n</section></div>\n</article>\n\n<!-- links to this doc:\n - api/animations\n - api/animations/AnimationMetadataType\n - api/animations/AnimationOptions\n - api/animations/AnimationQueryMetadata\n - api/animations/AnimationQueryOptions\n - api/animations/animateChild\n - api/animations/browser/AnimationDriver\n - api/animations/browser/testing/MockAnimationDriver\n - api/animations/stagger\n - api/animations/transition\n - api/animations/trigger\n - api/common/Location\n - api/common/testing/MockLocationStrategy\n - api/common/testing/SpyLocation\n - api/core/DebugElement\n - guide/animations\n - guide/complex-animation-sequences\n - guide/migration-dynamic-flag\n - guide/route-animations\n - guide/router\n - guide/router-tutorial-toh\n - guide/static-query-migration\n - guide/testing-components-scenarios\n - guide/testing-utility-apis\n - guide/transition-and-triggers\n - guide/upgrade\n-->\n<!-- links from this doc:\n - /api\n - api/animations\n - api/animations/AnimationMetadata\n - api/animations/AnimationQueryMetadata\n - api/animations/AnimationQueryOptions\n - api/animations/animate\n - api/animations/animateChild\n - api/animations/animation\n - api/animations/query#entering-and-leaving-elements\n - api/animations/query#multiple-tokens\n - api/animations/query#query\n - api/animations/query#usage-example\n - api/animations/query#usage-notes\n - api/animations/query#使用范例\n - api/animations/query#多重标记\n - api/animations/query#进入和离开元素\n - api/animations/style\n - api/animations/transition\n - api/animations/trigger\n - api/core/Component\n - api/core/ViewContainerRef\n - api/platform-browser/Title\n - https://github.com/angular/angular-cn/edit/cn/packages/animations/src/animation_metadata.ts?message=docs(animations)%3A%20请简述你的修改...#L1662-L1840\n - https://github.com/angular/angular-cn/tree/15.0.1/packages/animations/src/animation_metadata.ts#L1662-L1840\n-->"
}