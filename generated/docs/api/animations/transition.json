{
  "id": "api/animations/transition",
  "title": "transition",
  "contents": "\n\n<article>\n  <div class=\"breadcrumb-container\">\n    <div class=\"breadcrumb\">\n      <script type=\"application/ld+json\">\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          \"itemListElement\": [\n            { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.cn//api\", \"name\": \"API\" } },\n            { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.cn/api/animations\", \"name\": \"@angular/animations\" } },\n            { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.cn/api/animations/transition\", \"name\": \"transition\" } }\n          ]\n        }\n      </script>\n        <a href=\"/api\">API</a> > <a href=\"api/animations\">@angular/animations</a>\n    </div>\n    <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular-cn/edit/aio/packages/animations/src/animation_metadata.ts?message=docs(animations)%3A%20请简述你的修改...#L1271-L1517\" aria-label=\"提供编辑建议\" title=\"提供编辑建议\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/angular/angular-cn/tree/10.0.0-rc.0/packages/animations/src/animation_metadata.ts#L1271-L1517\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n  </div>\n  \n  <header class=\"api-header\">\n    <h1 id=\"transition\">transition<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/animations/transition#transition\"><i class=\"material-icons\">link</i></a></h1>\n    \n    <label class=\"api-type-label function\">function</label>\n    \n    \n    \n  </header>\n  \n  <aio-toc class=\"embedded\"></aio-toc>\n\n  <div class=\"api-body\">\n    \n  <section class=\"short-description\">\n    <p translation-result=\"on\">声明一个转场动画，以便在满足给定条件时运行一系列动画步骤。该条件是一个逻辑型表达式或一个函数，\n该函数比较以前和现在的动画状态，如果应该开始转场则返回 <code>true</code>。\n当满足所定义的转场动画的状态标准时，就会开始执行相关的动画。</p><p translation-origin=\"off\">Declares an animation transition as a sequence of animation steps to run when a given\ncondition is satisfied. The condition is a Boolean expression or function that compares\nthe previous and current animation states, and returns true if this transition should occur.\nWhen the state criteria of a defined transition are met, the associated animation is\ntriggered.</p>\n\n\n    \n  </section>\n  \n\n  \n\n  \n\n  <div class=\"overload-info\">\n  \n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> <span class=\"member-name\"><a href=\"api/animations/transition\" class=\"code-anchor\">transition</a></span>(stateChangeExpr: string | ((fromState: string, toState: string, element?: any, params?: { [key: string]: any; }) => boolean), steps: <a href=\"api/animations/AnimationMetadata\" class=\"code-anchor\">AnimationMetadata</a> | <a href=\"api/animations/AnimationMetadata\" class=\"code-anchor\">AnimationMetadata</a>[], options: <a href=\"api/animations/AnimationOptions\" class=\"code-anchor\">AnimationOptions</a> = null): <a href=\"api/animations/AnimationTransitionMetadata\" class=\"code-anchor\">AnimationTransitionMetadata</a></code-example>\n\n  \n\n  <h6 class=\"no-anchor\" id=\"参数\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>stateChangeExpr</code>\n      </td>\n      <td class=\"param-type\"><code>string | ((fromState: string, toState: string, element?: any, params?: { [key: string]: any; }) => boolean)</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">一个逻辑表达式或一个函数，该函数用来比较以前和现在的动画状态，如果应该开始转场，则返回 <code>true</code>。注意，\"true\" 和 \"false\" 分别对应于 1 和 0。\n在动画触发器所在的元素中，每当状态发生变化时该表达式都会求值一次。\n当该表达式求值为真时，则执行这些动画步骤。</p><p translation-origin=\"off\">A Boolean expression or function that compares the previous and current\nanimation states, and returns true if this transition should occur. Note that  \"true\" and \"false\"\nmatch 1 and 0, respectively. An expression is evaluated each time a state change occurs in the\nanimation trigger element.\nThe animation steps run when the expression evaluates to true.</p>\n\n<ul>\n<li>\n<p translation-result=\"on\">  一个 \"state1 => state2\" 格式的状态变更字符串，每一侧都是一个事先定义好的动画状态，或者用星号（<code>*</code>）来动态获取起始或结束状态。</p><p translation-origin=\"off\">A state-change string takes the form \"state1 => state2\", where each side is a defined animation\nstate, or an asterix (*) to refer to a dynamic start or end state.</p>\n\n<ul>\n<li>\n<p translation-result=\"on\">    该表达式字符串可以包含多个逗号分隔的状态，比如 \"state1 => state2, state3 => state4\"。</p><p translation-origin=\"off\">The expression string can contain multiple comma-separated statements;\nfor example \"state1 => state2, state3 => state4\".</p>\n\n</li>\n<li>\n<p translation-result=\"on\">    特殊值 <code>:enter</code> 表示进入此状态时的转场，等价于 \"void => <em>\"，<code>:leave</code> 表示退出此状态时的转场，等价于 \"</em> => void\"。</p><p translation-origin=\"off\">Special values <code>:enter</code> and <code>:leave</code> initiate a transition on the entry and exit states,\nequivalent to  \"void => <em>\"  and \"</em> => void\".</p>\n\n</li>\n<li>\n<p translation-result=\"on\">    特殊值 <code>:increment</code>、<code>:decrement</code> 表示数字型值增加或减小时的转场。</p><p translation-origin=\"off\">Special values <code>:increment</code> and <code>:decrement</code> initiate a transition when a numeric value has\nincreased or decreased in value.</p>\n\n</li>\n</ul>\n</li>\n<li>\n<p translation-result=\"on\">  一个函数，每当动画触发器所在的元素发生了状态变化时就会执行。\n当该函数返回 <code>true</code> 时，就会执行这些动画步骤。</p><p translation-origin=\"off\">A function is executed each time a state change occurs in the animation trigger element.\nThe animation steps run when the function returns true.</p>\n\n</li>\n</ul>\n\n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>steps</code>\n      </td>\n      <td class=\"param-type\"><code><a href=\"api/animations/AnimationMetadata\" class=\"code-anchor\">AnimationMetadata</a> | <a href=\"api/animations/AnimationMetadata\" class=\"code-anchor\">AnimationMetadata</a>[]</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">一个或多个由 <code><a href=\"api/animations/animate\" class=\"code-anchor\">animate</a>()</code> 或 <code><a href=\"api/animations/sequence\" class=\"code-anchor\">sequence</a>()</code> 函数返回的动画对象，用于描述从一个状态到另一个状态的转变过程。\n当传入一个数组时，默认当做一个动画序列使用。</p><p translation-origin=\"off\">One or more animation objects, as returned by the <code><a href=\"api/animations/animate\" class=\"code-anchor\">animate</a>()</code> or\n<code><a href=\"api/animations/sequence\" class=\"code-anchor\">sequence</a>()</code> function, that form a transformation from one state to another.\nA sequence is used by default when you pass an array.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code><a href=\"api/animations/AnimationOptions\" class=\"code-anchor\">AnimationOptions</a></code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">一个配置对象，可以包含一个开始动画之前的延迟值，和一些由开发人员定义的参数。在这些参数中提供的值会被用作样式的默认值，\n在调用时调用者可以重写这些值。</p><p translation-origin=\"off\">An options object that can contain a delay value for the start of the animation,\nand additional developer-defined parameters. Provided values for additional parameters are used\nas defaults, and override values can be passed to the caller on invocation.</p>\n\n<p>      可选. 默认值是 <code>null</code>.</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h6 class=\"no-anchor\" id=\"返回值\">返回值</h6>\n  <p translation-result=\"on\">一个封装了转场数据的对象。</p><p translation-origin=\"off\"><code><a href=\"api/animations/AnimationTransitionMetadata\" class=\"code-anchor\">AnimationTransitionMetadata</a></code>: An object that encapsulates the transition data.</p>\n\n\n  \n\n\n  \n\n  \n</div>\n\n\n  \n\n  \n\n\n\n\n  \n<section class=\"usage-notes\">\n  <h2 id=\"usage-notes\">使用说明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/animations/transition#usage-notes\"><i class=\"material-icons\">link</i></a></h2>\n  <p translation-result=\"on\">与组件关联的模板会把动画触发器绑定到某个元素上。</p><p translation-origin=\"off\">The template associated with a component binds an animation trigger to an element.</p>\n\n<code-example language=\"HTML\">\n&#x3C;!-- somewhere inside of my-component-tpl.html -->\n&#x3C;div [@myAnimationTrigger]=\"myStatusExp\">...&#x3C;/div>\n</code-example>\n<p translation-result=\"on\">所有转场动画以及用于供转场动画使用的命名状态，都是在动画触发器中定义的，</p><p translation-origin=\"off\">All transitions are defined within an animation trigger,\nalong with named states that the transitions change to and from.</p>\n\n<code-example language=\"typescript\">\n<a href=\"api/animations/trigger\" class=\"code-anchor\">trigger</a>(\"myAnimationTrigger\", [\n // define states\n <a href=\"api/animations/state\" class=\"code-anchor\">state</a>(\"on\", <a href=\"api/animations/style\" class=\"code-anchor\">style</a>({ background: \"green\" })),\n <a href=\"api/animations/state\" class=\"code-anchor\">state</a>(\"off\", <a href=\"api/animations/style\" class=\"code-anchor\">style</a>({ background: \"grey\" })),\n ...]\n</code-example>\n<p translation-result=\"on\">注意，当你在 <code><a href=\"api/animations/group\">group()</a></code> 或 <code><a href=\"api/animations/transition\" class=\"code-anchor\">transition</a>()</code> 中调用 <code><a href=\"api/animations/sequence\" class=\"code-anchor\">sequence</a>()</code> 函数时，除非其内部动画步骤已经执行完了，\n否则不会继续执行后续步骤。</p><p translation-origin=\"off\">Note that when you call the <code><a href=\"api/animations/sequence\" class=\"code-anchor\">sequence</a>()</code> function within a <code><a href=\"api/animations/group\">group()</a></code>\nor a <code><a href=\"api/animations/transition\" class=\"code-anchor\">transition</a>()</code> call, execution does not continue to the next instruction\nuntil each of the inner animation steps have completed.</p>\n\n<h3 id=\"syntax-examples\" translation-result=\"on\">语法范例<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/animations/transition#syntax-examples\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\" id=\"syntax-examples\">Syntax examples<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/animations/transition#syntax-examples\"><i class=\"material-icons\">link</i></a></h3>\n\n<p translation-result=\"on\">下面的例子中定义了一些在两个已定义状态（和默认状态）之间的转场动画，使用了多种选项：</p><p translation-origin=\"off\">The following examples define transitions between the two defined states (and default states),\nusing various options:</p>\n\n<code-example language=\"typescript\">\n// Transition occurs when the <a href=\"api/animations/state\" class=\"code-anchor\">state</a> value\n// bound to \"myAnimationTrigger\" changes from \"on\" to \"off\"\n<a href=\"api/animations/transition\" class=\"code-anchor\">transition</a>(\"on => off\", <a href=\"api/animations/animate\" class=\"code-anchor\">animate</a>(500))\n// Run the same <a href=\"api/animations/animation\" class=\"code-anchor\">animation</a> for both directions\n<a href=\"api/animations/transition\" class=\"code-anchor\">transition</a>(\"on &#x3C;=> off\", <a href=\"api/animations/animate\" class=\"code-anchor\">animate</a>(500))\n// Define <a href=\"api/forms/SelectMultipleControlValueAccessor\" class=\"code-anchor\">multiple</a> state-change pairs separated by commas\n<a href=\"api/animations/transition\" class=\"code-anchor\">transition</a>(\"on => off, off => void\", <a href=\"api/animations/animate\" class=\"code-anchor\">animate</a>(500))\n</code-example>\n<h3 id=\"special-values-for-state-change-expressions\" translation-result=\"on\">状态变更表达式的一些特殊值<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/animations/transition#special-values-for-state-change-expressions\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\" id=\"special-values-for-state-change-expressions\">Special values for state-change expressions<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/animations/transition#special-values-for-state-change-expressions\"><i class=\"material-icons\">link</i></a></h3>\n\n<ul>\n<li>\n<p translation-result=\"on\">  当元素插入到页面中，并且目标状态未知时的所有状态变更：</p><p translation-origin=\"off\">Catch-all state change for when an element is inserted into the page and the\ndestination state is unknown:</p>\n\n</li>\n</ul>\n<code-example language=\"typescript\">\n<a href=\"api/animations/transition\" class=\"code-anchor\">transition</a>(\"void => *\", [\n <a href=\"api/animations/style\" class=\"code-anchor\">style</a>({ opacity: 0 }),\n <a href=\"api/animations/animate\" class=\"code-anchor\">animate</a>(500)\n ])\n</code-example>\n<ul>\n<li>\n<p translation-result=\"on\"> 任意两个状态之间的变更：</p><p translation-origin=\"off\">Capture a state change between any states:</p>\n\n<p><code><a href=\"api/animations/transition\" class=\"code-anchor\">transition</a>(\"* => *\", <a href=\"api/animations/animate\" class=\"code-anchor\">animate</a>(\"1s 0s\"))</code></p>\n</li>\n<li>\n<p translation-result=\"on\">进场和立场时的转场动画：</p><p translation-origin=\"off\">Entry and exit transitions:</p>\n\n</li>\n</ul>\n<code-example language=\"typescript\">\n<a href=\"api/animations/transition\" class=\"code-anchor\">transition</a>(\":enter\", [\n  <a href=\"api/animations/style\" class=\"code-anchor\">style</a>({ opacity: 0 }),\n  <a href=\"api/animations/animate\" class=\"code-anchor\">animate</a>(500, <a href=\"api/animations/style\" class=\"code-anchor\">style</a>({ opacity: 1 }))\n  ]),\n<a href=\"api/animations/transition\" class=\"code-anchor\">transition</a>(\":leave\", [\n  <a href=\"api/animations/animate\" class=\"code-anchor\">animate</a>(500, <a href=\"api/animations/style\" class=\"code-anchor\">style</a>({ opacity: 0 }))\n  ])\n</code-example>\n<ul>\n<li>\n<p translation-result=\"on\">使用 <code>:increment</code> 和 <code>:decrement</code> 来开始转场：</p><p translation-origin=\"off\">Use <code>:increment</code> and <code>:decrement</code> to initiate transitions:</p>\n\n</li>\n</ul>\n<code-example language=\"typescript\">\n<a href=\"api/animations/transition\" class=\"code-anchor\">transition</a>(\":increment\", group([\n <a href=\"api/animations/query\" class=\"code-anchor\">query</a>(':enter', [\n    <a href=\"api/animations/style\" class=\"code-anchor\">style</a>({ left: '100%' }),\n    <a href=\"api/animations/animate\" class=\"code-anchor\">animate</a>('0.5s ease-out', <a href=\"api/animations/style\" class=\"code-anchor\">style</a>('*'))\n  ]),\n <a href=\"api/animations/query\" class=\"code-anchor\">query</a>(':leave', [\n    <a href=\"api/animations/animate\" class=\"code-anchor\">animate</a>('0.5s ease-out', <a href=\"api/animations/style\" class=\"code-anchor\">style</a>({ left: '-100%' }))\n ])\n]))\n\n<a href=\"api/animations/transition\" class=\"code-anchor\">transition</a>(\":decrement\", group([\n <a href=\"api/animations/query\" class=\"code-anchor\">query</a>(':enter', [\n    <a href=\"api/animations/style\" class=\"code-anchor\">style</a>({ left: '100%' }),\n    <a href=\"api/animations/animate\" class=\"code-anchor\">animate</a>('0.5s ease-out', <a href=\"api/animations/style\" class=\"code-anchor\">style</a>('*'))\n  ]),\n <a href=\"api/animations/query\" class=\"code-anchor\">query</a>(':leave', [\n    <a href=\"api/animations/animate\" class=\"code-anchor\">animate</a>('0.5s ease-out', <a href=\"api/animations/style\" class=\"code-anchor\">style</a>({ left: '-100%' }))\n ])\n]))\n</code-example>\n<h3 id=\"state-change-functions\" translation-result=\"on\">状态变更函数<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/animations/transition#state-change-functions\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\" id=\"state-change-functions\">State-change functions<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/animations/transition#state-change-functions\"><i class=\"material-icons\">link</i></a></h3>\n\n<p translation-result=\"on\">下面的例子把 <code>fromState</code> 指定为状态变更函数，当它返回 <code>true</code> 时就会执行动画：</p><p translation-origin=\"off\">Here is an example of a <code>fromState</code> specified as a state-change function that invokes an\nanimation when true:</p>\n\n<code-example language=\"typescript\">\n<a href=\"api/animations/transition\" class=\"code-anchor\">transition</a>((fromState, toState) =>\n {\n  return fromState == \"off\" &#x26;&#x26; toState == \"on\";\n },\n <a href=\"api/animations/animate\" class=\"code-anchor\">animate</a>(\"1s 0s\"))\n</code-example>\n<h3 id=\"animating-to-the-final-state\" translation-result=\"on\">把动画播放到最终状态<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/animations/transition#animating-to-the-final-state\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\" id=\"animating-to-the-final-state\">Animating to the final state<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/animations/transition#animating-to-the-final-state\"><i class=\"material-icons\">link</i></a></h3>\n\n<p translation-result=\"on\">如果转场动画的最后一步是调用 <code><a href=\"api/animations/animate\" class=\"code-anchor\">animate</a>()</code>，并且只传入时序参数却不带样式数据，则该步骤会被自动当做动画弧的终点，\n以便让该元素达到最终状态。\nAngular 会根据需要自动添加或移除 CSS 样式，以确保该元素处于正确的最终状态。</p><p translation-origin=\"off\">If the final step in a transition is a call to <code><a href=\"api/animations/animate\" class=\"code-anchor\">animate</a>()</code> that uses a timing value\nwith no style data, that step is automatically considered the final animation arc,\nfor the element to reach the final state. Angular automatically adds or removes\nCSS styles to ensure that the element is in the correct final state.</p>\n\n<p translation-result=\"on\">下面的例子定义了一个转场动画，它先隐藏该元素，然后确保它可以正确设置到触发器处于激活状态时的动画：</p><p translation-origin=\"off\">The following example defines a transition that starts by hiding the element,\nthen makes sure that it animates properly to whatever state is currently active for trigger:</p>\n\n<code-example language=\"typescript\">\n<a href=\"api/animations/transition\" class=\"code-anchor\">transition</a>(\"void => *\", [\n  <a href=\"api/animations/style\" class=\"code-anchor\">style</a>({ opacity: 0 }),\n  <a href=\"api/animations/animate\" class=\"code-anchor\">animate</a>(500)\n ])\n</code-example>\n<h3 id=\"boolean-value-matching\" translation-result=\"on\">逻辑值匹配<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/animations/transition#boolean-value-matching\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\" id=\"boolean-value-matching\">Boolean value matching<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/animations/transition#boolean-value-matching\"><i class=\"material-icons\">link</i></a></h3>\n\n<p translation-result=\"on\">如果触发器的绑定值是逻辑型的，它就可以使用一个与 <code>true</code>、<code>false</code> 或 1、0 进行比较的转场表达式进行匹配。例如：</p><p translation-origin=\"off\">If a trigger binding value is a Boolean, it can be matched using a transition expression\nthat compares true and false or 1 and 0. For example:</p>\n\n<code-example>\n// in the template\n&#x3C;div [@openClose]=\"open ? true : false\">...&#x3C;/div>\n// in the component metadata\n<a href=\"api/animations/trigger\" class=\"code-anchor\">trigger</a>('openClose', [\n  <a href=\"api/animations/state\" class=\"code-anchor\">state</a>('true', <a href=\"api/animations/style\" class=\"code-anchor\">style</a>({ height: '*' })),\n  <a href=\"api/animations/state\" class=\"code-anchor\">state</a>('false', <a href=\"api/animations/style\" class=\"code-anchor\">style</a>({ height: '0px' })),\n  <a href=\"api/animations/transition\" class=\"code-anchor\">transition</a>('false &#x3C;=> true', <a href=\"api/animations/animate\" class=\"code-anchor\">animate</a>(500))\n])\n</code-example>\n\n</section>\n\n\n\n  </div>\n</article>\n\n<!-- links to this doc:\n - api/animations\n - api/animations/AnimationMetadataType\n - api/animations/AnimationOptions\n - api/animations/AnimationTransitionMetadata\n - api/animations/animate\n - api/animations/group\n - api/animations/query\n - api/animations/sequence\n - api/animations/stagger\n - api/animations/state\n - api/animations/trigger\n - api/core/Component\n - guide/animations\n - guide/complex-animation-sequences\n - guide/elements\n - guide/reusable-animations\n - guide/route-animations\n - guide/router\n - guide/transition-and-triggers\n-->\n<!-- links from this doc:\n - /api\n - api/animations\n - api/animations/AnimationMetadata\n - api/animations/AnimationOptions\n - api/animations/AnimationTransitionMetadata\n - api/animations/animate\n - api/animations/animation\n - api/animations/group\n - api/animations/query\n - api/animations/sequence\n - api/animations/state\n - api/animations/style\n - api/animations/transition#animating-to-the-final-state\n - api/animations/transition#boolean-value-matching\n - api/animations/transition#special-values-for-state-change-expressions\n - api/animations/transition#state-change-functions\n - api/animations/transition#syntax-examples\n - api/animations/transition#transition\n - api/animations/transition#usage-notes\n - api/animations/trigger\n - api/forms/SelectMultipleControlValueAccessor\n - https://github.com/angular/angular-cn/edit/aio/packages/animations/src/animation_metadata.ts?message=docs(animations)%3A%20请简述你的修改...#L1271-L1517\n - https://github.com/angular/angular-cn/tree/10.0.0-rc.0/packages/animations/src/animation_metadata.ts#L1271-L1517\n-->"
}