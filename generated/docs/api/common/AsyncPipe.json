{
  "id": "api/common/AsyncPipe",
  "title": "AsyncPipe",
  "contents": "\n\n<article>\n  <div class=\"breadcrumb-container\">\n    <div class=\"breadcrumb\">\n      <script type=\"application/ld+json\">\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          \"itemListElement\": [\n            { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.cn//api\", \"name\": \"API\" } },\n            { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.cn/api/common\", \"name\": \"@angular/common\" } },\n            { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.cn/api/common/AsyncPipe\", \"name\": \"AsyncPipe\" } }\n          ]\n        }\n      </script>\n        <a href=\"/api\">API</a> > <a href=\"api/common\">@angular/common</a>\n    </div>\n    <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular-cn/edit/aio/packages/common/src/pipes/async_pipe.ts?message=docs(common)%3A%20请简述你的修改...#L53-L160\" aria-label=\"提供编辑建议\" title=\"提供编辑建议\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/angular/angular-cn/tree/10.0.0-rc.0/packages/common/src/pipes/async_pipe.ts#L53-L160\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n  </div>\n  \n  <header class=\"api-header\">\n    <h1 id=\"asyncpipe\">AsyncPipe<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/AsyncPipe#asyncpipe\"><i class=\"material-icons\">link</i></a></h1>\n    \n    <label class=\"api-type-label pipe\">pipe</label>\n    \n    \n    <label class=\"api-status-label impure-pipe\">非纯管道</label>\n  </header>\n  \n  <aio-toc class=\"embedded\"></aio-toc>\n\n  <div class=\"api-body\">\n    \n  <section class=\"short-description\">\n    <p translation-result=\"on\">从一个异步回执中解出一个值。</p><p translation-origin=\"off\">Unwraps a value from an asynchronous primitive.</p>\n\n\n    <p><a href=\"api/common/AsyncPipe#description\">查看\"说明\"...</a></p>\n  </section>\n  \n\n  \n\n  \n<section class=\"pipe-overview\">\n  <code-example hidecopy=\"true\" class=\"no-box api-heading\">{{ obj_expression | <span class=\"kwd nocode\">async</span> }}</code-example>\n\n  <h2 id=\"ngmodule\">NgModule<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/AsyncPipe#ngmodule\"><i class=\"material-icons\">link</i></a></h2>\n<ul class=\"ngmodule-list\">\n\n  <li>\n    <a href=\"api/common/CommonModule\">\n      <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box\">CommonModule</code-example>\n    </a>\n  </li>\n  \n</ul>\n\n\n\n  \n  <h2 id=\"input-value\">输入值<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/AsyncPipe#input-value\"><i class=\"material-icons\">link</i></a></h2>\n  <table class=\"is-full-width list-table parameters-table pipe-parameters\">\n  <tbody>\n  \n    <tr class=\"pipe-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>obj</code>\n      </td>\n      <td class=\"param-type\"><code>Observable<any> | Promise<any></any></any></code></td>\n      <td class=\"param-description\">\nn      </td>\n    </tr>\n  </tbody>\n</table>\n  \n  \n</section>\n\n\n  \n\n  \n\n<section class=\"description\">\n  <h2 id=\"description\">说明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/AsyncPipe#description\"><i class=\"material-icons\">link</i></a></h2>\n  <p translation-result=\"on\"><code><a href=\"api/core/testing/async\" class=\"code-anchor\">async</a></code> 管道会订阅一个 <code>Observable</code> 或 <code>Promise</code>，并返回它发出的最近一个值。\n当新值到来时，<code><a href=\"api/core/testing/async\" class=\"code-anchor\">async</a></code> 管道就会把该组件标记为需要进行变更检测。当组件被销毁时，<code><a href=\"api/core/testing/async\" class=\"code-anchor\">async</a></code> 管道就会自动取消订阅，以消除潜在的内存泄露问题。</p><p translation-origin=\"off\">The <code><a href=\"api/core/testing/async\" class=\"code-anchor\">async</a></code> pipe subscribes to an <code>Observable</code> or <code>Promise</code> and returns the latest value it has\nemitted. When a new value is emitted, the <code><a href=\"api/core/testing/async\" class=\"code-anchor\">async</a></code> pipe marks the component to be checked for\nchanges. When the component gets destroyed, the <code><a href=\"api/core/testing/async\" class=\"code-anchor\">async</a></code> pipe unsubscribes automatically to avoid\npotential memory leaks.</p>\n\n\n</section>\n\n\n\n  \n<section class=\"usage-notes\">\n  <h2 id=\"usage-notes\">使用说明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/AsyncPipe#usage-notes\"><i class=\"material-icons\">link</i></a></h2>\n  <h3 id=\"examples\" translation-result=\"on\">例子<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/AsyncPipe#examples\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\" id=\"examples\">Examples<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/AsyncPipe#examples\"><i class=\"material-icons\">link</i></a></h3>\n\n<p translation-result=\"on\">这个例子把一个 <code>Promise</code> 绑定到了视图中。点击 <code><a href=\"api/router/Resolve\" class=\"code-anchor\">Resolve</a></code> 按钮就会解析此 Promise。</p><p translation-origin=\"off\">This example binds a <code>Promise</code> to the view. Clicking the <code><a href=\"api/router/Resolve\" class=\"code-anchor\">Resolve</a></code> button resolves the\npromise.</p>\n\n<code-example path=\"common/pipes/ts/async_pipe.ts\" region=\"AsyncPipePromise\">\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'async-promise-pipe',\n  template: `&#x3C;div>\n    &#x3C;code>promise|async&#x3C;/code>:\n    &#x3C;button (click)=\"clicked()\">{{ arrived ? 'Reset' : '<a href=\"api/router/Resolve\" class=\"code-anchor\">Resolve</a>' }}&#x3C;/button>\n    &#x3C;span>Wait for it... {{ greeting | async }}&#x3C;/span>\n  &#x3C;/div>`\n})\nexport class AsyncPromisePipeComponent {\n  greeting: Promise&#x3C;string>|null = null;\n  arrived: boolean = false;\n\n  private resolve: Function|null = null;\n\n  constructor() {\n    this.reset();\n  }\n\n  reset() {\n    this.arrived = false;\n    this.greeting = new Promise&#x3C;string>((resolve, reject) => {\n      this.resolve = resolve;\n    });\n  }\n\n  clicked() {\n    if (this.arrived) {\n      this.reset();\n    } else {\n      this.resolve!('hi there!');\n      this.arrived = true;\n    }\n  }\n}\n\n</code-example>\n<p translation-result=\"on\">还可以把 <code><a href=\"api/core/testing/async\" class=\"code-anchor\">async</a></code> 用于 <code>Observable</code>。下面的例子就把 <code>time</code> 这个 <code>Observable</code> 绑定到了视图上。这个 <code>Observable</code> 会不断使用当前时间更新视图。</p><p translation-origin=\"off\">It's also possible to use <code><a href=\"api/core/testing/async\" class=\"code-anchor\">async</a></code> with Observables. The example below binds the <code>time</code> Observable\nto the view. The Observable continuously updates the view with the current time.</p>\n\n<code-example path=\"common/pipes/ts/async_pipe.ts\" region=\"AsyncPipeObservable\">\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'async-observable-pipe',\n  template: '&#x3C;div>&#x3C;code>observable|async&#x3C;/code>: <a href=\"api/common/Time\" class=\"code-anchor\">Time</a>: {{ time | async }}&#x3C;/div>'\n})\nexport class AsyncObservablePipeComponent {\n  time = new Observable&#x3C;string>((observer: Observer&#x3C;string>) => {\n    setInterval(() => observer.next(new Date().toString()), 1000);\n  });\n}\n\n</code-example>\n\n</section>\n\n\n\n  </div>\n</article>\n\n<!-- links to this doc:\n - api/common\n - api/common/CommonModule\n - api/common/NgIf\n - api/core/OnDestroy\n - api/core/PipeTransform\n - guide/http\n - guide/observables-in-angular\n - guide/pipes\n - guide/reactive-forms\n - guide/router\n - guide/testing\n - tutorial/toh-pt6\n-->\n<!-- links from this doc:\n - /api\n - api/common\n - api/common/AsyncPipe#asyncpipe\n - api/common/AsyncPipe#description\n - api/common/AsyncPipe#examples\n - api/common/AsyncPipe#input-value\n - api/common/AsyncPipe#ngmodule\n - api/common/AsyncPipe#usage-notes\n - api/common/CommonModule\n - api/common/Time\n - api/core/Component\n - api/core/testing/async\n - api/router/Resolve\n - https://github.com/angular/angular-cn/edit/aio/packages/common/src/pipes/async_pipe.ts?message=docs(common)%3A%20请简述你的修改...#L53-L160\n - https://github.com/angular/angular-cn/tree/10.0.0-rc.0/packages/common/src/pipes/async_pipe.ts#L53-L160\n-->"
}