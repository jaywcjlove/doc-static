{
  "id": "api/common/NgIf",
  "title": "NgIf",
  "contents": "\n\n<article>\n  <div class=\"breadcrumb-container\">\n    <div class=\"breadcrumb\">\n      <script type=\"application/ld+json\">\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          \"itemListElement\": [\n            { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.cn//api\", \"name\": \"API\" } },\n            { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.cn/api/common\", \"name\": \"@angular/common\" } },\n            { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.cn/api/common/NgIf\", \"name\": \"NgIf\" } }\n          ]\n        }\n      </script>\n        <a href=\"/api\">API</a> > <a href=\"api/common\">@angular/common</a>\n    </div>\n    <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular-cn/edit/aio/packages/common/src/directives/ng_if.ts?message=docs(common)%3A%20请简述你的修改...#L10-L299\" aria-label=\"提供编辑建议\" title=\"提供编辑建议\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/angular/angular-cn/tree/12.1.0-next.1/packages/common/src/directives/ng_if.ts#L10-L299\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n  </div>\n  \n  <header class=\"api-header\">\n    <h1 id=\"ngif\">NgIf<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/NgIf#ngif\"><i class=\"material-icons\">link</i></a></h1>\n    \n    <label class=\"api-type-label directive\">directive</label>\n    \n    \n    \n  </header>\n  \n  <aio-toc class=\"embedded\"></aio-toc>\n\n  <div class=\"api-body\">\n    \n  <section class=\"short-description\">\n    <p translation-result=\"on\">本结构型指令用于根据表达式的值（强转为 boolean）是否为真值，来有条件的包含某个模板。当表达式计算为 true 时，Angular 会渲染 <code>then</code> 子句中提供的模板，当为 false 或 null 时则渲染可选的 <code>else</code> 子句中的模板。<code>else</code> 子句的默认模板是空白模板。</p><p translation-origin=\"off\">A structural directive that conditionally includes a template based on the value of\nan expression coerced to Boolean.\nWhen the expression evaluates to true, Angular renders the template\nprovided in a <code>then</code> clause, and when  false or null,\nAngular renders the template provided in an optional <code>else</code> clause. The default\ntemplate for the <code>else</code> clause is blank.</p>\n\n\n    <p no-translate=\"\"><a href=\"api/common/NgIf#description\">查看\"说明\"...</a></p>\n  </section>\n  \n\n  \n\n  \n  \n\n  \n\n<h2 id=\"exported-from\">Exported from<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/NgIf#exported-from\"><i class=\"material-icons\">link</i></a></h2>\n<ul>\n\n  <li>\n    \n    <a href=\"api/common/CommonModule\">\n      <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box\">CommonModule</code-example>\n    </a>\n    \n  </li>\n\n</ul>\n\n\n  \n<section class=\"selector-list\">\n  <h2 id=\"selectors\">选择器<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/NgIf#selectors\"><i class=\"material-icons\">link</i></a></h2>\n  \n  <ul>\n    <li><code>[<a href=\"api/common/NgIf\" class=\"code-anchor\">ngIf</a>]</code></li>\n    \n  </ul>\n  \n</section>\n\n\n\n  \n\n<section class=\"instance-properties\">\n  <a name=\"properties\"></a>\n  <h2 id=\"instance-properties\">属性<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/NgIf#instance-properties\"><i class=\"material-icons\">link</i></a></h2>\n  <table class=\"is-full-width list-table property-table\">\n    <thead>\n      <tr>\n        <th>属性</th>\n        <th>说明</th>\n      </tr>\n    </thead>\n    <tbody>\n    \n      <tr class=\"instance-property\">\n        <td>\n          <a id=\"ngIf\"></a>\n          <code class=\"\"><span class=\"property-binding\">@<a href=\"api/core/Input\" class=\"code-anchor\">Input</a>()</span><br><span class=\"member-name\"><a href=\"api/common/NgIf\" class=\"code-anchor\">ngIf</a></span>: T</code>\n        </td>\n        <td><span class=\"write-only-property\">只写</span>\n          \n          <div no-translate=\"\"><p translation-result=\"on\">布尔表达式，将其作为显示模板的条件进行计算。</p><p translation-origin=\"off\">The Boolean expression to evaluate as the condition for showing a template.</p>\n\n</div>\n          \n          </td>\n    </tr>\n    \n      <tr class=\"instance-property\">\n        <td>\n          <a id=\"ngIfThen\"></a>\n          <code class=\"\"><span class=\"property-binding\">@<a href=\"api/core/Input\" class=\"code-anchor\">Input</a>()</span><br><span class=\"member-name\">ngIfThen</span>: <a href=\"api/core/TemplateRef\" class=\"code-anchor\">TemplateRef</a>&#x3C;<a href=\"api/common/NgIfContext\" class=\"code-anchor\">NgIfContext</a>&#x3C;T>></code>\n        </td>\n        <td><span class=\"write-only-property\">只写</span>\n          \n          <div no-translate=\"\"><p translation-result=\"on\">当此条件表达式计算为 true 时要显示的模板。</p><p translation-origin=\"off\">A template to show if the condition expression evaluates to true.</p>\n\n</div>\n          \n          </td>\n    </tr>\n    \n      <tr class=\"instance-property\">\n        <td>\n          <a id=\"ngIfElse\"></a>\n          <code class=\"\"><span class=\"property-binding\">@<a href=\"api/core/Input\" class=\"code-anchor\">Input</a>()</span><br><span class=\"member-name\">ngIfElse</span>: <a href=\"api/core/TemplateRef\" class=\"code-anchor\">TemplateRef</a>&#x3C;<a href=\"api/common/NgIfContext\" class=\"code-anchor\">NgIfContext</a>&#x3C;T>></code>\n        </td>\n        <td><span class=\"write-only-property\">只写</span>\n          \n          <div no-translate=\"\"><p translation-result=\"on\">当此条件表达式计算为 false 时要显示的模板。</p><p translation-origin=\"off\">A template to show if the condition expression evaluates to false.</p>\n\n</div>\n          \n          </td>\n    </tr>\n    \n    </tbody>\n  </table>\n</section>\n\n\n\n  \n\n\n  \n  <section class=\"description\">\n    <h2 id=\"description\">说明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/NgIf#description\"><i class=\"material-icons\">link</i></a></h2>\n    <p translation-result=\"on\">通常使用指令的<a href=\"guide/structural-directives#asterisk\">简写形式</a> <code>*<a href=\"api/common/NgIf\" class=\"code-anchor\">ngIf</a>=\"condition\"</code>，作为插入模板的锚点元素的属性提供。Angular 将其扩展为更明确的版本，其中锚点元素包含在 <code>&#x3C;ng-template></code> 元素中。</p><p translation-origin=\"off\">A <a href=\"guide/structural-directives#asterisk\">shorthand form</a> of the directive,\n<code>*<a href=\"api/common/NgIf\" class=\"code-anchor\">ngIf</a>=\"condition\"</code>, is generally used, provided\nas an attribute of the anchor element for the inserted template.\nAngular expands this into a more explicit version, in which the anchor element\nis contained in an <code>&#x3C;ng-template></code> element.</p>\n\n<p translation-result=\"on\">具有简写语法的简单形式：</p><p translation-origin=\"off\">Simple form with shorthand syntax:</p>\n\n<code-example>\n&#x3C;div *<a href=\"api/common/NgIf\" class=\"code-anchor\">ngIf</a>=\"condition\">Content to render when condition is true.&#x3C;/div>\n</code-example>\n<p translation-result=\"on\">具有扩展语法的简单形式：</p><p translation-origin=\"off\">Simple form with expanded syntax:</p>\n\n<code-example>\n&#x3C;ng-template [<a href=\"api/common/NgIf\" class=\"code-anchor\">ngIf</a>]=\"condition\">&#x3C;div>Content to render when condition is\ntrue.&#x3C;/div>&#x3C;/ng-template>\n</code-example>\n<p translation-result=\"on\">带有 “else” 块的格式：</p><p translation-origin=\"off\">Form with an \"else\" block:</p>\n\n<code-example>\n&#x3C;div *<a href=\"api/common/NgIf\" class=\"code-anchor\">ngIf</a>=\"condition; else elseBlock\">Content to render when condition is true.&#x3C;/div>\n&#x3C;ng-template #elseBlock>Content to render when condition is false.&#x3C;/ng-template>\n</code-example>\n<p translation-result=\"on\">带 “then” 和 “else” 块的简写形式：</p><p translation-origin=\"off\">Shorthand form with \"then\" and \"else\" blocks:</p>\n\n<code-example>\n&#x3C;div *<a href=\"api/common/NgIf\" class=\"code-anchor\">ngIf</a>=\"condition; then thenBlock else elseBlock\">&#x3C;/div>\n&#x3C;ng-template #thenBlock>Content to render when condition is true.&#x3C;/ng-template>\n&#x3C;ng-template #elseBlock>Content to render when condition is false.&#x3C;/ng-template>\n</code-example>\n<p translation-result=\"on\">本地存储值的形式：</p><p translation-origin=\"off\">Form with storing the value locally:</p>\n\n<code-example>\n&#x3C;div *<a href=\"api/common/NgIf\" class=\"code-anchor\">ngIf</a>=\"condition as value; else elseBlock\">{{value}}&#x3C;/div>\n&#x3C;ng-template #elseBlock>Content to render when value is null.&#x3C;/ng-template>\n</code-example>\n\n    <p translation-result=\"on\"><code>*<a href=\"api/common/NgIf\" class=\"code-anchor\">ngIf</a></code> 指令通常用于根据条件显示内联模板，就像下面的例子展示的一样。默认的 <code>else</code> 模板是空白的。</p><p translation-origin=\"off\">The <code>*<a href=\"api/common/NgIf\" class=\"code-anchor\">ngIf</a></code> directive is most commonly used to conditionally show an inline template,\nas seen in the following  example.\nThe default <code>else</code> template is blank.</p>\n\n<code-example path=\"common/ngIf/ts/module.ts\" region=\"NgIfSimple\">\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'ng-if-simple',\n  template: `\n    &#x3C;button (click)=\"show = !show\">{{show ? 'hide' : 'show'}}&#x3C;/button>\n    show = {{show}}\n    &#x3C;br>\n    &#x3C;div *<a href=\"api/common/NgIf\" class=\"code-anchor\">ngIf</a>=\"show\">Text to show&#x3C;/div>\n`\n})\nexport class NgIfSimple {\n  show = true;\n}\n\n</code-example>\n<h3 id=\"showing-an-alternative-template-using-else\" translation-result=\"on\">使用 <code>else</code> 显示替代模板<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/NgIf#showing-an-alternative-template-using-else\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\" id=\"showing-an-alternative-template-using-else\">Showing an alternative template using <code>else</code><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/NgIf#showing-an-alternative-template-using-else\"><i class=\"material-icons\">link</i></a></h3>\n\n<p translation-result=\"on\">要在 <code>expression</code> 计算为 false 时显示一个模板，请使用如下所示的 <code>else</code> 模板绑定。<code>else</code> 绑定指向一个带有 <code>#elseBlock</code> 标签的 <code>&#x3C;ng-template></code>。该模板可以定义在组件视图中的任何地方，但通常放在 <code><a href=\"api/common/NgIf\" class=\"code-anchor\">ngIf</a></code> 的紧后方，以提高可读性。</p><p translation-origin=\"off\">To display a template when <code>expression</code> evaluates to false, use an <code>else</code> template\nbinding as shown in the following example.\nThe <code>else</code> binding points to an <code>&#x3C;ng-template></code>  element labeled <code>#elseBlock</code>.\nThe template can be defined anywhere in the component view, but is typically placed right after\n<code><a href=\"api/common/NgIf\" class=\"code-anchor\">ngIf</a></code> for readability.</p>\n\n<code-example path=\"common/ngIf/ts/module.ts\" region=\"NgIfElse\">\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'ng-if-else',\n  template: `\n    &#x3C;button (click)=\"show = !show\">{{show ? 'hide' : 'show'}}&#x3C;/button>\n    show = {{show}}\n    &#x3C;br>\n    &#x3C;div *<a href=\"api/common/NgIf\" class=\"code-anchor\">ngIf</a>=\"show; else elseBlock\">Text to show&#x3C;/div>\n    &#x3C;ng-template #elseBlock>Alternate text while primary text is hidden&#x3C;/ng-template>\n`\n})\nexport class NgIfElse {\n  show = true;\n}\n\n</code-example>\n<h3 id=\"using-an-external-then-template\" translation-result=\"on\">使用内部 <code>then</code> 模板<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/NgIf#using-an-external-then-template\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\" id=\"using-an-external-then-template\">Using an external <code>then</code> template<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/NgIf#using-an-external-then-template\"><i class=\"material-icons\">link</i></a></h3>\n\n<p translation-result=\"on\">在前面的例子中，then 子句的模板是内联的，也就是作为 <code><a href=\"api/common/NgIf\" class=\"code-anchor\">ngIf</a></code> 指令所在标签的内容。你还可以通过引用一个带标签的 <code>&#x3C;ng-template></code> 元素来指定一个在外部定义的模板。这样就可以让你在运行时更改模板，就像下面的例子所演示的。</p><p translation-origin=\"off\">In the previous example, the then-clause template is specified inline, as the content of the\ntag that contains the <code><a href=\"api/common/NgIf\" class=\"code-anchor\">ngIf</a></code> directive. You can also specify a template that is defined\nexternally, by referencing a labeled <code>&#x3C;ng-template></code> element. When you do this, you can\nchange which template to use at runtime, as shown in the following example.</p>\n\n<code-example path=\"common/ngIf/ts/module.ts\" region=\"NgIfThenElse\">\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'ng-if-then-else',\n  template: `\n    &#x3C;button (click)=\"show = !show\">{{show ? 'hide' : 'show'}}&#x3C;/button>\n    &#x3C;button (click)=\"switchPrimary()\">Switch Primary&#x3C;/button>\n    show = {{show}}\n    &#x3C;br>\n    &#x3C;div *<a href=\"api/common/NgIf\" class=\"code-anchor\">ngIf</a>=\"show; then thenBlock; else elseBlock\">this is ignored&#x3C;/div>\n    &#x3C;ng-template #primaryBlock>Primary text to show&#x3C;/ng-template>\n    &#x3C;ng-template #secondaryBlock>Secondary text to show&#x3C;/ng-template>\n    &#x3C;ng-template #elseBlock>Alternate text while primary text is hidden&#x3C;/ng-template>\n`\n})\nexport class NgIfThenElse implements <a href=\"api/core/OnInit\" class=\"code-anchor\">OnInit</a> {\n  thenBlock: <a href=\"api/core/TemplateRef\" class=\"code-anchor\">TemplateRef</a>&#x3C;any>|null = null;\n  show = true;\n\n  @<a href=\"api/core/ViewChild\" class=\"code-anchor\">ViewChild</a>('primaryBlock', {<a href=\"api/upgrade/static\" class=\"code-anchor\">static</a>: true}) primaryBlock: <a href=\"api/core/TemplateRef\" class=\"code-anchor\">TemplateRef</a>&#x3C;any>|null = null;\n  @<a href=\"api/core/ViewChild\" class=\"code-anchor\">ViewChild</a>('secondaryBlock', {<a href=\"api/upgrade/static\" class=\"code-anchor\">static</a>: true}) secondaryBlock: <a href=\"api/core/TemplateRef\" class=\"code-anchor\">TemplateRef</a>&#x3C;any>|null = null;\n\n  switchPrimary() {\n    this.thenBlock = this.thenBlock === this.primaryBlock ? this.secondaryBlock : this.primaryBlock;\n  }\n\n  ngOnInit() {\n    this.thenBlock = this.primaryBlock;\n  }\n}\n\n</code-example>\n<h3 id=\"storing-a-conditional-result-in-a-variable\" translation-result=\"on\">把条件结果保存在变量中<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/NgIf#storing-a-conditional-result-in-a-variable\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\" id=\"storing-a-conditional-result-in-a-variable\">Storing a conditional result in a variable<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/NgIf#storing-a-conditional-result-in-a-variable\"><i class=\"material-icons\">link</i></a></h3>\n\n<p translation-result=\"on\">比如你想显示同一个对象中的一组属性。如果你在等待异步数据，此对象可能是未定义的。这时候，你可以使用 <code><a href=\"api/common/NgIf\" class=\"code-anchor\">ngIf</a></code>，并且把此条件结果保存在一个局部变量中，如下例所示。</p><p translation-origin=\"off\">You might want to show a set of properties from the same object. If you are waiting\nfor asynchronous data, the object can be undefined.\nIn this case, you can use <code><a href=\"api/common/NgIf\" class=\"code-anchor\">ngIf</a></code> and store the result of the condition in a local\nvariable as shown in the following example.</p>\n\n<code-example path=\"common/ngIf/ts/module.ts\" region=\"NgIfAs\">\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'ng-if-as',\n  template: `\n    &#x3C;button (click)=\"nextUser()\">Next User&#x3C;/button>\n    &#x3C;br>\n    &#x3C;div *<a href=\"api/common/NgIf\" class=\"code-anchor\">ngIf</a>=\"userObservable | <a href=\"api/common/AsyncPipe\" class=\"code-anchor\">async</a> as user; else loading\">\n      Hello {{user.last}}, {{user.first}}!\n    &#x3C;/div>\n    &#x3C;ng-template #loading let-user>Waiting... (user is {{user|<a href=\"api/common/JsonPipe\" class=\"code-anchor\">json</a>}})&#x3C;/ng-template>\n`\n})\nexport class NgIfAs {\n  userObservable = new Subject&#x3C;{first: string, last: string}>();\n  first = ['John', 'Mike', 'Mary', 'Bob'];\n  firstIndex = 0;\n  last = ['Smith', 'Novotny', 'Angular'];\n  lastIndex = 0;\n\n  nextUser() {\n    let first = this.first[this.firstIndex++];\n    if (this.firstIndex >= this.first.length) this.firstIndex = 0;\n    let last = this.last[this.lastIndex++];\n    if (this.lastIndex >= this.last.length) this.lastIndex = 0;\n    this.userObservable.next({first, last});\n  }\n}\n\n</code-example>\n<p translation-result=\"on\">这段代码只使用了一个 <code><a href=\"api/common/AsyncPipe\" class=\"code-anchor\">AsyncPipe</a></code>，所以只会创建一个订阅。此条件表达式把 <code>userStream|<a href=\"api/common/AsyncPipe\" class=\"code-anchor\">async</a></code> 的结果保存在局部变量 <code>user</code> 中。然后你就可以反复绑定这个局部变量 <code>user</code> 了。</p><p translation-origin=\"off\">This code uses only one <code><a href=\"api/common/AsyncPipe\" class=\"code-anchor\">AsyncPipe</a></code>, so only one subscription is created.\nThe conditional statement stores the result of <code>userStream|<a href=\"api/common/AsyncPipe\" class=\"code-anchor\">async</a></code> in the local variable <code>user</code>.\nYou can then bind the local <code>user</code> repeatedly.</p>\n\n<p translation-result=\"on\">只有当 <code>userStream</code> 返回了值的时候，才会有条件的显示此数据。所以你不用使用安全导航操作符 (<code>?.</code>) 来在访问属性时避免空值。你可以在等待数据时显示一个备用模板。</p><p translation-origin=\"off\">The conditional displays the data only if <code>userStream</code> returns a value,\nso you don't need to use the\nsafe-navigation-operator (<code>?.</code>)\nto guard against null values when accessing properties.\nYou can display an alternative template while waiting for the data.</p>\n\n<h3 id=\"shorthand-syntax\" translation-result=\"on\">简写语法<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/NgIf#shorthand-syntax\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\" id=\"shorthand-syntax\">Shorthand syntax<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/NgIf#shorthand-syntax\"><i class=\"material-icons\">link</i></a></h3>\n\n<p translation-result=\"on\"><code>*<a href=\"api/common/NgIf\" class=\"code-anchor\">ngIf</a></code> 的简写语法会把 \"then\" 和 \"else\" 子句分别扩展成两个独立的模板。比如，考虑下列简写语句，它要在等待数据加载期间显示一个加载中页面。</p><p translation-origin=\"off\">The shorthand syntax <code>*<a href=\"api/common/NgIf\" class=\"code-anchor\">ngIf</a></code> expands into two separate template specifications\nfor the \"then\" and \"else\" clauses. For example, consider the following shorthand statement,\nthat is meant to show a loading page while waiting for data to be loaded.</p>\n\n<code-example>\n&#x3C;div class=\"hero-list\" *<a href=\"api/common/NgIf\" class=\"code-anchor\">ngIf</a>=\"heroes else loading\">\n ...\n&#x3C;/div>\n\n&#x3C;ng-template #loading>\n &#x3C;div>Loading...&#x3C;/div>\n&#x3C;/ng-template>\n</code-example>\n<p translation-result=\"on\">你可以看到，\"else\" 子句引用了带有 <code>#loading</code> 标签的 <code>&#x3C;ng-template></code>，而 \"then\" 子句的模板是作为宿主元素的内容提供的。</p><p translation-origin=\"off\">You can see that the \"else\" clause references the <code>&#x3C;ng-template></code>\nwith the <code>#loading</code> label, and the template for the \"then\" clause\nis provided as the content of the anchor element.</p>\n\n<p translation-result=\"on\">不过，当 Angular 扩展此简写语法的时候，它创建了另一个带有 <code><a href=\"api/common/NgIf\" class=\"code-anchor\">ngIf</a></code> 和 <code>ngIfElse</code> 指令的 <code>&#x3C;ng-template></code>。此宿主元素包含的 \"then\" 子句的模板变成了无标签的  <code>&#x3C;ng-template></code> 的内容。</p><p translation-origin=\"off\">However, when Angular expands the shorthand syntax, it creates\nanother <code>&#x3C;ng-template></code> tag, with <code><a href=\"api/common/NgIf\" class=\"code-anchor\">ngIf</a></code> and <code>ngIfElse</code> directives.\nThe anchor element containing the template for the \"then\" clause becomes\nthe content of this unlabeled <code>&#x3C;ng-template></code> tag.</p>\n\n<code-example>\n&#x3C;ng-template [<a href=\"api/common/NgIf\" class=\"code-anchor\">ngIf</a>]=\"heroes\" [ngIfElse]=\"loading\">\n &#x3C;div class=\"hero-list\">\n  ...\n &#x3C;/div>\n&#x3C;/ng-template>\n\n&#x3C;ng-template #loading>\n &#x3C;div>Loading...&#x3C;/div>\n&#x3C;/ng-template>\n</code-example>\n<p translation-result=\"on\"> 隐式模板对象的存在，影响了结构型指令的嵌套规则。欲知详情，参见<a href=\"https://angular.io/guide/structural-directives#one-per-element\">结构型指令</a>。</p><p translation-origin=\"off\">The presence of the implicit template object has implications for the nesting of\nstructural directives. For more on this subject, see\n<a href=\"https://angular.io/guide/built-in-directives#one-per-element\">Structural Directives</a>.</p>\n\n\n  </section>\n  \n\n  \n<section class=\"static-properties\">\n  <a name=\"properties\"></a>\n  <h2 id=\"static-properties\">静态属性<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/NgIf#static-properties\"><i class=\"material-icons\">link</i></a></h2>\n  <table class=\"is-full-width list-table property-table\">\n    <thead>\n      <tr>\n        <th>属性</th>\n        <th>说明</th>\n      </tr>\n    </thead>\n    <tbody>\n    \n      <tr class=\"static-property\">\n        <td>\n          <a id=\"ngTemplateGuard_ngIf\"></a>\n          <code class=\"\"><a href=\"api/upgrade/static\" class=\"code-anchor\">static</a> <span class=\"member-name\">ngTemplateGuard_ngIf</span>: 'binding'</code>\n        </td>\n        <td>\n          \n          <div no-translate=\"\"><p translation-result=\"on\">为绑定到 <code><a href=\"api/common/NgIf\" class=\"code-anchor\">ngIf</a></code> 输入属性上的模板确保正确的类型。</p><p translation-origin=\"off\">Assert the correct type of the expression bound to the <code><a href=\"api/common/NgIf\" class=\"code-anchor\">ngIf</a></code> input within the template.</p>\n\n</div>\n          <p translation-result=\"on\">该静态字段的存在向 Ivy 模板类型检查编译器发出信号，即当 <code><a href=\"api/common/NgIf\" class=\"code-anchor\">NgIf</a></code> 结构化指令渲染其模板时，应以某种方式窄化 <code><a href=\"api/common/NgIf\" class=\"code-anchor\">ngIf</a></code>。对于 <code><a href=\"api/common/NgIf\" class=\"code-anchor\">NgIf</a></code>，绑定表达式本身用于窄化其类型，这允许 TypeScript 的 strictNullChecks 功能与 <code><a href=\"api/common/NgIf\" class=\"code-anchor\">NgIf</a></code> 一起使用。</p><p translation-origin=\"off\">The presence of this static field is a signal to the Ivy template type check compiler that\nwhen the <code><a href=\"api/common/NgIf\" class=\"code-anchor\">NgIf</a></code> structural directive renders its template, the type of the expression bound\nto <code><a href=\"api/common/NgIf\" class=\"code-anchor\">ngIf</a></code> should be narrowed in some way. For <code><a href=\"api/common/NgIf\" class=\"code-anchor\">NgIf</a></code>, the binding expression itself is used to\nnarrow its type, which allows the strictNullChecks feature of TypeScript to work with <code><a href=\"api/common/NgIf\" class=\"code-anchor\">NgIf</a></code>.</p>\n\n\n          </td>\n    </tr>\n    \n    </tbody>\n  </table>\n</section>\n  \n\n<section class=\"static-methods\">\n  <a name=\"methods\"></a>\n  <h2 id=\"static-methods\">静态方法<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/NgIf#static-methods\"><i class=\"material-icons\">link</i></a></h2>\n  \n    <a id=\"ngTemplateContextGuard\"></a>\n<table class=\"is-full-width method-table static-method\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n    <h3 id=\"ngtemplatecontextguard\">\n      ngTemplateContextGuard()\n      \n    <a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/NgIf#ngtemplatecontextguard\"><i class=\"material-icons\">link</i></a></h3>\n    <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular-cn/edit/aio/packages/common/src/directives/ng_if.ts?message=docs(common)%3A%20请简述你的修改...#L283-L298\" aria-label=\"提供编辑建议\" title=\"提供编辑建议\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/angular/angular-cn/tree/12.1.0-next.1/packages/common/src/directives/ng_if.ts#L283-L298\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p translation-result=\"on\">为 <code><a href=\"api/common/NgIf\" class=\"code-anchor\">NgIf</a></code> 将要渲染的模板确保正确的上下文类型。</p><p translation-origin=\"off\">Asserts the correct type of the context for the template that <code><a href=\"api/common/NgIf\" class=\"code-anchor\">NgIf</a></code> will render.</p>\n\n\n      </td>\n    </tr>\n  \n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  \n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><a href=\"api/upgrade/static\" class=\"code-anchor\">static</a> <span class=\"member-name\">ngTemplateContextGuard</span>&#x3C;T>(dir: <a href=\"api/common/NgIf\" class=\"code-anchor\">NgIf</a>&#x3C;T>, ctx: any): ctx is <a href=\"api/common/NgIfContext\" class=\"code-anchor\">NgIfContext</a>&#x3C;Exclude&#x3C;T, false | 0 | '' | null | undefined>></code-example>\n\n  \n\n  <h6 class=\"no-anchor\" id=\"参数\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table static-method-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"static-method-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>dir</code>\n      </td>\n      <td class=\"param-type\"><code><a href=\"api/common/NgIf\" class=\"code-anchor\">NgIf</a><t></t></code></td>\n      <td class=\"param-description\">\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     \n      </td>\n    </tr>\n    <tr class=\"static-method-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>ctx</code>\n      </td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\nn      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h6 class=\"no-anchor\" id=\"返回值\">返回值</h6>\n  <p><code>ctx is <a href=\"api/common/NgIfContext\" class=\"code-anchor\">NgIfContext</a>&#x3C;Exclude&#x3C;T, false | 0 | '' | null | undefined>></code></p>\n\n  \n\n\n  \n\n  \n</div>\n      </td>\n    </tr>\n  \n\n  <tr>\n      <td class=\"description\">\n        <p translation-result=\"on\">该方法用于向 Ivy 模板类型检查编译器发出信号，即 <code><a href=\"api/common/NgIf\" class=\"code-anchor\">NgIf</a></code> 结构化指令会使用特定的上下文类型渲染其模板。</p><p translation-origin=\"off\">The presence of this method is a signal to the Ivy template type-check compiler that the\n<code><a href=\"api/common/NgIf\" class=\"code-anchor\">NgIf</a></code> structural directive renders its template with a specific context type.</p>\n\n\n      </td>\n    </tr>\n\n  \n    </tbody>\n</table>\n\n  \n</section>\n\n  \n\n  \n  \n  \n\n  </div>\n</article>\n\n<!-- links to this doc:\n - api/animations/state\n - api/common\n - api/common/CommonModule\n - api/common/NgForOf\n - api/common/NgIfContext\n - api/core/ContentChild\n - api/core/ContentChildren\n - api/core/NgZone\n - api/core/ViewChild\n - api/core/ViewChildren\n - api/core/global\n - api/core/global/ngGetContext\n - api/forms/FormControlName\n - api/forms/FormGroupDirective\n - api/forms/FormGroupName\n - api/forms/NgModelGroup\n - guide/ajs-quick-reference\n - guide/animations\n - guide/aot-compiler\n - guide/architecture-components\n - guide/built-in-directives\n - guide/cheatsheet\n - guide/content-projection\n - guide/dependency-injection-in-action\n - guide/docs-style-guide\n - guide/dynamic-form\n - guide/feature-modules\n - guide/form-validation\n - guide/frequent-ngmodules\n - guide/glossary\n - guide/migration-dynamic-flag\n - guide/ngmodule-api\n - guide/ngmodule-faq\n - guide/router-tutorial-toh\n - guide/sharing-ngmodules\n - guide/static-query-migration\n - guide/structural-directives\n - guide/styleguide\n - guide/template-reference-variables\n - guide/template-typecheck\n - guide/testing-components-scenarios\n - guide/transition-and-triggers\n - guide/upgrade\n - guide/what-is-angular\n - presskit\n - start\n - start/start-data\n - start/start-routing\n - tutorial/toh-pt2\n - tutorial/toh-pt3\n - tutorial/toh-pt4\n - tutorial/toh-pt5\n - tutorial/toh-pt6\n-->\n<!-- links from this doc:\n - /api\n - api/common\n - api/common/AsyncPipe\n - api/common/CommonModule\n - api/common/JsonPipe\n - api/common/NgIf#description\n - api/common/NgIf#exported-from\n - api/common/NgIf#instance-properties\n - api/common/NgIf#ngif\n - api/common/NgIf#ngtemplatecontextguard\n - api/common/NgIf#selectors\n - api/common/NgIf#shorthand-syntax\n - api/common/NgIf#showing-an-alternative-template-using-else\n - api/common/NgIf#static-methods\n - api/common/NgIf#static-properties\n - api/common/NgIf#storing-a-conditional-result-in-a-variable\n - api/common/NgIf#using-an-external-then-template\n - api/common/NgIfContext\n - api/core/Component\n - api/core/Input\n - api/core/OnInit\n - api/core/TemplateRef\n - api/core/ViewChild\n - api/upgrade/static\n - guide/structural-directives#asterisk\n - https://angular.io/guide/built-in-directives#one-per-element\n - https://angular.io/guide/structural-directives#one-per-element\n - https://github.com/angular/angular-cn/edit/aio/packages/common/src/directives/ng_if.ts?message=docs(common)%3A%20请简述你的修改...#L10-L299\n - https://github.com/angular/angular-cn/edit/aio/packages/common/src/directives/ng_if.ts?message=docs(common)%3A%20请简述你的修改...#L283-L298\n - https://github.com/angular/angular-cn/tree/12.1.0-next.1/packages/common/src/directives/ng_if.ts#L10-L299\n - https://github.com/angular/angular-cn/tree/12.1.0-next.1/packages/common/src/directives/ng_if.ts#L283-L298\n-->"
}