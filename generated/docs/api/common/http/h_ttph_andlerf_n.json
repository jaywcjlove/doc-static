{
  "id": "api/common/http/HttpHandlerFn",
  "title": "HttpHandlerFn",
  "contents": "<article>\n  <div class=\"breadcrumb-container\">\n    <div class=\"breadcrumb\">\n      <script type=\"application/ld+json\">\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          \"itemListElement\": [\n            { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.cn//api\", \"name\": \"API\" } },\n            { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.cn/api/common\", \"name\": \"@angular/common\" } },\n            { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.cn/api/common/http\", \"name\": \"@angular/common/http\" } },\n            { \"@type\": \"ListItem\", \"position\": 4, \"item\": { \"@id\": \"https://angular.cn/api/common/http/HttpHandlerFn\", \"name\": \"HttpHandlerFn\" } }\n          ]\n        }\n      </script>\n        <a href=\"/api\">API</a> > <a href=\"api/common\">@angular/common</a> > <a href=\"api/common/http\">@angular/common/http</a>\n    </div>\n    <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular-cn/edit/cn/packages/common/http/src/interceptor.ts?message=docs(common)%3A%20请简述你的修改...#L84-L112\" aria-label=\"提供编辑建议\" title=\"提供编辑建议\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/angular/angular-cn/tree/15.0.1/packages/common/http/src/interceptor.ts#L84-L112\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n  </div>\n  <header class=\"api-header\">\n    <h1 id=\"httphandlerfn\">HttpHandlerFn<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/http/HttpHandlerFn#httphandlerfn\"><i class=\"material-icons\">link</i></a></h1>\n    <label class=\"api-type-label type-alias\">type-alias</label>\n  </header>\n  <aio-toc class=\"embedded\"></aio-toc>\n\n  <div class=\"api-body\">\n  <section class=\"short-description\">\n    <p>Represents the next interceptor in an interceptor chain, or the real backend if there are no\nfurther interceptors.</p>\n<p>表示拦截器链中的下一个拦截器，如果没有进一步的拦截器，则表示真正的后端。</p>\n\n    <p no-translate=\"\"><a href=\"api/common/http/HttpHandlerFn#description\">查看\"说明\"...</a></p>\n  </section>\n  <section class=\"type-alias-overview\">\n    <code-example language=\"ts\" hidecopy=\"true\">\n    type <a href=\"api/common/http/HttpHandlerFn\" class=\"code-anchor\">HttpHandlerFn</a> = (req: <a href=\"api/common/http/HttpRequest\" class=\"code-anchor\">HttpRequest</a>&#x3C;unknown>) => Observable&#x3C;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&#x3C;unknown>>;\n    </code-example>\n  </section>\n\n<section class=\"see-also\">\n  <h2 id=\"see-also\">参见<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/http/HttpHandlerFn#see-also\"><i class=\"material-icons\">link</i></a></h2>\n  <ul>\n    <li><p><a href=\"guide/http#intercepting-requests-and-responses\">HTTP Guide</a></p>\n<p><a href=\"guide/http#intercepting-requests-and-responses\">HTTP 指南</a></p></li>\n  </ul>\n</section>\n  \n<section class=\"description\">\n  <h2 id=\"description\">说明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/http/HttpHandlerFn#description\"><i class=\"material-icons\">link</i></a></h2>\n  <p>Most interceptors will delegate to this function, and either modify the outgoing request or the\nresponse when it arrives. Within the scope of the current request, however, this function may be\ncalled any number of times, for any number of downstream requests. Such downstream requests need\nnot be to the same URL or even the same origin as the current request. It is also valid to not\ncall the downstream handler at all, and process the current request entirely within the\ninterceptor.</p>\n<p>大多数拦截器将委托给此函数，并在传出请求或到达时修改响应。但是，在当前请求的范围内，可以对于任意数量的下游请求调用任意次数。此类下游请求无需与当前请求来自同一个 URL 甚至与同一个来源。根本不调用下游处理程序，并完全在拦截器中处理当前请求也是有效的。</p>\n<p>This function should only be called within the scope of the request that's currently being\nintercepted. Once that request is complete, this downstream handler function should not be\ncalled.</p>\n<p>此函数只能在当前被截获的请求范围内调用。一旦该请求完成，就不应调用此下游处理程序函数。</p>\n</section>\n</div>\n</article>\n\n<!-- links to this doc:\n - api/common/http\n - api/common/http/HttpInterceptorFn\n-->\n<!-- links from this doc:\n - /api\n - api/common\n - api/common/http\n - api/common/http/HttpEvent\n - api/common/http/HttpHandlerFn#description\n - api/common/http/HttpHandlerFn#httphandlerfn\n - api/common/http/HttpHandlerFn#see-also\n - api/common/http/HttpRequest\n - guide/http#intercepting-requests-and-responses\n - https://github.com/angular/angular-cn/edit/cn/packages/common/http/src/interceptor.ts?message=docs(common)%3A%20请简述你的修改...#L84-L112\n - https://github.com/angular/angular-cn/tree/15.0.1/packages/common/http/src/interceptor.ts#L84-L112\n-->"
}