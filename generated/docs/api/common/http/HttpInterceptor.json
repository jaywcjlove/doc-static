{
  "id": "api/common/http/HttpInterceptor",
  "title": "HttpInterceptor",
  "contents": "\n\n<article>\n  <div class=\"breadcrumb-container\">\n    <div class=\"breadcrumb\">\n      <script type=\"application/ld+json\">\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          \"itemListElement\": [\n            { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.cn//api\", \"name\": \"API\" } },\n            { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.cn/api/common\", \"name\": \"@angular/common\" } },\n            { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.cn/api/common/http\", \"name\": \"@angular/common/http\" } },\n            { \"@type\": \"ListItem\", \"position\": 4, \"item\": { \"@id\": \"https://angular.cn/api/common/http/HttpInterceptor\", \"name\": \"HttpInterceptor\" } }\n          ]\n        }\n      </script>\n        <a href=\"/api\">API</a> > <a href=\"api/common\">@angular/common</a> > <a href=\"api/common/http\">@angular/common/http</a>\n    </div>\n    <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular-cn/edit/aio/packages/common/http/src/interceptor.ts?message=docs(common)%3A%20请简述你的修改...#L15-L69\" aria-label=\"提供编辑建议\" title=\"提供编辑建议\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/angular/angular-cn/tree/10.0.0-rc.0/packages/common/http/src/interceptor.ts#L15-L69\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n  </div>\n  \n  <header class=\"api-header\">\n    <h1 id=\"httpinterceptor\">HttpInterceptor<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/http/HttpInterceptor#httpinterceptor\"><i class=\"material-icons\">link</i></a></h1>\n    \n    <label class=\"api-type-label interface\">interface</label>\n    \n    \n    \n  </header>\n  \n  <aio-toc class=\"embedded\"></aio-toc>\n\n  <div class=\"api-body\">\n    \n  <section class=\"short-description\">\n    <p translation-result=\"on\">拦截 <code><a href=\"api/common/http/HttpRequest\" class=\"code-anchor\">HttpRequest</a></code> 并处理它们。</p><p translation-origin=\"off\">Intercepts and handles an <code><a href=\"api/common/http/HttpRequest\" class=\"code-anchor\">HttpRequest</a></code> or <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>.</p>\n\n\n    <p><a href=\"api/common/http/HttpInterceptor#description\">查看\"说明\"...</a></p>\n  </section>\n  \n\n  \n\n  <section class=\"interface-overview\">\n<code-example language=\"ts\" hidecopy=\"true\">\ninterface <a href=\"api/common/http/HttpInterceptor\" class=\"code-anchor\">HttpInterceptor</a> {\n  <a class=\"code-anchor\" href=\"api/common/http/HttpInterceptor#intercept\"><span class=\"member-name\">intercept</span>(req: HttpRequest&#x3C;any>, next: HttpHandler): Observable&#x3C;HttpEvent&#x3C;any>></a>\n}\n</code-example>\n\n  \n  \n\n\n  \n  \n\n</section>\n\n  \n<section class=\"see-also\">\n  <h2 id=\"see-also\">参见<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/http/HttpInterceptor#see-also\"><i class=\"material-icons\">link</i></a></h2>\n  <ul>\n  \n    <li><p translation-result=\"on\"><a href=\"guide/http#intercepting-requests-and-responses\">HTTP 一章</a></p><p translation-origin=\"off\"><a href=\"guide/http#intercepting-requests-and-responses\">HTTP Guide</a></p>\n\n</li>\n  </ul>\n</section>\n\n\n  \n  \n<section class=\"description\">\n  <h2 id=\"description\">说明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/http/HttpInterceptor#description\"><i class=\"material-icons\">link</i></a></h2>\n  <p translation-result=\"on\">大多数拦截器都会在外发的请求由 <code>next.handle(transformedReq)</code> 发给拦截器链中的下一个拦截器之前，对该请求进行转换。\n拦截器还可以通过为 <code>next.handle()</code> 返回的流添加额外的 RxJS 操作符，来对响应事件流进行转换。</p><p translation-origin=\"off\">Most interceptors transform the outgoing request before passing it to the\nnext interceptor in the chain, by calling <code>next.handle(transformedReq)</code>.\nAn interceptor may transform the\nresponse event stream as well, by applying additional RxJS operators on the stream\nreturned by <code>next.handle()</code>.</p>\n\n<p translation-result=\"on\">极少数情况下，拦截器也可以自己完全处理一个请求，并且组合出新的事件流来而不必调用 <code>next.handle()</code>。\n这也是允许的，不过要时刻记住，这将会完全跳过所有后继拦截器。</p><p translation-origin=\"off\">More rarely, an interceptor may handle the request entirely,\nand compose a new event stream instead of invoking <code>next.handle()</code>. This is an\nacceptable behavior, but keep in mind that further interceptors will be skipped entirely.</p>\n\n<p translation-result=\"on\">另一种同样罕见但是有用的拦截器，会为单个请求在事件流上给出多个响应对象。</p><p translation-origin=\"off\">It is also rare but valid for an interceptor to return multiple responses on the\nevent stream for a single request.</p>\n\n\n</section>\n\n\n  \n\n  \n\n<section class=\"instance-methods\">\n  <a name=\"methods\"></a>\n  <h2 id=\"instance-methods\">方法<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/http/HttpInterceptor#instance-methods\"><i class=\"material-icons\">link</i></a></h2>\n  \n    <a id=\"intercept\"></a>\n<table class=\"is-full-width method-table instance-method\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n    <h3 id=\"intercept\">\n      intercept()\n      \n    <a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/http/HttpInterceptor#intercept\"><i class=\"material-icons\">link</i></a></h3>\n    <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular-cn/edit/aio/packages/common/http/src/interceptor.ts?message=docs(common)%3A%20请简述你的修改...#L61-L68\" aria-label=\"提供编辑建议\" title=\"提供编辑建议\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/angular/angular-cn/tree/10.0.0-rc.0/packages/common/http/src/interceptor.ts#L61-L68\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p>Identifies and handles a given HTTP request.</p>\n\n      </td>\n    </tr>\n  \n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  \n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">intercept</span>(req: <a href=\"api/common/http/HttpRequest\" class=\"code-anchor\">HttpRequest</a>&#x3C;any>, next: <a href=\"api/common/http/HttpHandler\" class=\"code-anchor\">HttpHandler</a>): Observable&#x3C;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&#x3C;any>></code-example>\n\n  \n\n  <h6 class=\"no-anchor\" id=\"参数\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>req</code>\n      </td>\n      <td class=\"param-type\"><code><a href=\"api/common/http/HttpRequest\" class=\"code-anchor\">HttpRequest</a><any></any></code></td>\n      <td class=\"param-description\">\n      <p>The outgoing request object to handle.</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>next</code>\n      </td>\n      <td class=\"param-type\"><code><a href=\"api/common/http/HttpHandler\" class=\"code-anchor\">HttpHandler</a></code></td>\n      <td class=\"param-description\">\n      <p>The next interceptor in the chain, or the backend\nif no interceptors remain in the chain.</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h6 class=\"no-anchor\" id=\"返回值\">返回值</h6>\n  <p><code>Observable&#x3C;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&#x3C;any>></code>: An observable of the event stream.</p>\n\n  \n\n\n  \n\n  \n</div>\n      </td>\n    </tr>\n  \n\n  \n\n  \n    </tbody>\n</table>\n\n  \n</section>\n\n\n  \n<section class=\"usage-notes\">\n  <h2 id=\"usage-notes\">使用说明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/http/HttpInterceptor#usage-notes\"><i class=\"material-icons\">link</i></a></h2>\n  <p translation-result=\"on\">要想在整个应用中使用 <code>HttpInterceptors</code> 的同一个实例，就只能在 <code>AppModule</code> 模块中导入 <code><a href=\"api/common/http/HttpClientModule\" class=\"code-anchor\">HttpClientModule</a></code>，并且把拦截器都添加到应用的根注入器中。\n如果你在不同的模块中多次导入 <code><a href=\"api/common/http/HttpClientModule\" class=\"code-anchor\">HttpClientModule</a></code>，则每次导入都会创建 <code><a href=\"api/common/http/HttpClientModule\" class=\"code-anchor\">HttpClientModule</a></code> 的一个新复本，它将会覆盖根模块上提供的那些拦截器。</p><p translation-origin=\"off\">To use the same instance of <code>HttpInterceptors</code> for the entire app, import the <code><a href=\"api/common/http/HttpClientModule\" class=\"code-anchor\">HttpClientModule</a></code>\nonly in your <code>AppModule</code>, and add the interceptors to the root application injector .\nIf you import <code><a href=\"api/common/http/HttpClientModule\" class=\"code-anchor\">HttpClientModule</a></code> multiple times across different modules (for example, in lazy\nloading modules), each import creates a new copy of the <code><a href=\"api/common/http/HttpClientModule\" class=\"code-anchor\">HttpClientModule</a></code>, which overwrites the\ninterceptors provided in the root module.</p>\n\n\n</section>\n\n\n\n  </div>\n</article>\n\n<!-- links to this doc:\n - api/common/http\n - api/common/http/HTTP_INTERCEPTORS\n - api/common/http/HttpHandler\n - api/common/http/JsonpInterceptor\n - guide/http\n-->\n<!-- links from this doc:\n - /api\n - api/common\n - api/common/http\n - api/common/http/HttpClientModule\n - api/common/http/HttpEvent\n - api/common/http/HttpHandler\n - api/common/http/HttpInterceptor#description\n - api/common/http/HttpInterceptor#httpinterceptor\n - api/common/http/HttpInterceptor#instance-methods\n - api/common/http/HttpInterceptor#intercept\n - api/common/http/HttpInterceptor#see-also\n - api/common/http/HttpInterceptor#usage-notes\n - api/common/http/HttpRequest\n - api/common/http/HttpResponse\n - guide/http#intercepting-requests-and-responses\n - https://github.com/angular/angular-cn/edit/aio/packages/common/http/src/interceptor.ts?message=docs(common)%3A%20请简述你的修改...#L15-L69\n - https://github.com/angular/angular-cn/edit/aio/packages/common/http/src/interceptor.ts?message=docs(common)%3A%20请简述你的修改...#L61-L68\n - https://github.com/angular/angular-cn/tree/10.0.0-rc.0/packages/common/http/src/interceptor.ts#L15-L69\n - https://github.com/angular/angular-cn/tree/10.0.0-rc.0/packages/common/http/src/interceptor.ts#L61-L68\n-->"
}