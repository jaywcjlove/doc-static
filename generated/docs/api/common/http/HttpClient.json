{
  "id": "api/common/http/HttpClient",
  "title": "HttpClient",
  "contents": "\n\n<article>\n  <div class=\"breadcrumb-container\">\n    <div class=\"breadcrumb\">\n      <script type=\"application/ld+json\">\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          \"itemListElement\": [\n            { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.cn//api\", \"name\": \"API\" } },\n            { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.cn/api/common\", \"name\": \"@angular/common\" } },\n            { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.cn/api/common/http\", \"name\": \"@angular/common/http\" } },\n            { \"@type\": \"ListItem\", \"position\": 4, \"item\": { \"@id\": \"https://angular.cn/api/common/http/HttpClient\", \"name\": \"HttpClient\" } }\n          ]\n        }\n      </script>\n        <a href=\"/api\">API</a> > <a href=\"api/common\">@angular/common</a> > <a href=\"api/common/http\">@angular/common/http</a>\n    </div>\n    <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular-cn/edit/aio/packages/common/http/src/client.ts?message=docs(common)%3A%20请简述你的修改...#L54-L4373\" aria-label=\"提供编辑建议\" title=\"提供编辑建议\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/angular/angular-cn/tree/12.1.0-next.1/packages/common/http/src/client.ts#L54-L4373\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n  </div>\n  \n  <header class=\"api-header\">\n    <h1 id=\"httpclient\">HttpClient<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/http/HttpClient#httpclient\"><i class=\"material-icons\">link</i></a></h1>\n    \n    <label class=\"api-type-label class\">class</label>\n    \n    \n    \n  </header>\n  \n  <aio-toc class=\"embedded\"></aio-toc>\n\n  <div class=\"api-body\">\n    \n  <section class=\"short-description\">\n    <p translation-result=\"on\">执行 HTTP 请求。该服务作为可注入类提供，带有执行 HTTP 请求的方法。每个请求方法都有多个签名，并且返回类型会根据所调用的签名（主要的值是 <code>observe</code> 和 <code>responseType</code>）而有所不同。</p><p translation-origin=\"off\">Performs HTTP requests.\nThis service is available as an injectable class, with methods to perform HTTP requests.\nEach request method has multiple signatures, and the return type varies based on\nthe signature that is called (mainly the values of <code>observe</code> and <code>responseType</code>).</p>\n\n\n    <p no-translate=\"\"><a href=\"api/common/http/HttpClient#description\">查看\"说明\"...</a></p>\n  </section>\n  \n\n  \n\n  \n  <section class=\"class-overview\">\n<code-example language=\"ts\" hidecopy=\"true\">\nclass <a href=\"api/common/http/HttpClient\" class=\"code-anchor\">HttpClient</a> {\n  <a class=\"code-anchor\" href=\"api/common/http/HttpClient#request\"><span class=\"member-name\">request</span>(first: string | HttpRequest&#x3C;any>, url?: string, options: { body?: any; headers?: HttpHeaders | { [header: string]: string | string[]; }; context?: HttpContext; observe?: \"body\" | \"events\" | \"response\"; params?: HttpParams | { [param: string]: string | number | boolean | ReadonlyArray&#x3C;...>; }; reportProgress?: boolean; responseType?: \"arraybuffer\" | ... 2 more ... | \"json\"... = {}): Observable&#x3C;any></a>\n  <a class=\"code-anchor\" href=\"api/common/http/HttpClient#delete\"><span class=\"member-name\">delete</span>(url: string, options: { headers?: HttpHeaders | { [header: string]: string | string[]; }; context?: HttpContext; observe?: \"body\" | \"events\" | \"response\"; params?: HttpParams | { [param: string]: string | number | boolean | ReadonlyArray&#x3C;string | ... 1 more ... | boolean>; }; reportProgress?: boolean; responseType?: \"arraybuffer\" | ... 2... = {}): Observable&#x3C;any></a>\n  <a class=\"code-anchor\" href=\"api/common/http/HttpClient#get\"><span class=\"member-name\">get</span>(url: string, options: { headers?: HttpHeaders | { [header: string]: string | string[]; }; context?: HttpContext; observe?: \"body\" | \"events\" | \"response\"; params?: HttpParams | { [param: string]: string | number | boolean | ReadonlyArray&#x3C;string | ... 1 more ... | boolean>; }; reportProgress?: boolean; responseType?: \"arraybuffer\" | ... 2... = {}): Observable&#x3C;any></a>\n  <a class=\"code-anchor\" href=\"api/common/http/HttpClient#head\"><span class=\"member-name\">head</span>(url: string, options: { headers?: HttpHeaders | { [header: string]: string | string[]; }; context?: HttpContext; observe?: \"body\" | \"events\" | \"response\"; params?: HttpParams | { [param: string]: string | number | boolean | ReadonlyArray&#x3C;string | ... 1 more ... | boolean>; }; reportProgress?: boolean; responseType?: \"arraybuffer\" | ... 2... = {}): Observable&#x3C;any></a>\n  <a class=\"code-anchor\" href=\"api/common/http/HttpClient#jsonp\"><span class=\"member-name\">jsonp</span>&#x3C;T>(url: string, callbackParam: string): Observable&#x3C;T></a>\n  <a class=\"code-anchor\" href=\"api/common/http/HttpClient#options\"><span class=\"member-name\">options</span>(url: string, options: { headers?: HttpHeaders | { [header: string]: string | string[]; }; context?: HttpContext; observe?: \"body\" | \"events\" | \"response\"; params?: HttpParams | { [param: string]: string | number | boolean | ReadonlyArray&#x3C;string | ... 1 more ... | boolean>; }; reportProgress?: boolean; responseType?: \"arraybuffer\" | ... 2... = {}): Observable&#x3C;any></a>\n  <a class=\"code-anchor\" href=\"api/common/http/HttpClient#patch\"><span class=\"member-name\">patch</span>(url: string, body: any, options: { headers?: HttpHeaders | { [header: string]: string | string[]; }; context?: HttpContext; observe?: \"body\" | \"events\" | \"response\"; params?: HttpParams | { [param: string]: string | number | boolean | ReadonlyArray&#x3C;string | ... 1 more ... | boolean>; }; reportProgress?: boolean; responseType?: \"arraybuffer\" | ... 2... = {}): Observable&#x3C;any></a>\n  <a class=\"code-anchor\" href=\"api/common/http/HttpClient#post\"><span class=\"member-name\">post</span>(url: string, body: any, options: { headers?: HttpHeaders | { [header: string]: string | string[]; }; context?: HttpContext; observe?: \"body\" | \"events\" | \"response\"; params?: HttpParams | { [param: string]: string | number | boolean | ReadonlyArray&#x3C;string | ... 1 more ... | boolean>; }; reportProgress?: boolean; responseType?: \"arraybuffer\" | ... 2... = {}): Observable&#x3C;any></a>\n  <a class=\"code-anchor\" href=\"api/common/http/HttpClient#put\"><span class=\"member-name\">put</span>(url: string, body: any, options: { headers?: HttpHeaders | { [header: string]: string | string[]; }; context?: HttpContext; observe?: \"body\" | \"events\" | \"response\"; params?: HttpParams | { [param: string]: string | number | boolean | ReadonlyArray&#x3C;string | ... 1 more ... | boolean>; }; reportProgress?: boolean; responseType?: \"arraybuffer\" | ... 2... = {}): Observable&#x3C;any></a>\n}\n</code-example>\n\n  \n  \n\n</section>\n\n\n  \n<section class=\"see-also\">\n  <h2 id=\"see-also\">参见<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/http/HttpClient#see-also\"><i class=\"material-icons\">link</i></a></h2>\n  <ul>\n  \n    <li><p><a href=\"guide/http\">HTTP Guide</a></p>\n</li>\n    <li><p translation-result=\"on\"><a href=\"guide/http\">HTTP 指南</a></p><p translation-origin=\"off\"><a href=\"api/common/http/HttpRequest\">HTTP Request</a></p>\n\n</li>\n  </ul>\n</section>\n\n\n  \n  \n\n<h2 id=\"provided-in\">Provided in<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/http/HttpClient#provided-in\"><i class=\"material-icons\">link</i></a></h2>\n<ul>\n\n  <li>\n    \n    <a href=\"api/common/http/HttpClientModule\">\n      <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box\">HttpClientModule</code-example>\n    </a>\n    \n  </li>\n\n</ul>\n\n\n  \n<section class=\"description\">\n  <h2 id=\"description\">说明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/http/HttpClient#description\"><i class=\"material-icons\">link</i></a></h2>\n  <p translation-result=\"on\">请注意， <code>responseType</code> <em>选项</em>的值是一个字符串，用于标识此响应的单一数据类型。该方法的各个重载版本处理每种响应类型。正如组合签名所暗示的那样 <code>responseType</code> 的值不能为联合类型。</p><p translation-origin=\"off\">Note that the <code>responseType</code> <em>options</em> value is a String that identifies the\nsingle data type of the response.\nA single overload version of the method handles each response type.\nThe value of <code>responseType</code> cannot be a union, as the combined signature could imply.</p>\n\n\n  <p>Further information available in the <a href=\"api/common/http/HttpClient#usage-notes\">Usage Notes</a>...</p>\n</section>\n\n\n  \n\n\n\n\n\n\n\n\n\n\n\n\n<section class=\"instance-methods\">\n  <a name=\"methods\"></a>\n  <h2 id=\"instance-methods\">方法<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/http/HttpClient#instance-methods\"><i class=\"material-icons\">link</i></a></h2>\n  \n    <a id=\"request\"></a>\n<table class=\"is-full-width method-table instance-methods\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n    <h3 id=\"request\">\n      request()\n      \n    <a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/http/HttpClient#request\"><i class=\"material-icons\">link</i></a></h3>\n    <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular-cn/edit/aio/packages/common/http/src/client.ts?message=docs(common)%3A%20请简述你的修改...#L687-L853\" aria-label=\"提供编辑建议\" title=\"提供编辑建议\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/angular/angular-cn/tree/12.1.0-next.1/packages/common/http/src/client.ts#L687-L853\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p translation-result=\"on\">为任意 HTTP 请求构造一个可观察的对象，该请求在被订阅时将通过已注册的拦截器链触发该请求，然后发送到服务器。</p><p translation-origin=\"off\">Constructs an observable for a generic HTTP request that, when subscribed,\nfires the request through the chain of registered interceptors and on to the\nserver.</p>\n\n\n      </td>\n    </tr>\n  <tr>\n      <td>\n        <details class=\"overloads\">\n          <summary>\n            <div class=\"icon-action-header\">\n                <h4 class=\"no-anchor\" id=\"17-个重载形式\">17 个重载形式...</h4>\n                <span class=\"actions\">\n                  <span class=\"show-all\">显示所有</span>\n                  <span class=\"collapse-all\">隐藏所有</span>\n                  <i class=\"material-icons expand\">expand_more</i>\n                </span>\n              </div>\n          </summary>\n          <div class=\"detail-contents\">\n            \n            \n              <h5 class=\"no-anchor\" id=\"overload-1\">Overload #1</h5>\n              <div class=\"overload-info\">\n  \n  <div class=\"short-description\">\n    <p translation-result=\"on\">发送 <code>HTTPRequest</code> 并返回 <code>HTTPEvents</code> 流。</p><p translation-origin=\"off\">Sends an <code><a href=\"api/common/http/HttpRequest\" class=\"code-anchor\">HttpRequest</a></code> and returns a stream of <code><a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a></code>s.</p>\n\n\n  </div>\n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">request</span>&#x3C;R>(req: <a href=\"api/common/http/HttpRequest\" class=\"code-anchor\">HttpRequest</a>&#x3C;any>): Observable&#x3C;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&#x3C;R>></code-example>\n\n  \n\n  <h6 class=\"no-anchor\" id=\"参数\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>req</code>\n      </td>\n      <td class=\"param-type\"><code><a href=\"api/common/http/HttpRequest\" class=\"code-anchor\">HttpRequest</a><any></any></code></td>\n      <td class=\"param-description\">\nn      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h6 class=\"no-anchor\" id=\"返回值\">返回值</h6>\n  <p translation-result=\"on\">响应对象的 <code>Observable</code> ，其响应体为 <code>HTTPEvents</code> 流。</p><p translation-origin=\"off\"><code>Observable&#x3C;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&#x3C;R>></code>: An <code>Observable</code> of the response, with the response body as a stream of <code><a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a></code>s.</p>\n\n\n  \n\n\n  \n\n  \n</div>\n              <hr class=\"hr-margin\">\n            \n              <h5 class=\"no-anchor\" id=\"overload-2\">Overload #2</h5>\n              <div class=\"overload-info\">\n  \n  <div class=\"short-description\">\n    <p translation-result=\"on\">构造一个请求，它将请求体解释为 <code>ArrayBuffer</code>，并且返回 <code>ArrayBuffer</code> 格式的响应体。</p><p translation-origin=\"off\">Constructs a request that interprets the body as an <code>ArrayBuffer</code> and returns the response in\nan <code>ArrayBuffer</code>.</p>\n\n\n  </div>\n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">request</span>(method: string, url: string, options: { body?: any; headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; observe?: \"body\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean | ReadonlyArray&#x3C;string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean>; }; reportProgress?: boolean; responseType: \"arraybuffer\"; withCredentials?: boolean; }): Observable&#x3C;ArrayBuffer></code-example>\n\n  \n\n  <h6 class=\"no-anchor\" id=\"参数-1\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>method</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">HTTP 方法。</p><p translation-origin=\"off\">The HTTP method.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">端点 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">与请求一起发送的 HTTP 选项。</p><p translation-origin=\"off\">The HTTP options to send with the request.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h6 class=\"no-anchor\" id=\"返回值-1\">返回值</h6>\n  <p translation-result=\"on\">响应对象的 <code>Observable</code>，其响应体为 <code>ArrayBuffer</code> 类型。</p><p translation-origin=\"off\"><code>Observable&#x3C;ArrayBuffer></code>: An <code>Observable</code> of the response, with the response body as an <code>ArrayBuffer</code>.</p>\n\n\n  \n\n\n  \n\n  \n</div>\n              <hr class=\"hr-margin\">\n            \n              <h5 class=\"no-anchor\" id=\"overload-3\">Overload #3</h5>\n              <div class=\"overload-info\">\n  \n  <div class=\"short-description\">\n    <p translation-result=\"on\">构造一个请求，将请求体解释为 <code>Blob</code> 类型，其响应体为 <code>Blob</code> 类型。</p><p translation-origin=\"off\">Constructs a request that interprets the body as a blob and returns\nthe response as a blob.</p>\n\n\n  </div>\n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">request</span>(method: string, url: string, options: { body?: any; headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; observe?: \"body\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean | ReadonlyArray&#x3C;string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean>; }; reportProgress?: boolean; responseType: \"blob\"; withCredentials?: boolean; }): Observable&#x3C;Blob></code-example>\n\n  \n\n  <h6 class=\"no-anchor\" id=\"参数-2\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>method</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">HTTP 方法。</p><p translation-origin=\"off\">The HTTP method.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">端点 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">与请求一起发送的 HTTP 选项。</p><p translation-origin=\"off\">The HTTP options to send with the request.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h6 class=\"no-anchor\" id=\"返回值-2\">返回值</h6>\n  <p translation-result=\"on\">此请求的响应对象的 <code>Observable</code>，其响应体为 <code>Blob</code> 类型。</p><p translation-origin=\"off\"><code>Observable&#x3C;Blob></code>: An <code>Observable</code> of the response, with the response body of type <code>Blob</code>.</p>\n\n\n  \n\n\n  \n\n  \n</div>\n              <hr class=\"hr-margin\">\n            \n              <h5 class=\"no-anchor\" id=\"overload-4\">Overload #4</h5>\n              <div class=\"overload-info\">\n  \n  <div class=\"short-description\">\n    <p translation-result=\"on\">构造一个请求，它将请求体解释为字符串，并且返回一个字符串。</p><p translation-origin=\"off\">Constructs a request that interprets the body as a text string and\nreturns a string value.</p>\n\n\n  </div>\n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">request</span>(method: string, url: string, options: { body?: any; headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; observe?: \"body\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean | ReadonlyArray&#x3C;string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean>; }; reportProgress?: boolean; responseType: \"text\"; withCredentials?: boolean; }): Observable&#x3C;string></code-example>\n\n  \n\n  <h6 class=\"no-anchor\" id=\"参数-3\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>method</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">HTTP 方法。</p><p translation-origin=\"off\">The HTTP method.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">端点 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">与请求一起发送的 HTTP 选项。</p><p translation-origin=\"off\">The HTTP options to send with the request.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h6 class=\"no-anchor\" id=\"返回值-3\">返回值</h6>\n  <p translation-result=\"on\">此请求的响应对象的 <code>Observable</code>，其响应体为 string 类型。</p><p translation-origin=\"off\"><code>Observable&#x3C;string></code>: An <code>Observable</code> of the response, with the response body of type string.</p>\n\n\n  \n\n\n  \n\n  \n</div>\n              <hr class=\"hr-margin\">\n            \n              <h5 class=\"no-anchor\" id=\"overload-5\">Overload #5</h5>\n              <div class=\"overload-info\">\n  \n  <div class=\"short-description\">\n    <p translation-result=\"on\">构造一个请求，它将请求体解释为 <code>ArrayBuffer</code>，并返回完整的事件流。</p><p translation-origin=\"off\">Constructs a request that interprets the body as an <code>ArrayBuffer</code> and returns the\nthe full event stream.</p>\n\n\n  </div>\n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">request</span>(method: string, url: string, options: { body?: any; headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean | ReadonlyArray&#x3C;string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean>; }; observe: \"events\"; reportProgress?: boolean; responseType: \"arraybuffer\"; withCredentials?: boolean; }): Observable&#x3C;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&#x3C;ArrayBuffer>></code-example>\n\n  \n\n  <h6 class=\"no-anchor\" id=\"参数-4\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>method</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">HTTP 方法。</p><p translation-origin=\"off\">The HTTP method.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">端点 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">与请求一起发送的 HTTP 选项。</p><p translation-origin=\"off\">The HTTP options to send with the request.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h6 class=\"no-anchor\" id=\"返回值-4\">返回值</h6>\n  <p translation-result=\"on\">一个响应对象的 <code>Observable</code>，其响应主体为此请求的 <code><a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a></code></p><p translation-origin=\"off\"><code>Observable&#x3C;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&#x3C;ArrayBuffer>></code>: An <code>Observable</code> of the response, with the response body as an array of <code><a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a></code>s for\nthe request.</p>\n\n\n  \n\n\n  \n\n  \n</div>\n              <hr class=\"hr-margin\">\n            \n              <h5 class=\"no-anchor\" id=\"overload-6\">Overload #6</h5>\n              <div class=\"overload-info\">\n  \n  <div class=\"short-description\">\n    <p translation-result=\"on\">构造一个请求，它将请求体解释为 <code>Blob</code>，并返回完整的事件流。</p><p translation-origin=\"off\">Constructs a request that interprets the body as a <code>Blob</code> and returns\nthe full event stream.</p>\n\n\n  </div>\n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">request</span>(method: string, url: string, options: { body?: any; headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"events\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean | ReadonlyArray&#x3C;string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean>; }; reportProgress?: boolean; responseType: \"blob\"; withCredentials?: boolean; }): Observable&#x3C;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&#x3C;Blob>></code-example>\n\n  \n\n  <h6 class=\"no-anchor\" id=\"参数-5\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>method</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">HTTP 方法。</p><p translation-origin=\"off\">The HTTP method.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">端点 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">与请求一起发送的 HTTP 选项。</p><p translation-origin=\"off\">The HTTP options to send with the request.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h6 class=\"no-anchor\" id=\"返回值-5\">返回值</h6>\n  <p translation-result=\"on\">此请求的 <code>HttpEvents</code> 的 <code>Observable</code>，其响应体为 <code>Blob</code> 类型。</p><p translation-origin=\"off\"><code>Observable&#x3C;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&#x3C;Blob>></code>: An <code>Observable</code> of all <code><a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a></code>s for the request,\nwith the response body of type <code>Blob</code>.</p>\n\n\n  \n\n\n  \n\n  \n</div>\n              <hr class=\"hr-margin\">\n            \n              <h5 class=\"no-anchor\" id=\"overload-7\">Overload #7</h5>\n              <div class=\"overload-info\">\n  \n  <div class=\"short-description\">\n    <p translation-result=\"on\">构造一个请求，它将请求体解释为文本字符串，并且返回完整的事件流。</p><p translation-origin=\"off\">Constructs a request which interprets the body as a text string and returns the full event\nstream.</p>\n\n\n  </div>\n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">request</span>(method: string, url: string, options: { body?: any; headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"events\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean | ReadonlyArray&#x3C;string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean>; }; reportProgress?: boolean; responseType: \"text\"; withCredentials?: boolean; }): Observable&#x3C;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&#x3C;string>></code-example>\n\n  \n\n  <h6 class=\"no-anchor\" id=\"参数-6\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>method</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">HTTP 方法。</p><p translation-origin=\"off\">The HTTP method.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">端点 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">与请求一起发送的 HTTP 选项。</p><p translation-origin=\"off\">The HTTP options to send with the request.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h6 class=\"no-anchor\" id=\"返回值-6\">返回值</h6>\n  <p translation-result=\"on\">此请求的 <code>HttpEvents</code> 的 <code>Observable</code>，其响应体为 string 类型。</p><p translation-origin=\"off\"><code>Observable&#x3C;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&#x3C;string>></code>: An <code>Observable</code> of all <code><a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a></code>s for the request,\nwith the response body of type string.</p>\n\n\n  \n\n\n  \n\n  \n</div>\n              <hr class=\"hr-margin\">\n            \n              <h5 class=\"no-anchor\" id=\"overload-8\">Overload #8</h5>\n              <div class=\"overload-info\">\n  \n  <div class=\"short-description\">\n    <p translation-result=\"on\">构造一个请求，它将请求体解释为 JSON 对象，并且返回完整的 HTTP 事件流。</p><p translation-origin=\"off\">Constructs a request which interprets the body as a JSON object and returns the full event\nstream.</p>\n\n\n  </div>\n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">request</span>(method: string, url: string, options: { body?: any; headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; reportProgress?: boolean; observe: \"events\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean | ReadonlyArray&#x3C;...>; }; responseType?: \"json\"; withCredentials?: boolean; }): Observable&#x3C;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&#x3C;any>></code-example>\n\n  \n\n  <h6 class=\"no-anchor\" id=\"参数-7\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>method</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">HTTP 方法。</p><p translation-origin=\"off\">The HTTP method.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">端点 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">要和此请求一起发送的 HTTP 选项。</p><p translation-origin=\"off\">The HTTP options to send with the  request.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h6 class=\"no-anchor\" id=\"返回值-7\">返回值</h6>\n  <p translation-result=\"on\">此请求的 <code>HttpEvents</code> 的 <code>Observable</code>，其响应体为 <code>Object</code> 类型。</p><p translation-origin=\"off\"><code>Observable&#x3C;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&#x3C;any>></code>: An <code>Observable</code> of all <code><a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a></code>s for the request,\nwith the response body of type <code>Object</code>.</p>\n\n\n  \n\n\n  \n\n  \n</div>\n              <hr class=\"hr-margin\">\n            \n              <h5 class=\"no-anchor\" id=\"overload-9\">Overload #9</h5>\n              <div class=\"overload-info\">\n  \n  <div class=\"short-description\">\n    <p translation-result=\"on\">构造一个请求，它将请求体解释为 JSON 对象，并且返回完整的 HTTP 事件流。</p><p translation-origin=\"off\">Constructs a request which interprets the body as a JSON object and returns the full event\nstream.</p>\n\n\n  </div>\n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">request</span>&#x3C;R>(method: string, url: string, options: { body?: any; headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; reportProgress?: boolean; observe: \"events\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean | ReadonlyArray&#x3C;...>; }; responseType?: \"json\"; withCredentials?: boolean; }): Observable&#x3C;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&#x3C;R>></code-example>\n\n  \n\n  <h6 class=\"no-anchor\" id=\"参数-8\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>method</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">HTTP 方法。</p><p translation-origin=\"off\">The HTTP method.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">端点 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">与请求一起发送的 HTTP 选项。</p><p translation-origin=\"off\">The HTTP options to send with the request.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h6 class=\"no-anchor\" id=\"返回值-8\">返回值</h6>\n  <p translation-result=\"on\">此请求的 <code>HttpEvents</code> 的 <code>Observable</code>，其响应体为 <code>R</code> 类型。</p><p translation-origin=\"off\"><code>Observable&#x3C;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&#x3C;R>></code>: An <code>Observable</code> of all <code><a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a></code>s for the request,\nwith the response body of type <code>R</code>.</p>\n\n\n  \n\n\n  \n\n  \n</div>\n              <hr class=\"hr-margin\">\n            \n              <h5 class=\"no-anchor\" id=\"overload-10\">Overload #10</h5>\n              <div class=\"overload-info\">\n  \n  <div class=\"short-description\">\n    <p translation-result=\"on\">构造一个请求，它将请求体解释为 <code>ArrayBuffer</code>，并且返回完整的 <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>。</p><p translation-origin=\"off\">Constructs a request which interprets the body as an <code>ArrayBuffer</code>\nand returns the full <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>.</p>\n\n\n  </div>\n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">request</span>(method: string, url: string, options: { body?: any; headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"response\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean | ReadonlyArray&#x3C;string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean>; }; reportProgress?: boolean; responseType: \"arraybuffer\"; withCredentials?: boolea...): Observable&#x3C;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&#x3C;ArrayBuffer>></code-example>\n\n  \n\n  <h6 class=\"no-anchor\" id=\"参数-9\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>method</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">HTTP 方法。</p><p translation-origin=\"off\">The HTTP method.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">端点 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>{ body?: any; headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"response\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean | ReadonlyArray<string |=\"\" number=\"\" boolean=\"\">; }; reportProgress?: boolean; responseType: \"arraybuffer\"; withCredentials?: boolea...</string></code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">与请求一起发送的 HTTP 选项。</p><p translation-origin=\"off\">The HTTP options to send with the request.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h6 class=\"no-anchor\" id=\"返回值-9\">返回值</h6>\n  <p translation-result=\"on\">此请求的响应对象的 <code>Observable</code>，其响应体为 <code>ArrayBuffer</code> 类型。</p><p translation-origin=\"off\"><code>Observable&#x3C;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&#x3C;ArrayBuffer>></code>: An <code>Observable</code> of the <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>, with the response body as an <code>ArrayBuffer</code>.</p>\n\n\n  \n\n\n  \n\n  \n</div>\n              <hr class=\"hr-margin\">\n            \n              <h5 class=\"no-anchor\" id=\"overload-11\">Overload #11</h5>\n              <div class=\"overload-info\">\n  \n  <div class=\"short-description\">\n    <p translation-result=\"on\">构造一个请求，它将请求体解释为 <code>Blob</code>，并且返回完整的 <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>。</p><p translation-origin=\"off\">Constructs a request which interprets the body as a <code>Blob</code> and returns the full <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>.</p>\n\n\n  </div>\n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">request</span>(method: string, url: string, options: { body?: any; headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"response\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean | ReadonlyArray&#x3C;string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean>; }; reportProgress?: boolean; responseType: \"blob\"; withCredentials?: boolean; }): Observable&#x3C;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&#x3C;Blob>></code-example>\n\n  \n\n  <h6 class=\"no-anchor\" id=\"参数-10\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>method</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">HTTP 方法。</p><p translation-origin=\"off\">The HTTP method.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">端点 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">与请求一起发送的 HTTP 选项。</p><p translation-origin=\"off\">The HTTP options to send with the request.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h6 class=\"no-anchor\" id=\"返回值-10\">返回值</h6>\n  <p translation-result=\"on\">此请求的响应对象的 <code>Observable</code>，其响应体为 <code>Blob</code> 类型。</p><p translation-origin=\"off\"><code>Observable&#x3C;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&#x3C;Blob>></code>: An <code>Observable</code> of the <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>, with the response body of type <code>Blob</code>.</p>\n\n\n  \n\n\n  \n\n  \n</div>\n              <hr class=\"hr-margin\">\n            \n              <h5 class=\"no-anchor\" id=\"overload-12\">Overload #12</h5>\n              <div class=\"overload-info\">\n  \n  <div class=\"short-description\">\n    <p translation-result=\"on\">构造一个请求，它将请求体解释为文本流，并且返回完整的 <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>。</p><p translation-origin=\"off\">Constructs a request which interprets the body as a text stream and returns the full\n<code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>.</p>\n\n\n  </div>\n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">request</span>(method: string, url: string, options: { body?: any; headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"response\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean | ReadonlyArray&#x3C;string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean>; }; reportProgress?: boolean; responseType: \"text\"; withCredentials?: boolean; }): Observable&#x3C;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&#x3C;string>></code-example>\n\n  \n\n  <h6 class=\"no-anchor\" id=\"参数-11\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>method</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">HTTP 方法。</p><p translation-origin=\"off\">The HTTP method.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">端点 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">与请求一起发送的 HTTP 选项。</p><p translation-origin=\"off\">The HTTP options to send with the request.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h6 class=\"no-anchor\" id=\"返回值-11\">返回值</h6>\n  <p translation-result=\"on\">此请求的 <code>HTTP response</code> 的 <code>Observable</code>，其响应体为 string 类型。</p><p translation-origin=\"off\"><code>Observable&#x3C;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&#x3C;string>></code>: An <code>Observable</code> of the HTTP response, with the response body of type string.</p>\n\n\n  \n\n\n  \n\n  \n</div>\n              <hr class=\"hr-margin\">\n            \n              <h5 class=\"no-anchor\" id=\"overload-13\">Overload #13</h5>\n              <div class=\"overload-info\">\n  \n  <div class=\"short-description\">\n    <p translation-result=\"on\">构造一个请求，它将请求体解释为 JSON 对象，并返回完整 <code>HTTPResponse</code>。</p><p translation-origin=\"off\">Constructs a request which interprets the body as a JSON object and returns the full\n<code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>.</p>\n\n\n  </div>\n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">request</span>(method: string, url: string, options: { body?: any; headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; reportProgress?: boolean; observe: \"response\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean | ReadonlyArray&#x3C;...>; }; responseType?: \"json\"; withCredentials?: boolean; }): Observable&#x3C;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&#x3C;Object>></code-example>\n\n  \n\n  <h6 class=\"no-anchor\" id=\"参数-12\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>method</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">HTTP 方法。</p><p translation-origin=\"off\">The HTTP method.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">端点 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">与请求一起发送的 HTTP 选项。</p><p translation-origin=\"off\">The HTTP options to send with the request.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h6 class=\"no-anchor\" id=\"返回值-12\">返回值</h6>\n  <p translation-result=\"on\">此请求的完整 <code>HTTPResponse</code> 的 <code>Observable</code>，其响应体为 <code>Object</code> 类型。</p><p translation-origin=\"off\"><code>Observable&#x3C;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&#x3C;Object>></code>: An <code>Observable</code> of the full <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>,\nwith the response body of type <code>Object</code>.</p>\n\n\n  \n\n\n  \n\n  \n</div>\n              <hr class=\"hr-margin\">\n            \n              <h5 class=\"no-anchor\" id=\"overload-14\">Overload #14</h5>\n              <div class=\"overload-info\">\n  \n  <div class=\"short-description\">\n    <p translation-result=\"on\">构造一个请求，它将请求体解释为 JSON 对象，并返回带有请求主体类型 <code>HTTPResponse</code></p><p translation-origin=\"off\">Constructs a request which interprets the body as a JSON object and returns\nthe full <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code> with the response body in the requested type.</p>\n\n\n  </div>\n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">request</span>&#x3C;R>(method: string, url: string, options: { body?: any; headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; reportProgress?: boolean; observe: \"response\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean | ReadonlyArray&#x3C;...>; }; responseType?: \"json\"; withCredentials?: boolean; }): Observable&#x3C;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&#x3C;R>></code-example>\n\n  \n\n  <h6 class=\"no-anchor\" id=\"参数-13\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>method</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">HTTP 方法。</p><p translation-origin=\"off\">The HTTP method.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">端点 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">与请求一起发送的 HTTP 选项。</p><p translation-origin=\"off\">The HTTP options to send with the request.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h6 class=\"no-anchor\" id=\"返回值-13\">返回值</h6>\n  <p translation-result=\"on\">此请求的完整 <code>HTTPResponse</code> 的 <code>Observable</code>，其响应体为 <code>R</code> 类型。</p><p translation-origin=\"off\"><code>Observable&#x3C;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&#x3C;R>></code>: An <code>Observable</code> of the full <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>, with the response body of type <code>R</code>.</p>\n\n\n  \n\n\n  \n\n  \n</div>\n              <hr class=\"hr-margin\">\n            \n              <h5 class=\"no-anchor\" id=\"overload-15\">Overload #15</h5>\n              <div class=\"overload-info\">\n  \n  <div class=\"short-description\">\n    <p translation-result=\"on\">构造一个请求，它将请求体解释为 JSON 对象，并返回完整的 <code>HTTPResponse</code>。</p><p translation-origin=\"off\">Constructs a request which interprets the body as a JSON object and returns the full\n<code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code> as a JSON object.</p>\n\n\n  </div>\n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">request</span>(method: string, url: string, options?: { body?: any; headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; observe?: \"body\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean | ReadonlyArray&#x3C;string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean>; }; responseType?: \"json\"; reportProgress?: boolean; withCredentials?: boolean; }): Observable&#x3C;Object></code-example>\n\n  \n\n  <h6 class=\"no-anchor\" id=\"参数-14\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>method</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">HTTP 方法。</p><p translation-origin=\"off\">The HTTP method.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">端点 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">与请求一起发送的 HTTP 选项。</p><p translation-origin=\"off\">The HTTP options to send with the request.</p>\n\n        <div no-translate=\"\">可选. 默认值是 `undefined`.</div>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h6 class=\"no-anchor\" id=\"返回值-14\">返回值</h6>\n  <p translation-result=\"on\">此请求的响应对象的 <code>Observable</code>，其响应体为 <code>Object</code> 类型。</p><p translation-origin=\"off\"><code>Observable&#x3C;Object></code>: An <code>Observable</code> of the <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>, with the response body of type <code>Object</code>.</p>\n\n\n  \n\n\n  \n\n  \n</div>\n              <hr class=\"hr-margin\">\n            \n              <h5 class=\"no-anchor\" id=\"overload-16\">Overload #16</h5>\n              <div class=\"overload-info\">\n  \n  <div class=\"short-description\">\n    <p translation-result=\"on\">构造一个请求，它将请求体解释为 JSON 对象，并返回所请求类型的响应体。</p><p translation-origin=\"off\">Constructs a request which interprets the body as a JSON object\nwith the response body of the requested type.</p>\n\n\n  </div>\n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">request</span>&#x3C;R>(method: string, url: string, options?: { body?: any; headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; observe?: \"body\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean | ReadonlyArray&#x3C;string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean>; }; responseType?: \"json\"; reportProgress?: boolean; withCredentials?: boolean; }): Observable&#x3C;R></code-example>\n\n  \n\n  <h6 class=\"no-anchor\" id=\"参数-15\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>method</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">HTTP 方法。</p><p translation-origin=\"off\">The HTTP method.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">端点 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">与请求一起发送的 HTTP 选项。</p><p translation-origin=\"off\">The HTTP options to send with the request.</p>\n\n        <div no-translate=\"\">可选. 默认值是 `undefined`.</div>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h6 class=\"no-anchor\" id=\"返回值-15\">返回值</h6>\n  <p translation-result=\"on\">此请求的响应对象的 <code>Observable</code>，其响应体为 <code>R</code> 类型。</p><p translation-origin=\"off\"><code>Observable&#x3C;R></code>: An <code>Observable</code> of the <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>, with the response body of type <code>R</code>.</p>\n\n\n  \n\n\n  \n\n  \n</div>\n              <hr class=\"hr-margin\">\n            \n              <h5 class=\"no-anchor\" id=\"overload-17\">Overload #17</h5>\n              <div class=\"overload-info\">\n  \n  <div class=\"short-description\">\n    <p translation-result=\"on\">构造一个请求，其中的响应类型和所请求的可观察对象都不是静态已知的。</p><p translation-origin=\"off\">Constructs a request where response type and requested observable are not known statically.</p>\n\n\n  </div>\n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">request</span>(method: string, url: string, options?: { body?: any; headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean | ReadonlyArray&#x3C;string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean>; }; observe?: \"body\" | ... 1 more ... | \"response\"; reportProgress?: boolean; responseType?: \"arraybuffe...): Observable&#x3C;any></code-example>\n\n  \n\n  <h6 class=\"no-anchor\" id=\"参数-16\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>method</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">HTTP 方法。</p><p translation-origin=\"off\">The HTTP method.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">端点 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>{ body?: any; headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean | ReadonlyArray<string |=\"\" number=\"\" boolean=\"\">; }; observe?: \"body\" | ... 1 more ... | \"response\"; reportProgress?: boolean; responseType?: \"arraybuffe...</string></code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">与请求一起发送的 HTTP 选项。</p><p translation-origin=\"off\">The HTTP options to send with the request.</p>\n\n        <div no-translate=\"\">可选. 默认值是 `undefined`.</div>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h6 class=\"no-anchor\" id=\"返回值-16\">返回值</h6>\n  <p translation-result=\"on\">所请求的响应对象的 <code>Observable</code>，其响应体是 <code>any</code> 类型。</p><p translation-origin=\"off\"><code>Observable&#x3C;any></code>: An <code>Observable</code> of the reuested response, wuth body of type <code>any</code>.</p>\n\n\n  \n\n\n  \n\n  \n</div>\n              \n            \n          </div>\n        </details>\n      </td>\n    </tr>\n  \n\n  <tr>\n      <td class=\"description\">\n        <p translation-result=\"on\">你可以直接把 <code><a href=\"api/common/http/HttpRequest\" class=\"code-anchor\">HttpRequest</a></code> 作为唯一参数。在这种情况下，该调用将返回原始 <code><a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a></code> 流的可观察值。</p><p translation-origin=\"off\">You can pass an <code><a href=\"api/common/http/HttpRequest\" class=\"code-anchor\">HttpRequest</a></code> directly as the only parameter. In this case,\nthe call returns an observable of the raw <code><a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a></code> stream.</p>\n\n<p translation-result=\"on\">或者，你可以将 HTTP 方法作为第一个参数，将 URL 字符串作为第二个参数，将包含请求正文的选项哈希作为第三个参数。参见 <code>addBody()</code>。在这种情况下，指定的 <code>responseType</code> 和 <code>observe</code> 选项会决定要返回的 observable 类型。</p><p translation-origin=\"off\">Alternatively you can pass an HTTP method as the first parameter,\na URL string as the second, and an options hash containing the request body as the third.\nSee <code>addBody()</code>. In this case, the specified <code>responseType</code> and <code>observe</code> options determine the\ntype of returned observable.</p>\n\n<ul>\n<li>\n<p translation-result=\"on\">此 <code>responseType</code> 值确定如何解析成功的响应体。</p><p translation-origin=\"off\">The <code>responseType</code> value determines how a successful response body is parsed.</p>\n\n</li>\n<li>\n<p translation-result=\"on\">    如果 <code>responseType</code> 是默认的 <code><a href=\"api/common/JsonPipe\" class=\"code-anchor\">json</a></code> ，则可以将结果对象的类型接口作为类型参数传递给调用。</p><p translation-origin=\"off\">If <code>responseType</code> is the default <code><a href=\"api/common/JsonPipe\" class=\"code-anchor\">json</a></code>, you can pass a type interface for the resulting\nobject as a type parameter to the call.</p>\n\n</li>\n</ul>\n<p translation-result=\"on\"><code>observe</code> 值根据你感兴趣的观察值确定其返回类型。</p><p translation-origin=\"off\">The <code>observe</code> value determines the return type, according to what you are interested in\nobserving.</p>\n\n<ul>\n<li>\n<p translation-result=\"on\">    事件的 <code>observe</code> 值返回原始 <code><a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a></code> 流的可观察值，默认情况下包括进度事件。</p><p translation-origin=\"off\">An <code>observe</code> value of events returns an observable of the raw <code><a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a></code> stream, including\nprogress events by default.</p>\n\n</li>\n<li>\n<p translation-result=\"on\">    响应对象的 <code>observe</code> 值返回 <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse&#x3C;T></a></code> 的可观察对象，其中 <code>T</code> 参数取决于 <code>responseType</code> 和所提供的可选类型参数。</p><p translation-origin=\"off\">An <code>observe</code> value of response returns an observable of <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse&#x3C;T></a></code>,\nwhere the <code>T</code> parameter depends on the <code>responseType</code> and any optionally provided type\nparameter.</p>\n\n</li>\n<li>\n<p translation-result=\"on\"><code>observe</code> 的 body 值会返回与 <code>T</code> 的响应体具有相同类型的 <code>&#x3C;T></code> 型可观察对象。</p><p translation-origin=\"off\">An <code>observe</code> value of body returns an observable of <code>&#x3C;T></code> with the same <code>T</code> body type.</p>\n\n</li>\n</ul>\n\n      </td>\n    </tr>\n\n  \n    </tbody>\n</table>\n\n  \n    <a id=\"delete\"></a>\n<table class=\"is-full-width method-table instance-methods\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n    <h3 id=\"delete\">\n      delete()\n      \n    <a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/http/HttpClient#delete\"><i class=\"material-icons\">link</i></a></h3>\n    <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular-cn/edit/aio/packages/common/http/src/client.ts?message=docs(common)%3A%20请简述你的修改...#L1306-L1335\" aria-label=\"提供编辑建议\" title=\"提供编辑建议\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/angular/angular-cn/tree/12.1.0-next.1/packages/common/http/src/client.ts#L1306-L1335\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p translation-result=\"on\">构造一个 Observable，当它被订阅时，会要求服务器执行配置好的 <code>DELETE</code> 请求。参见它的各个独立重载形式，以了解其返回值类型。</p><p translation-origin=\"off\">Constructs an observable that, when subscribed, causes the configured\n<code>DELETE</code> request to execute on the server. See the individual overloads for\ndetails on the return type.</p>\n\n\n      </td>\n    </tr>\n  <tr>\n      <td>\n        <details class=\"overloads\">\n          <summary>\n            <div class=\"icon-action-header\">\n                <h4 class=\"no-anchor\" id=\"15-个重载形式\">15 个重载形式...</h4>\n                <span class=\"actions\">\n                  <span class=\"show-all\">显示所有</span>\n                  <span class=\"collapse-all\">隐藏所有</span>\n                  <i class=\"material-icons expand\">expand_more</i>\n                </span>\n              </div>\n          </summary>\n          <div class=\"detail-contents\">\n            \n            \n              <h5 class=\"no-anchor\" id=\"overload-1-1\">Overload #1</h5>\n              <div class=\"overload-info\">\n  \n  <div class=\"short-description\">\n    <p translation-result=\"on\">构造一个 <code>DELETE</code> 请求，它将请求体解释为 <code>ArrayBuffer</code>，并且返回 <code>ArrayBuffer</code> 格式的响应体。</p><p translation-origin=\"off\">Constructs a <code>DELETE</code> request that interprets the body as an <code>ArrayBuffer</code>\nand returns the response as an <code>ArrayBuffer</code>.</p>\n\n\n  </div>\n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">delete</span>(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; observe?: \"body\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean | ReadonlyArray&#x3C;string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean>; }; reportProgress?: boolean; responseType: \"arraybuffer\"; withCredentials?: boolean; body?: any; }): Observable&#x3C;ArrayBuffer></code-example>\n\n  \n\n  <h6 class=\"no-anchor\" id=\"参数-17\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">端点 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">与请求一起发送的 HTTP 选项。</p><p translation-origin=\"off\">The HTTP options to send with the request.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h6 class=\"no-anchor\" id=\"返回值-17\">返回值</h6>\n  <p translation-result=\"on\">类型为 <code>ArrayBuffer</code> 的响应体的 <code>Observable</code>。</p><p translation-origin=\"off\"><code>Observable&#x3C;ArrayBuffer></code>: An <code>Observable</code> of the response body as an <code>ArrayBuffer</code>.</p>\n\n\n  \n\n\n  \n\n  \n</div>\n              <hr class=\"hr-margin\">\n            \n              <h5 class=\"no-anchor\" id=\"overload-2-1\">Overload #2</h5>\n              <div class=\"overload-info\">\n  \n  <div class=\"short-description\">\n    <p translation-result=\"on\">构造一个 <code>DELETE</code> 请求，它将请求体解释为 <code>Blob</code>，并且返回 <code>Blob</code> 格式的响应体。</p><p translation-origin=\"off\">Constructs a <code>DELETE</code> request that interprets the body as a <code>Blob</code> and returns\nthe response as a <code>Blob</code>.</p>\n\n\n  </div>\n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">delete</span>(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; observe?: \"body\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean | ReadonlyArray&#x3C;string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean>; }; reportProgress?: boolean; responseType: \"blob\"; withCredentials?: boolean; body?: any; }): Observable&#x3C;Blob></code-example>\n\n  \n\n  <h6 class=\"no-anchor\" id=\"参数-18\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">端点 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">与请求一起发送的 HTTP 选项。</p><p translation-origin=\"off\">The HTTP options to send with the request.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h6 class=\"no-anchor\" id=\"返回值-18\">返回值</h6>\n  <p translation-result=\"on\">类型为 <code>Blob</code> 的响应体的 <code>Observable</code>。</p><p translation-origin=\"off\"><code>Observable&#x3C;Blob></code>: An <code>Observable</code> of the response body as a <code>Blob</code>.</p>\n\n\n  \n\n\n  \n\n  \n</div>\n              <hr class=\"hr-margin\">\n            \n              <h5 class=\"no-anchor\" id=\"overload-3-1\">Overload #3</h5>\n              <div class=\"overload-info\">\n  \n  <div class=\"short-description\">\n    <p translation-result=\"on\">构造一个 <code>DELETE</code> 请求，它将请求体解释为字符串，并且返回一个字符串。</p><p translation-origin=\"off\">Constructs a <code>DELETE</code> request that interprets the body as a text string and returns\na string.</p>\n\n\n  </div>\n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">delete</span>(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; observe?: \"body\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean | ReadonlyArray&#x3C;string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean>; }; reportProgress?: boolean; responseType: \"text\"; withCredentials?: boolean; body?: any; }): Observable&#x3C;string></code-example>\n\n  \n\n  <h6 class=\"no-anchor\" id=\"参数-19\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">端点 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">与请求一起发送的 HTTP 选项。</p><p translation-origin=\"off\">The HTTP options to send with the request.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h6 class=\"no-anchor\" id=\"返回值-19\">返回值</h6>\n  <p translation-result=\"on\">此请求的响应对象的 <code>Observable</code>，其响应体为 string 类型。</p><p translation-origin=\"off\"><code>Observable&#x3C;string></code>: An <code>Observable</code> of the response, with the response body of type string.</p>\n\n\n  \n\n\n  \n\n  \n</div>\n              <hr class=\"hr-margin\">\n            \n              <h5 class=\"no-anchor\" id=\"overload-4-1\">Overload #4</h5>\n              <div class=\"overload-info\">\n  \n  <div class=\"short-description\">\n    <p translation-result=\"on\">构造一个 <code>DELETE</code> 请求，它将请求体解释为 <code>ArrayBuffer</code>，并返回完整的事件流。</p><p translation-origin=\"off\">Constructs a <code>DELETE</code> request that interprets the body as an <code>ArrayBuffer</code>\nand returns the full event stream.</p>\n\n\n  </div>\n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">delete</span>(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"events\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean | ReadonlyArray&#x3C;string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean>; }; reportProgress?: boolean; responseType: \"arraybuffer\"; withCredentials?: boolean; body?: any; }): Observable&#x3C;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&#x3C;ArrayBuffer>></code-example>\n\n  \n\n  <h6 class=\"no-anchor\" id=\"参数-20\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">端点 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">与请求一起发送的 HTTP 选项。</p><p translation-origin=\"off\">The HTTP options to send with the request.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h6 class=\"no-anchor\" id=\"返回值-20\">返回值</h6>\n  <p translation-result=\"on\">此请求的所有 <code>HTTPEvents</code> 的 <code>Observable</code>，其响应体为 <code>ArrayBuffer</code> 类型。</p><p translation-origin=\"off\"><code>Observable&#x3C;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&#x3C;ArrayBuffer>></code>: An <code>Observable</code> of all <code><a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a></code>s for the request,\nwith response body as an <code>ArrayBuffer</code>.</p>\n\n\n  \n\n\n  \n\n  \n</div>\n              <hr class=\"hr-margin\">\n            \n              <h5 class=\"no-anchor\" id=\"overload-5-1\">Overload #5</h5>\n              <div class=\"overload-info\">\n  \n  <div class=\"short-description\">\n    <p translation-result=\"on\">构造一个 <code>DELETE</code> 请求，它将请求体解释为 <code>Blob</code>，并返回完整的事件流。</p><p translation-origin=\"off\">Constructs a <code>DELETE</code> request that interprets the body as a <code>Blob</code>\nand returns the full event stream.</p>\n\n\n  </div>\n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">delete</span>(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"events\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean | ReadonlyArray&#x3C;string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean>; }; reportProgress?: boolean; responseType: \"blob\"; withCredentials?: boolean; body?: any; }): Observable&#x3C;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&#x3C;Blob>></code-example>\n\n  \n\n  <h6 class=\"no-anchor\" id=\"参数-21\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">端点 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">与请求一起发送的 HTTP 选项。</p><p translation-origin=\"off\">The HTTP options to send with the request.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h6 class=\"no-anchor\" id=\"返回值-21\">返回值</h6>\n  <p translation-result=\"on\">此请求的所有 <code>HTTPEvents</code> 的 <code>Observable</code>，其响应体为 <code>Blob</code> 类型。</p><p translation-origin=\"off\"><code>Observable&#x3C;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&#x3C;Blob>></code>: An <code>Observable</code> of all the <code><a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a></code>s for the request, with the response body as a\n<code>Blob</code>.</p>\n\n\n  \n\n\n  \n\n  \n</div>\n              <hr class=\"hr-margin\">\n            \n              <h5 class=\"no-anchor\" id=\"overload-6-1\">Overload #6</h5>\n              <div class=\"overload-info\">\n  \n  <div class=\"short-description\">\n    <p translation-result=\"on\">构造一个 <code>DELETE</code> 请求，它将请求体解释为文本字符串，并且返回完整的事件流。</p><p translation-origin=\"off\">Constructs a <code>DELETE</code> request that interprets the body as a text string\nand returns the full event stream.</p>\n\n\n  </div>\n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">delete</span>(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"events\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean | ReadonlyArray&#x3C;string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean>; }; reportProgress?: boolean; responseType: \"text\"; withCredentials?: boolean; body?: any; }): Observable&#x3C;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&#x3C;string>></code-example>\n\n  \n\n  <h6 class=\"no-anchor\" id=\"参数-22\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">端点 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">与请求一起发送的 HTTP 选项。</p><p translation-origin=\"off\">The HTTP options to send with the request.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h6 class=\"no-anchor\" id=\"返回值-22\">返回值</h6>\n  <p translation-result=\"on\">表示啥此请求的 <code>HTTPEvents</code> 的 <code>Observable</code>，响应体为 string 类型。</p><p translation-origin=\"off\"><code>Observable&#x3C;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&#x3C;string>></code>: An <code>Observable</code> of all <code><a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a></code>s for the request, with the response\nbody of type string.</p>\n\n\n  \n\n\n  \n\n  \n</div>\n              <hr class=\"hr-margin\">\n            \n              <h5 class=\"no-anchor\" id=\"overload-7-1\">Overload #7</h5>\n              <div class=\"overload-info\">\n  \n  <div class=\"short-description\">\n    <p translation-result=\"on\">构造一个 <code>DELETE</code> 请求，它将请求体解释为 JSON 对象，并且返回完整的 HTTP 事件流。</p><p translation-origin=\"off\">Constructs a <code>DELETE</code> request that interprets the body as a JSON object\nand returns the full event stream.</p>\n\n\n  </div>\n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">delete</span>(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"events\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean | ReadonlyArray&#x3C;string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean>; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; body?: any; }): Observable&#x3C;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&#x3C;Object>></code-example>\n\n  \n\n  <h6 class=\"no-anchor\" id=\"参数-23\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">端点 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">与请求一起发送的 HTTP 选项。</p><p translation-origin=\"off\">The HTTP options to send with the request.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h6 class=\"no-anchor\" id=\"返回值-23\">返回值</h6>\n  <p translation-result=\"on\">表示啥此请求的 <code>HTTPEvents</code> 的 <code>Observable</code>，响应体为 <code>Object</code> 类型。</p><p translation-origin=\"off\"><code>Observable&#x3C;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&#x3C;Object>></code>: An <code>Observable</code> of all <code><a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a></code>s for the request, with response body of\ntype <code>Object</code>.</p>\n\n\n  \n\n\n  \n\n  \n</div>\n              <hr class=\"hr-margin\">\n            \n              <h5 class=\"no-anchor\" id=\"overload-8-1\">Overload #8</h5>\n              <div class=\"overload-info\">\n  \n  <div class=\"short-description\">\n    <p translation-result=\"on\">构造一个 <code>DELETE</code> 请求，它将请求体解释为 JSON 对象，并且返回完整的 HTTP 事件流。</p><p translation-origin=\"off\">Constructs a <code>DELETE</code>request that interprets the body as a JSON object\nand returns the full event stream.</p>\n\n\n  </div>\n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">delete</span>&#x3C;T>(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"events\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean | (string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean)[]; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; body?: any; }): Observable&#x3C;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&#x3C;T>></code-example>\n\n  \n\n  <h6 class=\"no-anchor\" id=\"参数-24\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">端点 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">与请求一起发送的 HTTP 选项。</p><p translation-origin=\"off\">The HTTP options to send with the request.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h6 class=\"no-anchor\" id=\"返回值-24\">返回值</h6>\n  <p translation-result=\"on\">表示此请求的 <code>HTTPEvents</code> 的 <code>Observable</code>，响应体为所请求的类型。</p><p translation-origin=\"off\"><code>Observable&#x3C;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&#x3C;T>></code>: An <code>Observable</code> of all the <code><a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a></code>s for the request, with a response\nbody in the requested type.</p>\n\n\n  \n\n\n  \n\n  \n</div>\n              <hr class=\"hr-margin\">\n            \n              <h5 class=\"no-anchor\" id=\"overload-9-1\">Overload #9</h5>\n              <div class=\"overload-info\">\n  \n  <div class=\"short-description\">\n    <p translation-result=\"on\">构造一个 <code>DELETE</code> 请求，它将请求体解释为 <code>ArrayBuffer</code>，并且返回完整的 <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>。</p><p translation-origin=\"off\">Constructs a <code>DELETE</code> request that interprets the body as an <code>ArrayBuffer</code> and returns\nthe full <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>.</p>\n\n\n  </div>\n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">delete</span>(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"response\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean | ReadonlyArray&#x3C;string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean>; }; reportProgress?: boolean; responseType: \"arraybuffer\"; withCredentials?: boolean; body?: an...): Observable&#x3C;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&#x3C;ArrayBuffer>></code-example>\n\n  \n\n  <h6 class=\"no-anchor\" id=\"参数-25\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">端点 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>{ headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"response\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean | ReadonlyArray<string |=\"\" number=\"\" boolean=\"\">; }; reportProgress?: boolean; responseType: \"arraybuffer\"; withCredentials?: boolean; body?: an...</string></code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">与请求一起发送的 HTTP 选项。</p><p translation-origin=\"off\">The HTTP options to send with the request.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h6 class=\"no-anchor\" id=\"返回值-25\">返回值</h6>\n  <p translation-result=\"on\">此请求的完整 <code>HTTPResponse</code> 的 <code>Observable</code>，其响应体为 <code>ArrayBuffer</code> 类型。</p><p translation-origin=\"off\"><code>Observable&#x3C;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&#x3C;ArrayBuffer>></code>: An <code>Observable</code> of the full <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>, with the response body as an <code>ArrayBuffer</code>.</p>\n\n\n  \n\n\n  \n\n  \n</div>\n              <hr class=\"hr-margin\">\n            \n              <h5 class=\"no-anchor\" id=\"overload-10-1\">Overload #10</h5>\n              <div class=\"overload-info\">\n  \n  <div class=\"short-description\">\n    <p translation-result=\"on\">构造一个 <code>DELETE</code> 请求，它将请求体解释为 <code>Blob</code>，并且返回完整的 <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>。</p><p translation-origin=\"off\">Constructs a <code>DELETE</code> request that interprets the body as a <code>Blob</code> and returns the full\n<code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>.</p>\n\n\n  </div>\n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">delete</span>(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"response\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean | ReadonlyArray&#x3C;string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean>; }; reportProgress?: boolean; responseType: \"blob\"; withCredentials?: boolean; body?: any; }): Observable&#x3C;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&#x3C;Blob>></code-example>\n\n  \n\n  <h6 class=\"no-anchor\" id=\"参数-26\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">端点 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">与请求一起发送的 HTTP 选项。</p><p translation-origin=\"off\">The HTTP options to send with the request.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h6 class=\"no-anchor\" id=\"返回值-26\">返回值</h6>\n  <p translation-result=\"on\">此请求的响应对象的 <code>Observable</code>，其响应体为 <code>Blob</code> 类型。</p><p translation-origin=\"off\"><code>Observable&#x3C;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&#x3C;Blob>></code>: An <code>Observable</code> of the <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>, with the response body of type <code>Blob</code>.</p>\n\n\n  \n\n\n  \n\n  \n</div>\n              <hr class=\"hr-margin\">\n            \n              <h5 class=\"no-anchor\" id=\"overload-11-1\">Overload #11</h5>\n              <div class=\"overload-info\">\n  \n  <div class=\"short-description\">\n    <p translation-result=\"on\">构造一个 <code>DELETE</code> 请求，它将请求体解释为文本流，并且返回完整的 <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>。</p><p translation-origin=\"off\">Constructs a <code>DELETE</code> request that interprets the body as a text stream and\nreturns the full <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>.</p>\n\n\n  </div>\n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">delete</span>(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"response\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean | ReadonlyArray&#x3C;string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean>; }; reportProgress?: boolean; responseType: \"text\"; withCredentials?: boolean; body?: any; }): Observable&#x3C;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&#x3C;string>></code-example>\n\n  \n\n  <h6 class=\"no-anchor\" id=\"参数-27\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">端点 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">与请求一起发送的 HTTP 选项。</p><p translation-origin=\"off\">The HTTP options to send with the request.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h6 class=\"no-anchor\" id=\"返回值-27\">返回值</h6>\n  <p translation-result=\"on\">此请求的完整 <code>HTTPResponse</code> 的 <code>Observable</code>，其响应体为 string 类型。</p><p translation-origin=\"off\"><code>Observable&#x3C;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&#x3C;string>></code>: An <code>Observable</code> of the full <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>, with the response body of type string.</p>\n\n\n  \n\n\n  \n\n  \n</div>\n              <hr class=\"hr-margin\">\n            \n              <h5 class=\"no-anchor\" id=\"overload-12-1\">Overload #12</h5>\n              <div class=\"overload-info\">\n  \n  <div class=\"short-description\">\n    <p translation-result=\"on\">构造一个 <code>DELETE</code> 请求，它将请求体解释为 JSON 对象，并且返回完整的 <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>。</p><p translation-origin=\"off\">Constructs a <code>DELETE</code> request the interprets the body as a JSON object and returns\nthe full <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>.</p>\n\n\n  </div>\n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">delete</span>(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"response\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean | ReadonlyArray&#x3C;string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean>; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; body?: any; }): Observable&#x3C;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&#x3C;Object>></code-example>\n\n  \n\n  <h6 class=\"no-anchor\" id=\"参数-28\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">端点 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">与请求一起发送的 HTTP 选项。</p><p translation-origin=\"off\">The HTTP options to send with the request.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h6 class=\"no-anchor\" id=\"返回值-28\">返回值</h6>\n  <p translation-result=\"on\">此请求的响应对象的 <code>Observable</code>，其响应体为 <code>Object</code> 类型。</p><p translation-origin=\"off\"><code>Observable&#x3C;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&#x3C;Object>></code>: An <code>Observable</code> of the <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>, with the response body of type <code>Object</code>.</p>\n\n\n  \n\n\n  \n\n  \n</div>\n              <hr class=\"hr-margin\">\n            \n              <h5 class=\"no-anchor\" id=\"overload-13-1\">Overload #13</h5>\n              <div class=\"overload-info\">\n  \n  <div class=\"short-description\">\n    <p translation-result=\"on\">构造一个 <code>DELETE</code> 请求，它将请求体解释为 JSON 对象，并且返回完整的 <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>。</p><p translation-origin=\"off\">Constructs a <code>DELETE</code> request that interprets the body as a JSON object\nand returns the full <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>.</p>\n\n\n  </div>\n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">delete</span>&#x3C;T>(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"response\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean | ReadonlyArray&#x3C;string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean>; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; body?: any; }): Observable&#x3C;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&#x3C;T>></code-example>\n\n  \n\n  <h6 class=\"no-anchor\" id=\"参数-29\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">端点 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">与请求一起发送的 HTTP 选项。</p><p translation-origin=\"off\">The HTTP options to send with the request.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h6 class=\"no-anchor\" id=\"返回值-29\">返回值</h6>\n  <p translation-result=\"on\">此请求的响应对象的 <code>Observable</code>，其响应体为所请求的类型。</p><p translation-origin=\"off\"><code>Observable&#x3C;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&#x3C;T>></code>: An <code>Observable</code> of the <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>, with the response body of the requested type.</p>\n\n\n  \n\n\n  \n\n  \n</div>\n              <hr class=\"hr-margin\">\n            \n              <h5 class=\"no-anchor\" id=\"overload-14-1\">Overload #14</h5>\n              <div class=\"overload-info\">\n  \n  <div class=\"short-description\">\n    <p translation-result=\"on\">构造一个 <code>DELETE</code> 请求，它将请求体解释为 JSON 对象，并且返回 JSON 对象格式的响应体。</p><p translation-origin=\"off\">Constructs a <code>DELETE</code> request that interprets the body as a JSON object and\nreturns the response body as a JSON object.</p>\n\n\n  </div>\n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">delete</span>(url: string, options?: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; observe?: \"body\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean | ReadonlyArray&#x3C;string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean>; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; body?: any; }): Observable&#x3C;Object></code-example>\n\n  \n\n  <h6 class=\"no-anchor\" id=\"参数-30\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">端点 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">与请求一起发送的 HTTP 选项。</p><p translation-origin=\"off\">The HTTP options to send with the request.</p>\n\n        <div no-translate=\"\">可选. 默认值是 `undefined`.</div>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h6 class=\"no-anchor\" id=\"返回值-30\">返回值</h6>\n  <p translation-result=\"on\">此请求的响应对象的 <code>Observable</code>，其响应体为 <code>Object</code> 类型。</p><p translation-origin=\"off\"><code>Observable&#x3C;Object></code>: An <code>Observable</code> of the response, with the response body of type <code>Object</code>.</p>\n\n\n  \n\n\n  \n\n  \n</div>\n              <hr class=\"hr-margin\">\n            \n              <h5 class=\"no-anchor\" id=\"overload-15-1\">Overload #15</h5>\n              <div class=\"overload-info\">\n  \n  <div class=\"short-description\">\n    <p translation-result=\"on\">构造一个 <code>DELETE</code> 请求，它将请求体解释为 JSON 对象，并且返回给定类型的响应。</p><p translation-origin=\"off\">Constructs a DELETE request that interprets the body as a JSON object and returns\nthe response in a given type.</p>\n\n\n  </div>\n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">delete</span>&#x3C;T>(url: string, options?: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; observe?: \"body\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean | ReadonlyArray&#x3C;string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean>; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; body?: any; }): Observable&#x3C;T></code-example>\n\n  \n\n  <h6 class=\"no-anchor\" id=\"参数-31\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">端点 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">与请求一起发送的 HTTP 选项。</p><p translation-origin=\"off\">The HTTP options to send with the request.</p>\n\n        <div no-translate=\"\">可选. 默认值是 `undefined`.</div>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h6 class=\"no-anchor\" id=\"返回值-31\">返回值</h6>\n  <p translation-result=\"on\">此请求的响应对象的 <code>Observable</code>，其响应体为所请求的类型。</p><p translation-origin=\"off\"><code>Observable&#x3C;T></code>: An <code>Observable</code> of the <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>, with response body in the requested type.</p>\n\n\n  \n\n\n  \n\n  \n</div>\n              \n            \n          </div>\n        </details>\n      </td>\n    </tr>\n  \n\n  \n\n  \n    </tbody>\n</table>\n\n  \n    <a id=\"get\"></a>\n<table class=\"is-full-width method-table instance-methods\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n    <h3 id=\"get\">\n      get()\n      \n    <a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/http/HttpClient#get\"><i class=\"material-icons\">link</i></a></h3>\n    <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular-cn/edit/aio/packages/common/http/src/client.ts?message=docs(common)%3A%20请简述你的修改...#L1774-L1794\" aria-label=\"提供编辑建议\" title=\"提供编辑建议\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/angular/angular-cn/tree/12.1.0-next.1/packages/common/http/src/client.ts#L1774-L1794\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p translation-result=\"on\">构造一个 Observable，当它被订阅时，会要求服务器执行配置好的 <code>GET</code> 请求。参见它的各个独立重载形式，以了解其返回值类型。</p><p translation-origin=\"off\">Constructs an observable that, when subscribed, causes the configured\n<code>GET</code> request to execute on the server. See the individual overloads for\ndetails on the return type.</p>\n\n\n      </td>\n    </tr>\n  <tr>\n      <td>\n        <details class=\"overloads\">\n          <summary>\n            <div class=\"icon-action-header\">\n                <h4 class=\"no-anchor\" id=\"15-个重载形式-1\">15 个重载形式...</h4>\n                <span class=\"actions\">\n                  <span class=\"show-all\">显示所有</span>\n                  <span class=\"collapse-all\">隐藏所有</span>\n                  <i class=\"material-icons expand\">expand_more</i>\n                </span>\n              </div>\n          </summary>\n          <div class=\"detail-contents\">\n            \n            \n              <h5 class=\"no-anchor\" id=\"overload-1-2\">Overload #1</h5>\n              <div class=\"overload-info\">\n  \n  <div class=\"short-description\">\n    <p translation-result=\"on\">构造一个 <code>GET</code> 请求，它将请求体解释为 <code>ArrayBuffer</code>，并且返回 <code>ArrayBuffer</code> 格式的响应体。</p><p translation-origin=\"off\">Constructs a <code>GET</code> request that interprets the body as an <code>ArrayBuffer</code> and returns the\nresponse in an <code>ArrayBuffer</code>.</p>\n\n\n  </div>\n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">get</span>(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; observe?: \"body\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean | ReadonlyArray&#x3C;string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean>; }; reportProgress?: boolean; responseType: \"arraybuffer\"; withCredentials?: boolean; }): Observable&#x3C;ArrayBuffer></code-example>\n\n  \n\n  <h6 class=\"no-anchor\" id=\"参数-32\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">端点 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">与请求一起发送的 HTTP 选项。</p><p translation-origin=\"off\">The HTTP options to send with the request.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h6 class=\"no-anchor\" id=\"返回值-32\">返回值</h6>\n  <p translation-result=\"on\">响应对象的 <code>Observable</code>，其响应体为 <code>ArrayBuffer</code> 类型。</p><p translation-origin=\"off\"><code>Observable&#x3C;ArrayBuffer></code>: An <code>Observable</code> of the response, with the response body as an <code>ArrayBuffer</code>.</p>\n\n\n  \n\n\n  \n\n  \n</div>\n              <hr class=\"hr-margin\">\n            \n              <h5 class=\"no-anchor\" id=\"overload-2-2\">Overload #2</h5>\n              <div class=\"overload-info\">\n  \n  <div class=\"short-description\">\n    <p translation-result=\"on\">构造一个 <code>GET</code> 请求，它将请求体解释为 <code>Blob</code>，并且返回 <code>Blob</code> 格式的响应体。</p><p translation-origin=\"off\">Constructs a <code>GET</code> request that interprets the body as a <code>Blob</code>\nand returns the response as a <code>Blob</code>.</p>\n\n\n  </div>\n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">get</span>(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; observe?: \"body\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean | ReadonlyArray&#x3C;string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean>; }; reportProgress?: boolean; responseType: \"blob\"; withCredentials?: boolean; }): Observable&#x3C;Blob></code-example>\n\n  \n\n  <h6 class=\"no-anchor\" id=\"参数-33\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">端点 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">与请求一起发送的 HTTP 选项。</p><p translation-origin=\"off\">The HTTP options to send with the request.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h6 class=\"no-anchor\" id=\"返回值-33\">返回值</h6>\n  <p translation-result=\"on\">响应对象的 <code>Observable</code> ，其响应体为 <code>Blob</code> 类型。</p><p translation-origin=\"off\"><code>Observable&#x3C;Blob></code>: An <code>Observable</code> of the response, with the response body as a <code>Blob</code>.</p>\n\n\n  \n\n\n  \n\n  \n</div>\n              <hr class=\"hr-margin\">\n            \n              <h5 class=\"no-anchor\" id=\"overload-3-2\">Overload #3</h5>\n              <div class=\"overload-info\">\n  \n  <div class=\"short-description\">\n    <p translation-result=\"on\">构造一个 <code>GET</code> 请求，它将请求体解释为字符串，并且返回字符串格式的响应。</p><p translation-origin=\"off\">Constructs a <code>GET</code> request that interprets the body as a text string\nand returns the response as a string value.</p>\n\n\n  </div>\n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">get</span>(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; observe?: \"body\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean | ReadonlyArray&#x3C;string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean>; }; reportProgress?: boolean; responseType: \"text\"; withCredentials?: boolean; }): Observable&#x3C;string></code-example>\n\n  \n\n  <h6 class=\"no-anchor\" id=\"参数-34\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">端点 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">与请求一起发送的 HTTP 选项。</p><p translation-origin=\"off\">The HTTP options to send with the request.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h6 class=\"no-anchor\" id=\"返回值-34\">返回值</h6>\n  <p translation-result=\"on\">此请求的响应对象的 <code>Observable</code>，其响应体为 string 类型。</p><p translation-origin=\"off\"><code>Observable&#x3C;string></code>: An <code>Observable</code> of the response, with the response body of type string.</p>\n\n\n  \n\n\n  \n\n  \n</div>\n              <hr class=\"hr-margin\">\n            \n              <h5 class=\"no-anchor\" id=\"overload-4-2\">Overload #4</h5>\n              <div class=\"overload-info\">\n  \n  <div class=\"short-description\">\n    <p translation-result=\"on\">构造一个 <code>GET</code> 请求，它将请求体解释为 <code>ArrayBuffer</code>，并返回完整的事件流。</p><p translation-origin=\"off\">Constructs a <code>GET</code> request that interprets the body as an <code>ArrayBuffer</code> and returns\nthe full event stream.</p>\n\n\n  </div>\n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">get</span>(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"events\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean | ReadonlyArray&#x3C;string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean>; }; reportProgress?: boolean; responseType: \"arraybuffer\"; withCredentials?: boolean; }): Observable&#x3C;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&#x3C;ArrayBuffer>></code-example>\n\n  \n\n  <h6 class=\"no-anchor\" id=\"参数-35\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">端点 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">与请求一起发送的 HTTP 选项。</p><p translation-origin=\"off\">The HTTP options to send with the request.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h6 class=\"no-anchor\" id=\"返回值-35\">返回值</h6>\n  <p translation-result=\"on\">表示此请求的 <code>HttpEvents</code> 的 <code>Observable</code>，响应体为 n <code>ArrayBuffer</code> 类型。</p><p translation-origin=\"off\"><code>Observable&#x3C;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&#x3C;ArrayBuffer>></code>: An <code>Observable</code> of all <code><a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a></code>s for the request, with the response\nbody as an <code>ArrayBuffer</code>.</p>\n\n\n  \n\n\n  \n\n  \n</div>\n              <hr class=\"hr-margin\">\n            \n              <h5 class=\"no-anchor\" id=\"overload-5-2\">Overload #5</h5>\n              <div class=\"overload-info\">\n  \n  <div class=\"short-description\">\n    <p translation-result=\"on\">构造一个 <code>GET</code> 请求，它将请求体解释为 <code>Blob</code>，并返回完整的事件流。</p><p translation-origin=\"off\">Constructs a <code>GET</code> request that interprets the body as a <code>Blob</code> and\nreturns the full event stream.</p>\n\n\n  </div>\n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">get</span>(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"events\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean | ReadonlyArray&#x3C;string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean>; }; reportProgress?: boolean; responseType: \"blob\"; withCredentials?: boolean; }): Observable&#x3C;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&#x3C;Blob>></code-example>\n\n  \n\n  <h6 class=\"no-anchor\" id=\"参数-36\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">端点 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">与请求一起发送的 HTTP 选项。</p><p translation-origin=\"off\">The HTTP options to send with the request.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h6 class=\"no-anchor\" id=\"返回值-36\">返回值</h6>\n  <p translation-result=\"on\">响应对象的 <code>Observable</code> ，其响应体为 <code>Blob</code> 类型。</p><p translation-origin=\"off\"><code>Observable&#x3C;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&#x3C;Blob>></code>: An <code>Observable</code> of the response, with the response body as a <code>Blob</code>.</p>\n\n\n  \n\n\n  \n\n  \n</div>\n              <hr class=\"hr-margin\">\n            \n              <h5 class=\"no-anchor\" id=\"overload-6-2\">Overload #6</h5>\n              <div class=\"overload-info\">\n  \n  <div class=\"short-description\">\n    <p translation-result=\"on\">构造一个 <code>GET</code> 请求，它将请求体解释为文本字符串，并且返回完整的事件流。</p><p translation-origin=\"off\">Constructs a <code>GET</code> request that interprets the body as a text string and returns\nthe full event stream.</p>\n\n\n  </div>\n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">get</span>(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"events\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean | ReadonlyArray&#x3C;string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean>; }; reportProgress?: boolean; responseType: \"text\"; withCredentials?: boolean; }): Observable&#x3C;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&#x3C;string>></code-example>\n\n  \n\n  <h6 class=\"no-anchor\" id=\"参数-37\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">端点 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">与请求一起发送的 HTTP 选项。</p><p translation-origin=\"off\">The HTTP options to send with the request.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h6 class=\"no-anchor\" id=\"返回值-37\">返回值</h6>\n  <p translation-result=\"on\">此请求的响应对象的 <code>Observable</code>，其响应体为 string 类型。</p><p translation-origin=\"off\"><code>Observable&#x3C;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&#x3C;string>></code>: An <code>Observable</code> of the response, with the response body of type string.</p>\n\n\n  \n\n\n  \n\n  \n</div>\n              <hr class=\"hr-margin\">\n            \n              <h5 class=\"no-anchor\" id=\"overload-7-2\">Overload #7</h5>\n              <div class=\"overload-info\">\n  \n  <div class=\"short-description\">\n    <p translation-result=\"on\">构造一个 <code>GET</code> 请求，它将请求体解释为 JSON 对象，并且返回完整的 HTTP 事件流。</p><p translation-origin=\"off\">Constructs a <code>GET</code> request that interprets the body as a JSON object\nand returns the full event stream.</p>\n\n\n  </div>\n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">get</span>(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"events\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean | ReadonlyArray&#x3C;string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean>; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; }): Observable&#x3C;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&#x3C;Object>></code-example>\n\n  \n\n  <h6 class=\"no-anchor\" id=\"参数-38\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">端点 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">与请求一起发送的 HTTP 选项。</p><p translation-origin=\"off\">The HTTP options to send with the request.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h6 class=\"no-anchor\" id=\"返回值-38\">返回值</h6>\n  <p translation-result=\"on\">此请求的响应对象的 <code>Observable</code>，其响应体为 <code>Object</code> 类型。</p><p translation-origin=\"off\"><code>Observable&#x3C;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&#x3C;Object>></code>: An <code>Observable</code> of the response, with the response body of type <code>Object</code>.</p>\n\n\n  \n\n\n  \n\n  \n</div>\n              <hr class=\"hr-margin\">\n            \n              <h5 class=\"no-anchor\" id=\"overload-8-2\">Overload #8</h5>\n              <div class=\"overload-info\">\n  \n  <div class=\"short-description\">\n    <p translation-result=\"on\">构造一个 <code>GET</code> 请求，它将请求体解释为 JSON 对象，并且返回完整的 HTTP 事件流。</p><p translation-origin=\"off\">Constructs a <code>GET</code> request that interprets the body as a JSON object and returns the full event\nstream.</p>\n\n\n  </div>\n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">get</span>&#x3C;T>(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"events\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean | ReadonlyArray&#x3C;string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean>; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; }): Observable&#x3C;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&#x3C;T>></code-example>\n\n  \n\n  <h6 class=\"no-anchor\" id=\"参数-39\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">端点 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">与请求一起发送的 HTTP 选项。</p><p translation-origin=\"off\">The HTTP options to send with the request.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h6 class=\"no-anchor\" id=\"返回值-39\">返回值</h6>\n  <p translation-result=\"on\">响应对象的 <code>Observable</code> ，其响应体为所请求的类型。</p><p translation-origin=\"off\"><code>Observable&#x3C;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&#x3C;T>></code>: An <code>Observable</code> of the response, with a response body in the requested type.</p>\n\n\n  \n\n\n  \n\n  \n</div>\n              <hr class=\"hr-margin\">\n            \n              <h5 class=\"no-anchor\" id=\"overload-9-2\">Overload #9</h5>\n              <div class=\"overload-info\">\n  \n  <div class=\"short-description\">\n    <p translation-result=\"on\">构造一个 <code>GET</code> 请求，它将请求体解释为 <code>ArrayBuffer</code>，并且返回完整的 <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>。</p><p translation-origin=\"off\">Constructs a <code>GET</code> request that interprets the body as an <code>ArrayBuffer</code> and\nreturns the full <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>.</p>\n\n\n  </div>\n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">get</span>(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"response\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean | ReadonlyArray&#x3C;string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean>; }; reportProgress?: boolean; responseType: \"arraybuffer\"; withCredentials?: boolean; }): Observable&#x3C;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&#x3C;ArrayBuffer>></code-example>\n\n  \n\n  <h6 class=\"no-anchor\" id=\"参数-40\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">端点 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">与请求一起发送的 HTTP 选项。</p><p translation-origin=\"off\">The HTTP options to send with the request.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h6 class=\"no-anchor\" id=\"返回值-40\">返回值</h6>\n  <p translation-result=\"on\">此请求的响应对象的 <code>Observable</code>，其响应体为 <code>ArrayBuffer</code> 类型。</p><p translation-origin=\"off\"><code>Observable&#x3C;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&#x3C;ArrayBuffer>></code>: An <code>Observable</code> of the <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code> for the request,\nwith the response body as an <code>ArrayBuffer</code>.</p>\n\n\n  \n\n\n  \n\n  \n</div>\n              <hr class=\"hr-margin\">\n            \n              <h5 class=\"no-anchor\" id=\"overload-10-2\">Overload #10</h5>\n              <div class=\"overload-info\">\n  \n  <div class=\"short-description\">\n    <p translation-result=\"on\">构造一个 <code>GET</code> 请求，它将请求体解释为 <code>Blob</code>，并且返回完整的 <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>。</p><p translation-origin=\"off\">Constructs a <code>GET</code> request that interprets the body as a <code>Blob</code> and\nreturns the full <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>.</p>\n\n\n  </div>\n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">get</span>(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"response\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean | ReadonlyArray&#x3C;string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean>; }; reportProgress?: boolean; responseType: \"blob\"; withCredentials?: boolean; }): Observable&#x3C;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&#x3C;Blob>></code-example>\n\n  \n\n  <h6 class=\"no-anchor\" id=\"参数-41\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">端点 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">与请求一起发送的 HTTP 选项。</p><p translation-origin=\"off\">The HTTP options to send with the request.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h6 class=\"no-anchor\" id=\"返回值-41\">返回值</h6>\n  <p translation-result=\"on\">此请求的响应对象的 <code>Observable</code>，其响应体为 <code>Blob</code> 类型。</p><p translation-origin=\"off\"><code>Observable&#x3C;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&#x3C;Blob>></code>: An <code>Observable</code> of the <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code> for the request,\nwith the response body as a <code>Blob</code>.</p>\n\n\n  \n\n\n  \n\n  \n</div>\n              <hr class=\"hr-margin\">\n            \n              <h5 class=\"no-anchor\" id=\"overload-11-2\">Overload #11</h5>\n              <div class=\"overload-info\">\n  \n  <div class=\"short-description\">\n    <p translation-result=\"on\">构造一个 <code>GET</code> 请求，它将请求体解释为文本流，并且返回完整的 <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>。</p><p translation-origin=\"off\">Constructs a <code>GET</code> request that interprets the body as a text stream and\nreturns the full <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>.</p>\n\n\n  </div>\n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">get</span>(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"response\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean | ReadonlyArray&#x3C;string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean>; }; reportProgress?: boolean; responseType: \"text\"; withCredentials?: boolean; }): Observable&#x3C;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&#x3C;string>></code-example>\n\n  \n\n  <h6 class=\"no-anchor\" id=\"参数-42\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">端点 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">与请求一起发送的 HTTP 选项。</p><p translation-origin=\"off\">The HTTP options to send with the request.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h6 class=\"no-anchor\" id=\"返回值-42\">返回值</h6>\n  <p translation-result=\"on\">此请求的响应对象的 <code>Observable</code>，其响应体为 string 类型。</p><p translation-origin=\"off\"><code>Observable&#x3C;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&#x3C;string>></code>: An <code>Observable</code> of the <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code> for the request,\nwith the response body of type string.</p>\n\n\n  \n\n\n  \n\n  \n</div>\n              <hr class=\"hr-margin\">\n            \n              <h5 class=\"no-anchor\" id=\"overload-12-2\">Overload #12</h5>\n              <div class=\"overload-info\">\n  \n  <div class=\"short-description\">\n    <p translation-result=\"on\">构造一个 <code>GET</code> 请求，它将请求体解释为 JSON 对象，并且返回完整的 <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>。</p><p translation-origin=\"off\">Constructs a <code>GET</code> request that interprets the body as a JSON object and\nreturns the full <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>.</p>\n\n\n  </div>\n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">get</span>(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"response\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean | ReadonlyArray&#x3C;string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean>; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; }): Observable&#x3C;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&#x3C;Object>></code-example>\n\n  \n\n  <h6 class=\"no-anchor\" id=\"参数-43\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">端点 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">与请求一起发送的 HTTP 选项。</p><p translation-origin=\"off\">The HTTP options to send with the request.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h6 class=\"no-anchor\" id=\"返回值-43\">返回值</h6>\n  <p translation-result=\"on\">此请求的完整 <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code> 的 <code>Observable</code>，其响应体为 <code>Object</code> 类型。</p><p translation-origin=\"off\"><code>Observable&#x3C;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&#x3C;Object>></code>: An <code>Observable</code> of the full <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>,\nwith the response body of type <code>Object</code>.</p>\n\n\n  \n\n\n  \n\n  \n</div>\n              <hr class=\"hr-margin\">\n            \n              <h5 class=\"no-anchor\" id=\"overload-13-2\">Overload #13</h5>\n              <div class=\"overload-info\">\n  \n  <div class=\"short-description\">\n    <p translation-result=\"on\">构造一个 <code>GET</code> 请求，它将请求体解释为 JSON 对象，并且返回完整的 <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>。</p><p translation-origin=\"off\">Constructs a <code>GET</code> request that interprets the body as a JSON object and\nreturns the full <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>.</p>\n\n\n  </div>\n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">get</span>&#x3C;T>(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"response\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean | ReadonlyArray&#x3C;string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean>; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; }): Observable&#x3C;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&#x3C;T>></code-example>\n\n  \n\n  <h6 class=\"no-anchor\" id=\"参数-44\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">端点 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">与请求一起发送的 HTTP 选项。</p><p translation-origin=\"off\">The HTTP options to send with the request.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h6 class=\"no-anchor\" id=\"返回值-44\">返回值</h6>\n  <p translation-result=\"on\">此请求的完整 <code>HTTPResponse</code> 的 <code>Observable</code>，其响应体为所请求的类型。</p><p translation-origin=\"off\"><code>Observable&#x3C;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&#x3C;T>></code>: An <code>Observable</code> of the full <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code> for the request,\nwith a response body in the requested type.</p>\n\n\n  \n\n\n  \n\n  \n</div>\n              <hr class=\"hr-margin\">\n            \n              <h5 class=\"no-anchor\" id=\"overload-14-2\">Overload #14</h5>\n              <div class=\"overload-info\">\n  \n  <div class=\"short-description\">\n    <p translation-result=\"on\">构造一个 <code>GET</code> 请求，它将请求体解释为 JSON 对象，并且返回 JSON 对象格式的响应体。</p><p translation-origin=\"off\">Constructs a <code>GET</code> request that interprets the body as a JSON object and\nreturns the response body as a JSON object.</p>\n\n\n  </div>\n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">get</span>(url: string, options?: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; observe?: \"body\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean | ReadonlyArray&#x3C;string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean>; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; }): Observable&#x3C;Object></code-example>\n\n  \n\n  <h6 class=\"no-anchor\" id=\"参数-45\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">端点 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">与请求一起发送的 HTTP 选项。</p><p translation-origin=\"off\">The HTTP options to send with the request.</p>\n\n        <div no-translate=\"\">可选. 默认值是 `undefined`.</div>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h6 class=\"no-anchor\" id=\"返回值-45\">返回值</h6>\n  <p translation-result=\"on\">响应体的 <code>Observable</code> 作为 JSON 对象。</p><p translation-origin=\"off\"><code>Observable&#x3C;Object></code>: An <code>Observable</code> of the response body as a JSON object.</p>\n\n\n  \n\n\n  \n\n  \n</div>\n              <hr class=\"hr-margin\">\n            \n              <h5 class=\"no-anchor\" id=\"overload-15-2\">Overload #15</h5>\n              <div class=\"overload-info\">\n  \n  <div class=\"short-description\">\n    <p translation-result=\"on\">构造一个 <code>GET</code> 请求，它将请求体解释为 JSON 对象，并且返回给定类型的响应体。</p><p translation-origin=\"off\">Constructs a <code>GET</code> request that interprets the body as a JSON object and returns\nthe response body in a given type.</p>\n\n\n  </div>\n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">get</span>&#x3C;T>(url: string, options?: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; observe?: \"body\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean | ReadonlyArray&#x3C;string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean>; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; }): Observable&#x3C;T></code-example>\n\n  \n\n  <h6 class=\"no-anchor\" id=\"参数-46\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">端点 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">与请求一起发送的 HTTP 选项。</p><p translation-origin=\"off\">The HTTP options to send with the request.</p>\n\n        <div no-translate=\"\">可选. 默认值是 `undefined`.</div>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h6 class=\"no-anchor\" id=\"返回值-46\">返回值</h6>\n  <p translation-result=\"on\">此请求的响应对象的 <code>Observable</code>，其响应体为所请求的类型。</p><p translation-origin=\"off\"><code>Observable&#x3C;T></code>: An <code>Observable</code> of the <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>, with a response body in the requested type.</p>\n\n\n  \n\n\n  \n\n  \n</div>\n              \n            \n          </div>\n        </details>\n      </td>\n    </tr>\n  \n\n  \n\n  \n    </tbody>\n</table>\n\n  \n    <a id=\"head\"></a>\n<table class=\"is-full-width method-table instance-methods\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n    <h3 id=\"head\">\n      head()\n      \n    <a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/http/HttpClient#head\"><i class=\"material-icons\">link</i></a></h3>\n    <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular-cn/edit/aio/packages/common/http/src/client.ts?message=docs(common)%3A%20请简述你的修改...#L2239-L2261\" aria-label=\"提供编辑建议\" title=\"提供编辑建议\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/angular/angular-cn/tree/12.1.0-next.1/packages/common/http/src/client.ts#L2239-L2261\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p translation-result=\"on\">构造一个 Observable，当它被订阅时，会要求服务器执行配置好的 <code>HEAD</code> 请求。<code>HEAD</code> 方法会返回该资源的元数据，而不会传输资源本身。参见它的各个独立重载形式，以了解其返回类型。</p><p translation-origin=\"off\">Constructs an observable that, when subscribed, causes the configured\n<code>HEAD</code> request to execute on the server. The <code>HEAD</code> method returns\nmeta information about the resource without transferring the\nresource itself. See the individual overloads for\ndetails on the return type.</p>\n\n\n      </td>\n    </tr>\n  <tr>\n      <td>\n        <details class=\"overloads\">\n          <summary>\n            <div class=\"icon-action-header\">\n                <h4 class=\"no-anchor\" id=\"15-个重载形式-2\">15 个重载形式...</h4>\n                <span class=\"actions\">\n                  <span class=\"show-all\">显示所有</span>\n                  <span class=\"collapse-all\">隐藏所有</span>\n                  <i class=\"material-icons expand\">expand_more</i>\n                </span>\n              </div>\n          </summary>\n          <div class=\"detail-contents\">\n            \n            \n              <h5 class=\"no-anchor\" id=\"overload-1-3\">Overload #1</h5>\n              <div class=\"overload-info\">\n  \n  <div class=\"short-description\">\n    <p translation-result=\"on\">构造一个 <code>HEAD</code> 请求，它将请求体解释为 <code>ArrayBuffer</code>，并且返回 <code>ArrayBuffer</code> 格式的响应体。</p><p translation-origin=\"off\">Constructs a <code>HEAD</code> request that interprets the body as an <code>ArrayBuffer</code> and\nreturns the response as an <code>ArrayBuffer</code>.</p>\n\n\n  </div>\n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">head</span>(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; observe?: \"body\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean | ReadonlyArray&#x3C;string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean>; }; reportProgress?: boolean; responseType: \"arraybuffer\"; withCredentials?: boolean; }): Observable&#x3C;ArrayBuffer></code-example>\n\n  \n\n  <h6 class=\"no-anchor\" id=\"参数-47\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">端点 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">与请求一起发送的 HTTP 选项。</p><p translation-origin=\"off\">The HTTP options to send with the request.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h6 class=\"no-anchor\" id=\"返回值-47\">返回值</h6>\n  <p translation-result=\"on\">响应对象的 <code>Observable</code>，其响应体为 <code>ArrayBuffer</code> 类型。</p><p translation-origin=\"off\"><code>Observable&#x3C;ArrayBuffer></code>: An <code>Observable</code> of the response, with the response body as an <code>ArrayBuffer</code>.</p>\n\n\n  \n\n\n  \n\n  \n</div>\n              <hr class=\"hr-margin\">\n            \n              <h5 class=\"no-anchor\" id=\"overload-2-3\">Overload #2</h5>\n              <div class=\"overload-info\">\n  \n  <div class=\"short-description\">\n    <p translation-result=\"on\">构造一个 <code>HEAD</code> 请求，它将请求体解释为 <code>Blob</code>，并且返回 <code>Blob</code> 格式的响应体。</p><p translation-origin=\"off\">Constructs a <code>HEAD</code> request that interprets the body as a <code>Blob</code> and returns\nthe response as a <code>Blob</code>.</p>\n\n\n  </div>\n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">head</span>(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; observe?: \"body\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean | ReadonlyArray&#x3C;string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean>; }; reportProgress?: boolean; responseType: \"blob\"; withCredentials?: boolean; }): Observable&#x3C;Blob></code-example>\n\n  \n\n  <h6 class=\"no-anchor\" id=\"参数-48\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">端点 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">与请求一起发送的 HTTP 选项。</p><p translation-origin=\"off\">The HTTP options to send with the request.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h6 class=\"no-anchor\" id=\"返回值-48\">返回值</h6>\n  <p translation-result=\"on\">响应对象的 <code>Observable</code> ，其响应体为 <code>Blob</code> 类型。</p><p translation-origin=\"off\"><code>Observable&#x3C;Blob></code>: An <code>Observable</code> of the response, with the response body as a <code>Blob</code>.</p>\n\n\n  \n\n\n  \n\n  \n</div>\n              <hr class=\"hr-margin\">\n            \n              <h5 class=\"no-anchor\" id=\"overload-3-3\">Overload #3</h5>\n              <div class=\"overload-info\">\n  \n  <div class=\"short-description\">\n    <p translation-result=\"on\">构造一个 <code>HEAD</code> 请求，它将请求体解释为字符串，并且返回字符串格式的响应。</p><p translation-origin=\"off\">Constructs a <code>HEAD</code> request that interprets the body as a text string and returns the response\nas a string value.</p>\n\n\n  </div>\n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">head</span>(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; observe?: \"body\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean | ReadonlyArray&#x3C;string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean>; }; reportProgress?: boolean; responseType: \"text\"; withCredentials?: boolean; }): Observable&#x3C;string></code-example>\n\n  \n\n  <h6 class=\"no-anchor\" id=\"参数-49\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">端点 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">与请求一起发送的 HTTP 选项。</p><p translation-origin=\"off\">The HTTP options to send with the request.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h6 class=\"no-anchor\" id=\"返回值-49\">返回值</h6>\n  <p translation-result=\"on\">此请求的响应对象的 <code>Observable</code>，其响应体为 string 类型。</p><p translation-origin=\"off\"><code>Observable&#x3C;string></code>: An <code>Observable</code> of the response, with the response body of type string.</p>\n\n\n  \n\n\n  \n\n  \n</div>\n              <hr class=\"hr-margin\">\n            \n              <h5 class=\"no-anchor\" id=\"overload-4-3\">Overload #4</h5>\n              <div class=\"overload-info\">\n  \n  <div class=\"short-description\">\n    <p translation-result=\"on\">构造一个 <code>HEAD</code> 请求，它把请求体解释为 <code>ArrayBuffer</code>，并返回完整事件的流。</p><p translation-origin=\"off\">Constructs a <code>HEAD</code> request that interprets the body as an  <code>ArrayBuffer</code>\nand returns the full event stream.</p>\n\n\n  </div>\n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">head</span>(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"events\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean | ReadonlyArray&#x3C;string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean>; }; reportProgress?: boolean; responseType: \"arraybuffer\"; withCredentials?: boolean; }): Observable&#x3C;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&#x3C;ArrayBuffer>></code-example>\n\n  \n\n  <h6 class=\"no-anchor\" id=\"参数-50\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">端点 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">与请求一起发送的 HTTP 选项。</p><p translation-origin=\"off\">The HTTP options to send with the request.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h6 class=\"no-anchor\" id=\"返回值-50\">返回值</h6>\n  <p translation-result=\"on\">此请求的 <code>HttpEvents</code> 的 <code>Observable</code>，其响应体为 <code>ArrayBuffer</code> 类型。</p><p translation-origin=\"off\"><code>Observable&#x3C;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&#x3C;ArrayBuffer>></code>: An <code>Observable</code> of all <code><a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a></code>s for the request,\nwith the response body as an <code>ArrayBuffer</code>.</p>\n\n\n  \n\n\n  \n\n  \n</div>\n              <hr class=\"hr-margin\">\n            \n              <h5 class=\"no-anchor\" id=\"overload-5-3\">Overload #5</h5>\n              <div class=\"overload-info\">\n  \n  <div class=\"short-description\">\n    <p translation-result=\"on\">构造一个 <code>HEAD</code> 请求，它将请求体解释为 <code>Blob</code>，并返回完整的事件流。</p><p translation-origin=\"off\">Constructs a <code>HEAD</code> request that interprets the body as a <code>Blob</code> and\nreturns the full event stream.</p>\n\n\n  </div>\n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">head</span>(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"events\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean | ReadonlyArray&#x3C;string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean>; }; reportProgress?: boolean; responseType: \"blob\"; withCredentials?: boolean; }): Observable&#x3C;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&#x3C;Blob>></code-example>\n\n  \n\n  <h6 class=\"no-anchor\" id=\"参数-51\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">端点 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">与请求一起发送的 HTTP 选项。</p><p translation-origin=\"off\">The HTTP options to send with the request.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h6 class=\"no-anchor\" id=\"返回值-51\">返回值</h6>\n  <p translation-result=\"on\">此请求的 <code>HttpEvents</code> 的 <code>Observable</code>，其响应体为 <code>Blob</code> 类型。</p><p translation-origin=\"off\"><code>Observable&#x3C;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&#x3C;Blob>></code>: An <code>Observable</code> of all <code><a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a></code>s for the request,\nwith the response body as a <code>Blob</code>.</p>\n\n\n  \n\n\n  \n\n  \n</div>\n              <hr class=\"hr-margin\">\n            \n              <h5 class=\"no-anchor\" id=\"overload-6-3\">Overload #6</h5>\n              <div class=\"overload-info\">\n  \n  <div class=\"short-description\">\n    <p translation-result=\"on\">构造一个 <code>HEAD</code> 请求，它将请求体解释为文本字符串，并且返回完整的事件流。</p><p translation-origin=\"off\">Constructs a <code>HEAD</code> request that interprets the body as a text string\nand returns the full event stream.</p>\n\n\n  </div>\n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">head</span>(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"events\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean | ReadonlyArray&#x3C;string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean>; }; reportProgress?: boolean; responseType: \"text\"; withCredentials?: boolean; }): Observable&#x3C;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&#x3C;string>></code-example>\n\n  \n\n  <h6 class=\"no-anchor\" id=\"参数-52\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">端点 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">与请求一起发送的 HTTP 选项。</p><p translation-origin=\"off\">The HTTP options to send with the request.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h6 class=\"no-anchor\" id=\"返回值-52\">返回值</h6>\n  <p translation-result=\"on\">表示啥此请求的 <code>HttpEvents for the request</code> 的 <code>Observable</code>，响应体为 string 类型。</p><p translation-origin=\"off\"><code>Observable&#x3C;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&#x3C;string>></code>: An <code>Observable</code> of all <code><a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a></code>s for the request, with the response body of type\nstring.</p>\n\n\n  \n\n\n  \n\n  \n</div>\n              <hr class=\"hr-margin\">\n            \n              <h5 class=\"no-anchor\" id=\"overload-7-3\">Overload #7</h5>\n              <div class=\"overload-info\">\n  \n  <div class=\"short-description\">\n    <p translation-result=\"on\">构造一个 <code>HEAD</code> 请求，它将请求体解释为 JSON 对象，并且返回完整的 HTTP 事件流。</p><p translation-origin=\"off\">Constructs a <code>HEAD</code> request that interprets the body as a JSON object\nand returns the full HTTP event stream.</p>\n\n\n  </div>\n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">head</span>(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"events\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean | ReadonlyArray&#x3C;string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean>; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; }): Observable&#x3C;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&#x3C;Object>></code-example>\n\n  \n\n  <h6 class=\"no-anchor\" id=\"参数-53\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">端点 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">与请求一起发送的 HTTP 选项。</p><p translation-origin=\"off\">The HTTP options to send with the request.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h6 class=\"no-anchor\" id=\"返回值-53\">返回值</h6>\n  <p translation-result=\"on\">表示啥此请求的 <code>HTTPEvents</code> 的 <code>Observable</code>，响应体为 <code>Object</code> 类型。</p><p translation-origin=\"off\"><code>Observable&#x3C;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&#x3C;Object>></code>: An <code>Observable</code> of all <code><a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a></code>s for the request, with a response body of\ntype <code>Object</code>.</p>\n\n\n  \n\n\n  \n\n  \n</div>\n              <hr class=\"hr-margin\">\n            \n              <h5 class=\"no-anchor\" id=\"overload-8-3\">Overload #8</h5>\n              <div class=\"overload-info\">\n  \n  <div class=\"short-description\">\n    <p translation-result=\"on\">构造一个 <code>HEAD</code> 请求，它将请求体解释为 JSON 对象，并且返回完整的 HTTP 事件流。</p><p translation-origin=\"off\">Constructs a <code>HEAD</code> request that interprets the body as a JSON object and\nreturns the full event stream.</p>\n\n\n  </div>\n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">head</span>&#x3C;T>(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"events\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean | ReadonlyArray&#x3C;string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean>; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; }): Observable&#x3C;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&#x3C;T>></code-example>\n\n  \n\n  <h6 class=\"no-anchor\" id=\"参数-54\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">端点 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">与请求一起发送的 HTTP 选项。</p><p translation-origin=\"off\">The HTTP options to send with the request.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h6 class=\"no-anchor\" id=\"返回值-54\">返回值</h6>\n  <p translation-result=\"on\">表示此请求的 <code>HTTPEvents</code> 的 <code>Observable</code>，响应体为所请求的类型。</p><p translation-origin=\"off\"><code>Observable&#x3C;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&#x3C;T>></code>: An <code>Observable</code> of all the <code><a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a></code>s for the request,\nwith a response body in the requested type.</p>\n\n\n  \n\n\n  \n\n  \n</div>\n              <hr class=\"hr-margin\">\n            \n              <h5 class=\"no-anchor\" id=\"overload-9-3\">Overload #9</h5>\n              <div class=\"overload-info\">\n  \n  <div class=\"short-description\">\n    <p translation-result=\"on\">构造一个 <code>HEAD</code> 请求，它将请求体解释为 <code>ArrayBuffer</code>，并且返回完整的 <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>。</p><p translation-origin=\"off\">Constructs a <code>HEAD</code> request that interprets the body as an <code>ArrayBuffer</code>\nand returns the full HTTP response.</p>\n\n\n  </div>\n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">head</span>(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"response\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean | ReadonlyArray&#x3C;string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean>; }; reportProgress?: boolean; responseType: \"arraybuffer\"; withCredentials?: boolean; }): Observable&#x3C;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&#x3C;ArrayBuffer>></code-example>\n\n  \n\n  <h6 class=\"no-anchor\" id=\"参数-55\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">端点 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">与请求一起发送的 HTTP 选项。</p><p translation-origin=\"off\">The HTTP options to send with the request.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h6 class=\"no-anchor\" id=\"返回值-55\">返回值</h6>\n  <p translation-result=\"on\">此请求的响应对象的 <code>Observable</code>，其响应体为 <code>ArrayBuffer</code> 类型。</p><p translation-origin=\"off\"><code>Observable&#x3C;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&#x3C;ArrayBuffer>></code>: An <code>Observable</code> of the <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code> for the request,\nwith the response body as an <code>ArrayBuffer</code>.</p>\n\n\n  \n\n\n  \n\n  \n</div>\n              <hr class=\"hr-margin\">\n            \n              <h5 class=\"no-anchor\" id=\"overload-10-3\">Overload #10</h5>\n              <div class=\"overload-info\">\n  \n  <div class=\"short-description\">\n    <p translation-result=\"on\">构造一个 <code>HEAD</code> 请求，它将请求体解释为 <code>Blob</code>，并且返回完整的 <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>。</p><p translation-origin=\"off\">Constructs a <code>HEAD</code> request that interprets the body as a <code>Blob</code> and returns\nthe full <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>.</p>\n\n\n  </div>\n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">head</span>(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"response\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean | ReadonlyArray&#x3C;string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean>; }; reportProgress?: boolean; responseType: \"blob\"; withCredentials?: boolean; }): Observable&#x3C;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&#x3C;Blob>></code-example>\n\n  \n\n  <h6 class=\"no-anchor\" id=\"参数-56\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">端点 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">与请求一起发送的 HTTP 选项。</p><p translation-origin=\"off\">The HTTP options to send with the request.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h6 class=\"no-anchor\" id=\"返回值-56\">返回值</h6>\n  <p translation-result=\"on\">此请求的响应对象的 <code>Observable</code>，其响应体为 blob 类型。</p><p translation-origin=\"off\"><code>Observable&#x3C;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&#x3C;Blob>></code>: An <code>Observable</code> of the <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code> for the request,\nwith the response body as a blob.</p>\n\n\n  \n\n\n  \n\n  \n</div>\n              <hr class=\"hr-margin\">\n            \n              <h5 class=\"no-anchor\" id=\"overload-11-3\">Overload #11</h5>\n              <div class=\"overload-info\">\n  \n  <div class=\"short-description\">\n    <p translation-result=\"on\">构造一个 <code>HEAD</code> 请求，它将请求体解释为文本流，并且返回完整的 <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>。</p><p translation-origin=\"off\">Constructs a <code>HEAD</code> request that interprets the body as text stream\nand returns the full <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>.</p>\n\n\n  </div>\n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">head</span>(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"response\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean | ReadonlyArray&#x3C;string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean>; }; reportProgress?: boolean; responseType: \"text\"; withCredentials?: boolean; }): Observable&#x3C;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&#x3C;string>></code-example>\n\n  \n\n  <h6 class=\"no-anchor\" id=\"参数-57\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">端点 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">与请求一起发送的 HTTP 选项。</p><p translation-origin=\"off\">The HTTP options to send with the request.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h6 class=\"no-anchor\" id=\"返回值-57\">返回值</h6>\n  <p translation-result=\"on\">此请求的响应对象的 <code>Observable</code>，其响应体为 string 类型。</p><p translation-origin=\"off\"><code>Observable&#x3C;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&#x3C;string>></code>: An <code>Observable</code> of the <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code> for the request,\nwith the response body of type string.</p>\n\n\n  \n\n\n  \n\n  \n</div>\n              <hr class=\"hr-margin\">\n            \n              <h5 class=\"no-anchor\" id=\"overload-12-3\">Overload #12</h5>\n              <div class=\"overload-info\">\n  \n  <div class=\"short-description\">\n    <p translation-result=\"on\">构造一个 <code>HEAD</code> 请求，它将请求体解释为 JSON 对象，并且返回完整的 <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>。</p><p translation-origin=\"off\">Constructs a <code>HEAD</code> request that interprets the body as a JSON object and\nreturns the full <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>.</p>\n\n\n  </div>\n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">head</span>(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"response\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean | ReadonlyArray&#x3C;string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean>; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; }): Observable&#x3C;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&#x3C;Object>></code-example>\n\n  \n\n  <h6 class=\"no-anchor\" id=\"参数-58\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">端点 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">与请求一起发送的 HTTP 选项。</p><p translation-origin=\"off\">The HTTP options to send with the request.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h6 class=\"no-anchor\" id=\"返回值-58\">返回值</h6>\n  <p translation-result=\"on\">此请求的响应对象的 <code>Observable</code>，其响应体为 <code>Object</code> 类型。</p><p translation-origin=\"off\"><code>Observable&#x3C;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&#x3C;Object>></code>: An <code>Observable</code> of the <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code> for the request,\nwith the response body of type <code>Object</code>.</p>\n\n\n  \n\n\n  \n\n  \n</div>\n              <hr class=\"hr-margin\">\n            \n              <h5 class=\"no-anchor\" id=\"overload-13-3\">Overload #13</h5>\n              <div class=\"overload-info\">\n  \n  <div class=\"short-description\">\n    <p translation-result=\"on\">构造一个 <code>HEAD</code> 请求，它将请求体解释为 JSON 对象，并且返回完整的 <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>。</p><p translation-origin=\"off\">Constructs a <code>HEAD</code> request that interprets the body as a JSON object\nand returns the full <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>.</p>\n\n\n  </div>\n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">head</span>&#x3C;T>(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"response\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean | ReadonlyArray&#x3C;string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean>; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; }): Observable&#x3C;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&#x3C;T>></code-example>\n\n  \n\n  <h6 class=\"no-anchor\" id=\"参数-59\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">端点 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">与请求一起发送的 HTTP 选项。</p><p translation-origin=\"off\">The HTTP options to send with the request.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h6 class=\"no-anchor\" id=\"返回值-59\">返回值</h6>\n  <p translation-result=\"on\">此请求的响应对象的 <code>Observable</code>，其响应体为所请求的类型。</p><p translation-origin=\"off\"><code>Observable&#x3C;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&#x3C;T>></code>: An <code>Observable</code> of the <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code> for the request,\nwith a responmse body of the requested type.</p>\n\n\n  \n\n\n  \n\n  \n</div>\n              <hr class=\"hr-margin\">\n            \n              <h5 class=\"no-anchor\" id=\"overload-14-3\">Overload #14</h5>\n              <div class=\"overload-info\">\n  \n  <div class=\"short-description\">\n    <p translation-result=\"on\">构造一个 <code>HEAD</code> 请求，它将请求体解释为 JSON 对象，并且返回 JSON 对象格式的响应体。</p><p translation-origin=\"off\">Constructs a <code>HEAD</code> request that interprets the body as a JSON object and\nreturns the response body as a JSON object.</p>\n\n\n  </div>\n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">head</span>(url: string, options?: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; observe?: \"body\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean | ReadonlyArray&#x3C;string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean>; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; }): Observable&#x3C;Object></code-example>\n\n  \n\n  <h6 class=\"no-anchor\" id=\"参数-60\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">端点 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">与请求一起发送的 HTTP 选项。</p><p translation-origin=\"off\">The HTTP options to send with the request.</p>\n\n        <div no-translate=\"\">可选. 默认值是 `undefined`.</div>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h6 class=\"no-anchor\" id=\"返回值-60\">返回值</h6>\n  <p translation-result=\"on\">响应对象的 <code>Observable</code> ，其响应体为 JSON 对象。</p><p translation-origin=\"off\"><code>Observable&#x3C;Object></code>: An <code>Observable</code> of the response, with the response body as a JSON object.</p>\n\n\n  \n\n\n  \n\n  \n</div>\n              <hr class=\"hr-margin\">\n            \n              <h5 class=\"no-anchor\" id=\"overload-15-3\">Overload #15</h5>\n              <div class=\"overload-info\">\n  \n  <div class=\"short-description\">\n    <p translation-result=\"on\">构造一个 <code>HEAD</code> 请求，它将请求体解释为 JSON 对象，并且返回给定类型的响应。</p><p translation-origin=\"off\">Constructs a <code>HEAD</code> request that interprets the body as a JSON object and returns\nthe response in a given type.</p>\n\n\n  </div>\n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">head</span>&#x3C;T>(url: string, options?: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; observe?: \"body\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean | ReadonlyArray&#x3C;string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean>; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; }): Observable&#x3C;T></code-example>\n\n  \n\n  <h6 class=\"no-anchor\" id=\"参数-61\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">端点 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">与请求一起发送的 HTTP 选项。</p><p translation-origin=\"off\">The HTTP options to send with the request.</p>\n\n        <div no-translate=\"\">可选. 默认值是 `undefined`.</div>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h6 class=\"no-anchor\" id=\"返回值-61\">返回值</h6>\n  <p translation-result=\"on\">此请求的响应对象的 <code>Observable</code>，其响应体为给定的类型。</p><p translation-origin=\"off\"><code>Observable&#x3C;T></code>: An <code>Observable</code> of the <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code> for the request,\nwith a response body of the given type.</p>\n\n\n  \n\n\n  \n\n  \n</div>\n              \n            \n          </div>\n        </details>\n      </td>\n    </tr>\n  \n\n  \n\n  \n    </tbody>\n</table>\n\n  \n    <a id=\"jsonp\"></a>\n<table class=\"is-full-width method-table instance-methods\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n    <h3 id=\"jsonp\">\n      jsonp()\n      \n    <a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/http/HttpClient#jsonp\"><i class=\"material-icons\">link</i></a></h3>\n    <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular-cn/edit/aio/packages/common/http/src/client.ts?message=docs(common)%3A%20请简述你的修改...#L2308-L2340\" aria-label=\"提供编辑建议\" title=\"提供编辑建议\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/angular/angular-cn/tree/12.1.0-next.1/packages/common/http/src/client.ts#L2308-L2340\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p translation-result=\"on\">构造一个 <code>Observable</code> ，当订阅该 Observable 时，将通过拦截器管道分派特殊的 <code>JSONP</code> 方法。<a href=\"https://en.wikipedia.org/wiki/JSONP\">JSONP 模式</a> 可绕过某些 API 端点的局限性，这些端点不支持新的方式。更推荐使用 <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS\">CORS</a> 协议。JSONP 将端点 API 视为 JavaScript 文件，并欺骗浏览器处理请求，即使 API 端点与发出请求的客户端应用不在同一个域（源）上。端点 API 必须支持 JSONP 回调，JSONP 请求才能正常工作。此资源 API 会返回包装在回调函数中的 JSON 响应。你可以将回调函数名称作为查询参数之一传递。请注意，JSONP 请求只能与 <code>GET</code> 请求一起使用。</p><p translation-origin=\"off\">Constructs an <code>Observable</code> that, when subscribed, causes a request with the special method\n<code>JSONP</code> to be dispatched via the interceptor pipeline.\nThe <a href=\"https://en.wikipedia.org/wiki/JSONP\">JSONP pattern</a> works around limitations of certain\nAPI endpoints that don't support newer,\nand preferable <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS\">CORS</a> protocol.\nJSONP treats the endpoint API as a JavaScript file and tricks the browser to process the\nrequests even if the API endpoint is not located on the same domain (origin) as the client-side\napplication making the request.\nThe endpoint API must support JSONP callback for JSONP requests to work.\nThe resource API returns the JSON response wrapped in a callback function.\nYou can pass the callback function name as one of the query parameters.\nNote that JSONP requests can only be used with <code>GET</code> requests.</p>\n\n\n      </td>\n    </tr>\n  \n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  \n  <div class=\"short-description\">\n    <p translation-result=\"on\">为给定的 URL 和回调参数的名称构造一个 <code>JSONP</code></p><p translation-origin=\"off\">Constructs a <code>JSONP</code> request for the given URL and name of the callback parameter.</p>\n\n\n  </div>\n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">jsonp</span>(url: string, callbackParam: string): Observable&#x3C;Object></code-example>\n\n  \n\n  <h6 class=\"no-anchor\" id=\"参数-62\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">资源 URL。</p><p translation-origin=\"off\">The resource URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>callbackParam</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">回调函数名称。</p><p translation-origin=\"off\">The callback function name.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h6 class=\"no-anchor\" id=\"返回值-62\">返回值</h6>\n  <p translation-result=\"on\">响应对象的 <code>Observable</code> ，其响应体为对象类型。</p><p translation-origin=\"off\"><code>Observable&#x3C;Object></code>: An <code>Observable</code> of the response object, with response body as an object.</p>\n\n\n  \n\n\n  \n\n  \n</div>\n      </td>\n    </tr>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  \n  <div class=\"short-description\">\n    <p translation-result=\"on\">为给定的 URL 和回调参数的名称构造一个 <code>JSONP</code></p><p translation-origin=\"off\">Constructs a <code>JSONP</code> request for the given URL and name of the callback parameter.</p>\n\n\n  </div>\n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">jsonp</span>&#x3C;T>(url: string, callbackParam: string): Observable&#x3C;T></code-example>\n\n  \n\n  <h6 class=\"no-anchor\" id=\"参数-63\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">资源 URL。</p><p translation-origin=\"off\">The resource URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>callbackParam</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">回调函数名称。</p><p translation-origin=\"off\">The callback function name.</p>\n\n<p translation-result=\"on\">你必须安装合适的拦截器，比如 <code><a href=\"api/common/http/HttpClientJsonpModule\" class=\"code-anchor\">HttpClientJsonpModule</a></code> 提供的拦截器。如果未经过此类拦截器，则所配置的后端可以拒绝 <code>JSONP</code></p><p translation-origin=\"off\">You must install a suitable interceptor, such as one provided by <code><a href=\"api/common/http/HttpClientJsonpModule\" class=\"code-anchor\">HttpClientJsonpModule</a></code>.\nIf no such interceptor is reached,\nthen the <code>JSONP</code> request can be rejected by the configured backend.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h6 class=\"no-anchor\" id=\"返回值-63\">返回值</h6>\n  <p translation-result=\"on\">响应对象的 <code>Observable</code> ，其响应体为所请求的类型。</p><p translation-origin=\"off\"><code>Observable&#x3C;T></code>: An <code>Observable</code> of the response object, with response body in the requested type.</p>\n\n\n  \n\n\n  \n\n  \n</div>\n      </td>\n    </tr>\n    \n\n  \n\n  \n    </tbody>\n</table>\n\n  \n    <a id=\"options\"></a>\n<table class=\"is-full-width method-table instance-methods\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n    <h3 id=\"options\">\n      options()\n      \n    <a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/http/HttpClient#options\"><i class=\"material-icons\">link</i></a></h3>\n    <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular-cn/edit/aio/packages/common/http/src/client.ts?message=docs(common)%3A%20请简述你的修改...#L2782-L2804\" aria-label=\"提供编辑建议\" title=\"提供编辑建议\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/angular/angular-cn/tree/12.1.0-next.1/packages/common/http/src/client.ts#L2782-L2804\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p translation-result=\"on\">构造一个 <code>Observable</code>，当订阅该 Observable 时，它会让已配置的 <code>OPTIONS</code> 请求在服务器上执行。此方法允许客户端确定所支持的 HTTP 方法和端点的其他功能，而无需进行隐式资源操作。有关返回类型的详细信息，请参见各个重载。</p><p translation-origin=\"off\">Constructs an <code>Observable</code> that, when subscribed, causes the configured\n<code>OPTIONS</code> request to execute on the server. This method allows the client\nto determine the supported HTTP methods and other capabilites of an endpoint,\nwithout implying a resource action. See the individual overloads for\ndetails on the return type.</p>\n\n\n      </td>\n    </tr>\n  <tr>\n      <td>\n        <details class=\"overloads\">\n          <summary>\n            <div class=\"icon-action-header\">\n                <h4 class=\"no-anchor\" id=\"15-个重载形式-3\">15 个重载形式...</h4>\n                <span class=\"actions\">\n                  <span class=\"show-all\">显示所有</span>\n                  <span class=\"collapse-all\">隐藏所有</span>\n                  <i class=\"material-icons expand\">expand_more</i>\n                </span>\n              </div>\n          </summary>\n          <div class=\"detail-contents\">\n            \n            \n              <h5 class=\"no-anchor\" id=\"overload-1-4\">Overload #1</h5>\n              <div class=\"overload-info\">\n  \n  <div class=\"short-description\">\n    <p translation-result=\"on\">构造一个 <code>OPTIONS</code> 请求，它将请求体解释为 <code>ArrayBuffer</code>，并且返回 <code>ArrayBuffer</code> 格式的响应体。</p><p translation-origin=\"off\">Constructs an <code>OPTIONS</code> request that interprets the body as an\n<code>ArrayBuffer</code> and returns the response as an <code>ArrayBuffer</code>.</p>\n\n\n  </div>\n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">options</span>(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; observe?: \"body\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean | ReadonlyArray&#x3C;string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean>; }; reportProgress?: boolean; responseType: \"arraybuffer\"; withCredentials?: boolean; }): Observable&#x3C;ArrayBuffer></code-example>\n\n  \n\n  <h6 class=\"no-anchor\" id=\"参数-64\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">端点 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">HTTP 选项。</p><p translation-origin=\"off\">HTTP options.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h6 class=\"no-anchor\" id=\"返回值-64\">返回值</h6>\n  <p translation-result=\"on\">响应对象的 <code>Observable</code>，其响应体为 <code>ArrayBuffer</code> 类型。</p><p translation-origin=\"off\"><code>Observable&#x3C;ArrayBuffer></code>: An <code>Observable</code> of the response, with the response body as an <code>ArrayBuffer</code>.</p>\n\n\n  \n\n\n  \n\n  \n</div>\n              <hr class=\"hr-margin\">\n            \n              <h5 class=\"no-anchor\" id=\"overload-2-4\">Overload #2</h5>\n              <div class=\"overload-info\">\n  \n  <div class=\"short-description\">\n    <p translation-result=\"on\">构造一个 <code>OPTIONS</code> 请求，它将请求体解释为 <code>Blob</code>，并且返回 <code>Blob</code> 格式的响应体。</p><p translation-origin=\"off\">Constructs an <code>OPTIONS</code> request that interprets the body as a <code>Blob</code> and returns\nthe response as a <code>Blob</code>.</p>\n\n\n  </div>\n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">options</span>(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; observe?: \"body\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean | ReadonlyArray&#x3C;string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean>; }; reportProgress?: boolean; responseType: \"blob\"; withCredentials?: boolean; }): Observable&#x3C;Blob></code-example>\n\n  \n\n  <h6 class=\"no-anchor\" id=\"参数-65\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">端点 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">HTTP 选项。</p><p translation-origin=\"off\">HTTP options.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h6 class=\"no-anchor\" id=\"返回值-65\">返回值</h6>\n  <p translation-result=\"on\">响应对象的 <code>Observable</code> ，其响应体为 <code>Blob</code> 类型。</p><p translation-origin=\"off\"><code>Observable&#x3C;Blob></code>: An <code>Observable</code> of the response, with the response body as a <code>Blob</code>.</p>\n\n\n  \n\n\n  \n\n  \n</div>\n              <hr class=\"hr-margin\">\n            \n              <h5 class=\"no-anchor\" id=\"overload-3-4\">Overload #3</h5>\n              <div class=\"overload-info\">\n  \n  <div class=\"short-description\">\n    <p translation-result=\"on\">构造一个 <code>OPTIONS</code> 请求，它将请求体解释为字符串，并且返回一个字符串。</p><p translation-origin=\"off\">Constructs an <code>OPTIONS</code> request that interprets the body as a text string and\nreturns a string value.</p>\n\n\n  </div>\n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">options</span>(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; observe?: \"body\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean | ReadonlyArray&#x3C;string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean>; }; reportProgress?: boolean; responseType: \"text\"; withCredentials?: boolean; }): Observable&#x3C;string></code-example>\n\n  \n\n  <h6 class=\"no-anchor\" id=\"参数-66\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">端点 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">HTTP 选项。</p><p translation-origin=\"off\">HTTP options.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h6 class=\"no-anchor\" id=\"返回值-66\">返回值</h6>\n  <p translation-result=\"on\">此请求的响应对象的 <code>Observable</code>，其响应体为 string 类型。</p><p translation-origin=\"off\"><code>Observable&#x3C;string></code>: An <code>Observable</code> of the response, with the response body of type string.</p>\n\n\n  \n\n\n  \n\n  \n</div>\n              <hr class=\"hr-margin\">\n            \n              <h5 class=\"no-anchor\" id=\"overload-4-4\">Overload #4</h5>\n              <div class=\"overload-info\">\n  \n  <div class=\"short-description\">\n    <p translation-result=\"on\">构造一个 <code>OPTIONS</code> 请求，它将请求体解释为 <code>ArrayBuffer</code>，并返回完整的事件流。</p><p translation-origin=\"off\">Constructs an <code>OPTIONS</code> request that interprets the body as an <code>ArrayBuffer</code>\nand returns the full event stream.</p>\n\n\n  </div>\n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">options</span>(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"events\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean | ReadonlyArray&#x3C;string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean>; }; reportProgress?: boolean; responseType: \"arraybuffer\"; withCredentials?: boolean; }): Observable&#x3C;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&#x3C;ArrayBuffer>></code-example>\n\n  \n\n  <h6 class=\"no-anchor\" id=\"参数-67\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">端点 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">HTTP 选项。</p><p translation-origin=\"off\">HTTP options.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h6 class=\"no-anchor\" id=\"返回值-67\">返回值</h6>\n  <p translation-result=\"on\">此请求的 <code>HttpEvents</code> 的 <code>Observable</code>，其响应体为 <code>ArrayBuffer</code> 类型。</p><p translation-origin=\"off\"><code>Observable&#x3C;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&#x3C;ArrayBuffer>></code>: An <code>Observable</code> of all <code><a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a></code>s for the request,\nwith the response body as an <code>ArrayBuffer</code>.</p>\n\n\n  \n\n\n  \n\n  \n</div>\n              <hr class=\"hr-margin\">\n            \n              <h5 class=\"no-anchor\" id=\"overload-5-4\">Overload #5</h5>\n              <div class=\"overload-info\">\n  \n  <div class=\"short-description\">\n    <p translation-result=\"on\">构造一个 <code>OPTIONS</code> 请求，它将请求体解释为 <code>Blob</code>，并返回完整的事件流。</p><p translation-origin=\"off\">Constructs an <code>OPTIONS</code> request that interprets the body as a <code>Blob</code> and\nreturns the full event stream.</p>\n\n\n  </div>\n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">options</span>(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"events\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean | ReadonlyArray&#x3C;string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean>; }; reportProgress?: boolean; responseType: \"blob\"; withCredentials?: boolean; }): Observable&#x3C;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&#x3C;Blob>></code-example>\n\n  \n\n  <h6 class=\"no-anchor\" id=\"参数-68\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">端点 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">HTTP 选项。</p><p translation-origin=\"off\">HTTP options.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h6 class=\"no-anchor\" id=\"返回值-68\">返回值</h6>\n  <p translation-result=\"on\">此请求的 <code>HttpEvents</code> 的 <code>Observable</code>，其响应体为 <code>Blob</code> 类型。</p><p translation-origin=\"off\"><code>Observable&#x3C;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&#x3C;Blob>></code>: An <code>Observable</code> of all <code><a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a></code>s for the request,\nwith the response body as a <code>Blob</code>.</p>\n\n\n  \n\n\n  \n\n  \n</div>\n              <hr class=\"hr-margin\">\n            \n              <h5 class=\"no-anchor\" id=\"overload-6-4\">Overload #6</h5>\n              <div class=\"overload-info\">\n  \n  <div class=\"short-description\">\n    <p translation-result=\"on\">构造一个 <code>OPTIONS</code> 请求，它将请求体解释为文本字符串，并且返回完整的事件流。</p><p translation-origin=\"off\">Constructs an <code>OPTIONS</code> request that interprets the body as a text string\nand returns the full event stream.</p>\n\n\n  </div>\n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">options</span>(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"events\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean | ReadonlyArray&#x3C;string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean>; }; reportProgress?: boolean; responseType: \"text\"; withCredentials?: boolean; }): Observable&#x3C;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&#x3C;string>></code-example>\n\n  \n\n  <h6 class=\"no-anchor\" id=\"参数-69\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">端点 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">HTTP 选项。</p><p translation-origin=\"off\">HTTP options.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h6 class=\"no-anchor\" id=\"返回值-69\">返回值</h6>\n  <p translation-result=\"on\">此请求的 <code>HTTPEvents</code> 的 <code>Observable</code>，其响应体为 string 类型。</p><p translation-origin=\"off\"><code>Observable&#x3C;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&#x3C;string>></code>: An <code>Observable</code> of all the <code><a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a></code>s for the request,\nwith the response body of type string.</p>\n\n\n  \n\n\n  \n\n  \n</div>\n              <hr class=\"hr-margin\">\n            \n              <h5 class=\"no-anchor\" id=\"overload-7-4\">Overload #7</h5>\n              <div class=\"overload-info\">\n  \n  <div class=\"short-description\">\n    <p translation-result=\"on\">构造一个 <code>OPTIONS</code> 请求，它将请求体解释为 JSON 对象，并且返回完整的 HTTP 事件流。</p><p translation-origin=\"off\">Constructs an <code>OPTIONS</code> request that interprets the body as a JSON object\nand returns the full event stream.</p>\n\n\n  </div>\n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">options</span>(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"events\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean | ReadonlyArray&#x3C;string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean>; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; }): Observable&#x3C;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&#x3C;Object>></code-example>\n\n  \n\n  <h6 class=\"no-anchor\" id=\"参数-70\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">端点 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">HTTP 选项。</p><p translation-origin=\"off\">HTTP options.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h6 class=\"no-anchor\" id=\"返回值-70\">返回值</h6>\n  <p translation-result=\"on\">表示啥此请求的 <code>HttpEvents</code> 的 <code>Observable</code>，响应体为 <code>Object</code> 类型。</p><p translation-origin=\"off\"><code>Observable&#x3C;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&#x3C;Object>></code>: An <code>Observable</code> of all the <code><a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a></code>s for the request with the response\nbody of type <code>Object</code>.</p>\n\n\n  \n\n\n  \n\n  \n</div>\n              <hr class=\"hr-margin\">\n            \n              <h5 class=\"no-anchor\" id=\"overload-8-4\">Overload #8</h5>\n              <div class=\"overload-info\">\n  \n  <div class=\"short-description\">\n    <p translation-result=\"on\">构造一个 <code>OPTIONS</code> 请求，它将请求体解释为 JSON 对象，并且返回完整的 HTTP 事件流。</p><p translation-origin=\"off\">Constructs an <code>OPTIONS</code> request that interprets the body as a JSON object and\nreturns the full event stream.</p>\n\n\n  </div>\n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">options</span>&#x3C;T>(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"events\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean | ReadonlyArray&#x3C;string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean>; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; }): Observable&#x3C;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&#x3C;T>></code-example>\n\n  \n\n  <h6 class=\"no-anchor\" id=\"参数-71\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">端点 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">HTTP 选项。</p><p translation-origin=\"off\">HTTP options.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h6 class=\"no-anchor\" id=\"返回值-71\">返回值</h6>\n  <p translation-result=\"on\">此请求的 <code>HttpEvents</code> 的 <code>Observable</code>，其响应体为所请求的类型。</p><p translation-origin=\"off\"><code>Observable&#x3C;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&#x3C;T>></code>: An <code>Observable</code> of all the <code><a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a></code>s for the request,\nwith a response body in the requested type.</p>\n\n\n  \n\n\n  \n\n  \n</div>\n              <hr class=\"hr-margin\">\n            \n              <h5 class=\"no-anchor\" id=\"overload-9-4\">Overload #9</h5>\n              <div class=\"overload-info\">\n  \n  <div class=\"short-description\">\n    <p translation-result=\"on\">构造一个 <code>OPTIONS</code> 请求，它将请求体解释为 <code>ArrayBuffer</code>，并且返回完整的 <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>。</p><p translation-origin=\"off\">Constructs an <code>OPTIONS</code> request that interprets the body as an <code>ArrayBuffer</code>\nand returns the full HTTP response.</p>\n\n\n  </div>\n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">options</span>(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"response\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean | ReadonlyArray&#x3C;string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean>; }; reportProgress?: boolean; responseType: \"arraybuffer\"; withCredentials?: boolean; }): Observable&#x3C;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&#x3C;ArrayBuffer>></code-example>\n\n  \n\n  <h6 class=\"no-anchor\" id=\"参数-72\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">端点 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">HTTP 选项。</p><p translation-origin=\"off\">HTTP options.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h6 class=\"no-anchor\" id=\"返回值-72\">返回值</h6>\n  <p translation-result=\"on\">此请求的响应对象的 <code>Observable</code>，其响应体为 <code>ArrayBuffer</code> 类型。</p><p translation-origin=\"off\"><code>Observable&#x3C;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&#x3C;ArrayBuffer>></code>: An <code>Observable</code> of the <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code> for the request,\nwith the response body as an <code>ArrayBuffer</code>.</p>\n\n\n  \n\n\n  \n\n  \n</div>\n              <hr class=\"hr-margin\">\n            \n              <h5 class=\"no-anchor\" id=\"overload-10-4\">Overload #10</h5>\n              <div class=\"overload-info\">\n  \n  <div class=\"short-description\">\n    <p translation-result=\"on\">构造一个 <code>OPTIONS</code> 请求，它将请求体解释为 <code>Blob</code>，并且返回完整的 <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>。</p><p translation-origin=\"off\">Constructs an <code>OPTIONS</code> request that interprets the body as a <code>Blob</code>\nand returns the full <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>.</p>\n\n\n  </div>\n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">options</span>(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"response\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean | ReadonlyArray&#x3C;string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean>; }; reportProgress?: boolean; responseType: \"blob\"; withCredentials?: boolean; }): Observable&#x3C;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&#x3C;Blob>></code-example>\n\n  \n\n  <h6 class=\"no-anchor\" id=\"参数-73\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">端点 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">HTTP 选项。</p><p translation-origin=\"off\">HTTP options.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h6 class=\"no-anchor\" id=\"返回值-73\">返回值</h6>\n  <p translation-result=\"on\">此请求的响应对象的 <code>Observable</code>，其响应体为 <code>Blob</code> 类型。</p><p translation-origin=\"off\"><code>Observable&#x3C;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&#x3C;Blob>></code>: An <code>Observable</code> of the <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code> for the request,\nwith the response body as a <code>Blob</code>.</p>\n\n\n  \n\n\n  \n\n  \n</div>\n              <hr class=\"hr-margin\">\n            \n              <h5 class=\"no-anchor\" id=\"overload-11-4\">Overload #11</h5>\n              <div class=\"overload-info\">\n  \n  <div class=\"short-description\">\n    <p translation-result=\"on\">构造一个 <code>OPTIONS</code> 请求，它将请求体解释为文本流，并且返回完整的 <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>。</p><p translation-origin=\"off\">Constructs an <code>OPTIONS</code> request that interprets the body as text stream\nand returns the full <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>.</p>\n\n\n  </div>\n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">options</span>(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"response\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean | ReadonlyArray&#x3C;string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean>; }; reportProgress?: boolean; responseType: \"text\"; withCredentials?: boolean; }): Observable&#x3C;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&#x3C;string>></code-example>\n\n  \n\n  <h6 class=\"no-anchor\" id=\"参数-74\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">端点 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">HTTP 选项。</p><p translation-origin=\"off\">HTTP options.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h6 class=\"no-anchor\" id=\"返回值-74\">返回值</h6>\n  <p translation-result=\"on\">此请求的响应对象的 <code>Observable</code>，其响应体为 string 类型。</p><p translation-origin=\"off\"><code>Observable&#x3C;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&#x3C;string>></code>: An <code>Observable</code> of the <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code> for the request,\nwith the response body of type string.</p>\n\n\n  \n\n\n  \n\n  \n</div>\n              <hr class=\"hr-margin\">\n            \n              <h5 class=\"no-anchor\" id=\"overload-12-4\">Overload #12</h5>\n              <div class=\"overload-info\">\n  \n  <div class=\"short-description\">\n    <p translation-result=\"on\">构造一个 <code>OPTIONS</code> 请求，它将请求体解释为 JSON 对象，并且返回完整的 <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>。</p><p translation-origin=\"off\">Constructs an <code>OPTIONS</code> request that interprets the body as a JSON object\nand returns the full <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>.</p>\n\n\n  </div>\n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">options</span>(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"response\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean | ReadonlyArray&#x3C;string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean>; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; }): Observable&#x3C;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&#x3C;Object>></code-example>\n\n  \n\n  <h6 class=\"no-anchor\" id=\"参数-75\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">端点 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">HTTP 选项。</p><p translation-origin=\"off\">HTTP options.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h6 class=\"no-anchor\" id=\"返回值-75\">返回值</h6>\n  <p translation-result=\"on\">此请求的响应对象的 <code>Observable</code>，其响应体为 <code>Object</code> 类型。</p><p translation-origin=\"off\"><code>Observable&#x3C;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&#x3C;Object>></code>: An <code>Observable</code> of the <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code> for the request,\nwith the response body of type <code>Object</code>.</p>\n\n\n  \n\n\n  \n\n  \n</div>\n              <hr class=\"hr-margin\">\n            \n              <h5 class=\"no-anchor\" id=\"overload-13-4\">Overload #13</h5>\n              <div class=\"overload-info\">\n  \n  <div class=\"short-description\">\n    <p translation-result=\"on\">构造一个 <code>OPTIONS</code> 请求，它将请求体解释为 JSON 对象，并且返回完整的 <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>。</p><p translation-origin=\"off\">Constructs an <code>OPTIONS</code> request that interprets the body as a JSON object and\nreturns the full <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>.</p>\n\n\n  </div>\n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">options</span>&#x3C;T>(url: string, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"response\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean | ReadonlyArray&#x3C;string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean>; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; }): Observable&#x3C;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&#x3C;T>></code-example>\n\n  \n\n  <h6 class=\"no-anchor\" id=\"参数-76\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">端点 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">HTTP 选项。</p><p translation-origin=\"off\">HTTP options.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h6 class=\"no-anchor\" id=\"返回值-76\">返回值</h6>\n  <p translation-result=\"on\">此请求的响应对象的 <code>Observable</code>，其响应体为所请求的类型。</p><p translation-origin=\"off\"><code>Observable&#x3C;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&#x3C;T>></code>: An <code>Observable</code> of the <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code> for the request,\nwith a response body in the requested type.</p>\n\n\n  \n\n\n  \n\n  \n</div>\n              <hr class=\"hr-margin\">\n            \n              <h5 class=\"no-anchor\" id=\"overload-14-4\">Overload #14</h5>\n              <div class=\"overload-info\">\n  \n  <div class=\"short-description\">\n    <p translation-result=\"on\">构造一个 <code>OPTIONS</code> 请求，它将请求体解释为 JSON 对象，并且返回 JSON 对象格式的响应体。</p><p translation-origin=\"off\">Constructs an <code>OPTIONS</code> request that interprets the body as a JSON object and returns the\nresponse body as a JSON object.</p>\n\n\n  </div>\n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">options</span>(url: string, options?: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; observe?: \"body\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean | ReadonlyArray&#x3C;string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean>; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; }): Observable&#x3C;Object></code-example>\n\n  \n\n  <h6 class=\"no-anchor\" id=\"参数-77\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">端点 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">HTTP 选项。</p><p translation-origin=\"off\">HTTP options.</p>\n\n        <div no-translate=\"\">可选. 默认值是 `undefined`.</div>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h6 class=\"no-anchor\" id=\"返回值-77\">返回值</h6>\n  <p translation-result=\"on\">响应对象的 <code>Observable</code> ，其响应体为 JSON 对象。</p><p translation-origin=\"off\"><code>Observable&#x3C;Object></code>: An <code>Observable</code> of the response, with the response body as a JSON object.</p>\n\n\n  \n\n\n  \n\n  \n</div>\n              <hr class=\"hr-margin\">\n            \n              <h5 class=\"no-anchor\" id=\"overload-15-4\">Overload #15</h5>\n              <div class=\"overload-info\">\n  \n  <div class=\"short-description\">\n    <p translation-result=\"on\">构造一个 <code>OPTIONS</code> 请求，它将请求体解释为 JSON 对象，并且返回给定类型的响应。</p><p translation-origin=\"off\">Constructs an <code>OPTIONS</code> request that interprets the body as a JSON object and returns the\nresponse in a given type.</p>\n\n\n  </div>\n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">options</span>&#x3C;T>(url: string, options?: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; observe?: \"body\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean | ReadonlyArray&#x3C;string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean>; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; }): Observable&#x3C;T></code-example>\n\n  \n\n  <h6 class=\"no-anchor\" id=\"参数-78\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">端点 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">HTTP 选项。</p><p translation-origin=\"off\">HTTP options.</p>\n\n        <div no-translate=\"\">可选. 默认值是 `undefined`.</div>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h6 class=\"no-anchor\" id=\"返回值-78\">返回值</h6>\n  <p translation-result=\"on\">此请求的响应对象的 <code>Observable</code>，其响应体为给定的类型。</p><p translation-origin=\"off\"><code>Observable&#x3C;T></code>: An <code>Observable</code> of the <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>, with a response body of the given type.</p>\n\n\n  \n\n\n  \n\n  \n</div>\n              \n            \n          </div>\n        </details>\n      </td>\n    </tr>\n  \n\n  \n\n  \n    </tbody>\n</table>\n\n  \n    <a id=\"patch\"></a>\n<table class=\"is-full-width method-table instance-methods\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n    <h3 id=\"patch\">\n      patch()\n      \n    <a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/http/HttpClient#patch\"><i class=\"material-icons\">link</i></a></h3>\n    <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular-cn/edit/aio/packages/common/http/src/client.ts?message=docs(common)%3A%20请简述你的修改...#L3308-L3328\" aria-label=\"提供编辑建议\" title=\"提供编辑建议\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/angular/angular-cn/tree/12.1.0-next.1/packages/common/http/src/client.ts#L3308-L3328\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p translation-result=\"on\">构造一个 Observable，当它被订阅时，会要求服务器执行配置好的 <code>PATCH</code> 请求。参见它的各个独立重载形式，以了解其返回值类型。</p><p translation-origin=\"off\">Constructs an observable that, when subscribed, causes the configured\n<code>PATCH</code> request to execute on the server. See the individual overloads for\ndetails on the return type.</p>\n\n\n      </td>\n    </tr>\n  <tr>\n      <td>\n        <details class=\"overloads\">\n          <summary>\n            <div class=\"icon-action-header\">\n                <h4 class=\"no-anchor\" id=\"15-个重载形式-4\">15 个重载形式...</h4>\n                <span class=\"actions\">\n                  <span class=\"show-all\">显示所有</span>\n                  <span class=\"collapse-all\">隐藏所有</span>\n                  <i class=\"material-icons expand\">expand_more</i>\n                </span>\n              </div>\n          </summary>\n          <div class=\"detail-contents\">\n            \n            \n              <h5 class=\"no-anchor\" id=\"overload-1-5\">Overload #1</h5>\n              <div class=\"overload-info\">\n  \n  <div class=\"short-description\">\n    <p translation-result=\"on\">构造一个 <code>PATCH</code> 请求，它将请求体解释为 <code>ArrayBuffer</code>，并且返回 <code>ArrayBuffer</code> 格式的响应体。</p><p translation-origin=\"off\">Constructs a <code>PATCH</code> request that interprets the body as an <code>ArrayBuffer</code> and returns\nthe response as an <code>ArrayBuffer</code>.</p>\n\n\n  </div>\n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">patch</span>(url: string, body: any, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; observe?: \"body\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean | ReadonlyArray&#x3C;string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean>; }; reportProgress?: boolean; responseType: \"arraybuffer\"; withCredentials?: boolean; }): Observable&#x3C;ArrayBuffer></code-example>\n\n  \n\n  <h6 class=\"no-anchor\" id=\"参数-79\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">端点 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>body</code>\n      </td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">要编辑的资源。</p><p translation-origin=\"off\">The resources to edit.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">HTTP 选项。</p><p translation-origin=\"off\">HTTP options.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h6 class=\"no-anchor\" id=\"返回值-79\">返回值</h6>\n  <p translation-result=\"on\">响应对象的 <code>Observable</code>，其响应体为 <code>ArrayBuffer</code> 类型。</p><p translation-origin=\"off\"><code>Observable&#x3C;ArrayBuffer></code>: An <code>Observable</code> of the response, with the response body as an <code>ArrayBuffer</code>.</p>\n\n\n  \n\n\n  \n\n  \n</div>\n              <hr class=\"hr-margin\">\n            \n              <h5 class=\"no-anchor\" id=\"overload-2-5\">Overload #2</h5>\n              <div class=\"overload-info\">\n  \n  <div class=\"short-description\">\n    <p translation-result=\"on\">构造一个 <code>PATCH</code> 请求，它将请求体解释为 <code>Blob</code>，并且返回 <code>Blob</code> 格式的响应体。</p><p translation-origin=\"off\">Constructs a <code>PATCH</code> request that interprets the body as a <code>Blob</code> and returns the response\nas a <code>Blob</code>.</p>\n\n\n  </div>\n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">patch</span>(url: string, body: any, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; observe?: \"body\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean | ReadonlyArray&#x3C;string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean>; }; reportProgress?: boolean; responseType: \"blob\"; withCredentials?: boolean; }): Observable&#x3C;Blob></code-example>\n\n  \n\n  <h6 class=\"no-anchor\" id=\"参数-80\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">端点 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>body</code>\n      </td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">要编辑的资源。</p><p translation-origin=\"off\">The resources to edit.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">HTTP 选项。</p><p translation-origin=\"off\">HTTP options.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h6 class=\"no-anchor\" id=\"返回值-80\">返回值</h6>\n  <p translation-result=\"on\">响应对象的 <code>Observable</code> ，其响应体为 <code>Blob</code> 类型。</p><p translation-origin=\"off\"><code>Observable&#x3C;Blob></code>: An <code>Observable</code> of the response, with the response body as a <code>Blob</code>.</p>\n\n\n  \n\n\n  \n\n  \n</div>\n              <hr class=\"hr-margin\">\n            \n              <h5 class=\"no-anchor\" id=\"overload-3-5\">Overload #3</h5>\n              <div class=\"overload-info\">\n  \n  <div class=\"short-description\">\n    <p translation-result=\"on\">构造一个 <code>PATCH</code> 请求，它将请求体解释为字符串，并且返回字符串格式的响应。</p><p translation-origin=\"off\">Constructs a <code>PATCH</code> request that interprets the body as a text string and\nreturns the response as a string value.</p>\n\n\n  </div>\n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">patch</span>(url: string, body: any, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; observe?: \"body\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean | ReadonlyArray&#x3C;string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean>; }; reportProgress?: boolean; responseType: \"text\"; withCredentials?: boolean; }): Observable&#x3C;string></code-example>\n\n  \n\n  <h6 class=\"no-anchor\" id=\"参数-81\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">端点 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>body</code>\n      </td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">要编辑的资源。</p><p translation-origin=\"off\">The resources to edit.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">HTTP 选项。</p><p translation-origin=\"off\">HTTP options.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h6 class=\"no-anchor\" id=\"返回值-81\">返回值</h6>\n  <p translation-result=\"on\">此请求的响应对象的 <code>Observable</code>，其响应体为 string 类型。</p><p translation-origin=\"off\"><code>Observable&#x3C;string></code>: An <code>Observable</code> of the response, with a response body of type string.</p>\n\n\n  \n\n\n  \n\n  \n</div>\n              <hr class=\"hr-margin\">\n            \n              <h5 class=\"no-anchor\" id=\"overload-4-5\">Overload #4</h5>\n              <div class=\"overload-info\">\n  \n  <div class=\"short-description\">\n    <p translation-result=\"on\">构造一个 <code>PATCH</code> 请求，它将请求体解释为 <code>ArrayBuffer</code>，并返回完整的事件流。</p><p translation-origin=\"off\">Constructs a <code>PATCH</code> request that interprets the body as an <code>ArrayBuffer</code> and\nreturns the full event stream.</p>\n\n\n  </div>\n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">patch</span>(url: string, body: any, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"events\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean | ReadonlyArray&#x3C;string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean>; }; reportProgress?: boolean; responseType: \"arraybuffer\"; withCredentials?: boolean; }): Observable&#x3C;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&#x3C;ArrayBuffer>></code-example>\n\n  \n\n  <h6 class=\"no-anchor\" id=\"参数-82\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">端点 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>body</code>\n      </td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">要编辑的资源。</p><p translation-origin=\"off\">The resources to edit.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">HTTP 选项。</p><p translation-origin=\"off\">HTTP options.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h6 class=\"no-anchor\" id=\"返回值-82\">返回值</h6>\n  <p translation-result=\"on\">此请求的 <code>HTTPevents</code> 的 <code>Observable</code>，其响应体为 <code>ArrayBuffer</code> 类型。</p><p translation-origin=\"off\"><code>Observable&#x3C;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&#x3C;ArrayBuffer>></code>: An <code>Observable</code> of all the <code><a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a></code>s for the request,\nwith the response body as an <code>ArrayBuffer</code>.</p>\n\n\n  \n\n\n  \n\n  \n</div>\n              <hr class=\"hr-margin\">\n            \n              <h5 class=\"no-anchor\" id=\"overload-5-5\">Overload #5</h5>\n              <div class=\"overload-info\">\n  \n  <div class=\"short-description\">\n    <p translation-result=\"on\">构造一个 <code>PATCH</code> 请求，它将请求体解释为 <code>Blob</code>，并返回完整的事件流。</p><p translation-origin=\"off\">Constructs a <code>PATCH</code> request that interprets the body as a <code>Blob</code>\nand returns the full event stream.</p>\n\n\n  </div>\n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">patch</span>(url: string, body: any, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"events\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean | ReadonlyArray&#x3C;string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean>; }; reportProgress?: boolean; responseType: \"blob\"; withCredentials?: boolean; }): Observable&#x3C;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&#x3C;Blob>></code-example>\n\n  \n\n  <h6 class=\"no-anchor\" id=\"参数-83\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">端点 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>body</code>\n      </td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">要编辑的资源。</p><p translation-origin=\"off\">The resources to edit.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">HTTP 选项。</p><p translation-origin=\"off\">HTTP options.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h6 class=\"no-anchor\" id=\"返回值-83\">返回值</h6>\n  <p translation-result=\"on\">表示此请求的 <code>HTTPevents</code> 的 <code>Observable</code>，响应体为 <code>Blob</code> 类型。</p><p translation-origin=\"off\"><code>Observable&#x3C;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&#x3C;Blob>></code>: An <code>Observable</code> of all the <code><a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a></code>s for the request, with the\nresponse body as <code>Blob</code>.</p>\n\n\n  \n\n\n  \n\n  \n</div>\n              <hr class=\"hr-margin\">\n            \n              <h5 class=\"no-anchor\" id=\"overload-6-5\">Overload #6</h5>\n              <div class=\"overload-info\">\n  \n  <div class=\"short-description\">\n    <p translation-result=\"on\">构造一个 <code>PATCH</code> 请求，它将请求体解释为文本字符串，并且返回完整的事件流。</p><p translation-origin=\"off\">Constructs a <code>PATCH</code> request that interprets the body as a text string and\nreturns the full event stream.</p>\n\n\n  </div>\n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">patch</span>(url: string, body: any, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"events\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean | ReadonlyArray&#x3C;string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean>; }; reportProgress?: boolean; responseType: \"text\"; withCredentials?: boolean; }): Observable&#x3C;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&#x3C;string>></code-example>\n\n  \n\n  <h6 class=\"no-anchor\" id=\"参数-84\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">端点 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>body</code>\n      </td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">要编辑的资源。</p><p translation-origin=\"off\">The resources to edit.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">HTTP 选项。</p><p translation-origin=\"off\">HTTP options.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h6 class=\"no-anchor\" id=\"返回值-84\">返回值</h6>\n  <p translation-result=\"on\">表示啥此请求的 <code>HTTPevents</code> 的 <code>Observable</code>，响应体为 string 类型。</p><p translation-origin=\"off\"><code>Observable&#x3C;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&#x3C;string>></code>: An <code>Observable</code> of all the <code><a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a></code>s for the request, with a\nresponse body of type string.</p>\n\n\n  \n\n\n  \n\n  \n</div>\n              <hr class=\"hr-margin\">\n            \n              <h5 class=\"no-anchor\" id=\"overload-7-5\">Overload #7</h5>\n              <div class=\"overload-info\">\n  \n  <div class=\"short-description\">\n    <p translation-result=\"on\">构造一个 <code>PATCH</code> 请求，它将请求体解释为 JSON 对象，并且返回完整的 HTTP 事件流。</p><p translation-origin=\"off\">Constructs a <code>PATCH</code> request that interprets the body as a JSON object\nand returns the full event stream.</p>\n\n\n  </div>\n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">patch</span>(url: string, body: any, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"events\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean | ReadonlyArray&#x3C;string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean>; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; }): Observable&#x3C;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&#x3C;Object>></code-example>\n\n  \n\n  <h6 class=\"no-anchor\" id=\"参数-85\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">端点 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>body</code>\n      </td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">要编辑的资源。</p><p translation-origin=\"off\">The resources to edit.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">HTTP 选项。</p><p translation-origin=\"off\">HTTP options.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h6 class=\"no-anchor\" id=\"返回值-85\">返回值</h6>\n  <p translation-result=\"on\">此请求的 <code>HTTPevents</code> 的 <code>Observable</code>，其响应体为 <code>Object</code> 类型。</p><p translation-origin=\"off\"><code>Observable&#x3C;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&#x3C;Object>></code>: An <code>Observable</code> of all the <code><a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a></code>s for the request,\nwith a response body of type <code>Object</code>.</p>\n\n\n  \n\n\n  \n\n  \n</div>\n              <hr class=\"hr-margin\">\n            \n              <h5 class=\"no-anchor\" id=\"overload-8-5\">Overload #8</h5>\n              <div class=\"overload-info\">\n  \n  <div class=\"short-description\">\n    <p translation-result=\"on\">构造一个 <code>PATCH</code> 请求，它将请求体解释为 JSON 对象，并且返回完整的 HTTP 事件流。</p><p translation-origin=\"off\">Constructs a <code>PATCH</code> request that interprets the body as a JSON object\nand returns the full event stream.</p>\n\n\n  </div>\n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">patch</span>&#x3C;T>(url: string, body: any, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"events\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean | ReadonlyArray&#x3C;string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean>; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; }): Observable&#x3C;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&#x3C;T>></code-example>\n\n  \n\n  <h6 class=\"no-anchor\" id=\"参数-86\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">端点 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>body</code>\n      </td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">要编辑的资源。</p><p translation-origin=\"off\">The resources to edit.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">HTTP 选项。</p><p translation-origin=\"off\">HTTP options.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h6 class=\"no-anchor\" id=\"返回值-86\">返回值</h6>\n  <p translation-result=\"on\">此请求的 <code>HTTPevents</code> 的 <code>Observable</code>，其响应体为所请求的类型。</p><p translation-origin=\"off\"><code>Observable&#x3C;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&#x3C;T>></code>: An <code>Observable</code> of all the <code><a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a></code>s for the request,\nwith a response body in the requested type.</p>\n\n\n  \n\n\n  \n\n  \n</div>\n              <hr class=\"hr-margin\">\n            \n              <h5 class=\"no-anchor\" id=\"overload-9-5\">Overload #9</h5>\n              <div class=\"overload-info\">\n  \n  <div class=\"short-description\">\n    <p translation-result=\"on\">构造一个 <code>PATCH</code> 请求，它将请求体解释为 <code>ArrayBuffer</code>，并且返回完整的 <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>。</p><p translation-origin=\"off\">Constructs a <code>PATCH</code> request that interprets the body as an <code>ArrayBuffer</code>\nand returns the full <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>.</p>\n\n\n  </div>\n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">patch</span>(url: string, body: any, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"response\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean | ReadonlyArray&#x3C;string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean>; }; reportProgress?: boolean; responseType: \"arraybuffer\"; withCredentials?: boolean; }): Observable&#x3C;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&#x3C;ArrayBuffer>></code-example>\n\n  \n\n  <h6 class=\"no-anchor\" id=\"参数-87\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">端点 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>body</code>\n      </td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">要编辑的资源。</p><p translation-origin=\"off\">The resources to edit.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">HTTP 选项。</p><p translation-origin=\"off\">HTTP options.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h6 class=\"no-anchor\" id=\"返回值-87\">返回值</h6>\n  <p translation-result=\"on\">此请求的响应对象的 <code>Observable</code>，其响应体为 <code>ArrayBuffer</code> 类型。</p><p translation-origin=\"off\"><code>Observable&#x3C;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&#x3C;ArrayBuffer>></code>: An <code>Observable</code> of the <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code> for the request,\nwith the response body as an <code>ArrayBuffer</code>.</p>\n\n\n  \n\n\n  \n\n  \n</div>\n              <hr class=\"hr-margin\">\n            \n              <h5 class=\"no-anchor\" id=\"overload-10-5\">Overload #10</h5>\n              <div class=\"overload-info\">\n  \n  <div class=\"short-description\">\n    <p translation-result=\"on\">构造一个 <code>PATCH</code> 请求，它将请求体解释为 <code>Blob</code>，并且返回完整的 <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>。</p><p translation-origin=\"off\">Constructs a <code>PATCH</code> request that interprets the body as a <code>Blob</code> and returns the full\n<code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>.</p>\n\n\n  </div>\n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">patch</span>(url: string, body: any, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"response\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean | ReadonlyArray&#x3C;string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean>; }; reportProgress?: boolean; responseType: \"blob\"; withCredentials?: boolean; }): Observable&#x3C;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&#x3C;Blob>></code-example>\n\n  \n\n  <h6 class=\"no-anchor\" id=\"参数-88\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">端点 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>body</code>\n      </td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">要编辑的资源。</p><p translation-origin=\"off\">The resources to edit.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">HTTP 选项。</p><p translation-origin=\"off\">HTTP options.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h6 class=\"no-anchor\" id=\"返回值-88\">返回值</h6>\n  <p translation-result=\"on\">此请求的响应对象的 <code>Observable</code>，其响应体为 <code>Blob</code> 类型。</p><p translation-origin=\"off\"><code>Observable&#x3C;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&#x3C;Blob>></code>: An <code>Observable</code> of the <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code> for the request,\nwith the response body as a <code>Blob</code>.</p>\n\n\n  \n\n\n  \n\n  \n</div>\n              <hr class=\"hr-margin\">\n            \n              <h5 class=\"no-anchor\" id=\"overload-11-5\">Overload #11</h5>\n              <div class=\"overload-info\">\n  \n  <div class=\"short-description\">\n    <p translation-result=\"on\">构造一个 <code>PATCH</code> 请求，它将请求体解释为文本流，并且返回完整的 <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>。</p><p translation-origin=\"off\">Constructs a <code>PATCH</code> request that interprets the body as a text stream and returns the\nfull <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>.</p>\n\n\n  </div>\n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">patch</span>(url: string, body: any, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"response\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean | ReadonlyArray&#x3C;string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean>; }; reportProgress?: boolean; responseType: \"text\"; withCredentials?: boolean; }): Observable&#x3C;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&#x3C;string>></code-example>\n\n  \n\n  <h6 class=\"no-anchor\" id=\"参数-89\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">端点 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>body</code>\n      </td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">要编辑的资源。</p><p translation-origin=\"off\">The resources to edit.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">HTTP 选项。</p><p translation-origin=\"off\">HTTP options.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h6 class=\"no-anchor\" id=\"返回值-89\">返回值</h6>\n  <p translation-result=\"on\">此请求的响应对象的 <code>Observable</code>，其响应体为 string 类型。</p><p translation-origin=\"off\"><code>Observable&#x3C;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&#x3C;string>></code>: An <code>Observable</code> of the <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code> for the request,\nwith a response body of type string.</p>\n\n\n  \n\n\n  \n\n  \n</div>\n              <hr class=\"hr-margin\">\n            \n              <h5 class=\"no-anchor\" id=\"overload-12-5\">Overload #12</h5>\n              <div class=\"overload-info\">\n  \n  <div class=\"short-description\">\n    <p translation-result=\"on\">构造一个 <code>PATCH</code> 请求，它将请求体解释为 JSON 对象，并且返回完整的 <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>。</p><p translation-origin=\"off\">Constructs a <code>PATCH</code> request that interprets the body as a JSON object\nand returns the full <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>.</p>\n\n\n  </div>\n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">patch</span>(url: string, body: any, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"response\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean | ReadonlyArray&#x3C;string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean>; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; }): Observable&#x3C;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&#x3C;Object>></code-example>\n\n  \n\n  <h6 class=\"no-anchor\" id=\"参数-90\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">端点 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>body</code>\n      </td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">要编辑的资源。</p><p translation-origin=\"off\">The resources to edit.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">HTTP 选项。</p><p translation-origin=\"off\">HTTP options.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h6 class=\"no-anchor\" id=\"返回值-90\">返回值</h6>\n  <p translation-result=\"on\">此请求的响应对象的 <code>Observable</code>，其响应体为所请求的类型。</p><p translation-origin=\"off\"><code>Observable&#x3C;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&#x3C;Object>></code>: An <code>Observable</code> of the <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code> for the request,\nwith a response body in the requested type.</p>\n\n\n  \n\n\n  \n\n  \n</div>\n              <hr class=\"hr-margin\">\n            \n              <h5 class=\"no-anchor\" id=\"overload-13-5\">Overload #13</h5>\n              <div class=\"overload-info\">\n  \n  <div class=\"short-description\">\n    <p translation-result=\"on\">构造一个 <code>PATCH</code> 请求，它将请求体解释为 JSON 对象，并且返回完整的 <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>。</p><p translation-origin=\"off\">Constructs a <code>PATCH</code> request that interprets the body as a JSON object\nand returns the full <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>.</p>\n\n\n  </div>\n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">patch</span>&#x3C;T>(url: string, body: any, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"response\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean | ReadonlyArray&#x3C;string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean>; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; }): Observable&#x3C;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&#x3C;T>></code-example>\n\n  \n\n  <h6 class=\"no-anchor\" id=\"参数-91\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">端点 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>body</code>\n      </td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">要编辑的资源。</p><p translation-origin=\"off\">The resources to edit.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">HTTP 选项。</p><p translation-origin=\"off\">HTTP options.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h6 class=\"no-anchor\" id=\"返回值-91\">返回值</h6>\n  <p translation-result=\"on\">此请求的响应对象的 <code>Observable</code>，其响应体为给定的类型。</p><p translation-origin=\"off\"><code>Observable&#x3C;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&#x3C;T>></code>: An <code>Observable</code> of the <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code> for the request,\nwith a response body in the given type.</p>\n\n\n  \n\n\n  \n\n  \n</div>\n              <hr class=\"hr-margin\">\n            \n              <h5 class=\"no-anchor\" id=\"overload-14-5\">Overload #14</h5>\n              <div class=\"overload-info\">\n  \n  <div class=\"short-description\">\n    <p translation-result=\"on\">构造一个 <code>PATCH</code> 请求，它将请求体解释为 JSON 对象，并且返回 JSON 对象格式的响应体。</p><p translation-origin=\"off\">Constructs a <code>PATCH</code> request that interprets the body as a JSON object and\nreturns the response body as a JSON object.</p>\n\n\n  </div>\n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">patch</span>(url: string, body: any, options?: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; observe?: \"body\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean | ReadonlyArray&#x3C;string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean>; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; }): Observable&#x3C;Object></code-example>\n\n  \n\n  <h6 class=\"no-anchor\" id=\"参数-92\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">端点 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>body</code>\n      </td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">要编辑的资源。</p><p translation-origin=\"off\">The resources to edit.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">HTTP 选项。</p><p translation-origin=\"off\">HTTP options.</p>\n\n        <div no-translate=\"\">可选. 默认值是 `undefined`.</div>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h6 class=\"no-anchor\" id=\"返回值-92\">返回值</h6>\n  <p translation-result=\"on\">响应对象的 <code>Observable</code> ，其响应体为 JSON 对象。</p><p translation-origin=\"off\"><code>Observable&#x3C;Object></code>: An <code>Observable</code> of the response, with the response body as a JSON object.</p>\n\n\n  \n\n\n  \n\n  \n</div>\n              <hr class=\"hr-margin\">\n            \n              <h5 class=\"no-anchor\" id=\"overload-15-5\">Overload #15</h5>\n              <div class=\"overload-info\">\n  \n  <div class=\"short-description\">\n    <p translation-result=\"on\">构造一个 <code>PATCH</code> 请求，它将请求体解释为 JSON 对象，并且返回给定类型的响应。</p><p translation-origin=\"off\">Constructs a <code>PATCH</code> request that interprets the body as a JSON object\nand returns the response in a given type.</p>\n\n\n  </div>\n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">patch</span>&#x3C;T>(url: string, body: any, options?: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; observe?: \"body\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean | ReadonlyArray&#x3C;string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean>; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; }): Observable&#x3C;T></code-example>\n\n  \n\n  <h6 class=\"no-anchor\" id=\"参数-93\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">端点 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>body</code>\n      </td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">要编辑的资源。</p><p translation-origin=\"off\">The resources to edit.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">HTTP 选项。</p><p translation-origin=\"off\">HTTP options.</p>\n\n        <div no-translate=\"\">可选. 默认值是 `undefined`.</div>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h6 class=\"no-anchor\" id=\"返回值-93\">返回值</h6>\n  <p translation-result=\"on\">此请求的响应对象的 <code>Observable</code>，其响应体为给定的类型。</p><p translation-origin=\"off\"><code>Observable&#x3C;T></code>: An <code>Observable</code> of the <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code> for the request,\nwith a response body in the given type.</p>\n\n\n  \n\n\n  \n\n  \n</div>\n              \n            \n          </div>\n        </details>\n      </td>\n    </tr>\n  \n\n  \n\n  \n    </tbody>\n</table>\n\n  \n    <a id=\"post\"></a>\n<table class=\"is-full-width method-table instance-methods\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n    <h3 id=\"post\">\n      post()\n      \n    <a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/http/HttpClient#post\"><i class=\"material-icons\">link</i></a></h3>\n    <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular-cn/edit/aio/packages/common/http/src/client.ts?message=docs(common)%3A%20请简述你的修改...#L3830-L3851\" aria-label=\"提供编辑建议\" title=\"提供编辑建议\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/angular/angular-cn/tree/12.1.0-next.1/packages/common/http/src/client.ts#L3830-L3851\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p translation-result=\"on\">构造一个 <code>Observable</code>，当订阅该 Observable 时，它会让已配置的 <code>POST</code> 请求在服务器上执行。。服务器以替换后资源的位置进行响应。有关返回类型的详细信息，请参见各个重载。</p><p translation-origin=\"off\">Constructs an observable that, when subscribed, causes the configured\n<code>POST</code> request to execute on the server. The server responds with the location of\nthe replaced resource. See the individual overloads for\ndetails on the return type.</p>\n\n\n      </td>\n    </tr>\n  <tr>\n      <td>\n        <details class=\"overloads\">\n          <summary>\n            <div class=\"icon-action-header\">\n                <h4 class=\"no-anchor\" id=\"15-个重载形式-5\">15 个重载形式...</h4>\n                <span class=\"actions\">\n                  <span class=\"show-all\">显示所有</span>\n                  <span class=\"collapse-all\">隐藏所有</span>\n                  <i class=\"material-icons expand\">expand_more</i>\n                </span>\n              </div>\n          </summary>\n          <div class=\"detail-contents\">\n            \n            \n              <h5 class=\"no-anchor\" id=\"overload-1-6\">Overload #1</h5>\n              <div class=\"overload-info\">\n  \n  <div class=\"short-description\">\n    <p translation-result=\"on\">构造一个 <code>POST</code> 请求，它将请求体解释为 <code>ArrayBuffer</code>，并且返回 <code>ArrayBuffer</code>。</p><p translation-origin=\"off\">Constructs a <code>POST</code> request that interprets the body as an <code>ArrayBuffer</code> and returns\nan <code>ArrayBuffer</code>.</p>\n\n\n  </div>\n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">post</span>(url: string, body: any, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; observe?: \"body\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean | ReadonlyArray&#x3C;string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean>; }; reportProgress?: boolean; responseType: \"arraybuffer\"; withCredentials?: boolean; }): Observable&#x3C;ArrayBuffer></code-example>\n\n  \n\n  <h6 class=\"no-anchor\" id=\"参数-94\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">端点 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>body</code>\n      </td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">要替换的内容。</p><p translation-origin=\"off\">The content to replace with.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">HTTP 选项。</p><p translation-origin=\"off\">HTTP options.</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h6 class=\"no-anchor\" id=\"返回值-94\">返回值</h6>\n  <p translation-result=\"on\">响应对象的 <code>Observable</code>，其响应体为 <code>ArrayBuffer</code> 类型。</p><p translation-origin=\"off\"><code>Observable&#x3C;ArrayBuffer></code>: An <code>Observable</code> of the response, with the response body as an <code>ArrayBuffer</code>.</p>\n\n\n  \n\n\n  \n\n  \n</div>\n              <hr class=\"hr-margin\">\n            \n              <h5 class=\"no-anchor\" id=\"overload-2-6\">Overload #2</h5>\n              <div class=\"overload-info\">\n  \n  <div class=\"short-description\">\n    <p translation-result=\"on\">构造一个 <code>POST</code> 请求，它将请求体解释为 <code>Blob</code>，并且返回 <code>Blob</code> 格式的响应体。</p><p translation-origin=\"off\">Constructs a <code>POST</code> request that interprets the body as a <code>Blob</code> and returns the\nresponse as a <code>Blob</code>.</p>\n\n\n  </div>\n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">post</span>(url: string, body: any, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; observe?: \"body\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean | ReadonlyArray&#x3C;string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean>; }; reportProgress?: boolean; responseType: \"blob\"; withCredentials?: boolean; }): Observable&#x3C;Blob></code-example>\n\n  \n\n  <h6 class=\"no-anchor\" id=\"参数-95\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">端点 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>body</code>\n      </td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">要替换的内容。</p><p translation-origin=\"off\">The content to replace with.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">HTTP 选项</p><p translation-origin=\"off\">HTTP options</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h6 class=\"no-anchor\" id=\"返回值-95\">返回值</h6>\n  <p translation-result=\"on\">响应对象的 <code>Observable</code> ，其响应体为 <code>Blob</code> 类型。</p><p translation-origin=\"off\"><code>Observable&#x3C;Blob></code>: An <code>Observable</code> of the response, with the response body as a <code>Blob</code>.</p>\n\n\n  \n\n\n  \n\n  \n</div>\n              <hr class=\"hr-margin\">\n            \n              <h5 class=\"no-anchor\" id=\"overload-3-6\">Overload #3</h5>\n              <div class=\"overload-info\">\n  \n  <div class=\"short-description\">\n    <p translation-result=\"on\">构造一个 <code>POST</code> 请求，它将请求体解释为字符串，并且返回字符串格式的响应。</p><p translation-origin=\"off\">Constructs a <code>POST</code> request that interprets the body as a text string and\nreturns the response as a string value.</p>\n\n\n  </div>\n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">post</span>(url: string, body: any, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; observe?: \"body\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean | ReadonlyArray&#x3C;string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean>; }; reportProgress?: boolean; responseType: \"text\"; withCredentials?: boolean; }): Observable&#x3C;string></code-example>\n\n  \n\n  <h6 class=\"no-anchor\" id=\"参数-96\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">端点 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>body</code>\n      </td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">要替换的内容。</p><p translation-origin=\"off\">The content to replace with.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">HTTP 选项</p><p translation-origin=\"off\">HTTP options</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h6 class=\"no-anchor\" id=\"返回值-96\">返回值</h6>\n  <p translation-result=\"on\">此请求的响应对象的 <code>Observable</code>，其响应体为 string 类型。</p><p translation-origin=\"off\"><code>Observable&#x3C;string></code>: An <code>Observable</code> of the response, with a response body of type string.</p>\n\n\n  \n\n\n  \n\n  \n</div>\n              <hr class=\"hr-margin\">\n            \n              <h5 class=\"no-anchor\" id=\"overload-4-6\">Overload #4</h5>\n              <div class=\"overload-info\">\n  \n  <div class=\"short-description\">\n    <p translation-result=\"on\">构造一个 <code>POST</code> 请求，它将请求体解释为 <code>ArrayBuffer</code>，并返回完整的事件流。</p><p translation-origin=\"off\">Constructs a <code>POST</code> request that interprets the body as an <code>ArrayBuffer</code> and\nreturns the full event stream.</p>\n\n\n  </div>\n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">post</span>(url: string, body: any, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"events\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean | ReadonlyArray&#x3C;string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean>; }; reportProgress?: boolean; responseType: \"arraybuffer\"; withCredentials?: boolean; }): Observable&#x3C;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&#x3C;ArrayBuffer>></code-example>\n\n  \n\n  <h6 class=\"no-anchor\" id=\"参数-97\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">端点 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>body</code>\n      </td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">要替换的内容。</p><p translation-origin=\"off\">The content to replace with.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">HTTP 选项</p><p translation-origin=\"off\">HTTP options</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h6 class=\"no-anchor\" id=\"返回值-97\">返回值</h6>\n  <p translation-result=\"on\">此请求的 <code>HttpEvents</code> 的 <code>Observable</code>，其响应体为 <code>ArrayBuffer</code> 类型。</p><p translation-origin=\"off\"><code>Observable&#x3C;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&#x3C;ArrayBuffer>></code>: An <code>Observable</code> of all <code><a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a></code>s for the request,\nwith the response body as an <code>ArrayBuffer</code>.</p>\n\n\n  \n\n\n  \n\n  \n</div>\n              <hr class=\"hr-margin\">\n            \n              <h5 class=\"no-anchor\" id=\"overload-5-6\">Overload #5</h5>\n              <div class=\"overload-info\">\n  \n  <div class=\"short-description\">\n    <p translation-result=\"on\">构造一个 <code>POST</code> 请求，它把请求体解释为 <code>Blob</code>，并返回完整事件流的 <code>Observable</code>。</p><p translation-origin=\"off\">Constructs a <code>POST</code> request that interprets the body as a <code>Blob</code>\nand returns the response in an observable of the full event stream.</p>\n\n\n  </div>\n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">post</span>(url: string, body: any, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"events\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean | ReadonlyArray&#x3C;string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean>; }; reportProgress?: boolean; responseType: \"blob\"; withCredentials?: boolean; }): Observable&#x3C;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&#x3C;Blob>></code-example>\n\n  \n\n  <h6 class=\"no-anchor\" id=\"参数-98\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">端点 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>body</code>\n      </td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">要替换的内容。</p><p translation-origin=\"off\">The content to replace with.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">HTTP 选项</p><p translation-origin=\"off\">HTTP options</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h6 class=\"no-anchor\" id=\"返回值-98\">返回值</h6>\n  <p translation-result=\"on\">此请求的 <code>HttpEvents</code> 的 <code>Observable</code>，其响应体为 <code>Blob</code> 类型。</p><p translation-origin=\"off\"><code>Observable&#x3C;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&#x3C;Blob>></code>: An <code>Observable</code> of all <code><a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a></code>s for the request, with the response body as <code>Blob</code>.</p>\n\n\n  \n\n\n  \n\n  \n</div>\n              <hr class=\"hr-margin\">\n            \n              <h5 class=\"no-anchor\" id=\"overload-6-6\">Overload #6</h5>\n              <div class=\"overload-info\">\n  \n  <div class=\"short-description\">\n    <p translation-result=\"on\">构造一个 <code>POST</code> 请求，它将请求体解释为文本字符串，并且返回完整的事件流。</p><p translation-origin=\"off\">Constructs a <code>POST</code> request that interprets the body as a text string and returns the full\nevent stream.</p>\n\n\n  </div>\n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">post</span>(url: string, body: any, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"events\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean | ReadonlyArray&#x3C;string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean>; }; reportProgress?: boolean; responseType: \"text\"; withCredentials?: boolean; }): Observable&#x3C;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&#x3C;string>></code-example>\n\n  \n\n  <h6 class=\"no-anchor\" id=\"参数-99\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">端点 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>body</code>\n      </td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">要替换的内容。</p><p translation-origin=\"off\">The content to replace with.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">HTTP 选项</p><p translation-origin=\"off\">HTTP options</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h6 class=\"no-anchor\" id=\"返回值-99\">返回值</h6>\n  <p translation-result=\"on\">此请求的 <code>HttpEvents</code> 的 <code>Observable</code>，其响应体为 string 类型。</p><p translation-origin=\"off\"><code>Observable&#x3C;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&#x3C;string>></code>: An <code>Observable</code> of all <code><a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a></code>s for the request,\nwith a response body of type string.</p>\n\n\n  \n\n\n  \n\n  \n</div>\n              <hr class=\"hr-margin\">\n            \n              <h5 class=\"no-anchor\" id=\"overload-7-6\">Overload #7</h5>\n              <div class=\"overload-info\">\n  \n  <div class=\"short-description\">\n    <p translation-result=\"on\">构造一个 <code>POST</code> 请求，它将请求体解释为 JSON 对象，并且返回完整的 HTTP 事件流。</p><p translation-origin=\"off\">Constructs a POST request that interprets the body as a JSON object and returns the full event\nstream.</p>\n\n\n  </div>\n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">post</span>(url: string, body: any, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"events\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean | ReadonlyArray&#x3C;string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean>; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; }): Observable&#x3C;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&#x3C;Object>></code-example>\n\n  \n\n  <h6 class=\"no-anchor\" id=\"参数-100\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">端点 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>body</code>\n      </td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">要替换的内容。</p><p translation-origin=\"off\">The content to replace with.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">HTTP 选项</p><p translation-origin=\"off\">HTTP options</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h6 class=\"no-anchor\" id=\"返回值-100\">返回值</h6>\n  <p translation-result=\"on\">此请求的 <code>HttpEvents</code> 的 <code>Observable</code>，其响应体为 <code>Object</code> 类型。</p><p translation-origin=\"off\"><code>Observable&#x3C;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&#x3C;Object>></code>: An <code>Observable</code> of all <code><a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a></code>s for the request,\nwith a response body of type <code>Object</code>.</p>\n\n\n  \n\n\n  \n\n  \n</div>\n              <hr class=\"hr-margin\">\n            \n              <h5 class=\"no-anchor\" id=\"overload-8-6\">Overload #8</h5>\n              <div class=\"overload-info\">\n  \n  <div class=\"short-description\">\n    <p translation-result=\"on\">构造一个 <code>POST</code> 请求，它将请求体解释为 JSON 对象，并且返回完整的 HTTP 事件流。</p><p translation-origin=\"off\">Constructs a POST request that interprets the body as a JSON object and returns the full event\nstream.</p>\n\n\n  </div>\n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">post</span>&#x3C;T>(url: string, body: any, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"events\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean | ReadonlyArray&#x3C;string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean>; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; }): Observable&#x3C;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&#x3C;T>></code-example>\n\n  \n\n  <h6 class=\"no-anchor\" id=\"参数-101\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">端点 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>body</code>\n      </td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">要替换的内容。</p><p translation-origin=\"off\">The content to replace with.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">HTTP 选项</p><p translation-origin=\"off\">HTTP options</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h6 class=\"no-anchor\" id=\"返回值-101\">返回值</h6>\n  <p translation-result=\"on\">此请求的 <code>HttpEvents</code> 的 <code>Observable</code>，其响应体为所请求的类型。</p><p translation-origin=\"off\"><code>Observable&#x3C;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&#x3C;T>></code>: An <code>Observable</code> of all <code><a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a></code>s for the request,\nwith a response body in the requested type.</p>\n\n\n  \n\n\n  \n\n  \n</div>\n              <hr class=\"hr-margin\">\n            \n              <h5 class=\"no-anchor\" id=\"overload-9-6\">Overload #9</h5>\n              <div class=\"overload-info\">\n  \n  <div class=\"short-description\">\n    <p translation-result=\"on\">构造一个 POST 请求，它将请求体解释为 <code>ArrayBuffer</code> 类型，并返回完整的 <code>HTTPresponse</code> 。</p><p translation-origin=\"off\">Constructs a POST request that interprets the body as an <code>ArrayBuffer</code>\nand returns the full <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>.</p>\n\n\n  </div>\n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">post</span>(url: string, body: any, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"response\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean | ReadonlyArray&#x3C;string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean>; }; reportProgress?: boolean; responseType: \"arraybuffer\"; withCredentials?: boolean; }): Observable&#x3C;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&#x3C;ArrayBuffer>></code-example>\n\n  \n\n  <h6 class=\"no-anchor\" id=\"参数-102\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">端点 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>body</code>\n      </td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">要替换的内容。</p><p translation-origin=\"off\">The content to replace with.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">HTTP 选项</p><p translation-origin=\"off\">HTTP options</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h6 class=\"no-anchor\" id=\"返回值-102\">返回值</h6>\n  <p translation-result=\"on\">此请求的响应对象的 <code>Observable</code>，其响应体为 <code>ArrayBuffer</code> 类型。</p><p translation-origin=\"off\"><code>Observable&#x3C;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&#x3C;ArrayBuffer>></code>: An <code>Observable</code> of the <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code> for the request, with the response body as an\n<code>ArrayBuffer</code>.</p>\n\n\n  \n\n\n  \n\n  \n</div>\n              <hr class=\"hr-margin\">\n            \n              <h5 class=\"no-anchor\" id=\"overload-10-6\">Overload #10</h5>\n              <div class=\"overload-info\">\n  \n  <div class=\"short-description\">\n    <p translation-result=\"on\">构造一个 <code>POST</code> 请求，它将请求体解释为 <code>Blob</code>，并且返回完整的 <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>。</p><p translation-origin=\"off\">Constructs a <code>POST</code> request that interprets the body as a <code>Blob</code> and returns the full\n<code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>.</p>\n\n\n  </div>\n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">post</span>(url: string, body: any, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"response\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean | ReadonlyArray&#x3C;string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean>; }; reportProgress?: boolean; responseType: \"blob\"; withCredentials?: boolean; }): Observable&#x3C;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&#x3C;Blob>></code-example>\n\n  \n\n  <h6 class=\"no-anchor\" id=\"参数-103\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">端点 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>body</code>\n      </td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">要替换的内容。</p><p translation-origin=\"off\">The content to replace with.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">HTTP 选项</p><p translation-origin=\"off\">HTTP options</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h6 class=\"no-anchor\" id=\"返回值-103\">返回值</h6>\n  <p translation-result=\"on\">此请求的响应对象的 <code>Observable</code>，其响应体为 <code>Blob</code> 类型。</p><p translation-origin=\"off\"><code>Observable&#x3C;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&#x3C;Blob>></code>: An <code>Observable</code> of the <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code> for the request,\nwith the response body as a <code>Blob</code>.</p>\n\n\n  \n\n\n  \n\n  \n</div>\n              <hr class=\"hr-margin\">\n            \n              <h5 class=\"no-anchor\" id=\"overload-11-6\">Overload #11</h5>\n              <div class=\"overload-info\">\n  \n  <div class=\"short-description\">\n    <p translation-result=\"on\">构造一个 <code>POST</code> 请求，它将请求体解释为文本流，并且返回完整的 <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>。</p><p translation-origin=\"off\">Constructs a <code>POST</code> request that interprets the body as a text stream and returns\nthe full <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>.</p>\n\n\n  </div>\n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">post</span>(url: string, body: any, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"response\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean | ReadonlyArray&#x3C;string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean>; }; reportProgress?: boolean; responseType: \"text\"; withCredentials?: boolean; }): Observable&#x3C;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&#x3C;string>></code-example>\n\n  \n\n  <h6 class=\"no-anchor\" id=\"参数-104\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">端点 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>body</code>\n      </td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">要替换的内容。</p><p translation-origin=\"off\">The content to replace with.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">HTTP 选项</p><p translation-origin=\"off\">HTTP options</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h6 class=\"no-anchor\" id=\"返回值-104\">返回值</h6>\n  <p translation-result=\"on\">此请求的响应对象的 <code>Observable</code>，其响应体为 string 类型。</p><p translation-origin=\"off\"><code>Observable&#x3C;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&#x3C;string>></code>: An <code>Observable</code> of the <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code> for the request,\nwith a response body of type string.</p>\n\n\n  \n\n\n  \n\n  \n</div>\n              <hr class=\"hr-margin\">\n            \n              <h5 class=\"no-anchor\" id=\"overload-12-6\">Overload #12</h5>\n              <div class=\"overload-info\">\n  \n  <div class=\"short-description\">\n    <p translation-result=\"on\">构造一个 <code>POST</code> 请求，它将请求体解释为 JSON 对象，并且返回完整的 <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>。</p><p translation-origin=\"off\">Constructs a <code>POST</code> request that interprets the body as a JSON object\nand returns the full <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>.</p>\n\n\n  </div>\n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">post</span>(url: string, body: any, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"response\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean | ReadonlyArray&#x3C;string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean>; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; }): Observable&#x3C;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&#x3C;Object>></code-example>\n\n  \n\n  <h6 class=\"no-anchor\" id=\"参数-105\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">端点 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>body</code>\n      </td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">要替换的内容。</p><p translation-origin=\"off\">The content to replace with.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">HTTP 选项</p><p translation-origin=\"off\">HTTP options</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h6 class=\"no-anchor\" id=\"返回值-105\">返回值</h6>\n  <p translation-result=\"on\">表示啥此请求的 <code>HTTPResponse</code> 的 <code>Observable</code>，响应体为 <code>Object</code> 类型。</p><p translation-origin=\"off\"><code>Observable&#x3C;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&#x3C;Object>></code>: An <code>Observable</code> of the <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code> for the request, with a response body of type\n<code>Object</code>.</p>\n\n\n  \n\n\n  \n\n  \n</div>\n              <hr class=\"hr-margin\">\n            \n              <h5 class=\"no-anchor\" id=\"overload-13-6\">Overload #13</h5>\n              <div class=\"overload-info\">\n  \n  <div class=\"short-description\">\n    <p translation-result=\"on\">构造一个 <code>POST</code> 请求，它将请求体解释为 JSON 对象，并且返回完整的 <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>。</p><p translation-origin=\"off\">Constructs a <code>POST</code> request that interprets the body as a JSON object and returns the full\n<code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>.</p>\n\n\n  </div>\n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">post</span>&#x3C;T>(url: string, body: any, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"response\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean | ReadonlyArray&#x3C;string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean>; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; }): Observable&#x3C;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&#x3C;T>></code-example>\n\n  \n\n  <h6 class=\"no-anchor\" id=\"参数-106\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">端点 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>body</code>\n      </td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">要替换的内容。</p><p translation-origin=\"off\">The content to replace with.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">HTTP 选项</p><p translation-origin=\"off\">HTTP options</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h6 class=\"no-anchor\" id=\"返回值-106\">返回值</h6>\n  <p translation-result=\"on\">表示此请求的 <code>HTTPResponse</code> 的 <code>Observable</code>，响应体为所请求的类型。</p><p translation-origin=\"off\"><code>Observable&#x3C;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&#x3C;T>></code>: An <code>Observable</code> of the <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code> for the request, with a response body in the\nrequested type.</p>\n\n\n  \n\n\n  \n\n  \n</div>\n              <hr class=\"hr-margin\">\n            \n              <h5 class=\"no-anchor\" id=\"overload-14-6\">Overload #14</h5>\n              <div class=\"overload-info\">\n  \n  <div class=\"short-description\">\n    <p translation-result=\"on\">构造一个 <code>POST</code> 请求，它将请求体解释为 JSON 对象，并且返回 JSON 对象格式的响应体。</p><p translation-origin=\"off\">Constructs a <code>POST</code> request that interprets the body as a\nJSON object and returns the response body as a JSON object.</p>\n\n\n  </div>\n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">post</span>(url: string, body: any, options?: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; observe?: \"body\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean | ReadonlyArray&#x3C;string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean>; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; }): Observable&#x3C;Object></code-example>\n\n  \n\n  <h6 class=\"no-anchor\" id=\"参数-107\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">端点 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>body</code>\n      </td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">要替换的内容。</p><p translation-origin=\"off\">The content to replace with.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">HTTP 选项</p><p translation-origin=\"off\">HTTP options</p>\n\n        <div no-translate=\"\">可选. 默认值是 `undefined`.</div>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h6 class=\"no-anchor\" id=\"返回值-107\">返回值</h6>\n  <p translation-result=\"on\">响应对象的 <code>Observable</code> ，其响应体为 JSON 对象。</p><p translation-origin=\"off\"><code>Observable&#x3C;Object></code>: An <code>Observable</code> of the response, with the response body as a JSON object.</p>\n\n\n  \n\n\n  \n\n  \n</div>\n              <hr class=\"hr-margin\">\n            \n              <h5 class=\"no-anchor\" id=\"overload-15-6\">Overload #15</h5>\n              <div class=\"overload-info\">\n  \n  <div class=\"short-description\">\n    <p translation-result=\"on\">构造一个 <code>POST</code> 请求，它将请求体解释为 JSON 对象，并且返回响应对象的 <code>Observable</code>。</p><p translation-origin=\"off\">Constructs a <code>POST</code> request that interprets the body as a JSON object\nand returns an observable of the response.</p>\n\n\n  </div>\n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">post</span>&#x3C;T>(url: string, body: any, options?: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; observe?: \"body\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean | ReadonlyArray&#x3C;string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean>; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; }): Observable&#x3C;T></code-example>\n\n  \n\n  <h6 class=\"no-anchor\" id=\"参数-108\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">端点 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>body</code>\n      </td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">要替换的内容。</p><p translation-origin=\"off\">The content to replace with.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">HTTP 选项</p><p translation-origin=\"off\">HTTP options</p>\n\n        <div no-translate=\"\">可选. 默认值是 `undefined`.</div>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h6 class=\"no-anchor\" id=\"返回值-108\">返回值</h6>\n  <p translation-result=\"on\">表示此请求的 <code>HTTPResponse</code> 的 <code>Observable</code>，响应体为所请求的类型。</p><p translation-origin=\"off\"><code>Observable&#x3C;T></code>: An <code>Observable</code> of the <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code> for the request, with a response body in the\nrequested type.</p>\n\n\n  \n\n\n  \n\n  \n</div>\n              \n            \n          </div>\n        </details>\n      </td>\n    </tr>\n  \n\n  \n\n  \n    </tbody>\n</table>\n\n  \n    <a id=\"put\"></a>\n<table class=\"is-full-width method-table instance-methods\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n    <h3 id=\"put\">\n      put()\n      \n    <a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/http/HttpClient#put\"><i class=\"material-icons\">link</i></a></h3>\n    <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular-cn/edit/aio/packages/common/http/src/client.ts?message=docs(common)%3A%20请简述你的修改...#L4351-L4372\" aria-label=\"提供编辑建议\" title=\"提供编辑建议\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/angular/angular-cn/tree/12.1.0-next.1/packages/common/http/src/client.ts#L4351-L4372\" aria-label=\"查看源码\" title=\"查看源码\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p translation-result=\"on\">构造一个 <code>Observable</code>，当订阅该 Observable 时，它会让已配置的 <code>PUT</code> 请求在服务器上执行。。 <code>PUT</code> 方法用一组新值替换现有资源。有关返回类型的详细信息，请参见各个重载。</p><p translation-origin=\"off\">Constructs an observable that, when subscribed, causes the configured\n<code>PUT</code> request to execute on the server. The <code>PUT</code> method replaces an existing resource\nwith a new set of values.\nSee the individual overloads for details on the return type.</p>\n\n\n      </td>\n    </tr>\n  <tr>\n      <td>\n        <details class=\"overloads\">\n          <summary>\n            <div class=\"icon-action-header\">\n                <h4 class=\"no-anchor\" id=\"15-个重载形式-6\">15 个重载形式...</h4>\n                <span class=\"actions\">\n                  <span class=\"show-all\">显示所有</span>\n                  <span class=\"collapse-all\">隐藏所有</span>\n                  <i class=\"material-icons expand\">expand_more</i>\n                </span>\n              </div>\n          </summary>\n          <div class=\"detail-contents\">\n            \n            \n              <h5 class=\"no-anchor\" id=\"overload-1-7\">Overload #1</h5>\n              <div class=\"overload-info\">\n  \n  <div class=\"short-description\">\n    <p translation-result=\"on\">构造一个 <code>PUT</code> 请求，它将请求体解释为 <code>ArrayBuffer</code>，并且返回 <code>ArrayBuffer</code> 格式的响应体。</p><p translation-origin=\"off\">Constructs a <code>PUT</code> request that interprets the body as an <code>ArrayBuffer</code> and returns the\nresponse as an <code>ArrayBuffer</code>.</p>\n\n\n  </div>\n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">put</span>(url: string, body: any, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; observe?: \"body\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean | ReadonlyArray&#x3C;string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean>; }; reportProgress?: boolean; responseType: \"arraybuffer\"; withCredentials?: boolean; }): Observable&#x3C;ArrayBuffer></code-example>\n\n  \n\n  <h6 class=\"no-anchor\" id=\"参数-109\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">端点 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>body</code>\n      </td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">要添加/更新的资源。</p><p translation-origin=\"off\">The resources to add/update.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">HTTP 选项</p><p translation-origin=\"off\">HTTP options</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h6 class=\"no-anchor\" id=\"返回值-109\">返回值</h6>\n  <p translation-result=\"on\">响应对象的 <code>Observable</code>，其响应体为 <code>ArrayBuffer</code> 类型。</p><p translation-origin=\"off\"><code>Observable&#x3C;ArrayBuffer></code>: An <code>Observable</code> of the response, with the response body as an <code>ArrayBuffer</code>.</p>\n\n\n  \n\n\n  \n\n  \n</div>\n              <hr class=\"hr-margin\">\n            \n              <h5 class=\"no-anchor\" id=\"overload-2-7\">Overload #2</h5>\n              <div class=\"overload-info\">\n  \n  <div class=\"short-description\">\n    <p translation-result=\"on\">构造一个 <code>PUT</code> 请求，它将请求体解释为 <code>Blob</code>，并且返回 <code>Blob</code> 格式的响应体。</p><p translation-origin=\"off\">Constructs a <code>PUT</code> request that interprets the body as a <code>Blob</code> and returns\nthe response as a <code>Blob</code>.</p>\n\n\n  </div>\n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">put</span>(url: string, body: any, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; observe?: \"body\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean | ReadonlyArray&#x3C;string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean>; }; reportProgress?: boolean; responseType: \"blob\"; withCredentials?: boolean; }): Observable&#x3C;Blob></code-example>\n\n  \n\n  <h6 class=\"no-anchor\" id=\"参数-110\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">端点 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>body</code>\n      </td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">要添加/更新的资源。</p><p translation-origin=\"off\">The resources to add/update.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">HTTP 选项</p><p translation-origin=\"off\">HTTP options</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h6 class=\"no-anchor\" id=\"返回值-110\">返回值</h6>\n  <p translation-result=\"on\">响应对象的 <code>Observable</code> ，其响应体为 <code>Blob</code> 类型。</p><p translation-origin=\"off\"><code>Observable&#x3C;Blob></code>: An <code>Observable</code> of the response, with the response body as a <code>Blob</code>.</p>\n\n\n  \n\n\n  \n\n  \n</div>\n              <hr class=\"hr-margin\">\n            \n              <h5 class=\"no-anchor\" id=\"overload-3-7\">Overload #3</h5>\n              <div class=\"overload-info\">\n  \n  <div class=\"short-description\">\n    <p translation-result=\"on\">构造一个 <code>PUT</code> 请求，它将请求体解释为字符串，并且返回字符串格式的响应。</p><p translation-origin=\"off\">Constructs a <code>PUT</code> request that interprets the body as a text string and\nreturns the response as a string value.</p>\n\n\n  </div>\n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">put</span>(url: string, body: any, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; observe?: \"body\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean | ReadonlyArray&#x3C;string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean>; }; reportProgress?: boolean; responseType: \"text\"; withCredentials?: boolean; }): Observable&#x3C;string></code-example>\n\n  \n\n  <h6 class=\"no-anchor\" id=\"参数-111\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">端点 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>body</code>\n      </td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">要添加/更新的资源。</p><p translation-origin=\"off\">The resources to add/update.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">HTTP 选项</p><p translation-origin=\"off\">HTTP options</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h6 class=\"no-anchor\" id=\"返回值-111\">返回值</h6>\n  <p translation-result=\"on\">此请求的响应对象的 <code>Observable</code>，其响应体为 string 类型。</p><p translation-origin=\"off\"><code>Observable&#x3C;string></code>: An <code>Observable</code> of the response, with a response body of type string.</p>\n\n\n  \n\n\n  \n\n  \n</div>\n              <hr class=\"hr-margin\">\n            \n              <h5 class=\"no-anchor\" id=\"overload-4-7\">Overload #4</h5>\n              <div class=\"overload-info\">\n  \n  <div class=\"short-description\">\n    <p translation-result=\"on\">构造一个 <code>PUT</code> 请求，它将请求体解释为 <code>ArrayBuffer</code>，并返回完整的事件流。</p><p translation-origin=\"off\">Constructs a <code>PUT</code> request that interprets the body as an <code>ArrayBuffer</code> and\nreturns the full event stream.</p>\n\n\n  </div>\n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">put</span>(url: string, body: any, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"events\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean | ReadonlyArray&#x3C;string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean>; }; reportProgress?: boolean; responseType: \"arraybuffer\"; withCredentials?: boolean; }): Observable&#x3C;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&#x3C;ArrayBuffer>></code-example>\n\n  \n\n  <h6 class=\"no-anchor\" id=\"参数-112\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">端点 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>body</code>\n      </td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">要添加/更新的资源。</p><p translation-origin=\"off\">The resources to add/update.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">HTTP 选项</p><p translation-origin=\"off\">HTTP options</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h6 class=\"no-anchor\" id=\"返回值-112\">返回值</h6>\n  <p translation-result=\"on\">此请求的 <code>HttpEvents</code> 的 <code>Observable</code>，其响应体为 <code>ArrayBuffer</code> 类型。</p><p translation-origin=\"off\"><code>Observable&#x3C;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&#x3C;ArrayBuffer>></code>: An <code>Observable</code> of all <code><a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a></code>s for the request,\nwith the response body as an <code>ArrayBuffer</code>.</p>\n\n\n  \n\n\n  \n\n  \n</div>\n              <hr class=\"hr-margin\">\n            \n              <h5 class=\"no-anchor\" id=\"overload-5-7\">Overload #5</h5>\n              <div class=\"overload-info\">\n  \n  <div class=\"short-description\">\n    <p translation-result=\"on\">构造一个 <code>PUT</code> 请求，它将请求体解释为 <code>Blob</code>，并返回完整的事件流。</p><p translation-origin=\"off\">Constructs a <code>PUT</code> request that interprets the body as a <code>Blob</code> and returns the full event\nstream.</p>\n\n\n  </div>\n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">put</span>(url: string, body: any, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"events\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean | ReadonlyArray&#x3C;string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean>; }; reportProgress?: boolean; responseType: \"blob\"; withCredentials?: boolean; }): Observable&#x3C;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&#x3C;Blob>></code-example>\n\n  \n\n  <h6 class=\"no-anchor\" id=\"参数-113\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">端点 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>body</code>\n      </td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">要添加/更新的资源。</p><p translation-origin=\"off\">The resources to add/update.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">HTTP 选项</p><p translation-origin=\"off\">HTTP options</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h6 class=\"no-anchor\" id=\"返回值-113\">返回值</h6>\n  <p translation-result=\"on\">此请求的 <code>HttpEvents</code> 的 <code>Observable</code>，其响应体为 <code>Blob</code> 类型。</p><p translation-origin=\"off\"><code>Observable&#x3C;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&#x3C;Blob>></code>: An <code>Observable</code> of all <code><a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a></code>s for the request,\nwith the response body as a <code>Blob</code>.</p>\n\n\n  \n\n\n  \n\n  \n</div>\n              <hr class=\"hr-margin\">\n            \n              <h5 class=\"no-anchor\" id=\"overload-6-7\">Overload #6</h5>\n              <div class=\"overload-info\">\n  \n  <div class=\"short-description\">\n    <p translation-result=\"on\">构造一个 <code>PUT</code> 请求，它将请求体解释为文本字符串，并且返回完整的事件流。</p><p translation-origin=\"off\">Constructs a <code>PUT</code> request that interprets the body as a text string and returns the full event\nstream.</p>\n\n\n  </div>\n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">put</span>(url: string, body: any, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"events\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean | ReadonlyArray&#x3C;string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean>; }; reportProgress?: boolean; responseType: \"text\"; withCredentials?: boolean; }): Observable&#x3C;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&#x3C;string>></code-example>\n\n  \n\n  <h6 class=\"no-anchor\" id=\"参数-114\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">端点 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>body</code>\n      </td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">要添加/更新的资源。</p><p translation-origin=\"off\">The resources to add/update.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">HTTP 选项</p><p translation-origin=\"off\">HTTP options</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h6 class=\"no-anchor\" id=\"返回值-114\">返回值</h6>\n  <p translation-result=\"on\">表示啥此请求的 <code>HttpEvents for the request</code> 的 <code>Observable</code>，响应体为 string 类型。</p><p translation-origin=\"off\"><code>Observable&#x3C;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&#x3C;string>></code>: An <code>Observable</code> of all <code><a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a></code>s for the request, with a response body\nof type string.</p>\n\n\n  \n\n\n  \n\n  \n</div>\n              <hr class=\"hr-margin\">\n            \n              <h5 class=\"no-anchor\" id=\"overload-7-7\">Overload #7</h5>\n              <div class=\"overload-info\">\n  \n  <div class=\"short-description\">\n    <p translation-result=\"on\">构造一个 <code>PUT</code> 请求，它将请求体解释为 JSON 对象，并且返回完整的 HTTP 事件流。</p><p translation-origin=\"off\">Constructs a <code>PUT</code> request that interprets the body as a JSON object and returns the full event\nstream.</p>\n\n\n  </div>\n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">put</span>(url: string, body: any, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"events\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean | ReadonlyArray&#x3C;string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean>; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; }): Observable&#x3C;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&#x3C;Object>></code-example>\n\n  \n\n  <h6 class=\"no-anchor\" id=\"参数-115\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">端点 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>body</code>\n      </td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">要添加/更新的资源。</p><p translation-origin=\"off\">The resources to add/update.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">HTTP 选项</p><p translation-origin=\"off\">HTTP options</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h6 class=\"no-anchor\" id=\"返回值-115\">返回值</h6>\n  <p translation-result=\"on\">此请求的 <code>HttpEvents</code> 的 <code>Observable</code>，其响应体为 <code>Object</code> 类型。</p><p translation-origin=\"off\"><code>Observable&#x3C;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&#x3C;Object>></code>: An <code>Observable</code> of all <code><a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a></code>s for the request, with a response body of\ntype <code>Object</code>.</p>\n\n\n  \n\n\n  \n\n  \n</div>\n              <hr class=\"hr-margin\">\n            \n              <h5 class=\"no-anchor\" id=\"overload-8-7\">Overload #8</h5>\n              <div class=\"overload-info\">\n  \n  <div class=\"short-description\">\n    <p translation-result=\"on\">构造一个 <code>PUT</code> 请求，它将请求体解释为 JSON 对象，并且返回完整的 HTTP 事件流。</p><p translation-origin=\"off\">Constructs a <code>PUT</code> request that interprets the body as a JSON object and returns the\nfull event stream.</p>\n\n\n  </div>\n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">put</span>&#x3C;T>(url: string, body: any, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"events\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean | ReadonlyArray&#x3C;string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean>; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; }): Observable&#x3C;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&#x3C;T>></code-example>\n\n  \n\n  <h6 class=\"no-anchor\" id=\"参数-116\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">端点 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>body</code>\n      </td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">要添加/更新的资源。</p><p translation-origin=\"off\">The resources to add/update.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">HTTP 选项</p><p translation-origin=\"off\">HTTP options</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h6 class=\"no-anchor\" id=\"返回值-116\">返回值</h6>\n  <p translation-result=\"on\">此请求的 <code>HttpEvents</code> 的 <code>Observable</code>，其响应体为所请求的类型。</p><p translation-origin=\"off\"><code>Observable&#x3C;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&#x3C;T>></code>: An <code>Observable</code> of all <code><a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a></code>s for the request,\nwith a response body in the requested type.</p>\n\n\n  \n\n\n  \n\n  \n</div>\n              <hr class=\"hr-margin\">\n            \n              <h5 class=\"no-anchor\" id=\"overload-9-7\">Overload #9</h5>\n              <div class=\"overload-info\">\n  \n  <div class=\"short-description\">\n    <p translation-result=\"on\">构造一个 <code>PUT</code> 请求，它将请求体解释为 <code>ArrayBuffer</code>，并返回完整的 <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>。</p><p translation-origin=\"off\">Constructs a <code>PUT</code> request that interprets the body as an\n<code>ArrayBuffer</code> and returns an observable of the full HTTP response.</p>\n\n\n  </div>\n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">put</span>(url: string, body: any, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"response\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean | ReadonlyArray&#x3C;string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean>; }; reportProgress?: boolean; responseType: \"arraybuffer\"; withCredentials?: boolean; }): Observable&#x3C;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&#x3C;ArrayBuffer>></code-example>\n\n  \n\n  <h6 class=\"no-anchor\" id=\"参数-117\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">端点 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>body</code>\n      </td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">要添加/更新的资源。</p><p translation-origin=\"off\">The resources to add/update.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">HTTP 选项</p><p translation-origin=\"off\">HTTP options</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h6 class=\"no-anchor\" id=\"返回值-117\">返回值</h6>\n  <p translation-result=\"on\">此请求的响应对象的 <code>Observable</code>，其响应体为 <code>ArrayBuffer</code> 类型。</p><p translation-origin=\"off\"><code>Observable&#x3C;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&#x3C;ArrayBuffer>></code>: An <code>Observable</code> of the <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code> for the request, with the response body as an\n<code>ArrayBuffer</code>.</p>\n\n\n  \n\n\n  \n\n  \n</div>\n              <hr class=\"hr-margin\">\n            \n              <h5 class=\"no-anchor\" id=\"overload-10-7\">Overload #10</h5>\n              <div class=\"overload-info\">\n  \n  <div class=\"short-description\">\n    <p translation-result=\"on\">构造一个 <code>PUT</code> 请求，它将请求体解释为 <code>Blob</code>，并且返回完整的 <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>。</p><p translation-origin=\"off\">Constructs a <code>PUT</code> request that interprets the body as a <code>Blob</code> and returns the\nfull HTTP response.</p>\n\n\n  </div>\n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">put</span>(url: string, body: any, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"response\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean | ReadonlyArray&#x3C;string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean>; }; reportProgress?: boolean; responseType: \"blob\"; withCredentials?: boolean; }): Observable&#x3C;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&#x3C;Blob>></code-example>\n\n  \n\n  <h6 class=\"no-anchor\" id=\"参数-118\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">端点 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>body</code>\n      </td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">要添加/更新的资源。</p><p translation-origin=\"off\">The resources to add/update.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">HTTP 选项</p><p translation-origin=\"off\">HTTP options</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h6 class=\"no-anchor\" id=\"返回值-118\">返回值</h6>\n  <p translation-result=\"on\">此请求的响应对象的 <code>Observable</code>，其响应体为 <code>Blob</code> 类型。</p><p translation-origin=\"off\"><code>Observable&#x3C;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&#x3C;Blob>></code>: An <code>Observable</code> of the <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code> for the request,\nwith the response body as a <code>Blob</code>.</p>\n\n\n  \n\n\n  \n\n  \n</div>\n              <hr class=\"hr-margin\">\n            \n              <h5 class=\"no-anchor\" id=\"overload-11-7\">Overload #11</h5>\n              <div class=\"overload-info\">\n  \n  <div class=\"short-description\">\n    <p translation-result=\"on\">构造一个 <code>PUT</code> 请求，它将请求体解释为文本流，并返回完整的 <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>。</p><p translation-origin=\"off\">Constructs a <code>PUT</code> request that interprets the body as a text stream and returns the\nfull HTTP response.</p>\n\n\n  </div>\n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">put</span>(url: string, body: any, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"response\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean | ReadonlyArray&#x3C;string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean>; }; reportProgress?: boolean; responseType: \"text\"; withCredentials?: boolean; }): Observable&#x3C;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&#x3C;string>></code-example>\n\n  \n\n  <h6 class=\"no-anchor\" id=\"参数-119\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">端点 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>body</code>\n      </td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">要添加/更新的资源。</p><p translation-origin=\"off\">The resources to add/update.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">HTTP 选项</p><p translation-origin=\"off\">HTTP options</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h6 class=\"no-anchor\" id=\"返回值-119\">返回值</h6>\n  <p translation-result=\"on\">表示啥此请求的 <code>HTTPResponse</code> 的 <code>Observable</code>，响应体为 string 类型。</p><p translation-origin=\"off\"><code>Observable&#x3C;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&#x3C;string>></code>: An <code>Observable</code> of the <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code> for the request, with a response body of type\nstring.</p>\n\n\n  \n\n\n  \n\n  \n</div>\n              <hr class=\"hr-margin\">\n            \n              <h5 class=\"no-anchor\" id=\"overload-12-7\">Overload #12</h5>\n              <div class=\"overload-info\">\n  \n  <div class=\"short-description\">\n    <p translation-result=\"on\">构造一个 <code>PUT</code> 请求，它将请求体解释为 JSON 对象，并返回完整的 <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code>。</p><p translation-origin=\"off\">Constructs a <code>PUT</code> request that interprets the body as a JSON object and returns the full HTTP\nresponse.</p>\n\n\n  </div>\n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">put</span>(url: string, body: any, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"response\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean | ReadonlyArray&#x3C;string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean>; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; }): Observable&#x3C;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&#x3C;Object>></code-example>\n\n  \n\n  <h6 class=\"no-anchor\" id=\"参数-120\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">端点 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>body</code>\n      </td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">要添加/更新的资源。</p><p translation-origin=\"off\">The resources to add/update.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">HTTP 选项</p><p translation-origin=\"off\">HTTP options</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h6 class=\"no-anchor\" id=\"返回值-120\">返回值</h6>\n  <p translation-result=\"on\">此请求的响应对象的 <code>Observable</code>，其响应体为 <code>Object</code> 类型。</p><p translation-origin=\"off\"><code>Observable&#x3C;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&#x3C;Object>></code>: An <code>Observable</code> of the <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code> for the request, with a response body\nof type 'Object`.</p>\n\n\n  \n\n\n  \n\n  \n</div>\n              <hr class=\"hr-margin\">\n            \n              <h5 class=\"no-anchor\" id=\"overload-13-7\">Overload #13</h5>\n              <div class=\"overload-info\">\n  \n  <div class=\"short-description\">\n    <p translation-result=\"on\">构造一个 <code>PUT</code> 请求，它将请求体解释为所请求类型的实例，并返回完整的 HTTP 响应对象。</p><p translation-origin=\"off\">Constructs a <code>PUT</code> request that interprets the body as an instance of the requested type and\nreturns the full HTTP response.</p>\n\n\n  </div>\n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">put</span>&#x3C;T>(url: string, body: any, options: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; observe: \"response\"; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean | ReadonlyArray&#x3C;string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean>; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; }): Observable&#x3C;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&#x3C;T>></code-example>\n\n  \n\n  <h6 class=\"no-anchor\" id=\"参数-121\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">端点 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>body</code>\n      </td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">要添加/更新的资源。</p><p translation-origin=\"off\">The resources to add/update.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">HTTP 选项</p><p translation-origin=\"off\">HTTP options</p>\n\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h6 class=\"no-anchor\" id=\"返回值-121\">返回值</h6>\n  <p translation-result=\"on\">此请求的响应对象的 <code>Observable</code>，其响应体为所请求的类型。</p><p translation-origin=\"off\"><code>Observable&#x3C;<a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a>&#x3C;T>></code>: An <code>Observable</code> of the <code><a href=\"api/common/http/HttpResponse\" class=\"code-anchor\">HttpResponse</a></code> for the request,\nwith a response body in the requested type.</p>\n\n\n  \n\n\n  \n\n  \n</div>\n              <hr class=\"hr-margin\">\n            \n              <h5 class=\"no-anchor\" id=\"overload-14-7\">Overload #14</h5>\n              <div class=\"overload-info\">\n  \n  <div class=\"short-description\">\n    <p translation-result=\"on\">构造一个 <code>PUT</code> 请求，它将请求体解释为 JSON 对象，并返回 JSON 对象的 <code>Observable</code>。</p><p translation-origin=\"off\">Constructs a <code>PUT</code> request that interprets the body as a JSON object\nand returns an observable of JSON object.</p>\n\n\n  </div>\n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">put</span>(url: string, body: any, options?: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; observe?: \"body\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean | ReadonlyArray&#x3C;string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean>; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; }): Observable&#x3C;Object></code-example>\n\n  \n\n  <h6 class=\"no-anchor\" id=\"参数-122\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">端点 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>body</code>\n      </td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">要添加/更新的资源。</p><p translation-origin=\"off\">The resources to add/update.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">HTTP 选项</p><p translation-origin=\"off\">HTTP options</p>\n\n        <div no-translate=\"\">可选. 默认值是 `undefined`.</div>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h6 class=\"no-anchor\" id=\"返回值-122\">返回值</h6>\n  <p translation-result=\"on\">JSON 格式的响应对象的 <code>Observable</code></p><p translation-origin=\"off\"><code>Observable&#x3C;Object></code>: An <code>Observable</code> of the response as a JSON object.</p>\n\n\n  \n\n\n  \n\n  \n</div>\n              <hr class=\"hr-margin\">\n            \n              <h5 class=\"no-anchor\" id=\"overload-15-7\">Overload #15</h5>\n              <div class=\"overload-info\">\n  \n  <div class=\"short-description\">\n    <p translation-result=\"on\">构造一个 <code>PUT</code> 请求，它将请求体解释为所请求类型的实例，并返回所请求类型的响应流。</p><p translation-origin=\"off\">Constructs a <code>PUT</code> request that interprets the body as an instance of the requested type\nand returns an observable of the requested type.</p>\n\n\n  </div>\n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">put</span>&#x3C;T>(url: string, body: any, options?: { headers?: <a href=\"api/common/http/HttpHeaders\" class=\"code-anchor\">HttpHeaders</a> | { [header: string]: string | string[]; }; context?: <a href=\"api/common/http/HttpContext\" class=\"code-anchor\">HttpContext</a>; observe?: \"body\"; params?: <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a> | { [param: string]: string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean | ReadonlyArray&#x3C;string | <a href=\"api/common/DecimalPipe\" class=\"code-anchor\">number</a> | boolean>; }; reportProgress?: boolean; responseType?: \"json\"; withCredentials?: boolean; }): Observable&#x3C;T></code-example>\n\n  \n\n  <h6 class=\"no-anchor\" id=\"参数-123\">参数</h6>\n  <table class=\"is-full-width list-table parameters-table instance-methods-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>url</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">端点 URL。</p><p translation-origin=\"off\">The endpoint URL.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>body</code>\n      </td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">要添加/更新的资源。</p><p translation-origin=\"off\">The resources to add/update.</p>\n\n\n      </td>\n    </tr>\n    <tr class=\"instance-methods-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n      <p translation-result=\"on\">HTTP 选项</p><p translation-origin=\"off\">HTTP options</p>\n\n        <div no-translate=\"\">可选. 默认值是 `undefined`.</div>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n  <h6 class=\"no-anchor\" id=\"返回值-123\">返回值</h6>\n  <p translation-result=\"on\">所请求类型的 <code>Observable</code></p><p translation-origin=\"off\"><code>Observable&#x3C;T></code>: An <code>Observable</code> of the requested type.</p>\n\n\n  \n\n\n  \n\n  \n</div>\n              \n            \n          </div>\n        </details>\n      </td>\n    </tr>\n  \n\n  \n\n  \n    </tbody>\n</table>\n\n  \n</section>\n\n\n\n  \n<section class=\"usage-notes\">\n  <h2 id=\"usage-notes\">使用说明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/http/HttpClient#usage-notes\"><i class=\"material-icons\">link</i></a></h2>\n  <p translation-result=\"on\"><a href=\"/tutorial/toh-pt0\">“英雄之旅”</a>应用程序的示例 HTTP 请求。</p><p translation-origin=\"off\">Sample HTTP requests for the <a href=\"/tutorial/toh-pt0\">Tour of Heroes</a> application.</p>\n\n<h3 id=\"http-request-example\" translation-result=\"on\">HTTP 请求示例<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/http/HttpClient#http-request-example\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\" id=\"http-request-example\">HTTP Request Example<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/http/HttpClient#http-request-example\"><i class=\"material-icons\">link</i></a></h3>\n\n<code-example>\n // GET heroes whose name contains search term\nsearchHeroes(term: string): observable&#x3C;Hero[]>{\n\n const params = new <a href=\"api/common/http/HttpParams\" class=\"code-anchor\">HttpParams</a>({fromString: 'name=term'});\n   return this.httpClient.request('GET', this.heroesUrl, {responseType:'json', params});\n}\n</code-example>\n<p>Alternatively, the parameter string can be used without invoking HttpParams\nby directly joining to the URL.</p>\n<code-example>\nthis.httpClient.request('GET', this.heroesUrl + '?' + 'name=term', {responseType:'json'});\n</code-example>\n<h3 id=\"jsonp-example\" translation-result=\"on\">JSONP 示例<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/http/HttpClient#jsonp-example\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\" id=\"jsonp-example\">JSONP Example<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/http/HttpClient#jsonp-example\"><i class=\"material-icons\">link</i></a></h3>\n\n<code-example>\nrequestJsonp(url, callback = 'callback') {\n return this.httpClient.jsonp(this.heroesURL, callback);\n}\n</code-example>\n<h3 id=\"patch-example\" translation-result=\"on\">PATCH 示例<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/http/HttpClient#patch-example\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\" id=\"patch-example\">PATCH Example<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/http/HttpClient#patch-example\"><i class=\"material-icons\">link</i></a></h3>\n\n<code-example>\n// PATCH one of the heroes' name\npatchHero (id: number, heroName: string): Observable&#x3C;{}> {\nconst url = `${this.heroesUrl}/${id}`;   // PATCH api/heroes/42\n return this.httpClient.patch(url, {name: heroName}, httpOptions)\n   .pipe(catchError(this.handleError('patchHero')));\n}\n</code-example>\n\n</section>\n\n\n\n  </div>\n</article>\n\n<!-- links to this doc:\n - api/common/http\n - api/common/http/HttpBackend\n - api/common/http/HttpClientJsonpModule\n - api/common/http/HttpClientModule\n - api/common/http/testing\n - api/common/http/testing/HttpClientTestingModule\n - api/core/APP_INITIALIZER\n - guide/architecture-next-steps\n - guide/architecture-services\n - guide/example-apps-list\n - guide/http\n - guide/observables-in-angular\n - guide/pipes\n - guide/schematics-for-libraries\n - guide/security\n - guide/styleguide\n - guide/testing-components-scenarios\n - guide/testing-services\n - guide/universal\n - guide/updating-to-version-12\n - guide/upgrade\n - guide/zone\n - start/start-data\n - tutorial/toh-pt4\n - tutorial/toh-pt6\n-->\n<!-- links from this doc:\n - /api\n - /tutorial/toh-pt0\n - api/common\n - api/common/DecimalPipe\n - api/common/JsonPipe\n - api/common/http\n - api/common/http/HttpClient#delete\n - api/common/http/HttpClient#description\n - api/common/http/HttpClient#get\n - api/common/http/HttpClient#head\n - api/common/http/HttpClient#http-request-example\n - api/common/http/HttpClient#httpclient\n - api/common/http/HttpClient#instance-methods\n - api/common/http/HttpClient#jsonp\n - api/common/http/HttpClient#jsonp-example\n - api/common/http/HttpClient#options\n - api/common/http/HttpClient#patch\n - api/common/http/HttpClient#patch-example\n - api/common/http/HttpClient#post\n - api/common/http/HttpClient#provided-in\n - api/common/http/HttpClient#put\n - api/common/http/HttpClient#request\n - api/common/http/HttpClient#see-also\n - api/common/http/HttpClient#usage-notes\n - api/common/http/HttpClientJsonpModule\n - api/common/http/HttpClientModule\n - api/common/http/HttpContext\n - api/common/http/HttpEvent\n - api/common/http/HttpHeaders\n - api/common/http/HttpParams\n - api/common/http/HttpRequest\n - api/common/http/HttpResponse\n - guide/http\n - https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS\n - https://en.wikipedia.org/wiki/JSONP\n - https://github.com/angular/angular-cn/edit/aio/packages/common/http/src/client.ts?message=docs(common)%3A%20请简述你的修改...#L1306-L1335\n - https://github.com/angular/angular-cn/edit/aio/packages/common/http/src/client.ts?message=docs(common)%3A%20请简述你的修改...#L1774-L1794\n - https://github.com/angular/angular-cn/edit/aio/packages/common/http/src/client.ts?message=docs(common)%3A%20请简述你的修改...#L2239-L2261\n - https://github.com/angular/angular-cn/edit/aio/packages/common/http/src/client.ts?message=docs(common)%3A%20请简述你的修改...#L2308-L2340\n - https://github.com/angular/angular-cn/edit/aio/packages/common/http/src/client.ts?message=docs(common)%3A%20请简述你的修改...#L2782-L2804\n - https://github.com/angular/angular-cn/edit/aio/packages/common/http/src/client.ts?message=docs(common)%3A%20请简述你的修改...#L3308-L3328\n - https://github.com/angular/angular-cn/edit/aio/packages/common/http/src/client.ts?message=docs(common)%3A%20请简述你的修改...#L3830-L3851\n - https://github.com/angular/angular-cn/edit/aio/packages/common/http/src/client.ts?message=docs(common)%3A%20请简述你的修改...#L4351-L4372\n - https://github.com/angular/angular-cn/edit/aio/packages/common/http/src/client.ts?message=docs(common)%3A%20请简述你的修改...#L54-L4373\n - https://github.com/angular/angular-cn/edit/aio/packages/common/http/src/client.ts?message=docs(common)%3A%20请简述你的修改...#L687-L853\n - https://github.com/angular/angular-cn/tree/12.1.0-next.1/packages/common/http/src/client.ts#L1306-L1335\n - https://github.com/angular/angular-cn/tree/12.1.0-next.1/packages/common/http/src/client.ts#L1774-L1794\n - https://github.com/angular/angular-cn/tree/12.1.0-next.1/packages/common/http/src/client.ts#L2239-L2261\n - https://github.com/angular/angular-cn/tree/12.1.0-next.1/packages/common/http/src/client.ts#L2308-L2340\n - https://github.com/angular/angular-cn/tree/12.1.0-next.1/packages/common/http/src/client.ts#L2782-L2804\n - https://github.com/angular/angular-cn/tree/12.1.0-next.1/packages/common/http/src/client.ts#L3308-L3328\n - https://github.com/angular/angular-cn/tree/12.1.0-next.1/packages/common/http/src/client.ts#L3830-L3851\n - https://github.com/angular/angular-cn/tree/12.1.0-next.1/packages/common/http/src/client.ts#L4351-L4372\n - https://github.com/angular/angular-cn/tree/12.1.0-next.1/packages/common/http/src/client.ts#L54-L4373\n - https://github.com/angular/angular-cn/tree/12.1.0-next.1/packages/common/http/src/client.ts#L687-L853\n-->"
}
