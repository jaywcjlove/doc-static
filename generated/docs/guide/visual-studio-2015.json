{
  "id": "guide/visual-studio-2015",
  "title": "Using Angular with Visual Studio 2015",
  "contents": "\n\n\n  <div class=\"github-links\">\n    <a href=\"https://github.com/angular/angular-cn/edit/aio/aio/content/guide/visual-studio-2015.md?message=docs%3A%20请简述你的修改...\" aria-label=\"提供编辑建议\" title=\"提供编辑建议\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  </div>\n\n\n<div class=\"content\">\n<h1 id=\"using-angular-with-visual-studio-2015\" translation-result=\"on\">Visual Studio 2015 快速上手<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/visual-studio-2015#using-angular-with-visual-studio-2015\"><i class=\"material-icons\">link</i></a></h1><h1 translation-origin=\"off\" id=\"using-angular-with-visual-studio-2015\">Using Angular with Visual Studio 2015<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/visual-studio-2015#using-angular-with-visual-studio-2015\"><i class=\"material-icons\">link</i></a></h1>\n\n<a id=\"top\"></a>\n<p translation-result=\"on\">有些开发者喜欢用 Visual Studio 作为他们的集成开发环境。</p><p translation-origin=\"off\">Some developers prefer Visual Studio as their Integrated Development Environment (IDE).</p>\n\n<p translation-result=\"on\">本文介绍了在<strong>Visual Studio 2015 的 ASP.NET 4.x 项目中</strong>使用 Angular 应用的各个文件所需的步骤。</p><p translation-origin=\"off\">This cookbook describes the steps required to set up and use Angular app files in Visual Studio 2015 within an ASP.NET 4.x project.</p>\n\n<div class=\"alert is-helpful\">\n<p translation-result=\"on\">本文中没有<em>现场演练</em>，因为它介绍的是 Visual Studio，而不是《快速上手》应用程序本身。它使用 CLI 命令 <a href=\"cli/new\"><code>ng new</code></a> 创建的 Angular 入门应用作为例子。</p><p translation-origin=\"off\">There is no <em>live example</em> for this cookbook because it describes Visual Studio, not\nthe Angular application itself. It uses the starter Angular application created by the CLI command <a href=\"cli/new\"><code>ng new</code></a> as an example.</p>\n\n</div>\n<a id=\"asp-net-4\"></a>\n<h2 id=\"aspnet-4x-project\" translation-result=\"on\">ASP.NET 4.x 项目<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/visual-studio-2015#aspnet-4x-project\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\" id=\"aspnet-4x-project\">ASP.NET 4.x Project<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/visual-studio-2015#aspnet-4x-project\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">要用 Visual Studio 2015 在<strong>ASP.NET 4.x 项目</strong>中设置<strong>《快速上手》</strong>文件，请遵循如下步骤：</p><p translation-origin=\"off\">To set up the Getting Started files with an <strong>ASP.NET 4.x project</strong> in\nVisual Studio 2015, follow these steps:</p>\n\n<div class=\"alert is-helpful\">\n<p translation-result=\"on\">如果你希望使用<strong>ASP.NET Core</strong>并体验全新项目，\n参见<em>预览版</em><a href=\"http://blog.stevensanderson.com/2016/10/04/angular2-template-for-visual-studio/\" target=\"_blank\">ASP.NET Core + Angular 的 Visual Studio 2015 模板</a>。\n注意，最终代码与本文不对应，请适当调节。</p><p translation-origin=\"off\">If you prefer a <code>File | New Project</code> experience and are using <strong>ASP.NET Core</strong>,\nthen consider the <em>experimental</em>\n<a href=\"http://blog.stevensanderson.com/2016/10/04/angular2-template-for-visual-studio/\">ASP.NET Core + Angular template for Visual Studio 2015</a>.\nNote that the resulting code does not map to the docs. Adjust accordingly.</p>\n\n</div>\n<h2 id=\"prereq1\" translation-result=\"on\">前提条件: Node.js<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/visual-studio-2015#prereq1\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\" id=\"prerequisite-nodejs\">Prerequisite: Node.js<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/visual-studio-2015#prerequisite-nodejs\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">如果你的电脑里没有 Node.js®和 npm，请安装<strong><a href=\"https://nodejs.org/en/download/\">它们</a></strong>。\n参见<a href=\"guide/setup-local\" title=\"Setting up for Local Development\">搭建本地开发环境</a>以了解所支持的版本和安装步骤。</p><p translation-origin=\"off\">Install <strong><a href=\"https://nodejs.org/en/download/\">Node.js® and npm</a></strong>\nif they are not already on your machine.\nSee <a href=\"guide/setup-local\" title=\"Setting up for Local Development\">Local Environment Setup</a> for supported versions and instructions.</p>\n\n<h2 id=\"prereq2\" translation-result=\"on\">前提条件: Visual Studio 2015 Update 3<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/visual-studio-2015#prereq2\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\" id=\"prerequisite-visual-studio-2015-update-3\">Prerequisite: Visual Studio 2015 Update 3<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/visual-studio-2015#prerequisite-visual-studio-2015-update-3\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">使用 Visual Studio 开发 Angular 应用程序的最低要求是 Update 3。\n早期版本没有遵循使用 TypeScript 开发应用程序的最佳实践。\n要查看你的 Visual Studio 2015 版本号，到 <code>Help | About Visual Studio</code>。</p><p translation-origin=\"off\">The minimum requirement for developing Angular applications with Visual Studio is Update 3.\nEarlier versions do not follow the best practices for developing applications with TypeScript.\nTo view your version of Visual Studio 2015, go to <code>Help | About Visual Studio</code>.</p>\n\n<p translation-result=\"on\">如果还没有，安装<strong><a href=\"https://www.visualstudio.com/en-us/news/releasenotes/vs2015-update3-vs\">Visual Studio 2015 Update 3</a></strong>。或者使用 <code>Tools | Extensions and Updates</code> 来直接在 Visual Studio 2015 中更新到 Update 3。</p><p translation-origin=\"off\">If you don't have it, install <strong><a href=\"https://www.visualstudio.com/en-us/news/releasenotes/vs2015-update3-vs\">Visual Studio 2015 Update 3</a></strong>.\nOr use <code>Tools | Extensions and Updates</code> to update to Update 3 directly from Visual Studio 2015.</p>\n\n<h2 id=\"prereq3\" translation-result=\"on\">前提条件: 配置 External Web tools<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/visual-studio-2015#prereq3\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\" id=\"prerequisite-configure-external-web-tools\">Prerequisite: Configure External Web tools<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/visual-studio-2015#prerequisite-configure-external-web-tools\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">配置 Visual Studio 来使用全局 External Web Tools，而非 Visual Studio 默认的工具：</p><p translation-origin=\"off\">Configure Visual Studio to use the global external web tools instead of the tools that ship with Visual Studio:</p>\n\n<ul>\n<li>\n<p translation-result=\"on\"> 到 <code>Tools</code> | <code>Options</code> 打开 <strong>Options</strong> 对话框</p><p translation-origin=\"off\">Open the <strong>Options</strong> dialog with <code>Tools</code> | <code>Options</code>.</p>\n\n</li>\n<li>\n<p translation-result=\"on\"> 在左边的树中，选择 <code>Projects and Solutions</code> | <code>External Web Tools</code>。</p><p translation-origin=\"off\">In the tree on the left, select <code>Projects and Solutions</code> | <code>External Web Tools</code>.</p>\n\n</li>\n<li>\n<p translation-result=\"on\"> 在右侧，将 <code>$(PATH)</code> 移动到 <code>$(DevEnvDir</code>)上面。这样，Visual Stuio 就会在使用自带的外部工具时，优先使用全局路径中的外部工具（比如 npm）。</p><p translation-origin=\"off\">On the right, move the <code>$(PATH)</code> entry above the <code>$(DevEnvDir</code>) entries. This tells Visual Studio to\nuse the external tools (such as npm) found in the global path before using its own version of the external tools.</p>\n\n</li>\n<li>\n<p translation-result=\"on\"> 点击 OK 关闭对话框。</p><p translation-origin=\"off\">Click OK to close the dialog.</p>\n\n</li>\n<li>\n<p translation-result=\"on\"> 重启 Visual Studio，以让设置变化生效。</p><p translation-origin=\"off\">Restart Visual Studio for this change to take effect.</p>\n\n</li>\n</ul>\n<p translation-result=\"on\">Visual Studio 将优先在当前的工作区查找外部工具，如果没有找到，便查找全局路径，如果还没有找到，Visual Studio 就使用自带的工具版本。</p><p translation-origin=\"off\">Visual Studio now looks first for external tools in the current workspace and\nif it doesn't find them, it looks in the global path. If Visual Studio doesn't\nfind them in either location, it will use its own versions of the tools.</p>\n\n<h2 id=\"prereq4\" translation-result=\"on\">前提条件: 安装 TypeScript 2.2 for Visual Studio 2015<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/visual-studio-2015#prereq4\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\" id=\"prerequisite-install-typescript-for-visual-studio-2015\">Prerequisite: Install TypeScript for Visual Studio 2015<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/visual-studio-2015#prerequisite-install-typescript-for-visual-studio-2015\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">Visual Studio Update 3 自带 TypeScript 支持，但它的 TypeScript 版本不是开发 Angular 应用所需的最新版 TypeScript。</p><p translation-origin=\"off\">While Visual Studio Update 3 ships with TypeScript support out of the box, it currently doesn’t ship with more recent versions of TypeScript, which you need to develop Angular applications.</p>\n\n<p translation-result=\"on\">要安装 TypeScript 最新版：</p><p translation-origin=\"off\">To install the latest version of TypeScript:</p>\n\n<ul>\n<li>\n<p translation-result=\"on\"> 下载并安装最新版的 <strong><a href=\"https://www.microsoft.com/en-us/download/details.aspx?id=48593\">TypeScript for Visual Studio 2015</a></strong></p><p translation-origin=\"off\">Download and install the latest <a href=\"https://www.microsoft.com/en-us/download/details.aspx?id=48593\">TypeScript for Visual Studio 2015</a>,</p>\n\n</li>\n<li>\n<p translation-result=\"on\"> 或通过 npm 安装：<code>npm install -g typescript@latest</code>。</p><p translation-origin=\"off\">OR install it with npm: <code>npm install -g typescript@latest</code>.</p>\n\n</li>\n</ul>\n<p translation-result=\"on\">你可以在<strong><a href=\"https://blogs.msdn.microsoft.com/typescript/2017/02/22/announcing-typescript-2-2/\">这里</a></strong>查看更多 Visual Studio 中 TypeScript 的支持。</p><p translation-origin=\"off\">You can find out more about TypeScript support in Visual Studio <strong><a href=\"https://blogs.msdn.microsoft.com/typescript/announcing-typescript-3-1/\">here</a></strong>.</p>\n\n<p translation-result=\"on\">至此，Visual Studio 已经准备好了。重新启动 Visual Studio，这样就可以有一个崭新的开始了。</p><p translation-origin=\"off\">At this point, Visual Studio is ready. It’s a good idea to close Visual Studio and\nrestart it to make sure everything is clean.</p>\n\n<h2 id=\"download\">Step 1: Download the Angular Getting Started app<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/visual-studio-2015#download\"><i class=\"material-icons\">link</i></a></h2>\n<h2 id=\"download\" translation-result=\"on\">\n  第一步：创建一个 Angular 的初学者应用\n<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/visual-studio-2015#download\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\" id=\"step-1-create-a-starter-angular-app\">\n  Step 1: Create a starter Angular app\n<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/visual-studio-2015#step-1-create-a-starter-angular-app\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\"> 遵循<a href=\"guide/setup-local\" title=\"Setting up for Local Development\">建立本地环境</a>中的步骤，使用 CLI 命令 <a href=\"cli/new\"><code>ng new</code></a> 创建一个 Angular 的初学者应用。</p><p translation-origin=\"off\">Follow the instructions in <a href=\"guide/setup-local\" title=\"Setting up for Local Development\">Local Environment Setup</a> to create a starter Angular app using the CLI command <a href=\"cli/new\"><code>ng new</code></a>. </p>\n\n<h2 id=\"create-project\" translation-result=\"on\">第二步：创建 Visual Studio ASP.net 项目<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/visual-studio-2015#create-project\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\" id=\"step-2-create-the-visual-studio-aspnet-project\">Step 2: Create the Visual Studio ASP.NET project<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/visual-studio-2015#step-2-create-the-visual-studio-aspnet-project\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">按照下列步骤创建 ASP.NET 4.x 项目：</p><p translation-origin=\"off\">Create the ASP.NET 4.x project in the usual way as follows:</p>\n\n<ul>\n<li>\n<p translation-result=\"on\"> 在 Visual Studio 中，选择 <code>File</code> | <code>New</code> | <code>Project</code> 菜单。</p><p translation-origin=\"off\">In Visual Studio, select <code>File</code> | <code>New</code> | <code>Project</code> from the menu.</p>\n\n</li>\n<li>\n<p translation-result=\"on\"> 在模板树中，选择 <code>Templates</code> | <code>Visual C#</code>(或 <code>Visual Basic</code>) | <code>Web</code> 菜单。</p><p translation-origin=\"off\">In the template tree, select <code>Templates</code> | <code>Visual C#</code> (or <code>Visual Basic</code>) | <code>Web</code>.</p>\n\n</li>\n<li>\n<p translation-result=\"on\"> 选择 <code>ASP.NET Web Application</code> 模板，输入项目名，点击“OK”按钮。</p><p translation-origin=\"off\">Select the <code>ASP.NET Web Application</code> template, give the project a name, and click OK.</p>\n\n</li>\n<li>\n<p translation-result=\"on\"> 选择自己喜欢的 ASP.NET 4.5.2 模板，点击 OK。</p><p translation-origin=\"off\">Select the desired ASP.NET 4.5.2 template and click OK.</p>\n\n</li>\n</ul>\n<div class=\"alert is-helpful\">\n<p translation-result=\"on\">本文选择了 <code>Empty</code> 模板，它没有添加过任何目录，没有身份验证，没有服务器托管。为你的项目选择合适的模板和选项。</p><p translation-origin=\"off\">This cookbook uses the <code>Empty</code> template with no added folders,\nno authentication, and no hosting. Pick the template and options appropriate for your project.</p>\n\n</div>\n<h2 id=\"copy\" translation-result=\"on\">\n  第三步: 把这个 Angular 项目中的文件复制到 ASP.NET 项目所在的目录\n<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/visual-studio-2015#copy\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\" id=\"step-3-copy-the-angular-project-files-into-the-aspnet-project-folder\">\n  Step 3: Copy the Angular project files into the ASP.NET project folder\n<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/visual-studio-2015#step-3-copy-the-angular-project-files-into-the-aspnet-project-folder\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">把 Angular 初学者应用中的文件复制到包含 <code>.csproj</code> 文件的目录中。按照下面的步骤把它们加到 Visual Studio 中：</p><p translation-origin=\"off\">Copy files from the starter Angular app into the folder containing the <code>.csproj</code> file.\nInclude the files in the Visual Studio project as follows:</p>\n\n<ul>\n<li>\n<p translation-result=\"on\"> 在 Solution Explorer 中点击 <code>Show All Files</code> 按钮，显示项目中所有隐藏文件。</p><p translation-origin=\"off\">Click the <code>Show All Files</code> button in Solution Explorer to reveal all of the hidden files in the project.</p>\n\n</li>\n<li>\n<p translation-result=\"on\"> 右键点击每个目录和文件，选择 <code>Include in Project</code>。\n最少要添加下列文件：</p><p translation-origin=\"off\">Right-click on each folder/file to be included in the project and select <code>Include in Project</code>.\nMinimally, include the following folder/files:</p>\n\n<ul>\n<li>\n<p translation-result=\"on\"> src/app 目录（如果询问是否要搜索 TypeScript 类型，回答 <em>No</em>）</p><p translation-origin=\"off\">src/app folder (answer <em>No</em>  if asked to search for TypeScript Typings)</p>\n\n</li>\n<li>\n<p>src/styles.css</p>\n</li>\n<li>\n<p>src/index.html</p>\n</li>\n<li>\n<p>package.json</p>\n</li>\n<li>\n<p>src/tsconfig.json</p>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"restore\" translation-result=\"on\">第四步: 恢复需要的包 <a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/visual-studio-2015#restore\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\" id=\"step-4-restore-the-required-packages\">Step 4: Restore the required packages<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/visual-studio-2015#step-4-restore-the-required-packages\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">按下面的步骤恢复 Angular 应用程序需要的包：</p><p translation-origin=\"off\">Restore the packages required for an Angular application as follows:</p>\n\n<ul>\n<li>\n<p translation-result=\"on\"> 在 Solution Explorer 中右键点击 <code>package.json</code>，选择 <code>Restore Packages</code>。\n<br>这样，Visual Studio 会使用 <code>npm</code> 来安装在 <code>package.json</code> 中定义的所有包.\n这可能需要花一点时间。</p><p translation-origin=\"off\">Right-click on the <code>package.json</code> file in Solution Explorer and select <code>Restore Packages</code>.\n<br>This uses <code>npm</code> to install all of the packages defined in the <code>package.json</code> file.\nIt may take some time.</p>\n\n</li>\n<li>\n<p translation-result=\"on\"> 如果愿意，打开 Output 窗口(<code>View</code> | <code><a href=\"api/core/Output\" class=\"code-anchor\">Output</a></code>)来监控 npm 命令的执行情况。</p><p translation-origin=\"off\">If desired, open the Output window (<code>View</code> | <code><a href=\"api/core/Output\" class=\"code-anchor\">Output</a></code>) to watch the npm commands execute.</p>\n\n</li>\n<li>\n<p translation-result=\"on\"> 忽略所有警告。</p><p translation-origin=\"off\">Ignore the warnings.</p>\n\n</li>\n<li>\n<p translation-result=\"on\"> 当恢复完成后，将会出现一条消息：<code>Installing packages complete</code>。耐心点，这相当耗时间。</p><p translation-origin=\"off\">When the restore is finished, a message in the bottom message bar of Visual Studio\nshould say: <code>Installing packages complete</code>. Be patient. This could take a while.</p>\n\n</li>\n<li>\n<p translation-result=\"on\"> 在 Solution Explorer 里，点击 <code>Refresh</code> 图标。</p><p translation-origin=\"off\">Click the <code>Refresh</code> icon in Solution Explorer.</p>\n\n</li>\n<li>\n<p translation-result=\"on\"> <strong>不要</strong>将 <code>node_modules</code> 目录添加到项目中，让它隐藏。</p><p translation-origin=\"off\"><strong>Do not</strong> include the <code>node_modules</code> folder in the project. Let it be a hidden project folder.</p>\n\n</li>\n</ul>\n<h2 id=\"build-and-run\" translation-result=\"on\">第五步：构建和运行应用<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/visual-studio-2015#build-and-run\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\" id=\"step-5-build-and-run-the-app\">Step 5: Build and run the app<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/visual-studio-2015#step-5-build-and-run-the-app\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">首先，确认 <code>src/index.html</code> 已被设置为开始页面。\n在 Solution Explorer 中，右键点击 <code>index.html</code>，选择选项 <code>Set As Start Page</code>。</p><p translation-origin=\"off\">First, ensure that <code>src/index.html</code> is set as the start page.\nRight-click <code>index.html</code> in Solution Explorer and select option <code>Set As Start Page</code>.</p>\n\n<h3 id=\"to-run-in-vs-with-f5\" translation-result=\"on\">按 F5 以在 VS 中运行<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/visual-studio-2015#to-run-in-vs-with-f5\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\" id=\"to-run-in-vs-with-f5\">To run in VS with F5<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/visual-studio-2015#to-run-in-vs-with-f5\"><i class=\"material-icons\">link</i></a></h3>\n\n<p translation-result=\"on\">大多数 Visual Studio 开发者喜欢按 F5 键来启动 IIS 服务器。\n要在这个《快速上手》应用中使用 IIS 服务器，你要做下列修改：</p><p translation-origin=\"off\">Most Visual Studio developers like to press the F5 key and see the IIS server come up.\nTo use the IIS server with the Getting Started app, you must make the following three changes.</p>\n\n<ol>\n<li>\n<p translation-result=\"on\">在 <code>index.html</code> 中，把基地址从 <code>&#x3C;base href=\"/\"></code> 改为 <code>&#x3C;base href=\"/src/\"></code>。</p><p translation-origin=\"off\">In <code>index.html</code>, change base href from <code>&#x3C;base href=\"/\"></code> to <code>&#x3C;base href=\"/src/\"></code>.</p>\n\n</li>\n<li>\n<p translation-result=\"on\">   同样在 <code>index.html</code> 中，修改脚本来用带有斜杠的 <code>/node_modules</code> 代替不带斜杠的 <code>node_modules</code>。</p><p translation-origin=\"off\">Also in <code>index.html</code>, change  the scripts to use <code>/node_modules</code> with a slash\ninstead of <code>node_modules</code> without the slash. </p>\n\n</li>\n<li>\n<p translation-result=\"on\">   在 <code>src/systemjs.config.js</code> 的顶部，把 npm 的 <code>path</code> 设置为带斜杠的 <code>/node_modules/</code>。</p><p translation-origin=\"off\">In <code>src/systemjs.config.js</code>, near the top of the file,\nchange the npm <code>path</code> to <code>/node_modules/</code> with a slash.</p>\n\n</li>\n</ol>\n<div class=\"alert is-important\">\n<p translation-result=\"on\">做完这些修改之后，<code>npm start</code> 不再工作了。你必须选择配置为 IIS + F5，还是 <code>npm start</code> + lite-server。</p><p translation-origin=\"off\">After these changes, <code>npm start</code> no longer works.\nYou must choose to configure <em>either</em> for F5 with IIS <em>or</em> for  <code>npm start</code> with the lite-server.</p>\n\n</div>\n<h3 id=\"for-apps-that-use-routing\" translation-result=\"on\">为了使用路由的应用<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/visual-studio-2015#for-apps-that-use-routing\"><i class=\"material-icons\">link</i></a></h3><h3 translation-origin=\"off\" id=\"for-apps-that-use-routing\">For apps that use routing<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/visual-studio-2015#for-apps-that-use-routing\"><i class=\"material-icons\">link</i></a></h3>\n\n<p translation-result=\"on\">如果应用要使用路由，就要让服务器在用户要求 HTML 页面时始终返回 <code>index.html</code>。\n此中原因，在<a href=\"guide/deployment#fallback\">发布</a>一章中有解释。</p><p translation-origin=\"off\">If your app uses routing, you need to teach the server to always return\n<code>index.html</code> when the user asks for an HTML page\nfor reasons explained in the <a href=\"guide/deployment#fallback\">Deployment</a> guide.</p>\n\n<p translation-result=\"on\">当你在应用<em>内部</em>移动时，看起来一切正常。但是如果刷新浏览器，或者在地址栏中输入一个到具体页面的地址（也就是\"深链接\"）时，问题就来了。</p><p translation-origin=\"off\">Everything seems fine while you move about <em>within</em> the app.\nBut you'll see the problem right away if you refresh the browser\nor paste a link to an app page (called a \"deep link\") into the browser address bar.</p>\n\n<p translation-result=\"on\">你很可能从服务器得到得到<em>404 - 页面不存在</em> —— 只有 <code>/</code> 或 <code>/index.html</code> 例外。</p><p translation-origin=\"off\">You'll most likely get a <em>404 - Page Not Found</em> response from the server\nfor any address other than <code>/</code> or <code>/index.html</code>.</p>\n\n<p translation-result=\"on\">你就要配置服务器，为那些\"未知\"的页面返回 <code>index.html</code>。\n<code>lite-server</code> 开发服务器内置了这项功能。如果要切换到 F5 + IIS，你就要自己来配置 IIS 实现它了。\n接下来看看对快速上手应用做配置的步骤。</p><p translation-origin=\"off\">You have to configure the server to return <code>index.html</code> for requests to these \"unknown\" pages.\nThe <code>lite-server</code> development server does out-of-the-box.\nIf you've switched over to F5 and IIS, you have to configure IIS to do it.\nThis section walks through the steps to adapt the Getting Started application.</p>\n\n<h4 id=\"configure-iis-rewrite-rules\" translation-result=\"on\">配置 IIS 重写规则<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/visual-studio-2015#configure-iis-rewrite-rules\"><i class=\"material-icons\">link</i></a></h4><h4 translation-origin=\"off\" id=\"configure-iis-rewrite-rules\">Configure IIS rewrite rules<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/visual-studio-2015#configure-iis-rewrite-rules\"><i class=\"material-icons\">link</i></a></h4>\n\n<p translation-result=\"on\">Visual Studio 自带了一个 IIS Express，其中有一个重写（rewrite）模块。\n不过，如果使用标准版的 IIS，就要自己去安装这个重写模块了。</p><p translation-origin=\"off\">Visual Studio ships with IIS Express, which has the rewrite module baked in.\nHowever, if you're using regular IIS you'll have to install the rewrite\nmodule.</p>\n\n<p translation-result=\"on\">通过把下列重写规则添加到 <code>web.config</code> 的底部，就可以告诉 Visual Studio 如何处理到应用页面的请求。</p><p translation-origin=\"off\">Tell Visual Studio how to handle requests for route app pages by adding these\nrewrite rules near the bottom of the <code>web.config</code>:</p>\n\n<code-example format=\".\">\n  &#x3C;system.webServer>\n    &#x3C;rewrite>\n      &#x3C;rules>\n        &#x3C;rule name=\"Angular <a href=\"api/router/Routes\" class=\"code-anchor\">Routes</a>\" stopProcessing=\"true\">\n          &#x3C;match url=\".*\" />\n          &#x3C;conditions logicalGrouping=\"MatchAll\">\n            &#x3C;add input=\"{REQUEST_FILENAME}\" matchType=\"IsFile\" negate=\"true\" />\n            &#x3C;add input=\"{REQUEST_FILENAME}\" matchType=\"IsDirectory\" negate=\"true\" />\n          &#x3C;/conditions>\n          &#x3C;action type=\"Rewrite\" url=\"/src/\" />\n        &#x3C;/rule>\n      &#x3C;/rules>\n    &#x3C;/rewrite>\n  &#x3C;/system.webServer>\n\n</code-example>\n<div class=\"alert is-helpful\">\n<p translation-result=\"on\">匹配 url <code>&#x3C;match url=\".*\" /></code> 语句将会重写每一个请求。如果需要直接放行某些请求，比如一些 Web API 请求，你就必须调整它才行。</p><p translation-origin=\"off\">The match url, <code>&#x3C;match url=\".*\" /></code>, will rewrite every request. You'll have to adjust this if\nyou want some requests to get through, such as web API requests.</p>\n\n<p translation-result=\"on\"><code>&#x3C;action type=\"Rewrite\" url=\"/src/\"/></code> 中的 url 将会匹配 <code>index.html</code> 中的基地址（base href）。</p><p translation-origin=\"off\">The URL in <code>&#x3C;action type=\"Rewrite\" url=\"/src/\"/></code> should\nmatch the base href in <code>index.html</code>.</p>\n\n</div>\n<p translation-result=\"on\">点击 <strong>Run</strong> 按钮或者按 <code>F5</code> 键，用调试器构建和启动应用。</p><p translation-origin=\"off\">Build and launch the app with debugger by clicking the <strong>Run</strong> button or by pressing <code>F5</code>.</p>\n\n<div class=\"alert is-helpful\">\n<p translation-result=\"on\">按 <code>Ctrl-F5</code> 不带调试器的运行应用，速度会更快。</p><p translation-origin=\"off\">It's faster to run without the debugger by pressing <code>Ctrl-F5</code>.</p>\n\n</div>\n<p translation-result=\"on\">默认浏览器打开并显示《快速上手》例子应用。</p><p translation-origin=\"off\">The default browser opens and displays the Getting Started sample application.</p>\n\n<p translation-result=\"on\">尝试编辑任何项目文件，<em>保存</em>并刷新浏览器来查看效果。</p><p translation-origin=\"off\">Try editing any of the project files. Save and refresh the browser to\nsee the changes.</p>\n\n\n</div>\n\n<!-- links to this doc:\n-->\n<!-- links from this doc:\n - api/core/Output\n - api/router/Routes\n - cli/new\n - guide/deployment#fallback\n - guide/setup-local\n - guide/visual-studio-2015#aspnet-4x-project\n - guide/visual-studio-2015#build-and-run\n - guide/visual-studio-2015#configure-iis-rewrite-rules\n - guide/visual-studio-2015#copy\n - guide/visual-studio-2015#create-project\n - guide/visual-studio-2015#download\n - guide/visual-studio-2015#for-apps-that-use-routing\n - guide/visual-studio-2015#prereq1\n - guide/visual-studio-2015#prereq2\n - guide/visual-studio-2015#prereq3\n - guide/visual-studio-2015#prereq4\n - guide/visual-studio-2015#prerequisite-configure-external-web-tools\n - guide/visual-studio-2015#prerequisite-install-typescript-for-visual-studio-2015\n - guide/visual-studio-2015#prerequisite-nodejs\n - guide/visual-studio-2015#prerequisite-visual-studio-2015-update-3\n - guide/visual-studio-2015#restore\n - guide/visual-studio-2015#step-1-create-a-starter-angular-app\n - guide/visual-studio-2015#step-2-create-the-visual-studio-aspnet-project\n - guide/visual-studio-2015#step-3-copy-the-angular-project-files-into-the-aspnet-project-folder\n - guide/visual-studio-2015#step-4-restore-the-required-packages\n - guide/visual-studio-2015#step-5-build-and-run-the-app\n - guide/visual-studio-2015#to-run-in-vs-with-f5\n - guide/visual-studio-2015#using-angular-with-visual-studio-2015\n - http://blog.stevensanderson.com/2016/10/04/angular2-template-for-visual-studio/\n - https://blogs.msdn.microsoft.com/typescript/2017/02/22/announcing-typescript-2-2/\n - https://blogs.msdn.microsoft.com/typescript/announcing-typescript-3-1/\n - https://github.com/angular/angular-cn/edit/aio/aio/content/guide/visual-studio-2015.md?message=docs%3A%20请简述你的修改...\n - https://nodejs.org/en/download/\n - https://www.microsoft.com/en-us/download/details.aspx?id=48593\n - https://www.visualstudio.com/en-us/news/releasenotes/vs2015-update3-vs\n-->"
}