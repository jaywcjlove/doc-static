{
  "id": "guide/update-to-version-14",
  "title": "更新 Angular",
  "contents": "\n\n\n<div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular-cn/edit/cn/aio/content/guide/update-to-version-14.md?message=docs%3A%20请简述你的修改...\" aria-label=\"提供编辑建议\" title=\"提供编辑建议\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n</div>\n\n\n<div class=\"content\">\n  <h1 id=\"update-angular-to-v14\">Update Angular to v14<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/update-to-version-14#update-angular-to-v14\"><i class=\"material-icons\">link</i></a></h1>\n<h1 id=\"更新-angular\">更新 Angular<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/update-to-version-14#更新-angular\"><i class=\"material-icons\">link</i></a></h1>\n<p>This guide contains information to update to Angular version 14.</p>\n<p>本指南包含更新到 Angular 版本 14 的信息。</p>\n<h2 id=\"update-angular-cli-applications\">Update Angular CLI applications<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/update-to-version-14#update-angular-cli-applications\"><i class=\"material-icons\">link</i></a></h2>\n<h2 id=\"更新-angular-cli-应用程序\">更新 Angular CLI 应用程序<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/update-to-version-14#更新-angular-cli-应用程序\"><i class=\"material-icons\">link</i></a></h2>\n<p>For step-by-step instructions on how to update to the latest Angular release and leverage the Angular automated migration tools, use the interactive update guide at <a href=\"https://update.angular.io\">update.angular.io</a>.</p>\n<p>有关如何更新到最新的 Angular 版本和利用 Angular 自动迁移工具的分步说明，请使用 <a href=\"https://update.angular.io\">update.angular.io</a> 上的交互式更新指南。</p>\n<h2 id=\"changes-and-deprecations-in-version-14\">Changes and deprecations in version 14<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/update-to-version-14#changes-and-deprecations-in-version-14\"><i class=\"material-icons\">link</i></a></h2>\n<h2 id=\"版本-14-中的更改与弃用\">版本 14 中的更改与弃用<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/update-to-version-14#版本-14-中的更改与弃用\"><i class=\"material-icons\">link</i></a></h2>\n<div class=\"alert is-helpful\">\n<p>For information about the deprecation and removal practices of Angular, see <a href=\"guide/releases#deprecation-practices\">Angular Release Practices</a>.</p>\n<p>有关 Angular 的弃用和删除实践的信息，请参阅<a href=\"guide/releases#deprecation-practices\">Angular 发布实践</a>。</p>\n</div>\n<ul>\n<li>\n<p><strong>Strictly Typed Reactive Forms</strong></p>\n<p><strong>严格类型的响应式表单</strong></p>\n<p>The Reactive Forms types <code><a href=\"api/forms/AbstractControl\" class=\"code-anchor\">AbstractControl</a></code>, <code><a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a></code>, <code><a href=\"api/forms/FormGroup\" class=\"code-anchor\">FormGroup</a></code>, and <code><a href=\"api/forms/FormArray\" class=\"code-anchor\">FormArray</a></code> now support a generic parameter which allows for strict typing of the controls. An automatic migration will convert existing usages of these types to special <code>Untyped</code> aliases which preserve the existing behavior.</p>\n<p>响应式表单类型 <code><a href=\"api/forms/AbstractControl\" class=\"code-anchor\">AbstractControl</a></code> 、 <code><a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a></code> 、 <code><a href=\"api/forms/FormGroup\" class=\"code-anchor\">FormGroup</a></code> 和 <code><a href=\"api/forms/FormArray\" class=\"code-anchor\">FormArray</a></code> 现在支持一个泛型参数，该参数允许对控件进行严格键入。自动迁移会将这些类型的现有用法转换为特殊的 <code>Untyped</code> 别名，以保留现有行为。</p>\n<p>The <code>initialValueIsDefault</code> option for <code><a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a></code> construction has been deprecated in favor of the <code>nonNullable</code> option (which has identical behavior). This renaming aligns the <code><a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a></code> constructor with other strictly typed APIs related to nullability.</p>\n<p><code><a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a></code> 构造的 <code>initialValueIsDefault</code> 选项已被弃用，以支持 <code>nonNullable</code> 选项（具有相同的行为）。这种重命名使 <code><a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a></code> 构造函数与其他与可空性相关的严格类型 API 保持一致。</p>\n</li>\n<li>\n<p><strong><code><a href=\"api/core/ComponentFactory\" class=\"code-anchor\">ComponentFactory</a></code> and <code><a href=\"api/core/NgModuleFactory\" class=\"code-anchor\">NgModuleFactory</a></code> cleanup</strong></p>\n<p><strong><code><a href=\"api/core/ComponentFactory\" class=\"code-anchor\">ComponentFactory</a></code> 和 <code><a href=\"api/core/NgModuleFactory\" class=\"code-anchor\">NgModuleFactory</a></code> 清理</strong></p>\n<p>Many APIs which use either <code><a href=\"api/core/ComponentFactory\" class=\"code-anchor\">ComponentFactory</a></code> or <code><a href=\"api/core/NgModuleFactory\" class=\"code-anchor\">NgModuleFactory</a></code> have been deprecated and replaced with new APIs that use component or NgModule classes directly.</p>\n<p>许多使用 <code><a href=\"api/core/ComponentFactory\" class=\"code-anchor\">ComponentFactory</a></code> 或 <code><a href=\"api/core/NgModuleFactory\" class=\"code-anchor\">NgModuleFactory</a></code> 的 API 已被弃用，并替换为直接使用组件或 NgModule 类的新 API。</p>\n</li>\n</ul>\n<h3 id=\"breaking-changes-in-angular-version-14\">Breaking changes in Angular version 14<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/update-to-version-14#breaking-changes-in-angular-version-14\"><i class=\"material-icons\">link</i></a></h3>\n<h3 id=\"angular-版本-14-中的重大更改\">Angular 版本 14 中的重大更改<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/update-to-version-14#angular-版本-14-中的重大更改\"><i class=\"material-icons\">link</i></a></h3>\n<p><a id=\"breaking-changes\"></a></p>\n<table>\n<thead>\n<tr>\n<th align=\"left\"></th>\n<th align=\"left\">Details</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\"></td>\n<td align=\"left\">详情</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://github.com/angular/angular/pull/45729\"><strong>PR #45729</strong></a></td>\n<td align=\"left\"><code>initialNavigation: 'enabled'</code> was deprecated in v11 and is replaced by <code>initialNavigation: 'enabledBlocking'.</code>.</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://github.com/angular/angular/pull/45729\"><strong>PR #45729</strong></a></td>\n<td align=\"left\"><code>initialNavigation: 'enabled'</code> 在 v11 中已弃用，并由 <code>initialNavigation: 'enabledBlocking'.</code> 代替.</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://github.com/angular/angular/pull/42803\"><strong>PR #42803</strong></a></td>\n<td align=\"left\">Forms <code><a href=\"api/forms/EmailValidator\" class=\"code-anchor\">email</a></code> input coercion: forms <code><a href=\"api/forms/EmailValidator\" class=\"code-anchor\">email</a></code> input value will be considered as true if it is defined with any value rather than false and 'false'.</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://github.com/angular/angular/pull/42803\"><strong>PR #42803</strong></a></td>\n<td align=\"left\">表单 <code><a href=\"api/forms/EmailValidator\" class=\"code-anchor\">email</a></code> 输入强制：如果表单 <code><a href=\"api/forms/EmailValidator\" class=\"code-anchor\">email</a></code> 输入值是使用任何值而不是 false 和 'false' 定义的，则将被视为 true。</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://github.com/angular/angular/pull/33729\"><strong>PR #33729</strong></a></td>\n<td align=\"left\">Objects with a length key set to zero will no longer validate as empty. This is technically a breaking change, since objects with a key <code>length</code> and value <code>0</code> will no longer validate as empty. This is a very minor change, and any reliance on this behavior is probably a bug anyway.</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://github.com/angular/angular/pull/33729\"><strong>PR #33729</strong></a></td>\n<td align=\"left\">长度键设置为零的对象将不再验证为空。从技术上讲，这是一个突破性更改，因为键 <code>length</code> 和值为 <code>0</code> 的对象将不再验证为空。这是一个非常小的更改，无论如何，对此行为的任何依赖都可能是一个错误。</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://github.com/angular/angular/pull/44921\"><strong>PR #44921</strong></a></td>\n<td align=\"left\">Do not run change detection when loading Hammer. This change may cause unit tests that are implicitly asserting on the specific number or the ordering of change detections to fail.</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://github.com/angular/angular/pull/44921\"><strong>PR #44921</strong></a></td>\n<td align=\"left\">加载 Hammer 时不要运行变更检测。此更改可能会导致在特定数字上隐式断言的单元测试或变更检测的顺序失败。</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://github.com/angular/angular/pull/23020\"><strong>PR #23020</strong></a></td>\n<td align=\"left\">Parameter types of <code><a href=\"api/platform-browser/TransferState\" class=\"code-anchor\">TransferState</a></code> usage have increased type safety, and this may reveal existing problematic calls.</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://github.com/angular/angular/pull/23020\"><strong>PR #23020</strong></a></td>\n<td align=\"left\"><code><a href=\"api/platform-browser/TransferState\" class=\"code-anchor\">TransferState</a></code> 使用的参数类型提高了类型安全性，这可能会揭示现有的有问题的调用。</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://github.com/angular/angular/pull/43863\"><strong>PR #43863</strong></a></td>\n<td align=\"left\">The type of <code><a href=\"api/router/Navigation\" class=\"code-anchor\">Navigation</a>#initialUrl</code> has been narrowed to <code><a href=\"api/router/UrlTree\" class=\"code-anchor\">UrlTree</a></code> to reflect reality. Additionally, the value for <code>initialUrl</code> now matches its documentation: \"The target URL passed into the Router#navigateByUrl() call before navigation\". Previously, this was incorrectly set to the current internal <code><a href=\"api/router/UrlTree\" class=\"code-anchor\">UrlTree</a></code> of the Router at the time navigation occurs.</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://github.com/angular/angular/pull/43863\"><strong>PR #43863</strong></a></td>\n<td align=\"left\"><code><a href=\"api/router/Navigation\" class=\"code-anchor\">Navigation</a>#initialUrl</code> 的类型已从 <code>string|<a href=\"api/router/UrlTree\" class=\"code-anchor\">UrlTree</a></code> 缩小为 <code><a href=\"api/router/UrlTree\" class=\"code-anchor\">UrlTree</a></code>，以反映现实。另外，<code>initialUrl</code> 的值现在与其文档一致了：“在导航之前传给 Router#navigateByUrl() 调用的目标 URL。以前，它被错误的设置为了在导航发生时 <code><a href=\"api/router/UrlTree\" class=\"code-anchor\">UrlTree</a></code> 的内部当前值。”</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://github.com/angular/angular/pull/45114\"><strong>PR #45114</strong></a></td>\n<td align=\"left\">The <code>AnimationDriver.getParentElement</code> method has become required, so any implementors of this interface are now required to provide an implementation for this method.</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://github.com/angular/angular/pull/45114\"><strong>PR #45114</strong></a></td>\n<td align=\"left\"><code>AnimationDriver.getParentElement</code> 方法已成为必需，因此现在要求此接口的任何实现者提供此方法的实现。</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://github.com/angular/angular/pull/45176\"><strong>PR #45176</strong></a></td>\n<td align=\"left\">The type of <code><a href=\"api/router/Route#pathMatch\" class=\"code-anchor\">Route.pathMatch</a></code> is now more strict. Places that use <code>pathMatch</code> will likely need to be updated to have an explicit <code><a href=\"api/router/Route\" class=\"code-anchor\">Route</a></code>/<code><a href=\"api/router/Routes\" class=\"code-anchor\">Routes</a></code> type so that TypeScript does not infer the type as <code>string</code>.</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://github.com/angular/angular/pull/45176\"><strong>PR #45176</strong></a></td>\n<td align=\"left\"><code><a href=\"api/router/Route#pathMatch\" class=\"code-anchor\">Route.pathMatch</a></code> 的类型现在更严格。使用 <code>pathMatch</code> 的地方可能需要更新为显式 <code><a href=\"api/router/Route\" class=\"code-anchor\">Route</a></code> / <code><a href=\"api/router/Routes\" class=\"code-anchor\">Routes</a></code> 类型，以便 TypeScript 不会将类型推断为 <code>string</code>。</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://github.com/angular/angular/pull/44573\"><strong>PR #44573</strong></a></td>\n<td align=\"left\">The router now takes only the first emitted value by the resolvers and then proceeds with navigation. This is now consistent with <code>Observables</code> returned by other guards: only the first value is used.</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://github.com/angular/angular/pull/44573\"><strong>PR #44573</strong></a></td>\n<td align=\"left\">路由器现在仅获取解析器发出的第一个值，然后继续导航。这现在与其他警卫返回的 <code>Observables</code> 一致：仅使用第一个值。</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://github.com/angular/angular/pull/45394\"><strong>PR #45394</strong></a></td>\n<td align=\"left\">TypeScript versions older than <code>4.6.0</code> are no longer supported.</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://github.com/angular/angular/pull/45394\"><strong>PR #45394</strong></a></td>\n<td align=\"left\">不再支持早于 <code>4.6.0</code> 的 TypeScript 版本。</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://github.com/angular/angular/pull/45210\"><strong>PR #45210</strong></a></td>\n<td align=\"left\"><code><a href=\"api/common/http/HttpClient\" class=\"code-anchor\">HttpClient</a></code> will throw an error when headers are set on a JSONP request.</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://github.com/angular/angular/pull/45210\"><strong>PR #45210</strong></a></td>\n<td align=\"left\">在 JSONP 请求上设置标头时，<code><a href=\"api/common/http/HttpClient\" class=\"code-anchor\">HttpClient</a></code> 将抛出错误。</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://github.com/angular/angular/pull/43834\"><strong>PR #43834</strong></a></td>\n<td align=\"left\">Reactive form types such as <code><a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a></code> and <code><a href=\"api/forms/FormGroup\" class=\"code-anchor\">FormGroup</a></code> now have generic type parameters and infer stricter types. A migration will convert existing usages to new <code>Untyped</code>-prefixed aliases which preserve the existing behavior.</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://github.com/angular/angular/pull/43834\"><strong>PR #43834</strong></a></td>\n<td align=\"left\">响应式表单类型（例如 <code><a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a></code> 和 <code><a href=\"api/forms/FormGroup\" class=\"code-anchor\">FormGroup</a></code> 现在具有泛型类型参数并推断更严格的类型。迁移会将现有的用法转换为新的 <code>Untyped</code> 前缀的别名，以保留现有的行为。</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://github.com/angular/angular/pull/45487\"><strong>PR #45487</strong></a></td>\n<td align=\"left\">The deprecated <code>aotSummaries</code> field in the <code><a href=\"api/core/testing/TestBed\" class=\"code-anchor\">TestBed</a></code> configuration has been removed.</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://github.com/angular/angular/pull/45487\"><strong>PR #45487</strong></a></td>\n<td align=\"left\"><code><a href=\"api/core/testing/TestBed\" class=\"code-anchor\">TestBed</a></code> 配置中已过时的 <code>aotSummaries</code> 字段已删除。</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://github.com/angular/angular/pull/45648\"><strong>PR #45648</strong></a></td>\n<td align=\"left\">A new required class member <code><a href=\"api/common/LocationStrategy\" class=\"code-anchor\">LocationStrategy</a>#getState</code> has been added, that any implementers of this interface will need to provide.</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://github.com/angular/angular/pull/45648\"><strong>PR #45648</strong></a></td>\n<td align=\"left\">添加了一个新的必需类成员 <code><a href=\"api/common/LocationStrategy\" class=\"code-anchor\">LocationStrategy</a>#getState</code>，此接口的任何实现者都需要提供。</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://github.com/angular/angular/pull/45735\"><strong>PR #45735</strong></a></td>\n<td align=\"left\">When a guard returns a <code><a href=\"api/router/UrlTree\" class=\"code-anchor\">UrlTree</a></code>, the router would previously schedule the redirect navigation within a <code>setTimeout</code>. This timeout is now removed, which can result in test failures due to incorrectly written tests.</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://github.com/angular/angular/pull/45735\"><strong>PR #45735</strong></a></td>\n<td align=\"left\">当守卫返回 <code><a href=\"api/router/UrlTree\" class=\"code-anchor\">UrlTree</a></code> 时，以前路由器会在 <code>setTimeout</code> 内安排重定向导航。现在删除了此超时，这可能会由于测试编写不正确而导致测试失败。</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"new-deprecations\">New deprecations<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/update-to-version-14#new-deprecations\"><i class=\"material-icons\">link</i></a></h3>\n<h3 id=\"新的弃用\">新的弃用<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/update-to-version-14#新的弃用\"><i class=\"material-icons\">link</i></a></h3>\n<p><a id=\"deprecations\"></a></p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">Removed</th>\n<th align=\"left\">Replacement</th>\n<th align=\"left\">Details</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\">已移除</td>\n<td align=\"left\">替代品</td>\n<td align=\"left\">详情</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"api/forms/FormControlOptions#initialValueIsDefault\"><code>FormControlOptions#initialValueIsDefault</code></a></td>\n<td align=\"left\"><a href=\"api/forms/FormControlOptions#nonNullable\"><code>FormControlOptions#nonNullable</code></a></td>\n<td align=\"left\">The <code>initialValueIsDefault</code> option for <code><a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a></code> construction has been deprecated in favor of the <code>nonNullable</code> option (which has identical behavior). This renaming aligns the <code><a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a></code> constructor with other strictly typed APIs related to nullability.</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"api/forms/FormControlOptions#initialValueIsDefault\"><code>FormControlOptions#initialValueIsDefault</code></a></td>\n<td align=\"left\"><a href=\"api/forms/FormControlOptions#nonNullable\"><code>FormControlOptions#nonNullable</code></a></td>\n<td align=\"left\"><code><a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a></code> 构造的 <code>initialValueIsDefault</code> 选项已被弃用，以支持 <code>nonNullable</code> 选项（具有相同的行为）。这种重命名使 <code><a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a></code> 构造函数与其他与可空性相关的严格类型 API 保持一致。</td>\n</tr>\n<tr>\n<td align=\"left\"><code>ErrorEvent</code>s passed to <a href=\"api/common/http/testing/TestRequest#error\"><code>TestRequest#error</code></a></td>\n<td align=\"left\"><code>ProgressEvent</code></td>\n<td align=\"left\">Http requests never emit an <code>ErrorEvent</code>. Use a <code>ProgressEvent</code> instead.</td>\n</tr>\n<tr>\n<td align=\"left\">传递给<a href=\"api/common/http/testing/TestRequest#error\"><code>TestRequest#error</code></a>的 <code>ErrorEvent</code></td>\n<td align=\"left\"><code>ProgressEvent</code></td>\n<td align=\"left\">Http 请求永远不会发出 <code>ErrorEvent</code>。改用 <code>ProgressEvent</code>。</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"api/core/getModuleFactory\"><code>getModuleFactory</code></a></td>\n<td align=\"left\"><code><a href=\"api/core/getNgModuleById\" class=\"code-anchor\">getNgModuleById</a></code></td>\n<td align=\"left\"><code><a href=\"api/core/NgModuleFactory\" class=\"code-anchor\">NgModuleFactory</a></code> itself is deprecated.</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"api/core/getModuleFactory\"><code>getModuleFactory</code></a></td>\n<td align=\"left\"><code><a href=\"api/core/getNgModuleById\" class=\"code-anchor\">getNgModuleById</a></code></td>\n<td align=\"left\"><code><a href=\"api/core/NgModuleFactory\" class=\"code-anchor\">NgModuleFactory</a></code> 本身已被弃用。</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"api/core/ModuleWithComponentFactories\"><code>ModuleWithComponentFactories</code></a></td>\n<td align=\"left\">n/a</td>\n<td align=\"left\">Ivy JIT mode doesn't require accessing this symbol. See <a href=\"guide/deprecations#jit-api-changes\">JIT API changes due to ViewEngine deprecation</a> for additional context.</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"api/core/ModuleWithComponentFactories\"><code>ModuleWithComponentFactories</code></a></td>\n<td align=\"left\">不适用</td>\n<td align=\"left\">Ivy JIT 模式不需要访问这个符号。有关其他上下文，请参阅<a href=\"guide/deprecations#jit-api-changes\">由于 ViewEngine 弃用而导致的 JIT API 更改</a>。</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"api/core/Compiler\"><code>Compiler</code></a></td>\n<td align=\"left\">n/a</td>\n<td align=\"left\">Ivy JIT mode doesn't require accessing this symbol. See <a href=\"guide/deprecations#jit-api-changes\">JIT API changes due to ViewEngine deprecation</a> for additional context.</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"api/core/Compiler\"><code>Compiler</code></a></td>\n<td align=\"left\">不适用</td>\n<td align=\"left\">Ivy JIT 模式不需要访问这个符号。有关其他上下文，请参阅<a href=\"guide/deprecations#jit-api-changes\">由于 ViewEngine 弃用而导致的 JIT API 更改</a>。</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"api/core/CompilerFactory\"><code>CompilerFactory</code></a></td>\n<td align=\"left\">n/a</td>\n<td align=\"left\">Ivy JIT mode doesn't require accessing this symbol. See <a href=\"guide/deprecations#jit-api-changes\">JIT API changes due to ViewEngine deprecation</a> for additional context.</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"api/core/CompilerFactory\"><code>CompilerFactory</code></a></td>\n<td align=\"left\">不适用</td>\n<td align=\"left\">Ivy JIT 模式不需要访问这个符号。有关其他上下文，请参阅<a href=\"guide/deprecations#jit-api-changes\">由于 ViewEngine 弃用而导致的 JIT API 更改</a>。</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"api/core/NgModuleFactory\"><code>NgModuleFactory</code></a></td>\n<td align=\"left\">n/a</td>\n<td align=\"left\">This class was mostly used as a part of ViewEngine-based JIT API and is no longer needed in Ivy JIT mode. See <a href=\"guide/deprecations#jit-api-changes\">JIT API changes due to ViewEngine deprecation</a> for additional context. Angular provides APIs that accept NgModule classes directly (such as <a href=\"api/core/PlatformRef#bootstrapModule\"><code>PlatformRef.bootstrapModule</code></a> and <a href=\"api/core/createNgModuleRef\"><code>createNgModuleRef</code></a>), consider switching to those APIs instead of using factory-based ones.</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"api/core/NgModuleFactory\"><code>NgModuleFactory</code></a></td>\n<td align=\"left\">不适用</td>\n<td align=\"left\">此类主要是作为基于 ViewEngine 的 JIT API 的一部分，在 Ivy JIT 模式下不再需要。有关其他上下文，请参阅<a href=\"guide/deprecations#jit-api-changes\">由于 ViewEngine 弃用而导致的 JIT API 更改</a>。 Angular 提供了能直接接受 NgModule 类的 API（例如<a href=\"api/core/PlatformRef#bootstrapModule\"><code>PlatformRef.bootstrapModule</code></a>和<a href=\"api/core/createNgModuleRef\"><code>createNgModuleRef</code></a> ），考虑切换到这些 API 而不再使用基于工厂的 API。</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"api/core/ComponentFactory\"><code>ComponentFactory</code></a></td>\n<td align=\"left\">n/a</td>\n<td align=\"left\">Angular no longer requires <code><a href=\"api/core/ComponentFactory\" class=\"code-anchor\">ComponentFactory</a></code>s. Other APIs allow Component classes to be used directly.</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"api/core/ComponentFactory\"><code>ComponentFactory</code></a></td>\n<td align=\"left\">不适用</td>\n<td align=\"left\">Angular 不再需要 <code><a href=\"api/core/ComponentFactory\" class=\"code-anchor\">ComponentFactory</a></code> 。其他 API 允许直接使用组件类。</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"api/core/ComponentFactoryResolver\"><code>ComponentFactoryResolver</code></a></td>\n<td align=\"left\">n/a</td>\n<td align=\"left\">Angular no longer requires <code><a href=\"api/core/ComponentFactory\" class=\"code-anchor\">ComponentFactory</a></code>s. Other APIs allow Component classes to be used directly.</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"api/core/ComponentFactoryResolver\"><code>ComponentFactoryResolver</code></a></td>\n<td align=\"left\">不适用</td>\n<td align=\"left\">Angular 不再需要 <code><a href=\"api/core/ComponentFactory\" class=\"code-anchor\">ComponentFactory</a></code> 。其他 API 允许直接使用组件类。</td>\n</tr>\n<tr>\n<td align=\"left\"><code>useJit</code> and <code>missingTranslation</code> in <a href=\"api/core/CompilerOptions\"><code>CompilerOptions</code></a></td>\n<td align=\"left\">n/a</td>\n<td align=\"left\">Ivy JIT mode does not support these options. See <a href=\"guide/deprecations#jit-api-changes\">JIT API changes due to ViewEngine deprecation</a> for additional context.</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"api/core/CompilerOptions\"><code>CompilerOptions</code></a>中的 <code>useJit</code> 和 <code>missingTranslation</code></td>\n<td align=\"left\">不适用</td>\n<td align=\"left\">Ivy JIT 模式不支持这些选项。有关其他上下文，请参阅<a href=\"guide/deprecations#jit-api-changes\">由于 ViewEngine 弃用而导致的 JIT API 更改</a>。</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"api/platform-browser-dynamic/JitCompilerFactory\"><code>JitCompilerFactory</code></a></td>\n<td align=\"left\">n/a</td>\n<td align=\"left\">Ivy JIT mode doesn't require accessing this symbol. See <a href=\"guide/deprecations#jit-api-changes\">JIT API changes due to ViewEngine deprecation</a> for additional context.</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"api/platform-browser-dynamic/JitCompilerFactory\"><code>JitCompilerFactory</code></a></td>\n<td align=\"left\">不适用</td>\n<td align=\"left\">Ivy JIT 模式不需要访问这个符号。有关其他上下文，请参阅<a href=\"guide/deprecations#jit-api-changes\">由于 ViewEngine 弃用而导致的 JIT API 更改</a>。</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"api/platform-browser-dynamic/RESOURCE_CACHE_PROVIDER\"><code>RESOURCE_CACHE_PROVIDER</code></a></td>\n<td align=\"left\">n/a</td>\n<td align=\"left\">This was previously necessary in some cases to test AOT-compiled components with View Engine, but is no longer since Ivy.</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"api/platform-browser-dynamic/RESOURCE_CACHE_PROVIDER\"><code>RESOURCE_CACHE_PROVIDER</code></a></td>\n<td align=\"left\">不适用</td>\n<td align=\"left\">以前在某些情况下需要使用 View Engine 测试 AOT 编译的组件，但自 Ivy 以来不再需要。</td>\n</tr>\n<tr>\n<td align=\"left\"><code>relativeLinkResolution</code> in the Router <a href=\"api/router/ExtraOptions\"><code>ExtraOptions</code></a></td>\n<td align=\"left\">Switch to the default of <code>'corrected'</code> link resolution</td>\n<td align=\"left\">This option was introduced to fix a bug with link resolution in a backwards compatible way. Existing apps which still depend on the buggy legacy behavior should switch to the new corrected behavior and stop passing this flag.</td>\n</tr>\n<tr>\n<td align=\"left\">路由器<a href=\"api/router/ExtraOptions\"><code>ExtraOptions</code></a>中的 <code>relativeLinkResolution</code></td>\n<td align=\"left\">切换到默认的 <code>'corrected'</code> 链接解析方式</td>\n<td align=\"left\">引入此选项是为了以向后兼容的方式修复具有链接解析的错误。仍然依赖于有问题的旧版行为的现有应用程序应该切换到更正后的新行为并停止传递此标志。</td>\n</tr>\n<tr>\n<td align=\"left\"><code>resolver</code> argument in <a href=\"api/router/RouterOutletContract#activateWith\"><code>RouterOutletContract.activateWith</code></a></td>\n<td align=\"left\">n/a</td>\n<td align=\"left\"><code><a href=\"api/core/ComponentFactory\" class=\"code-anchor\">ComponentFactory</a></code> and <code><a href=\"api/core/ComponentFactoryResolver\" class=\"code-anchor\">ComponentFactoryResolver</a></code> afre deprecated, and passing an argument for a resolver to retrieve a <code><a href=\"api/core/ComponentFactory\" class=\"code-anchor\">ComponentFactory</a></code> is no longer required.</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"api/router/RouterOutletContract#activateWith\"><code>RouterOutletContract.activateWith</code></a>中的 <code>resolver</code></td>\n<td align=\"left\">不适用</td>\n<td align=\"left\"><code><a href=\"api/core/ComponentFactory\" class=\"code-anchor\">ComponentFactory</a></code> 和 <code><a href=\"api/core/ComponentFactoryResolver\" class=\"code-anchor\">ComponentFactoryResolver</a></code> 已经弃用，不再需要传 resolver 参数以获取 <code><a href=\"api/core/ComponentFactory\" class=\"code-anchor\">ComponentFactory</a></code>。</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"api/router/OutletContext#resolver\"><code>OutletContext#resolver</code></a></td>\n<td align=\"left\">n/a</td>\n<td align=\"left\"><code><a href=\"api/core/ComponentFactory\" class=\"code-anchor\">ComponentFactory</a></code> and <code><a href=\"api/core/ComponentFactoryResolver\" class=\"code-anchor\">ComponentFactoryResolver</a></code> are deprecated, and using a resolver to retrieve a <code><a href=\"api/core/ComponentFactory\" class=\"code-anchor\">ComponentFactory</a></code> is no longer required.</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"api/router/OutletContext#resolver\"><code>OutletContext#resolver</code></a></td>\n<td align=\"left\">不适用</td>\n<td align=\"left\"><code><a href=\"api/core/ComponentFactory\" class=\"code-anchor\">ComponentFactory</a></code> 和 <code><a href=\"api/core/ComponentFactoryResolver\" class=\"code-anchor\">ComponentFactoryResolver</a></code> 已经弃用，不再需要传 resolver 参数以获取 <code><a href=\"api/core/ComponentFactory\" class=\"code-anchor\">ComponentFactory</a></code>。</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"api/service-worker/SwUpdate#activated\"><code>SwUpdate#activated</code></a></td>\n<td align=\"left\">Return value of <a href=\"api/service-worker/SwUpdate#activateUpdate\"><code>SwUpdate#activateUpdate</code></a></td>\n<td align=\"left\">The <code>activated</code> property is deprecated. Existing usages can migrate to <a href=\"api/service-worker/SwUpdate#activateUpdate\"><code>SwUpdate#activateUpdate</code></a>.</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"api/service-worker/SwUpdate#activated\"><code>SwUpdate#activated</code></a></td>\n<td align=\"left\"><a href=\"api/service-worker/SwUpdate#activateUpdate\"><code>SwUpdate#activateUpdate</code></a>的返回值</td>\n<td align=\"left\"><code>activated</code> 属性已被弃用。现有用法可以迁移到<a href=\"api/service-worker/SwUpdate#activateUpdate\"><code>SwUpdate#activateUpdate</code></a>。</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"api/service-worker/SwUpdate#available\"><code>SwUpdate#available</code></a></td>\n<td align=\"left\"><a href=\"api/service-worker/SwUpdate#versionUpdates\"><code>SwUpdate#versionUpdates</code></a></td>\n<td align=\"left\">The behavior of <a href=\"api/service-worker/SwUpdate#available\"><code>SwUpdate#available</code></a> can be achieved by filtering for the <a href=\"api/service-worker/VersionReadyEvent\"><code>VersionReadyEvent</code></a> from <a href=\"api/service-worker/SwUpdate#versionUpdates\"><code>SwUpdate#versionUpdates</code></a></td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"api/service-worker/SwUpdate#available\"><code>SwUpdate#available</code></a></td>\n<td align=\"left\"><a href=\"api/service-worker/SwUpdate#versionUpdates\"><code>SwUpdate#versionUpdates</code></a></td>\n<td align=\"left\"><a href=\"api/service-worker/SwUpdate#available\"><code>SwUpdate#available</code></a>的行为可以通过从<a href=\"api/service-worker/SwUpdate#versionUpdates\"><code>SwUpdate#versionUpdates</code></a>中过滤<a href=\"api/service-worker/VersionReadyEvent\"><code>VersionReadyEvent</code></a>来实现</td>\n</tr>\n</tbody>\n</table>\n\n  <div class=\"reviewed\">最后复查时间： 5/31/2022</div>\n</div>\n\n\n<!-- links to this doc:\n-->\n<!-- links from this doc:\n - api/common/LocationStrategy\n - api/common/http/HttpClient\n - api/common/http/testing/TestRequest#error\n - api/core/Compiler\n - api/core/CompilerFactory\n - api/core/CompilerOptions\n - api/core/ComponentFactory\n - api/core/ComponentFactoryResolver\n - api/core/ModuleWithComponentFactories\n - api/core/NgModuleFactory\n - api/core/PlatformRef#bootstrapModule\n - api/core/createNgModuleRef\n - api/core/getModuleFactory\n - api/core/getNgModuleById\n - api/core/testing/TestBed\n - api/forms/AbstractControl\n - api/forms/EmailValidator\n - api/forms/FormArray\n - api/forms/FormControl\n - api/forms/FormControlOptions#initialValueIsDefault\n - api/forms/FormControlOptions#nonNullable\n - api/forms/FormGroup\n - api/platform-browser-dynamic/JitCompilerFactory\n - api/platform-browser-dynamic/RESOURCE_CACHE_PROVIDER\n - api/platform-browser/TransferState\n - api/router/ExtraOptions\n - api/router/Navigation\n - api/router/OutletContext#resolver\n - api/router/Route\n - api/router/Route#pathMatch\n - api/router/RouterOutletContract#activateWith\n - api/router/Routes\n - api/router/UrlTree\n - api/service-worker/SwUpdate#activateUpdate\n - api/service-worker/SwUpdate#activated\n - api/service-worker/SwUpdate#available\n - api/service-worker/SwUpdate#versionUpdates\n - api/service-worker/VersionReadyEvent\n - guide/deprecations#jit-api-changes\n - guide/releases#deprecation-practices\n - guide/update-to-version-14#angular-版本-14-中的重大更改\n - guide/update-to-version-14#breaking-changes-in-angular-version-14\n - guide/update-to-version-14#changes-and-deprecations-in-version-14\n - guide/update-to-version-14#new-deprecations\n - guide/update-to-version-14#update-angular-cli-applications\n - guide/update-to-version-14#update-angular-to-v14\n - guide/update-to-version-14#新的弃用\n - guide/update-to-version-14#更新-angular\n - guide/update-to-version-14#更新-angular-cli-应用程序\n - guide/update-to-version-14#版本-14-中的更改与弃用\n - https://github.com/angular/angular-cn/edit/cn/aio/content/guide/update-to-version-14.md?message=docs%3A%20请简述你的修改...\n - https://github.com/angular/angular/pull/23020\n - https://github.com/angular/angular/pull/33729\n - https://github.com/angular/angular/pull/42803\n - https://github.com/angular/angular/pull/43834\n - https://github.com/angular/angular/pull/43863\n - https://github.com/angular/angular/pull/44573\n - https://github.com/angular/angular/pull/44921\n - https://github.com/angular/angular/pull/45114\n - https://github.com/angular/angular/pull/45176\n - https://github.com/angular/angular/pull/45210\n - https://github.com/angular/angular/pull/45394\n - https://github.com/angular/angular/pull/45487\n - https://github.com/angular/angular/pull/45648\n - https://github.com/angular/angular/pull/45729\n - https://github.com/angular/angular/pull/45735\n - https://update.angular.io\n-->"
}