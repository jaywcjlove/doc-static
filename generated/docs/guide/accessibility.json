{
  "id": "guide/accessibility",
  "title": "Angular 中的无障碍功能",
  "contents": "\n\n\n<div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular-cn/edit/cn/aio/content/guide/accessibility.md?message=docs%3A%20请简述你的修改...\" aria-label=\"提供编辑建议\" title=\"提供编辑建议\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n</div>\n\n\n<div class=\"content\">\n  <h1 id=\"accessibility-in-angular\">Accessibility in Angular<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/accessibility#accessibility-in-angular\"><i class=\"material-icons\">link</i></a></h1>\n<h1 id=\"angular-中的无障碍功能\">Angular 中的无障碍功能<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/accessibility#angular-中的无障碍功能\"><i class=\"material-icons\">link</i></a></h1>\n<p>The web is used by a wide variety of people, including those who have visual or motor impairments.\nA variety of assistive technologies are available that make it much easier for these groups to interact with web-based software applications.\nAlso, designing an application to be more accessible generally improves the user experience for all users.</p>\n<p>Web 会被各种各样的人使用，包括有视觉或运动障碍的人。有多种辅助技术能使这些人更轻松地和基于 Web 的软件应用进行交互。另外，将应用设计得更易于访问通常也能改善所有用户的体验。</p>\n<p>For an in-depth introduction to issues and techniques for designing accessible applications, see the <a href=\"https://developers.google.com/web/fundamentals/accessibility/#what_is_accessibility\">Accessibility</a> section of the Google's <a href=\"https://developers.google.com/web/fundamentals\">Web Fundamentals</a>.</p>\n<p>关于如何设计无障碍应用的问题和技术的深入介绍，参阅 Google <a href=\"https://developers.google.com/web/fundamentals\">网络基础知识</a>的<a href=\"https://developers.google.com/web/fundamentals/accessibility/#what_is_accessibility\">无障碍功能</a>部分。</p>\n<p>This page discusses best practices for designing Angular applications that work well for all users, including those who rely on assistive technologies.</p>\n<p>本页讨论了设计 Angular 应用的最佳实践，这些实践对所有用户（包括依赖辅助技术的用户）都适用。</p>\n<div class=\"alert is-helpful\">\n<p>For the sample application that this page describes, see the <live-example></live-example>.</p>\n<p>本页中所讲的范例程序，参阅<live-example></live-example>。</p>\n</div>\n<h2 id=\"accessibility-attributes\">Accessibility attributes<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/accessibility#accessibility-attributes\"><i class=\"material-icons\">link</i></a></h2>\n<h2 id=\"无障碍属性attribute\">无障碍属性（Attribute）<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/accessibility#无障碍属性attribute\"><i class=\"material-icons\">link</i></a></h2>\n<p>Building accessible web experience often involves setting <a href=\"https://developers.google.com/web/fundamentals/accessibility/semantics-aria\">Accessible Rich Internet Applications (ARIA) attributes</a> to provide semantic meaning where it might otherwise be missing.\nUse <a href=\"guide/attribute-binding\">attribute binding</a> template syntax to control the values of accessibility-related attributes.</p>\n<p>建立无障碍的 Web 体验通常会涉及设置 <a href=\"https://developers.google.com/web/fundamentals/accessibility/semantics-aria\">ARIA（Accessible Rich Internet Applications）属性（Attribute）</a> 以提供可能会丢失的语义。使用 <a href=\"guide/attribute-binding\">Attribute 绑定</a>模板语法来控制与无障碍性相关的属性（Attribute）值。</p>\n<p>When binding to ARIA attributes in Angular, you must use the <code>attr.</code> prefix. The ARIA specification depends specifically on HTML attributes rather than properties of DOM elements.</p>\n<p>在 Angular 中绑定 ARIA 属性（Attribute）时，必须使用 <code>attr.</code> 前缀。ARIA 规范针对的是 HTML 属性（Attribute），而不是 DOM 元素的属性（Property）。</p>\n<code-example format=\"html\" language=\"html\">\n\n&#x3C;!-- Use attr. when binding to an ARIA attribute -->\n&#x3C;button [attr.aria-label]=\"myActionLabel\">…&#x3C;/button>\n\n</code-example>\n<div class=\"alert is-helpful\">\n<p><strong>NOTE</strong> <br>\nThis syntax is only necessary for attribute <em>bindings</em>.\nStatic ARIA attributes require no extra syntax.</p>\n<p><strong>注意</strong><br>\n此语法仅对于属性（Attribute）<em>绑定</em>是必需的。静态 ARIA 属性（Attribute）不需要额外的语法。</p>\n<code-example format=\"html\" language=\"html\">\n\n&#x3C;!-- Static ARIA attributes require no extra syntax -->\n&#x3C;button aria-label=\"Save document\">…&#x3C;/button>\n\n</code-example>\n</div>\n<div class=\"alert is-helpful\">\n<p>By convention, HTML attributes use lowercase names (<code>tabindex</code>), while properties use camelCase names (<code>tabIndex</code>).</p>\n<p>按照约定，HTML 属性（Attribute）使用小写名称（<code>tabindex</code>），而 Property 使用 camelCase 名称（<code>tabIndex</code>）。</p>\n<p>See the <a href=\"guide/binding-syntax#html-attribute-vs-dom-property\">Binding syntax</a> guide for more background on the difference between attributes and properties.</p>\n<p>关于 Attribute 和 Property 之间差异的更多背景信息，参阅<a href=\"guide/binding-syntax#html-attribute-vs-dom-property\">模板语法</a>一章。</p>\n</div>\n<h2 id=\"angular-ui-components\">Angular UI components<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/accessibility#angular-ui-components\"><i class=\"material-icons\">link</i></a></h2>\n<h2 id=\"angular-ui-组件\">Angular UI 组件<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/accessibility#angular-ui-组件\"><i class=\"material-icons\">link</i></a></h2>\n<p>The <a href=\"https://material.angular.io\">Angular Material</a> library, which is maintained by the Angular team, is a suite of reusable UI components that aims to be fully accessible.\nThe <a href=\"https://material.angular.io/cdk/categories\">Component Development Kit (CDK)</a> includes the <code>a11y</code> package that provides tools to support various areas of accessibility.\nFor example:</p>\n<p>由 Angular 团队维护的 <a href=\"https://material.angular.cn\">Angular Material</a> 库是旨在提供完全无障碍的一组可复用 UI 组件。<a href=\"https://material.angular.cn/cdk/categories\">组件开发工具包（CDK）</a>中包括 <code>a11y</code> 软件包，该软件包提供了支持无障碍领域的各种工具。比如：</p>\n<ul>\n<li>\n<p><code>LiveAnnouncer</code> is used to announce messages for screen-reader users using an <code>aria-live</code> region.\nSee the W3C documentation for more information on <a href=\"https://www.w3.org/WAI/PF/aria-1.1/states_and_properties#aria-live\">aria-live regions</a>.</p>\n<p><code>LiveAnnouncer</code> 用于使用 <code>aria-live</code> 区域向屏幕阅读器用户朗读消息。关于 <a href=\"https://www.w3.org/WAI/PF/aria-1.1/states_and_properties#aria-live\">aria-live 领域的</a>更多信息，参阅 W3C 文档。</p>\n</li>\n<li>\n<p>The <code>cdkTrapFocus</code> directive traps Tab-key focus within an element.\nUse it to create accessible experience for components such as modal dialogs, where focus must be constrained.</p>\n<p><code>cdkTrapFocus</code> 指令能将 Tab 键焦点捕获在元素内。使用它可为必须限制焦点的模态对话框之类的组件创建无障碍体验。</p>\n</li>\n</ul>\n<p>For full details of these and other tools, see the <a href=\"https://material.angular.io/cdk/a11y/overview\">Angular CDK accessibility overview</a>.</p>\n<p>关于这些工具和其它工具的完整详细信息，参阅 <a href=\"https://material.angular.io/cdk/a11y/overview\">Angular CDK 无障碍功能概述</a>。</p>\n<h3 id=\"augmenting-native-elements\">Augmenting native elements<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/accessibility#augmenting-native-elements\"><i class=\"material-icons\">link</i></a></h3>\n<h3 id=\"增强原生元素\">增强原生元素<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/accessibility#增强原生元素\"><i class=\"material-icons\">link</i></a></h3>\n<p>Native HTML elements capture several standard interaction patterns that are important to accessibility.\nWhen authoring Angular components, you should re-use these native elements directly when possible, rather than re-implementing well-supported behaviors.</p>\n<p>原生 HTML 元素捕获了一些对无障碍性很重要的标准交互模式。在制作 Angular 组件时，应尽可能直接复用这些原生元素，而不是重新实现已获良好支持的行为。</p>\n<p>For example, instead of creating a custom element for a new variety of button, create a component that uses an attribute selector with a native <code>&#x3C;button></code> element.\nThis most commonly applies to <code>&#x3C;button></code> and <code>&#x3C;a></code>, but can be used with many other types of element.</p>\n<p>比如，你可以创建一个组件，它使用属性（Attribute）选择器指向原生 <code>&#x3C;button></code> 元素，而不是为各种新按钮创建自定义元素。通常这适用于 <code>&#x3C;button></code> 和 <code>&#x3C;a></code>，但也可以用于许多其它类型的元素。</p>\n<p>You can see examples of this pattern in Angular Material:\n<a href=\"https://github.com/angular/components/blob/50d3f29b6dc717b512dbd0234ce76f4ab7e9762a/src/material/button/button.ts#L67-L69\"><code>MatButton</code></a>, <a href=\"https://github.com/angular/components/blob/50d3f29b6dc717b512dbd0234ce76f4ab7e9762a/src/material/tabs/tab-nav-bar/tab-nav-bar.ts#L139\"><code>MatTabNav</code></a>, and <a href=\"https://github.com/angular/components/blob/50d3f29b6dc717b512dbd0234ce76f4ab7e9762a/src/material/table/table.ts#L22\"><code>MatTable</code></a>.</p>\n<p>你可以在 Angular Material 中看到此模式的范例：<a href=\"https://github.com/angular/components/blob/50d3f29b6dc717b512dbd0234ce76f4ab7e9762a/src/material/button/button.ts#L67-L69\"><code>MatButton</code></a>，<a href=\"https://github.com/angular/components/blob/50d3f29b6dc717b512dbd0234ce76f4ab7e9762a/src/material/tabs/tab-nav-bar/tab-nav-bar.ts#L139\"><code>MatTabNav</code></a>，<a href=\"https://github.com/angular/components/blob/50d3f29b6dc717b512dbd0234ce76f4ab7e9762a/src/material/table/table.ts#L22\"><code>MatTable</code></a>。</p>\n<h3 id=\"using-containers-for-native-elements\">Using containers for native elements<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/accessibility#using-containers-for-native-elements\"><i class=\"material-icons\">link</i></a></h3>\n<h3 id=\"将容器用于原生元素\">将容器用于原生元素<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/accessibility#将容器用于原生元素\"><i class=\"material-icons\">link</i></a></h3>\n<p>Sometimes using the appropriate native element requires a container element.\nFor example, the native <code>&#x3C;input></code> element cannot have children, so any custom text entry components need to wrap an <code>&#x3C;input></code> with extra elements.\nBy just including <code>&#x3C;input></code> in your custom component's template, it's impossible for your component's users  to set arbitrary properties and attributes to the <code>&#x3C;input></code> element.\nInstead, create a container component that uses content projection to include the native control in the component's API.</p>\n<p>有时要使用的原生元素需要一个容器元素。比如，原生 <code>&#x3C;input></code> 元素不能有子元素，因此任何自定义的文本输入组件都需要用额外的元素来包装 <code>&#x3C;input></code>。如果只在自定义组件的模板中包含 <code>&#x3C;input></code>，该组件的将用户无法为 <code>input</code> 元素设置任意 Property 和 Attribute。相反，你应该创建一个使用内容投影的容器组件，以将原生控件包含在组件的 API 中。</p>\n<p>You can see <a href=\"https://material.angular.io/components/form-field/overview\"><code>MatFormField</code></a> as an example of this pattern.</p>\n<p>你可以把 <a href=\"https://material.angular.cn/components/form-field/overview\"><code>MatFormField</code></a> 作为该模式的例子。</p>\n<h2 id=\"case-study-building-a-custom-progress-bar\">Case study: Building a custom progress bar<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/accessibility#case-study-building-a-custom-progress-bar\"><i class=\"material-icons\">link</i></a></h2>\n<h2 id=\"案例研究构建自定义进度条\">案例研究：构建自定义进度条<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/accessibility#案例研究构建自定义进度条\"><i class=\"material-icons\">link</i></a></h2>\n<p>The following example shows how to make a progress bar accessible by using host binding to control accessibility-related attributes.</p>\n<p>以下范例显示如何通过使用宿主（host）绑定来控制与无障碍性相关的属性（Attribute），来把进度条无障碍化。</p>\n<ul>\n<li>\n<p>The component defines an accessibility-enabled element with both the standard HTML attribute <code>role</code>, and ARIA attributes.\nThe ARIA attribute <code>aria-valuenow</code> is bound to the user's input.</p>\n<p>该组件使用标准的 HTML 属性（Attribute）<code>role</code> 和 ARIA 属性（Attribute）来定义要启用无障碍支持的元素。ARIA 属性（Attribute）<code>aria-valuenow</code> 绑定到用户的输入。</p>\n<code-example header=\"src/app/progress-bar.component.ts\" path=\"accessibility/src/app/progress-bar.component.ts\" region=\"progressbar-component\">\nimport { <a href=\"api/core/Component\" class=\"code-anchor\">Component</a>, <a href=\"api/core/Input\" class=\"code-anchor\">Input</a> } from '@angular/core';\n\n/**\n * Example progressbar component.\n */\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'app-example-progressbar',\n  template: '&#x3C;div class=\"bar\" [style.width.%]=\"value\">&#x3C;/div>',\n  styleUrls: ['./progress-bar.component.css'],\n  host: {\n    // Sets the role for this component to \"progressbar\"\n    role: 'progressbar',\n\n    // Sets the minimum and maximum values for the progressbar role.\n    'aria-valuemin': '0',\n    'aria-valuemax': '100',\n\n    // Binding that updates the current value of the progressbar.\n    '[attr.aria-valuenow]': 'value',\n  }\n})\nexport class ExampleProgressbarComponent  {\n  /** Current value of the progressbar. */\n  @<a href=\"api/core/Input\" class=\"code-anchor\">Input</a>() value = 0;\n}\n\n\n</code-example>\n</li>\n<li>\n<p>In the template, the <code>aria-label</code> attribute ensures that the control is accessible to screen readers.</p>\n<p>在模板中，<code>aria-label</code> 属性（Attribute）可以确保屏幕阅读器能访问该控件。</p>\n<code-example header=\"src/app/app.component.html\" path=\"accessibility/src/app/app.component.html\" region=\"template\">\n&#x3C;label>\n  Enter an example progress value\n  &#x3C;input type=\"number\" <a href=\"api/forms/MinValidator\" class=\"code-anchor\">min</a>=\"0\" <a href=\"api/forms/MaxValidator\" class=\"code-anchor\">max</a>=\"100\"\n      [value]=\"progress\" (input)=\"setProgress($event)\">\n&#x3C;/label>\n\n&#x3C;!-- The user of the progressbar sets an aria-label to communicate what the progress means. -->\n&#x3C;app-example-progressbar [value]=\"progress\" aria-label=\"Example of a progress bar\">\n&#x3C;/app-example-progressbar>\n\n</code-example>\n</li>\n</ul>\n<h2 id=\"routing\">Routing<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/accessibility#routing\"><i class=\"material-icons\">link</i></a></h2>\n<h2 id=\"路由\">路由<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/accessibility#路由\"><i class=\"material-icons\">link</i></a></h2>\n<h3 id=\"focus-management-after-navigation\">Focus management after navigation<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/accessibility#focus-management-after-navigation\"><i class=\"material-icons\">link</i></a></h3>\n<h3 id=\"导航后的焦点管理\">导航后的焦点管理<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/accessibility#导航后的焦点管理\"><i class=\"material-icons\">link</i></a></h3>\n<p>Tracking and controlling <a href=\"https://developers.google.com/web/fundamentals/accessibility/focus\">focus</a> in a UI is an important consideration in designing for accessibility.\nWhen using Angular routing, you should decide where page focus goes upon navigation.</p>\n<p>在设计无障碍性时，在 UI 中跟踪和控制<a href=\"https://developers.google.com/web/fundamentals/accessibility/focus\">焦点</a>是很重要的考虑因素。使用 Angular 路由时，你需要确定页面焦点在导航上的位置。</p>\n<p>To avoid relying solely on visual cues, you need to make sure your routing code updates focus after page navigation.\nUse the <code><a href=\"api/router/NavigationEnd\" class=\"code-anchor\">NavigationEnd</a></code> event from the <code><a href=\"api/router/Router\" class=\"code-anchor\">Router</a></code> service to know when to update focus.</p>\n<p>为了避免仅仅依靠视觉提示，你需要确保路由代码会在页面导航之后更新焦点。使用 <code><a href=\"api/router/Router\" class=\"code-anchor\">Router</a></code> 服务中的 <code><a href=\"api/router/NavigationEnd\" class=\"code-anchor\">NavigationEnd</a></code> 事件可以知道何时该更新焦点。</p>\n<p>The following example shows how to find and focus the main content header in the DOM after navigation.</p>\n<p>以下范例显示了导航后如何在 DOM 中查找并把焦点移动到主体内容的头部。</p>\n<code-example format=\"typescript\" language=\"typescript\">\n\nrouter.events.pipe(filter(e => e instanceof <a href=\"api/router/NavigationEnd\" class=\"code-anchor\">NavigationEnd</a>)).subscribe(() => {\n  const mainHeader = document.querySelector('#main-content-header')\n  if (mainHeader) {\n    mainHeader.focus();\n  }\n});\n\n</code-example>\n<p>In a real application, the element that receives focus depends on your specific application structure and layout.\nThe focused element should put users in a position to immediately move into the main content that has just been routed into view.\nYou should avoid situations where focus returns to the <code>body</code> element after a route change.</p>\n<p>在实际的应用程序中，哪些元素会获得焦点取决于该应用特有的结构和布局。获得焦点的元素应使用户能够立即移动到刚刚进入视野的主要内容。你应该避免当路由变化后焦点重新回到 <code>body</code> 元素的情况。</p>\n<h3 id=\"active-links-identification\">Active links identification<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/accessibility#active-links-identification\"><i class=\"material-icons\">link</i></a></h3>\n<h3 id=\"活动链接标识\">活动链接标识<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/accessibility#活动链接标识\"><i class=\"material-icons\">link</i></a></h3>\n<p>CSS classes applied to active <code><a href=\"api/router/RouterLink\" class=\"code-anchor\">RouterLink</a></code> elements, such as <code><a href=\"api/router/RouterLinkActive\" class=\"code-anchor\">RouterLinkActive</a></code>, provide a visual cue to identify the active link.\nUnfortunately, a visual cue doesn't help blind or visually impaired users.\nApplying the <code>aria-current</code> attribute to the element can help identify the active link.\nFor more information, see <a href=\"https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-current\">Mozilla Developer Network (MDN) aria-current</a>).</p>\n<p>用在活跃 <code><a href=\"api/router/RouterLink\" class=\"code-anchor\">RouterLink</a></code> 元素上的 CSS 类（比如 <code><a href=\"api/router/RouterLinkActive\" class=\"code-anchor\">RouterLinkActive</a></code>）提供了有关哪个链接正处于活跃状态的视觉提醒。不幸的是，此类提醒不适用于盲人或视障用户。将 <code>aria-current</code> 属性添加到此元素，可以帮你标出活跃链接。有关更多信息，参阅<a href=\"https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-current\">MDN aria-current</a>。</p>\n<p>The <code><a href=\"api/router/RouterLinkActive\" class=\"code-anchor\">RouterLinkActive</a></code> directive provides the <code>ariaCurrentWhenActive</code> input which sets the <code>aria-current</code> to a specified value when the link becomes active.</p>\n<p><code><a href=\"api/router/RouterLinkActive\" class=\"code-anchor\">RouterLinkActive</a></code> 指令提供了 <code>ariaCurrentWhenActive</code> 输入属性，该输入属性会在链接变为活跃状态时将 <code>aria-current</code> 设置为指定的值。</p>\n<p>The following example shows how to apply the <code>active-page</code> class to active links as well as setting their <code>aria-current</code> attribute to <code>\"page\"</code> when they are active:</p>\n<p>以下示例展示了如何将 <code>active-page</code> 类应用于活跃链接，以及如何在它们处于活跃状态时将它们的 <code>aria-current</code> 属性设置为 <code>\"page\"</code> ：</p>\n<code-example language=\"html\">\n    &#x3C;nav>\n      &#x3C;a <a href=\"api/router/RouterLink\" class=\"code-anchor\">routerLink</a>=\"home\"\n         <a href=\"api/router/RouterLinkActive\" class=\"code-anchor\">routerLinkActive</a>=\"active-page\"\n         ariaCurrentWhenActive=\"page\">\n        Home\n      &#x3C;/a>\n      &#x3C;a <a href=\"api/router/RouterLink\" class=\"code-anchor\">routerLink</a>=\"about\"\n         <a href=\"api/router/RouterLinkActive\" class=\"code-anchor\">routerLinkActive</a>=\"active-page\"\n         ariaCurrentWhenActive=\"page\">\n        About\n      &#x3C;/a>\n      &#x3C;a <a href=\"api/router/RouterLink\" class=\"code-anchor\">routerLink</a>=\"shop\"\n         <a href=\"api/router/RouterLinkActive\" class=\"code-anchor\">routerLinkActive</a>=\"active-page\"\n         ariaCurrentWhenActive=\"page\">\n        Shop\n      &#x3C;/a>\n    &#x3C;/nav>\n</code-example>\n<!-- vale Angular.Angular_Spelling = NO -->\n<h2 id=\"more-information\">More information<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/accessibility#more-information\"><i class=\"material-icons\">link</i></a></h2>\n<h2 id=\"额外资源\">额外资源<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/accessibility#额外资源\"><i class=\"material-icons\">link</i></a></h2>\n<ul>\n<li>\n<p><a href=\"https://developers.google.com/web/fundamentals/accessibility\">Accessibility - Google Web Fundamentals</a></p>\n<p><a href=\"https://developers.google.com/web/fundamentals/accessibility\">无障碍功能 - Google 网络基础知识</a></p>\n</li>\n<li>\n<p><a href=\"https://www.w3.org/TR/wai-aria\">ARIA specification and authoring practices</a></p>\n<p><a href=\"https://www.w3.org/TR/wai-aria\">ARIA 规范和写作惯例</a></p>\n</li>\n<li>\n<p><a href=\"https://material.io/design/usability/accessibility.html\">Material Design - Accessibility</a></p>\n<p><a href=\"https://material.io/design/usability/accessibility.html\">Material Design - 无障碍功能</a></p>\n</li>\n<li>\n<p><a href=\"https://www.smashingmagazine.com/search/?q=accessibility\">Smashing Magazine</a></p>\n<p><a href=\"https://www.smashingmagazine.com/search/?q=accessibility\">Smashing 杂志</a></p>\n</li>\n<li>\n<p><a href=\"https://inclusive-components.design\">Inclusive Components</a></p>\n<p><a href=\"https://inclusive-components.design\">包容性组件</a></p>\n</li>\n<li>\n<p><a href=\"https://dequeuniversity.com/resources\">Accessibility Resources and Code Examples</a></p>\n<p><a href=\"https://dequeuniversity.com/resources\">无障碍功能的资源和代码范例</a></p>\n</li>\n<li>\n<p><a href=\"https://www.w3.org/WAI/people-use-web\">W3C - Web Accessibility Initiative</a></p>\n<p><a href=\"https://www.w3.org/WAI/people-use-web\">W3C - 网络无障碍倡议</a></p>\n</li>\n<li>\n<p><a href=\"https://www.youtube.com/watch?v=HtTyRajRuyY\">Rob Dodson A11ycasts</a></p>\n<p><a href=\"https://www.youtube.com/watch?v=HtTyRajRuyY\">Rob Dodson 的 A11y 播客</a></p>\n</li>\n<li>\n<p><a href=\"https://github.com/angular-eslint/angular-eslint#functionality\">Angular ESLint</a> provides linting rules that can help you make sure your code meets accessibility standards.</p>\n<p><a href=\"https://github.com/angular-eslint/angular-eslint#functionality\">Angular ESLint</a>提供了整理(linting)规则，可以帮助你确保你的代码符合无障碍性标准。</p>\n</li>\n</ul>\n<!-- vale Angular.Angular_Spelling = YES -->\n<p>Books</p>\n<p>图书</p>\n<!-- vale Angular.Google_Quotes = NO -->\n<ul>\n<li>\n<p>\"A Web for Everyone: Designing Accessible User Experiences,\" Sarah Horton and Whitney Quesenbery</p>\n<p>“适合所有人的网络：设计无障碍的用户体验”，莎拉·霍顿和惠特尼·奎森伯里</p>\n</li>\n<li>\n<p>\"Inclusive Design Patterns,\" Heydon Pickering</p>\n<p>“包容性设计模式”，Heydon Pickering</p>\n</li>\n</ul>\n<!-- vale Angular.Google_Quotes = YES -->\n<!-- links -->\n<!-- external links -->\n<!-- end links -->\n\n  <div class=\"reviewed\">最后复查时间： 2/28/2022</div>\n</div>\n\n\n<!-- links to this doc:\n - guide/architecture-next-steps\n - guide/example-apps-list\n - guide/router-reference\n - guide/router-tutorial\n - tutorial/toh-pt2\n-->\n<!-- links from this doc:\n - api/core/Component\n - api/core/Input\n - api/forms/MaxValidator\n - api/forms/MinValidator\n - api/router/NavigationEnd\n - api/router/Router\n - api/router/RouterLink\n - api/router/RouterLinkActive\n - guide/accessibility#accessibility-attributes\n - guide/accessibility#accessibility-in-angular\n - guide/accessibility#active-links-identification\n - guide/accessibility#angular-ui-components\n - guide/accessibility#angular-ui-组件\n - guide/accessibility#angular-中的无障碍功能\n - guide/accessibility#augmenting-native-elements\n - guide/accessibility#case-study-building-a-custom-progress-bar\n - guide/accessibility#focus-management-after-navigation\n - guide/accessibility#more-information\n - guide/accessibility#routing\n - guide/accessibility#using-containers-for-native-elements\n - guide/accessibility#增强原生元素\n - guide/accessibility#导航后的焦点管理\n - guide/accessibility#将容器用于原生元素\n - guide/accessibility#无障碍属性attribute\n - guide/accessibility#案例研究构建自定义进度条\n - guide/accessibility#活动链接标识\n - guide/accessibility#路由\n - guide/accessibility#额外资源\n - guide/attribute-binding\n - guide/binding-syntax#html-attribute-vs-dom-property\n - https://dequeuniversity.com/resources\n - https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-current\n - https://developers.google.com/web/fundamentals\n - https://developers.google.com/web/fundamentals/accessibility\n - https://developers.google.com/web/fundamentals/accessibility/#what_is_accessibility\n - https://developers.google.com/web/fundamentals/accessibility/focus\n - https://developers.google.com/web/fundamentals/accessibility/semantics-aria\n - https://github.com/angular-eslint/angular-eslint#functionality\n - https://github.com/angular/angular-cn/edit/cn/aio/content/guide/accessibility.md?message=docs%3A%20请简述你的修改...\n - https://github.com/angular/components/blob/50d3f29b6dc717b512dbd0234ce76f4ab7e9762a/src/material/button/button.ts#L67-L69\n - https://github.com/angular/components/blob/50d3f29b6dc717b512dbd0234ce76f4ab7e9762a/src/material/table/table.ts#L22\n - https://github.com/angular/components/blob/50d3f29b6dc717b512dbd0234ce76f4ab7e9762a/src/material/tabs/tab-nav-bar/tab-nav-bar.ts#L139\n - https://inclusive-components.design\n - https://material.angular.cn\n - https://material.angular.cn/cdk/categories\n - https://material.angular.cn/components/form-field/overview\n - https://material.angular.io\n - https://material.angular.io/cdk/a11y/overview\n - https://material.angular.io/cdk/categories\n - https://material.angular.io/components/form-field/overview\n - https://material.io/design/usability/accessibility.html\n - https://www.smashingmagazine.com/search/?q=accessibility\n - https://www.w3.org/TR/wai-aria\n - https://www.w3.org/WAI/PF/aria-1.1/states_and_properties#aria-live\n - https://www.w3.org/WAI/people-use-web\n - https://www.youtube.com/watch?v=HtTyRajRuyY\n-->"
}