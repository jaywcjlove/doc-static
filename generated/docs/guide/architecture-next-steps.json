{
  "id": "guide/architecture-next-steps",
  "title": "Next steps: tools and techniques",
  "contents": "\n\n\n  <div class=\"github-links\">\n    <a href=\"https://github.com/angular/angular-cn/edit/aio/aio/content/guide/architecture-next-steps.md?message=docs%3A%20请简述你的修改...\" aria-label=\"提供编辑建议\" title=\"提供编辑建议\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  </div>\n\n\n<div class=\"content\">\n<h1 id=\"next-steps-tools-and-techniques\" translation-result=\"on\">后续步骤：工具与技巧<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/architecture-next-steps#next-steps-tools-and-techniques\"><i class=\"material-icons\">link</i></a></h1><h1 translation-origin=\"off\" id=\"next-steps-tools-and-techniques\">Next steps: tools and techniques<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/architecture-next-steps#next-steps-tools-and-techniques\"><i class=\"material-icons\">link</i></a></h1>\n\n<p translation-result=\"on\">在了解了基本的 Angular 构建块之后，你可以进一步了解可以帮助你开发和交付 Angular 应用的特性和工具。</p><p translation-origin=\"off\">After you understand the basic Angular building blocks, you can learn more\nabout the features and tools that can help you develop and deliver Angular applications.</p>\n\n<ul>\n<li>\n<p translation-result=\"on\">参考“<a href=\"tutorial/index\">英雄指南”</a>教程，了解如何将这些基本构建块放在一起，来创建设计精良的应用。</p><p translation-origin=\"off\">Work through the <a href=\"tutorial\">Tour of Heroes</a> tutorial to get a feel for how to fit the basic building blocks together to create a well-designed application.</p>\n\n</li>\n<li>\n<p translation-result=\"on\">查看<a href=\"guide/glossary\">词汇表</a>，了解 Angular 特有的术语和用法。</p><p translation-origin=\"off\">Check out the <a href=\"guide/glossary\">Glossary</a> to understand Angular-specific terms and usage.</p>\n\n</li>\n<li>\n<p translation-result=\"on\">根据你的开发阶段和感兴趣的领域，使用该文档更深入地学习某些关键特性。</p><p translation-origin=\"off\">Use the documentation to learn about key features in more depth, according to your stage of development and areas of interest.</p>\n\n</li>\n</ul>\n<h2 id=\"application-architecture\" translation-result=\"on\">应用架构<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/architecture-next-steps#application-architecture\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\" id=\"application-architecture\">Application architecture<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/architecture-next-steps#application-architecture\"><i class=\"material-icons\">link</i></a></h2>\n\n<ul>\n<li>\n<p translation-result=\"on\"><a href=\"guide/displaying-data\">组件与模板</a>一章中介绍了如何把组件中的应用数据与页面显示<a href=\"guide/glossary#template\">模板</a>联系起来，以创建一个完整的交互式应用。</p><p translation-origin=\"off\">The <a href=\"guide/displaying-data\">Components and templates</a> guide explains how to connect the application data in your <a href=\"guide/glossary#component\">components</a> to your page-display <a href=\"guide/glossary#template\">templates</a>, to create a complete interactive application.</p>\n\n</li>\n<li>\n<p translation-result=\"on\"><a href=\"guide/ngmodules\">NgModules</a>一章中提供了关于 Angular 应用模块化结构的深度信息。</p><p translation-origin=\"off\">The <a href=\"guide/ngmodules\">NgModules</a> guide provides in-depth information on the modular structure of an Angular application.</p>\n\n</li>\n<li>\n<p translation-result=\"on\"><a href=\"guide/router\">路由与导航</a>一章中提供了一些深度信息，教你如何构造出一个允许用户导航到单页面应用中不同<a href=\"guide/glossary#view\">视图</a> 的应用。</p><p translation-origin=\"off\">The <a href=\"guide/router\">Routing and navigation</a> guide provides in-depth information on how to construct applications that allow a user to navigate to different <a href=\"guide/glossary#view\">views</a> within your single-page app.</p>\n\n</li>\n<li>\n<p translation-result=\"on\"><a href=\"guide/dependency-injection\">依赖注入</a>一章提供了一些深度信息，教你如何让每个组件类都可以获取实现其功能所需的服务和对象。</p><p translation-origin=\"off\">The <a href=\"guide/dependency-injection\">Dependency injection</a> guide provides in-depth information on how to construct an application such that each component class can acquire the services and objects it needs to perform its function.</p>\n\n</li>\n</ul>\n<h2 id=\"responsive-programming\" translation-result=\"on\">响应式编程<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/architecture-next-steps#responsive-programming\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\" id=\"responsive-programming\">Responsive programming<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/architecture-next-steps#responsive-programming\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\"><strong>“组件和模板”</strong>一章提供了<a href=\"guide/template-syntax\">模板语法</a>的指南和详细信息，用于在视图中随时随地显示组件数据，并从用户那里收集输入，以便做出响应。</p><p translation-origin=\"off\">The <strong>Components and Templates</strong> guide provides guidance and details of the <a href=\"guide/template-syntax\">template syntax</a> that you use to display your component data when and where you want it within a view, and to collect input from users that you can respond to.</p>\n\n<p translation-result=\"on\">其它页面和章节则描述了 Angular 应用的一些基本编程技巧。</p><p translation-origin=\"off\">Additional pages and sections describe some basic programming techniques for Angular apps.</p>\n\n<ul>\n<li>\n<p translation-result=\"on\"><a href=\"guide/lifecycle-hooks\">生命周期钩子</a>：通过实现生命周期钩子接口，可以窃听组件生命周期中的一些关键时刻 —— 从创建到销毁。</p><p translation-origin=\"off\"><a href=\"guide/lifecycle-hooks\">Lifecycle hooks</a>: Tap into key moments in the lifetime of a component, from its creation to its destruction, by implementing the lifecycle hook interfaces.</p>\n\n</li>\n<li>\n<p translation-result=\"on\"><a href=\"guide/observables\">可观察对象（Observable）和事件处理</a>：如何在组件和服务中使用可观察对象来发布和订阅任意类型的消息，比如用户交互事件和异步操作结果。</p><p translation-origin=\"off\"><a href=\"guide/observables\">Observables and event processing</a>: How to use observables with components and services to publish and subscribe to messages of any type, such as user-interaction events and asynchronous operation results.</p>\n\n</li>\n<li>\n<p translation-result=\"on\"><a href=\"guide/elements\">Angular 自定义元素</a>：如何使用 Web Components 把组件打包成<em>自定义元素</em>，Web Components 是一种以框架无关的方式定义新 HTML 元素的 Web 标准。</p><p translation-origin=\"off\"><a href=\"guide/elements\">Angular elements</a>: How to package components as <em>custom elements</em> using Web Components, a web standard for defining new HTML elements in a framework-agnostic way.</p>\n\n</li>\n<li>\n<p translation-result=\"on\"><a href=\"guide/forms-overview\">表单</a>：通过基于 HTML 的输入验证，来支持复杂的数据录入场景。</p><p translation-origin=\"off\"><a href=\"guide/forms-overview\">Forms</a>: Support complex data entry scenarios with HTML-based input validation.</p>\n\n</li>\n<li>\n<p translation-result=\"on\">  <a href=\"guide/animations\">动画</a>：使用 Angular 的动画库，你可以让组件支持动画行为，而不用深入了解动画技术或 CSS。</p><p translation-origin=\"off\"><a href=\"guide/animations\">Animations</a>: Use Angular's animation library to animate component behavior\nwithout deep knowledge of animation techniques or CSS.</p>\n\n</li>\n</ul>\n<h2 id=\"client-server-interaction\" translation-result=\"on\">“客户端-服务器”交互<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/architecture-next-steps#client-server-interaction\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\" id=\"client-server-interaction\">Client-server interaction<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/architecture-next-steps#client-server-interaction\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\">Angular 为单页面应用提供了一个框架，其中的大多数逻辑和数据都留在客户端。大多数应用仍然需要使用 <code><a href=\"api/common/http/HttpClient\" class=\"code-anchor\">HttpClient</a></code> 来访问服务器，以访问和保存数据。对于某些平台和应用，你可能还希望使用 PWA（渐进式 Web 应用）模型来改善用户体验。</p><p translation-origin=\"off\">Angular provides a framework for single-page apps, where most of the logic and data resides on the client.\nMost apps still need to access a server using the <code><a href=\"api/common/http/HttpClient\" class=\"code-anchor\">HttpClient</a></code> to access and save data.\nFor some platforms and applications, you might also want to use the PWA (Progressive Web App) model to improve the user experience.</p>\n\n<ul>\n<li>\n<p translation-result=\"on\"><a href=\"guide/http\">HTTP</a>：与服务器通信，通过 HTTP 客户端来获取数据、保存数据，并调用服务端的动作。</p><p translation-origin=\"off\"><a href=\"guide/http\">HTTP</a>: Communicate with a server to get data, save data, and invoke server-side actions with an HTTP client.</p>\n\n</li>\n<li>\n<p translation-result=\"on\"><a href=\"guide/universal\">服务器端渲染</a>：Angular Universal 通过服务器端渲染（SSR）在服务器上生成静态应用页面。这允许你在服务器上运行 Angular 应用，以提高性能，并在移动设备和低功耗设备上快速显示首屏，同时也方便了网页抓取工具。</p><p translation-origin=\"off\"><a href=\"guide/universal\">Server-side rendering</a>: Angular Universal generates static application pages on the server through server-side rendering (SSR). This allows you to run your Angular app on the server in order to improve performance and show the first page quickly on mobile and low-powered devices, and also facilitate web crawlers.</p>\n\n</li>\n<li>\n<p translation-result=\"on\"><a href=\"guide/service-worker-intro\">Service Worker 和 PWA</a>：使用 Service Worker 来减少对网络的依赖，并显著改善用户体验。</p><p translation-origin=\"off\"><a href=\"guide/service-worker-intro\">Service workers and PWA</a>: Use a service worker to reduce dependency on the network and significantly improve the user experience.</p>\n\n</li>\n<li>\n<p translation-result=\"on\"><a href=\"guide/web-worker\">Web worker</a>：学习如何在后台线程中运行 CPU 密集型的计算。</p><p translation-origin=\"off\"><a href=\"guide/web-worker\">Web workers</a>: Learn how to run CPU-intensive computations in a background thread.</p>\n\n</li>\n</ul>\n<h2 id=\"support-for-the-development-cycle\" translation-result=\"on\">为开发周期提供支持<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/architecture-next-steps#support-for-the-development-cycle\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\" id=\"support-for-the-development-cycle\">Support for the development cycle<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/architecture-next-steps#support-for-the-development-cycle\"><i class=\"material-icons\">link</i></a></h2>\n\n<p translation-result=\"on\"><strong>“开发工作流”</strong>部分描述了用于编译、测试和部署 Angular 应用的工具和过程。</p><p translation-origin=\"off\">The <strong>Development Workflow</strong> section describes the tools and processes you use to compile, test, and deploy Angular applications.</p>\n\n<ul>\n<li>\n<p translation-result=\"on\"><a href=\"cli\">CLI 命令参考手册</a>：Angular CLI 是一个命令行工具，可用于创建项目、生成应用和库代码，以及执行各种持续开发任务，如测试、打包和部署。</p><p translation-origin=\"off\"><a href=\"cli\">CLI Command Reference</a>: The Angular CLI is a command-line tool that you use to create projects, generate application and library code, and perform a variety of ongoing development tasks such as testing, bundling, and deployment.</p>\n\n</li>\n<li>\n<p translation-result=\"on\"><a href=\"guide/aot-compiler\">编译</a>：Angular 为开发环境提供了 JIT（即时）编译方式，为生产环境提供了 AOT（预先）编译方式。</p><p translation-origin=\"off\"><a href=\"guide/aot-compiler\">Compilation</a>: Angular provides just-in-time (JIT) compilation for the development environment, and ahead-of-time (AOT) compilation for the production environment.</p>\n\n</li>\n<li>\n<p translation-result=\"on\"><a href=\"guide/testing\">测试平台</a>：对应用的各个部件运行单元测试，让它们好像在和 Angular 框架交互一样。</p><p translation-origin=\"off\"><a href=\"guide/testing\">Testing platform</a>: Run unit tests on your application parts as they interact with the Angular framework.</p>\n\n</li>\n<li>\n<p translation-result=\"on\"><a href=\"guide/deployment\">部署</a>：学习如何把 Angular 应用部署到远端服务器上。</p><p translation-origin=\"off\"><a href=\"guide/deployment\">Deployment</a>: Learn techniques for deploying your Angular application to a remote server.</p>\n\n</li>\n<li>\n<p translation-result=\"on\"><a href=\"guide/security\">安全指南</a>：学习 Angular 对常见 Web 应用的弱点和工具（比如跨站脚本攻击）提供的内置防护措施。</p><p translation-origin=\"off\"><a href=\"guide/security\">Security guidelines</a>: Learn about Angular's built-in protections against common web-app vulnerabilities and attacks such as cross-site scripting attacks.</p>\n\n</li>\n<li>\n<p translation-result=\"on\"><a href=\"guide/i18n\">国际化</a> ：借助 Angular 的国际化（i18n）工具，可以让你的应用支持多本地环境。</p><p translation-origin=\"off\"><a href=\"guide/i18n\">Internationalization</a>: Make your app available in multiple languages with Angular's internationalization (i18n) tools.</p>\n\n</li>\n<li>\n<p translation-result=\"on\"><a href=\"guide/accessibility\">无障碍性</a>：让所有用户都能访问你的应用。</p><p translation-origin=\"off\"><a href=\"guide/accessibility\">Accessibility</a>: Make your app accessible to all users.</p>\n\n</li>\n</ul>\n<h2 id=\"file-structure-configuration-and-dependencies\" translation-result=\"on\">文件结构、配置和依赖<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/architecture-next-steps#file-structure-configuration-and-dependencies\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\" id=\"file-structure-configuration-and-dependencies\">File structure, configuration, and dependencies<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/architecture-next-steps#file-structure-configuration-and-dependencies\"><i class=\"material-icons\">link</i></a></h2>\n\n<ul>\n<li>\n<p translation-result=\"on\"><a href=\"guide/file-structure\">工作区与文件结构</a>：理解 Angular 工作区与项目文件夹的结构。</p><p translation-origin=\"off\"><a href=\"guide/file-structure\">Workspace and file structure</a>: Understand the structure of Angular workspace and project folders.</p>\n\n</li>\n<li>\n<p translation-result=\"on\"><a href=\"guide/build\">构建与运行</a>：学习为项目定义不同的构建和代理服务器设置的配置方式，比如开发、预生产和生产。</p><p translation-origin=\"off\"><a href=\"guide/build\">Building and serving</a>: Learn to define different build and proxy server configurations for your project, such as development, staging, and production.</p>\n\n</li>\n<li>\n<p translation-result=\"on\"><a href=\"guide/npm-packages\">npm 包</a>：Angular 框架、Angular CLI 和 Angular 应用中用到的组件都是用 <a href=\"https://docs.npmjs.com/\">npm</a> 打包的，并通过 npm 注册服务器进行发布。Angular CLI 会创建一个默认的 <code>package.json</code> 文件，它会指定一组初始的包，它们可以一起使用，共同支持很多常见的应用场景。</p><p translation-origin=\"off\"><a href=\"guide/npm-packages\">npm packages</a>: The Angular Framework, Angular CLI, and components used by Angular applications are packaged as <a href=\"https://docs.npmjs.com/\">npm</a> packages and distributed via the npm registry. The Angular CLI creates a default <code>package.json</code> file, which specifies a starter set of packages that work well together and jointly support many common application scenarios.</p>\n\n</li>\n<li>\n<p translation-result=\"on\"><a href=\"guide/typescript-configuration\">TypeScript 配置</a>：TypeScript 是 Angular 应用开发的主要语言。</p><p translation-origin=\"off\"><a href=\"guide/typescript-configuration\">TypeScript configuration</a>: TypeScript is the primary language for Angular application development.</p>\n\n</li>\n<li>\n<p translation-result=\"on\"><a href=\"guide/browser-support\">浏览器支持</a>：让你的应用能和各种浏览器兼容。</p><p translation-origin=\"off\"><a href=\"guide/browser-support\">Browser support</a>: Make your apps compatible across a wide range of browsers.</p>\n\n</li>\n</ul>\n<h2 id=\"extending-angular\" translation-result=\"on\">扩展 Angular<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/architecture-next-steps#extending-angular\"><i class=\"material-icons\">link</i></a></h2><h2 translation-origin=\"off\" id=\"extending-angular\">Extending Angular<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/architecture-next-steps#extending-angular\"><i class=\"material-icons\">link</i></a></h2>\n\n<ul>\n<li>\n<p translation-result=\"on\"><a href=\"guide/libraries\">Angular 库</a>：学习如何使用和创建可复用的库。</p><p translation-origin=\"off\"><a href=\"guide/libraries\">Angular libraries</a>: Learn about using and creating re-usable libraries.</p>\n\n</li>\n<li>\n<p translation-result=\"on\">学习<a href=\"guide/schematics\">原理图</a> ：学习如何自定义和扩展 CLI 的生成（<code>generate</code>）能力。</p><p translation-origin=\"off\"><a href=\"guide/schematics\">Schematics</a>: Learn about customizing and extending the CLI's generation capabilities.</p>\n\n</li>\n<li>\n<p translation-result=\"on\"><a href=\"guide/cli-builder\">CLI 构建器</a>：学习如何自定义和扩展 CLI 的能力，让它使用工具来执行复杂任务，比如构建和测试应用。</p><p translation-origin=\"off\"><a href=\"guide/cli-builder\">CLI builders</a>: Learn about customizing and extending the CLI's ability to apply tools to perform complex tasks, such as building and testing applications.</p>\n\n</li>\n</ul>\n\n</div>\n\n<!-- links to this doc:\n - guide/architecture\n-->\n<!-- links from this doc:\n - api/common/http/HttpClient\n - cli\n - guide/accessibility\n - guide/animations\n - guide/aot-compiler\n - guide/architecture-next-steps#application-architecture\n - guide/architecture-next-steps#client-server-interaction\n - guide/architecture-next-steps#extending-angular\n - guide/architecture-next-steps#file-structure-configuration-and-dependencies\n - guide/architecture-next-steps#next-steps-tools-and-techniques\n - guide/architecture-next-steps#responsive-programming\n - guide/architecture-next-steps#support-for-the-development-cycle\n - guide/browser-support\n - guide/build\n - guide/cli-builder\n - guide/dependency-injection\n - guide/deployment\n - guide/displaying-data\n - guide/elements\n - guide/file-structure\n - guide/forms-overview\n - guide/glossary\n - guide/glossary#component\n - guide/glossary#template\n - guide/glossary#view\n - guide/http\n - guide/i18n\n - guide/libraries\n - guide/lifecycle-hooks\n - guide/ngmodules\n - guide/npm-packages\n - guide/observables\n - guide/router\n - guide/schematics\n - guide/security\n - guide/service-worker-intro\n - guide/template-syntax\n - guide/testing\n - guide/typescript-configuration\n - guide/universal\n - guide/web-worker\n - tutorial\n - tutorial/index\n - https://docs.npmjs.com/\n - https://github.com/angular/angular-cn/edit/aio/aio/content/guide/architecture-next-steps.md?message=docs%3A%20请简述你的修改...\n-->"
}