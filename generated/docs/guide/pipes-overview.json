{
  "id": "guide/pipes-overview",
  "title": "了解管道",
  "contents": "\n\n\n<div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular-cn/edit/cn/aio/content/guide/pipes-overview.md?message=docs%3A%20请简述你的修改...\" aria-label=\"提供编辑建议\" title=\"提供编辑建议\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n</div>\n\n\n<div class=\"content\">\n  <h1 id=\"understanding-pipes\">Understanding Pipes<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/pipes-overview#understanding-pipes\"><i class=\"material-icons\">link</i></a></h1>\n<h1 id=\"了解管道\">了解管道<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/pipes-overview#了解管道\"><i class=\"material-icons\">link</i></a></h1>\n<p>Use <a href=\"guide/glossary#pipe\" title=\"Definition of a pipe\">pipes</a> to transform strings, currency amounts, dates, and other data for display.</p>\n<p>使用<a href=\"guide/glossary#pipe\" title=\"管道的定义\">管道</a>来转换字符串、货币金额、日期和其他数据以进行显示。</p>\n<h2 id=\"what-is-a-pipe\">What is a pipe<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/pipes-overview#what-is-a-pipe\"><i class=\"material-icons\">link</i></a></h2>\n<h2 id=\"什么是管道\">什么是管道<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/pipes-overview#什么是管道\"><i class=\"material-icons\">link</i></a></h2>\n<p>Pipes are simple functions to use in <a href=\"guide/glossary#template-expression\" title=\"Definition of template expression\">template expressions</a> to accept an input value and return a transformed value. Pipes are useful because you can use them throughout your application, while only declaring each pipe once.\nFor example, you would use a pipe to show a date as <strong>April 15, 1988</strong> rather than the raw string format.</p>\n<p>管道是在<a href=\"guide/glossary#template-expression\" title=\"模板表达式的定义\">模板表达式</a>中使用的简单函数，用于接受输入值并返回转换后的值。管道很有用，因为你可以在整个应用程序中使用它们，同时每个管道只声明一次。例如，你可以用管道将日期显示为<strong>1988 年 4 月 15 日，</strong>而不是原始字符串格式。</p>\n<div class=\"alert is-helpful\">\n<p>For the sample application used in this topic, see the <live-example name=\"pipes\"></live-example>.</p>\n<p>对于本主题中使用的示例应用程序，请参阅<live-example></live-example>.</p>\n</div>\n<h2 id=\"built-in-pipes\">Built-in pipes<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/pipes-overview#built-in-pipes\"><i class=\"material-icons\">link</i></a></h2>\n<h2 id=\"内置管道\">内置管道<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/pipes-overview#内置管道\"><i class=\"material-icons\">link</i></a></h2>\n<p>Angular provides built-in pipes for typical data transformations, including transformations for internationalization (i18n), which use locale information to format data.\nThe following are commonly used built-in pipes for data formatting:</p>\n<p>Angular 为典型的数据转换提供了内置的管道，包括国际化的转换（i18n），它使用本地化信息来格式化数据。数据格式化常用的内置管道如下：</p>\n<ul>\n<li>\n<p><a href=\"api/common/DatePipe\"><code>DatePipe</code></a>: Formats a date value according to locale rules.</p>\n<p><a href=\"api/common/DatePipe\"><code>DatePipe</code></a>：根据本地环境中的规则格式化日期值。</p>\n</li>\n<li>\n<p><a href=\"api/common/UpperCasePipe\"><code>UpperCasePipe</code></a>: Transforms text to all upper case.</p>\n<p><a href=\"api/common/UpperCasePipe\"><code>UpperCasePipe</code></a>：把文本全部转换成大写。</p>\n</li>\n<li>\n<p><a href=\"api/common/LowerCasePipe\"><code>LowerCasePipe</code></a>: Transforms text to all lower case.</p>\n<p><a href=\"api/common/LowerCasePipe\"><code>LowerCasePipe</code></a> ：把文本全部转换成小写。</p>\n</li>\n<li>\n<p><a href=\"api/common/CurrencyPipe\"><code>CurrencyPipe</code></a>: Transforms a number to a currency string, formatted according to locale rules.</p>\n<p><a href=\"api/common/CurrencyPipe\"><code>CurrencyPipe</code></a> ：把数字转换成货币字符串，根据本地环境中的规则进行格式化。</p>\n</li>\n<li>\n<p><a href=\"api/common/DecimalPipe\"><code>DecimalPipe</code></a>: Transforms a number into a string with a decimal point, formatted according to locale rules.</p>\n<p><a href=\"api/common/DecimalPipe\"><code>DecimalPipe</code></a>：把数字转换成带小数点的字符串，根据本地环境中的规则进行格式化。</p>\n</li>\n<li>\n<p><a href=\"api/common/PercentPipe\"><code>PercentPipe</code></a>: Transforms a number to a percentage string, formatted according to locale rules.</p>\n<p><a href=\"api/common/PercentPipe\"><code>PercentPipe</code></a> ：把数字转换成百分比字符串，根据本地环境中的规则进行格式化。</p>\n</li>\n</ul>\n<div class=\"alert is-helpful\">\n<ul>\n<li>\n<p>For a complete list of built-in pipes, see the <a href=\"api/common#pipes\" title=\"Pipes API reference summary\">pipes API documentation</a>.</p>\n<p>关于内置管道的完整列表，请参阅<a href=\"api/common#pipes\" title=\"管道 API 参考总结\">管道 API 文档</a>。</p>\n</li>\n<li>\n<p>To learn more about using pipes for internationalization (i18n) efforts, see <a href=\"guide/i18n-common-format-data-locale\" title=\"Format data based on locale | Angular\">formatting data based on locale</a>.</p>\n<p>要了解有关使用管道进行国际化 (i18n) 工作的更多信息，请参阅<a href=\"guide/i18n-common-format-data-locale\" title=\"Format data based on locale | Angular\">根据区域设置格式化数据</a>。</p>\n</li>\n</ul>\n</div>\n<p>Create pipes to encapsulate custom transformations and use your custom pipes in template expressions.</p>\n<p>你还可以创建管道来封装自定义转换，并在模板表达式中使用自定义管道。</p>\n<h2 id=\"pipes-and-precedence\">Pipes and precedence<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/pipes-overview#pipes-and-precedence\"><i class=\"material-icons\">link</i></a></h2>\n<h2 id=\"管道的优先级\">管道的优先级<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/pipes-overview#管道的优先级\"><i class=\"material-icons\">link</i></a></h2>\n<p>The pipe operator has a higher precedence than the ternary operator (<code>?:</code>), which means <code>a ? b : c | x</code> is parsed as <code>a ? b : (c | x)</code>.\nThe pipe operator cannot be used without parentheses in the first and second operands of <code>?:</code>.</p>\n<p>管道操作符要比三目运算符(<code>?:</code>)的优先级高，这意味着 <code>a ? b : c | x</code> 会被解析成 <code>a ? b : (c | x)</code>。</p>\n<p>Due to precedence, if you want a pipe to apply to the result of a ternary, wrap the entire expression in parentheses; for example, <code>(a ? b : c) | x</code>.</p>\n<p>由于这种优先级设定，如果你要用管道处理三目元算符的结果，就要把整个表达式包裹在括号中，比如 <code>(a ? b : c) | x</code>。</p>\n<code-example path=\"pipes/src/app/precedence.component.html\" region=\"precedence\" header=\"src/app/precedence.component.html\">\n&#x3C;!-- use parentheses in the third operand so the pipe applies to the whole expression -->\n{{ (true ? 'true' : 'false') | uppercase }}\n\n</code-example>\n<!-- links -->\n<!-- end links -->\n\n  <div class=\"reviewed\">最后复查时间： 4/1/2022</div>\n</div>\n\n\n<!-- links to this doc:\n-->\n<!-- links from this doc:\n - api/common#pipes\n - api/common/CurrencyPipe\n - api/common/DatePipe\n - api/common/DecimalPipe\n - api/common/LowerCasePipe\n - api/common/PercentPipe\n - api/common/UpperCasePipe\n - guide/glossary#pipe\n - guide/glossary#template-expression\n - guide/i18n-common-format-data-locale\n - guide/pipes-overview#built-in-pipes\n - guide/pipes-overview#pipes-and-precedence\n - guide/pipes-overview#understanding-pipes\n - guide/pipes-overview#what-is-a-pipe\n - guide/pipes-overview#了解管道\n - guide/pipes-overview#什么是管道\n - guide/pipes-overview#内置管道\n - guide/pipes-overview#管道的优先级\n - https://github.com/angular/angular-cn/edit/cn/aio/content/guide/pipes-overview.md?message=docs%3A%20请简述你的修改...\n-->"
}