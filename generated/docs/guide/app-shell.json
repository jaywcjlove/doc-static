{
  "id": "guide/app-shell",
  "title": "应用外壳",
  "contents": "\n\n\n<div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular-cn/edit/cn/aio/content/guide/app-shell.md?message=docs%3A%20请简述你的修改...\" aria-label=\"提供编辑建议\" title=\"提供编辑建议\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n</div>\n\n\n<div class=\"content\">\n  <h1 id=\"app-shell\">App shell<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/app-shell#app-shell\"><i class=\"material-icons\">link</i></a></h1>\n<h1 id=\"应用外壳\">应用外壳<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/app-shell#应用外壳\"><i class=\"material-icons\">link</i></a></h1>\n<p>Application shell is a way to render a portion of your application using a route at build time.\nIt can improve the user experience by quickly launching a static rendered page (a skeleton common to all pages) while the browser downloads the full client version and switches to it automatically after the code loads.</p>\n<p>应用外壳是一种在构建期间借助路由渲染部分应用的方法。它可以通过快速启动一个静态渲染页面（所有页面的公共骨架）来改善用户体验。与此同时，浏览器会下载完整的客户端版本，并在代码加载后自动切换到完整版。</p>\n<p>This gives users a meaningful first paint of your application that appears quickly because the browser can render the HTML and CSS without the need to initialize any JavaScript.</p>\n<p>这能让用户快速看到应用中第一个有意义的画面，因为浏览器可以渲染出 HTML 和 CSS，而无需初始化任何 JavaScript。</p>\n<p>Learn more in <a href=\"https://developers.google.com/web/fundamentals/architecture/app-shell\">The App Shell Model</a>.</p>\n<p>欲知详情，参阅<a href=\"https://developers.google.com/web/fundamentals/architecture/app-shell\">应用外壳模型</a>。</p>\n<h2 id=\"step-1-prepare-the-application\">Step 1: Prepare the application<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/app-shell#step-1-prepare-the-application\"><i class=\"material-icons\">link</i></a></h2>\n<h2 id=\"第-1-步准备本应用\">第 1 步：准备本应用<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/app-shell#第-1-步准备本应用\"><i class=\"material-icons\">link</i></a></h2>\n<p>Do this with the following Angular CLI command:</p>\n<p>可以用下列 Angular CLI 命令来执行本操作：</p>\n<code-example format=\"shell\" language=\"shell\">\n\nng new my-app --routing\n\n</code-example>\n<p>For an existing application, you have to manually add the <code><a href=\"api/router/RouterModule\" class=\"code-anchor\">RouterModule</a></code> and defining a <code>&#x3C;<a href=\"api/router/RouterOutlet\" class=\"code-anchor\">router-outlet</a>></code> within your application.</p>\n<p>对于既有应用，你必须手动添加 <code><a href=\"api/router/RouterModule\" class=\"code-anchor\">RouterModule</a></code> 并在应用中定义 <code>&#x3C;<a href=\"api/router/RouterOutlet\" class=\"code-anchor\">router-outlet</a>></code>。</p>\n<h2 id=\"step-2-create-the-application-shell\">Step 2: Create the application shell<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/app-shell#step-2-create-the-application-shell\"><i class=\"material-icons\">link</i></a></h2>\n<h2 id=\"第-2-步创建应用外壳\">第 2 步：创建应用外壳<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/app-shell#第-2-步创建应用外壳\"><i class=\"material-icons\">link</i></a></h2>\n<p>Use the Angular CLI to automatically create the application shell.</p>\n<p>使用 Angular CLI 自动创建一个应用外壳。</p>\n<code-example format=\"shell\" language=\"shell\">\n\nng generate app-shell\n\n</code-example>\n<p>For more information about this command, see <a href=\"cli/generate#app-shell-command\">App shell command</a>.</p>\n<p>要了解关于本命令的更多信息，参见 <a href=\"cli/generate#app-shell-command\">app-shell 命令</a>。</p>\n<p>After running this command you can see that the <code>angular.json</code> configuration file has been updated to add two new targets, with a few other changes.</p>\n<p>执行完这个命令，你会发现 <code>angular.json</code> 配置文件中已经增加了两个新目标，并做了一些其它更改。</p>\n<code-example language=\"json\">\n\n\"server\": {\n  \"builder\": \"@angular-devkit/build-angular:server\",\n  \"defaultConfiguration\": \"production\",\n  \"options\": {\n    \"outputPath\": \"dist/my-app/server\",\n    \"main\": \"src/main.server.ts\",\n    \"tsConfig\": \"tsconfig.server.json\"\n  },\n  \"configurations\": {\n    \"development\": {\n      \"outputHashing\": \"none\",\n    },\n    \"production\": {\n      \"outputHashing\": \"media\",\n      \"fileReplacements\": [\n        {\n          \"replace\": \"src/environments/environment.ts\",\n          \"with\": \"src/environments/environment.prod.ts\"\n        }\n      ],\n      \"sourceMap\": false,\n      \"optimization\": true\n    }\n  }\n},\n\"app-shell\": {\n  \"builder\": \"@angular-devkit/build-angular:app-shell\",\n  \"defaultConfiguration\": \"production\",\n  \"options\": {\n    \"route\": \"shell\"\n  },\n  \"configurations\": {\n    \"development\": {\n      \"browserTarget\": \"my-app:build:development\",\n      \"serverTarget\": \"my-app:server:development\",\n    },\n    \"production\": {\n      \"browserTarget\": \"my-app:build:production\",\n      \"serverTarget\": \"my-app:server:production\"\n    }\n  }\n}\n\n</code-example>\n<h2 id=\"step-3-verify-the-application-is-built-with-the-shell-content\">Step 3: Verify the application is built with the shell content<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/app-shell#step-3-verify-the-application-is-built-with-the-shell-content\"><i class=\"material-icons\">link</i></a></h2>\n<h2 id=\"第-3-步验证该应用是使用应用外壳的内容构建的\">第 3 步：验证该应用是使用应用外壳的内容构建的<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/app-shell#第-3-步验证该应用是使用应用外壳的内容构建的\"><i class=\"material-icons\">link</i></a></h2>\n<p>Use the Angular CLI to build the <code>app-shell</code> target.</p>\n<p>使用 Angular CLI 构建目标 <code>app-shell</code>。</p>\n<code-example format=\"shell\" language=\"shell\">\n\nng run my-app:app-shell:development\n\n</code-example>\n<p>Or to use the production configuration.</p>\n<p>或使用产品环境配置。</p>\n<code-example format=\"shell\" language=\"shell\">\n\nng run my-app:app-shell:production\n\n</code-example>\n<p>To verify the build output, open <code class=\"no-auto-link\">dist/my-app/browser/index.html</code>.\nLook for default text <code>app-shell works!</code> to show that the application shell route was rendered as part of the output.</p>\n<p>要验证构建输出，请打开 <code class=\"no-auto-link\">dist/my-app/browser/index.html</code>。寻找默认的文本 <code>app-shell works!</code> 就可以验证这个应用外壳路由确实是作为输出的一部分渲染出来的。</p>\n<!-- links -->\n<!-- external links -->\n<!-- end links -->\n\n  <div class=\"reviewed\">最后复查时间： 2/28/2022</div>\n</div>\n\n\n<!-- links to this doc:\n - guide/service-worker-getting-started\n - guide/service-worker-intro\n-->\n<!-- links from this doc:\n - api/router/RouterModule\n - api/router/RouterOutlet\n - cli/generate#app-shell-command\n - guide/app-shell#app-shell\n - guide/app-shell#step-1-prepare-the-application\n - guide/app-shell#step-2-create-the-application-shell\n - guide/app-shell#step-3-verify-the-application-is-built-with-the-shell-content\n - guide/app-shell#应用外壳\n - guide/app-shell#第-1-步准备本应用\n - guide/app-shell#第-2-步创建应用外壳\n - guide/app-shell#第-3-步验证该应用是使用应用外壳的内容构建的\n - https://developers.google.com/web/fundamentals/architecture/app-shell\n - https://github.com/angular/angular-cn/edit/cn/aio/content/guide/app-shell.md?message=docs%3A%20请简述你的修改...\n-->"
}